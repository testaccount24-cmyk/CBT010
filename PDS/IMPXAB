*        COPYRIGHT (C) 1986,1994,2006  PRYCROFT SIX PTY LTD
         TITLE 'LLA FETCH STATISTICS REPOSITORY STRUCTURE MAPPING'
         COPY  IMLLAREA
         TITLE 'PROGRAM FETCH STATISTICS DISPLAY LINE MAPPING'
BFLINE   DSECT
BFENTRY  DS    XL(L'LOWX)
BFPROG   DS    CL8
BFSEP01  DS    CL1
BFSTOR   DS    CL7
BFSEP02  DS    0CL1
BFLAST   DS    CL9
BFSEP03  DS    0CL1
BFPCNT   DS    CL8
BFSEP04  DS    0CL1
BFPAVG   DS    CL9
BFSEP05  DS    0CL1
BFLCNT   DS    CL8
BFSEP06  DS    0CL1
BFLAVG   DS    CL9
BFSEP07  DS    CL1
BFLDATE  DS    CL6
BFSEP08  DS    CL1
BFLTIME  DS    CL11
BFSEP09  DS    CL1
BFLJOB   DS    CL8
BFSEP10  DS    CL1
BFLASID  DS    CL4
BFSEP11  DS    CL1
BFFDATE  DS    CL6
BFSEP12  DS    CL1
BFFTIME  DS    CL11
BFSEP13  DS    CL1
BFFJOB   DS    CL8
BFSEP14  DS    CL1
BFFASID  DS    CL4
BFSEP15  DS    0CL1
BFCNCT   DS    CL4
         DS    CL1
BFSEP16  DS    0CL1
BFLOCN   DS    CL4
         DS    CL1
BFSEP17  DS    CL1
BFFO     DS    CL2
         DS    CL1
BFNX     DS    CL2
         DS    CL1
BFOL     DS    CL2
         DS    CL1
BFOV     DS    CL2
         DS    CL1
BFRF     DS    CL2
         DS    CL1
BFRN     DS    CL2
         DS    CL1
BFRU     DS    CL2
         DS    CL1
BFSC     DS    CL2
         DS    CL1
BFTS     DS    CL2
BFSEP18  DS    CL1
BFAMOD   DS    CL4
BFSEP19  DS    CL1
BFRMOD   DS    CL4
BFSEP20  DS    CL1
BFDSET   DS    CL44
BFDL     EQU   *-BFPROG
BFLL     EQU   *-BFENTRY
         TITLE 'LINK LIST AND LINK PACK AREA SEARCH SUBROUTINE'
IMPXA    CSECT
         USING BILDLIST,R11,R10
BILDLIST DS    0H
         LA    R10,2048(,R11)    SET UP SECOND
         LA    R10,2048(,R10)                  BASE REGISTER.
         MVC   INCHARS(L'INCHARS-1),INCHARS+1
         MVI   INCHARS+L'INCHARS-1,C' '     ADJUST ANY COMMAND INPUT.
         CLI   BSUBOPTN,C'B'     SHOWING BLDL SEARCH RESULTS?
         BNE   CMDSCANB          NO, NO DATA STREAM SUFFIX REQUIRED.
BBSETSUF L     R1,CRNTOPTN       POINT TO CURRENT OPTION VECTOR.
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         MVI   9(R1),4           SET HEADING LINE COUNT.
         MVI   WINHDGCT+1,4      SET HEADING LINE COUNT.
         MVI   13(R1),LL         SET CORRECT LINE LENGTH.
         MVI   WINLNLEN+1,LL     SET CORRECT LINE LENGTH.
         LA    R1,PGMFUDGE       POINT TO DATA STREAM SUFFIX.
         ST    R1,WINSUFIX       SAVE ITS ADDRESS.
         LA    R1,PGMFIXLN-1     GET DATA STREAM SUFFIX LENGTH CODE.
         ST    R1,WINSUFLN       SAVE IT.
         CLI   OLDCOLS+3,80      USING A WIDE SCREEN?
         BNH   BBSUFXOK          NO.
         L     R1,OLDCOLS        YES, GET THE COLUMN COUNT.
         MHI   R1,3
         LA    R1,53(,R1)        GET BUFFER ADDRESS.
         STC   R1,PGMFUDGE+2
         SRL   R1,6
         STC   R1,PGMFUDGE+1
         NI    PGMFUDGE+2,X'3F'
         TR    PGMFUDGE+1(2),TABLE
BBSUFXOK XC    WORK2,WORK2       RESET SAVED REAL NAME.
         CLI   INCHARS,C' '      ANY INITIAL SUBCOMMAND TO PROCESS?
         BH    CMDSCANB          YES, PROCESS IT.
         SPACE
REDOBLDL MVI   ENDDEPTH+1,0      MAKE PF3/15 FUNCTION AS '='.
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         SLR   R0,R0
         ST    R0,WINLINES       INITIALIZE LINE COUNTER.
         L     R2,WINBUFF        GET WINDOW BUFFER START ADDRESS.
         MVC   0(LL-79,R2),HIGHX LOAD HEADING ATTRIBUTES.
         MVI   8(R2),X'F7'       SHOW HEADING IN WHITE.         (I3279)
         LA    R9,REDOLLAF       POINT TO LLA FETCH DISPLAY ROUTINE.
         CLI   BSUBOPTN,C'F'     LLA FETCH STATISTICS TO BE DISPLAYED?
         BER   R9                YES, GO DO IT.
         MVC   LL-79(79,R2),HEADINGB     LOAD DISPLAYABLE HEADING.
         BAS   R14,BADDLINE      LINE NOW COMPLETE.
         LR    R1,R2             RETAIN THIS ADDRESS FOR A SECOND.
         BAS   R14,BSPCLINE      INSERT A BLANK LINE.
         CLI   BSUBOPTN,C'B'     CORRECT SUB-OPTION FOR BLDL SEARCH?
         BE    BILDITIS          YES, PROCEED.
         MVI   BSUBOPTN,C'B'     NO, BUT IT IS NOW.
         MVI   2(R1),X'F2'       SHOW MESSAGE IN REVERSE VIDEO. (I3279)
         MVI   5(R1),X'F8'       SHOW MESSAGE IN HIGH INTENSITY.
         MVI   8(R1),X'F2'       SHOW MESSAGE IN RED.           (I3279)
         MVC   LL-79(79,R1),NOLLAMSG  LOAD MESSAGE INTO LINE.
BILDITIS MVC   0(LL-79,R2),HIGHX SUPPLY ATTRIBUTE BYTES.
         MVC   LL-60(33,R2),=C'PROGRAM NAME SEARCH ARGUMENT ===>'
         MVC   LL-26(8,R2),BILDNAME
         BAS   R14,BADDLINE      LINE NOW COMPLETE.
         BAS   R14,BSPCLINE      INSERT A BLANK LINE.
         MVC   BLDLNAME,BILDNAME
         CLI   BILDNAME,C' '     ANY MODULE TO FIND?
         BH    BUILDIT           YES, START LOOKING.
         MVC   0(LL-79,R2),MEDX  SUPPLY ATTRIBUTE BYTES.
         MVC   LL-60(12,R2),=CL12'CATALOG NAME'
         MVC   LL-15(13,R2),=CL13'VOLUME  STRNO'
         BAS   R14,BADDLINE      LINE NOW COMPLETE.
         L     R3,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R3
         L     R5,CVTGDA         POINT TO THE GLOBAL DATA AREA.
         USING GDA,R5
         L     R5,GDACSA         POINT TO THE START OF CSA.
         DROP  R5                GDA.
         L     R3,CVTCBSP        POINT TO THE ACCESS METHOD BLOCK LIST.
         DROP  R3                CVT.
         L     R1,8(,R3)         POINT TO THE VSAM ACB.
         L     R1,64(,R1)        POINT TO THE CATALOG AUX. WORK AREA.
         MVC   LL-76(15,R2),=C'MASTER CATALOG:'
         MVC   LL-60(44,R2),52(R1)   LOAD THE MASTER CATALOG NAME.
         L     R4,28(,R1)        SHOW THE VOLUME SERIAL NUMBER.
         CR    R4,R5             IS UCB ADDRESS BELOW CSA?
         BL    *+10              YES, SKIP VOLUME SERIAL DISPLAY.
         USING UCBOB,R4
         MVC   LL-15(6,R2),UCBVOLI
         LH    R0,46(,R1)        GET THE REQUEST-PARAMETER-LIST COUNT.
         CVD   R0,WORK
         MVC   LL-8(6,R2),ED5
         ED    LL-8(6,R2),WORK+5
         BAS   R14,BADDLINE      LINE NOW COMPLETE.
         L     R3,20(,R3)        POINT TO LATEST OPEN CATALOG CAX.
         MVC   LL-76(19,R2),=C'USED USER CATALOGS:'
         BAS   R14,BADDLINE      LINE NOW COMPLETE.
BUSRCTLP MVC   LL-60(44,R2),52(R3)   LOAD THE USER CATALOG NAME.
         L     R4,28(,R3)        SHOW THE VOLUME SERIAL NUMBER.
         CR    R4,R5             IS UCB ADDRESS BELOW CSA?
         BL    BCDISKOK          YES, SKIP VOLUME SERIAL DISPLAY.
         TM    3(R4),X'80'       IS THE VOLUME ONLINE?
         BZ    BCDISKOK          NO, CAN'T SHOW VOLUME SERIAL NUMBER.
         MVC   LL-15(6,R2),UCBVOLI
BCDISKOK LH    R0,46(,R3)        GET THE REQUEST-PARAMETER-LIST COUNT.
         CVD   R0,WORK
         MVC   LL-8(6,R2),ED5Z
         ED    LL-8(6,R2),WORK+5
         TM    8(R3),X'20'       IS THE CATALOG CLOSED?
         BZ    BCOPENOK          NO.
         MVC   LL-78(8,R2),=CL8'*CLOSED*'
BCOPENOK TM    11(R3),X'80'      IS THE CATALOG FREED?
         BO    BCALOCOK          NO.
         MVC   LL-69(7,R2),=CL7'*FREED*'
BCALOCOK BAS   R14,BADDLINE      LINE NOW COMPLETE.
         DROP  R4                UCBOB.
BSKPMSTR ICM   R3,B'1111',4(R3)  POINT TO NEXT OPEN USER CATALOG CAX.
         BZ    SHOWBLDL          END OF CHAIN IF ZERO.
         CR    R3,R1             NOW AT MASTER CATALOG CAX?
         BNZ   BUSRCTLP          NO, FOUND ANOTHER OPEN USER CATALOG.
         B     BSKPMSTR          YES, SKIP IT.  (LAST ON CHAIN ANYWAY.)
         DROP  R15               WNDWMNGR.
         SPACE
BUILDIT  L     R1,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R1
         L     R3,CVTLINK        POINT TO THE IPL-TIME LINK LIST DCB.
         L     R4,CVTLLTA        POINT TO THE IPL-TIME LINK LIST TABLE.
         DROP  R1                CVT.
         TM    OSLEVEL+1,CVTDYNL OS/390 1.3 OR LATER?
         BNO   BUILDLOK          NO, NO DYNAMIC LINK LIST FACILITY.
         L     R1,PSAAOLD        POINT TO THE CURRENT ASCB.
         USING ASCB,R1
         L     R1,ASCBASSB       POINT TO THE CURRENT ASSB.
         DROP  R1                ASCB.
         USING ASSB,R1
         L     R1,ASSBDLCB       POINT TO DYNAMIC LNKLST CONTROL BLOCK.
         DROP  R1                ASSB.
         USING DLCB,R1
         LM    R3,R4,DLCBDCB@    GET CURRENT ADDRESS SPACE LNKLST DTLS.
         DROP  R1                DLCB.
BUILDLOK ST    R3,BBLNKDCB       SAVE CURRENT LINK LIST DCB ADDRESS.
         ST    R4,BBLNKLLT       SAVE CURRENT LINK LIST TABLE ADDRESS.
         XC    BLDLTT(68),BLDLTT ZERO ANY PREVIOUS DATA.
         SLR   R3,R3             ZERO DCB POINTER & USE BLDL, NOT FIND.
         CLC   BLDLMODE,BLLAFLAG PERFORMING STANDARD SEARCH BLDL?
         BE    DOBLDL            YES, GO DO IT.
         L     R1,CVTPTR(,0)     NO, POINT TO THE CVT.
         USING CVT,R1
         L     R3,CVTLINK        GET CSV-RECOGNIZED DCB ADDRESS.
         DROP  R1                CVT.
         CLI   BLLAFLAG,C'R'     LLACOPY FOR REFRESH TO BE DONE?
         BNE   DOBLDL            NO, PERFORM A CONVENTIONAL BLDL.
         MODESET MF=(E,MDSTSUP)  GET INTO SUPERVISOR STATE.
         LLACOPY DCB=(R3),BLDLLIST=BLDLIST,MF=(E,BLLALIST)
         STC   R15,WORK          SAVE RETURN CODE.
         STC   R0,WORK+1         SAVE REASON CODE.
         MODESET MF=(E,MDSTPRB)  REVERT TO PROBLEM STATE.
         B     DONEBLDL          HANDLE THE AFTERMATH.
DOBLDL   LA    R0,BLDLIST        POINT TO BLDL PARAMETER LIST.
         BLDL  (R3),(0)          PERFORM DIRECTORY SEARCH.
         STC   R15,WORK          SAVE RETURN CODE.
         STC   R0,WORK+1         SAVE REASON CODE.
         CLC   BLDLMODE,BLLAFLAG AUTHORIZATION USED?
         BE    DONEBLDL          NO, BOTH FLAGS ARE '0'.
DONEBLDL MVC   0(LL-79,R2),MEDX  SUPPLY ATTRIBUTE BYTES.
         MVC   LL-70(L'BLDLHDG,R2),BLDLHDG   SHOW BLDL RESULTS.
         MVC   LL-52(1,R2),BLDLMODE          SHOW BLDL DCB MODE.
         UNPK  LL-31(3,R2),WORK(2)
         TR    LL-31(2,R2),HEX-C'0'
         MVI   LL-29(R2),C''''   DISPLAY RETURN CODE.
         UNPK  LL-12(3,R2),WORK+1(2)
         TR    LL-12(2,R2),HEX-C'0'
         MVI   LL-10(R2),C''''   DISPLAY REASON CODE.
         CLI   BLLAFLAG,C'R'     LLACOPY FOR REFRESH DONE?
         BNE   BLDLHDOK          NO.
         MVC   LL-73(7,R2),=C'LLACOPY'
         MVI   LL-52(R2),C'L'    ONLY LINK LIST REFRESH IS SUPPORTED.
BLDLHDOK BAS   R14,BADDLINE      LINE NOW COMPLETE.
         MVC   LL-70(5,R2),=C'NAME='
         MVC   LL-65(8,R2),PDS2NAME
         CLI   PDS2TTRP+2,0      IS R OF TTR ZERO?
         BNE   WASFOUND          NO, REPORT INFORMATION FOUND.
         LA    R1,LL-50(,R2)     POINT TO MESSAGE AREA.
         MVC   0(22,R1),=C'NOT FOUND IN LINK LIST'
         BAS   R14,BADDLINE      LINE NOW COMPLETE.
         CLI   WORK,8            WAS THE BLDL RETURN CODE EIGHT?
         BNE   PLPALOOK          NO.
         MVC   0(9,R1),=C'I/O ERROR'
         B     PLPALOOK          YES, REPORT DIRECTORY I/O ERROR.
WASFOUND MVC   LL-55(4,R2),=C'TTR='
         UNPK  LL-51(7,R2),PDS2TTRP(4)
         TR    LL-51(6,R2),HEX-C'0'
         MVI   LL-45(R2),C' '
         MVC   LL-43(14,R2),=C'CONCATENATION='
         UNPK  LL-29(3,R2),PDS2CNCT(2)
         TR    LL-29(2,R2),HEX-C'0'
         MVI   LL-27(R2),C' '
         MVC   LL-25(9,R2),=C'LOCATION='
         UNPK  LL-16(3,R2),PDS2LIBF(2)
         TR    LL-16(2,R2),HEX-C'0'
         MVI   LL-14(R2),C' '
         ST    R2,SAVE+28        SAVE DISPLAY LINE ADDRESS FOR LATER.
         BAS   R14,BADDLINE      LINE NOW COMPLETE.
         MVC   LL-70(5,R2),=C'SIZE='
         LA    R15,LL-65(,R2)    POINT TO DISPLAY AREA.
         UNPK  0(7,R15),PDS2STOR(4)
         BAS   R14,B6HEXFIX      FORMAT AND SUPPRESS LEADING ZEROS.
         MVC   LL-55(4,R2),=C'EPA='
         LA    R15,LL-51(,R2)    POINT TO DISPLAY AREA.
         UNPK  0(7,R15),PDS2EPA(4)
         BAS   R14,B6HEXFIX      FORMAT AND SUPPRESS LEADING ZEROS.
         MVC   WORK(1),PDS2INDC
         NI    WORK,PDS2LUSR     GET USERDATA HALFWORD COUNT.
         LA    R1,PDSBCEND       POINT PAST END OF SECTION.
         TM    PDS2ATR1,PDS2SCTR IS THIS A SCATTER PROGRAM?
         BZ    BPOCHECK          NO.
         LA    R1,8(,R1)         YES, POINT PAST SCATTER SECTION.
BPOCHECK TM    PDS2FTB1,PDS2PGMO PROGRAM OBJECT?
         BO    NOTF4AE           YES, CAN'T BE AE LOAD MODULE.
         TM    PDS2FTB1,X'41'    F4 ADDRESSING EXTENSION?
         BZ    NOTF4AE           NO.
         TM    PDS2FTB2,X'C0'    F4 AE EXPANSION PRESENT?
         BZ    NOTF4AE           NO.
         LA    R1,8(,R1)         YES, POINT PAST AE SECTION.
NOTF4AE  TM    PDS2INDC,PDS2ALIS IS THE MEMBER AN ALIAS?
         BZ    NOTALIAS          NO.
         MVC   LL-5(5,R2),=C'ALIAS'
         LA    R15,11+1(,R1)     POINT PAST REAL NAME (READY FOR HW).
         LA    R0,PDS2USRD       POINT TO START OF USER DATA.
         SR    R15,R0            GET NECESSARY BYTE COUNT.
         SRL   R15,1             GET NECESSARY HALFWORD COUNT.
         CLM   R15,1,WORK        SUFFICIENT USER DATA PRESENT?
         BH    BBIGOKAY          NO, CAN'T KNOW REAL NAME.
         MVC   WORK2,3(R1)       YES, SAVE REAL MEMBER NAME.
         OC    WORK2,BLANKS      TRY TO ENSURE PRINTABLE CHARACTERS.
         LA    R1,11(,R1)        POINT PAST ALIAS SECTION.
NOTALIAS TM    PDS2FTB1,PDS2SSI  SSI DATA PRESENT?
         BZ    BSSIOKAY          NO.
         LA    R1,1(,R1)         YES.
         SRL   R1,1              PROCESS SSI SECTION ALIGNMENT.
         SLL   R1,1              POINT TO SSI SECTION.
         LA    R1,4(,R1)         POINT PAST SSI SECTION.
BSSIOKAY TM    PDS2FTB1,PDSAPFLG APF DATA PRESENT?
         BZ    BAPFOKAY          NO.
         LA    R15,2+1(,R1)      POINT PAST APF CODE (READY FOR H/W).
         LA    R0,PDS2USRD       POINT TO START OF USER DATA.
         SR    R15,R0            GET NECESSARY BYTE COUNT.
         SRL   R15,1             GET NECESSARY HALFWORD COUNT.
         CLM   R15,1,WORK        SUFFICIENT USER DATA PRESENT?
         BH    BBIGOKAY          NO, CAN'T HAVE APF CODE.
         MVC   LL-77(5,R2),=C'AC=??'
         CLI   0(R1),1           IS AUTHORIZATION CODE ONE BYTE LONG?
         BNE   BBIGOKAY          NO, INVALID DATA.
         UNPK  LL-74(3,R2),1(2,R1)
         TR    LL-74(2,R2),HEX-C'0'
         MVI   LL-72(R2),C' '    SHOW PROGRAM AUTHORIZATION CODE.
         LA    R1,2(,R1)         POINT PAST APF SECTION.
BAPFOKAY TM    PDS2FTB1,PDS2BIG+PDS2PGMO
         BNO   BBIGOKAY          NOT LARGE PROGRAM OBJECT.
         UNPK  LL-65(9,R2),1(5,R1)
         TR    LL-65(8,R2),HEX-C'0'
         MVI   LL-57(R2),C' '    SHOW LARGE PROGRAM OBJECT SIZE.
         UNPK  LL-51(9,R2),5(5,R1)          MAIN ENTRY POINT.
         TM    PDS2INDC,PDS2ALIS IS THE MEMBER AN ALIAS?
         BZ    BBIGEPOK          NO.
         UNPK  LL-51(9,R2),9(5,R1)          ALIAS ENTRY POINT.
BBIGEPOK TR    LL-51(8,R2),HEX-C'0'
         MVI   LL-43(R2),C' '    SHOW LARGE ENTRY POINT OFFSET.
BBIGOKAY LR    R1,R2             COPY LINE POINTER.
         TM    PDS2FTB1,PDS2PGMO PROGRAM OBJECT?
         BZ    LEVELCHK          NO.
         LA    R1,3(,R2)         YES, ADJUST LINE POINTER.
         TM    PDS2FTB3,PDS2NMIG MIGRATABLE TO LOAD MODULE?
         BZ    DOWNWARD          YES.
         MVC   LL-40(2,R2),=C'NM'
         B     DOWNWARD          F-LEVEL IRRELEVANT.
LEVELCHK MVC   LL-43(2,R2),=C'DC'
         TM    PDS2ATR2,PDS2FLVL F-LEVEL ONLY?
         BZ    DOWNWARD          NO, DOWNWARD COMPATIBLE.
         MVC   LL-43(2,R2),=C'FO'
DOWNWARD TM    PDS2ATR1,PDS2EXEC EXECUTABLE?
         BO    EXECABLE          YES.
         MVC   LL-40(2,R1),=C'NX'
EXECABLE TM    PDS2ATR1,PDS2LOAD ONLY-LOADABLE?
         BZ    LOADABLE          NO.
         MVC   LL-37(2,R1),=C'OL'
LOADABLE TM    PDS2FTB1,PDS2PAGA PAGE ALIGNED?
         BZ    ANYALIGN          NO.
         MVC   LL-34(2,R2),=C'PG'
ANYALIGN TM    PDS2ATR1,PDS2OVLY OVERLAY STRUCTURE?
         BZ    NOTOVLY           NO.
         MVC   LL-34(2,R2),=C'OV'
NOTOVLY  TM    PDS2ATR2,PDS2REFR REFRESHABLE?
         BZ    NOTREFR           NO.
         MVC   LL-31(2,R2),=C'RF'
NOTREFR  TM    PDS2ATR1,PDS2RENT REENTERABLE?
         BZ    NOTRENT           NO.
         MVC   LL-28(2,R2),=C'RN'
NOTRENT  TM    PDS2ATR1,PDS2REUS REUSEABLE?
         BZ    NOTREUS           NO.
         MVC   LL-25(2,R2),=C'RU'
NOTREUS  TM    PDS2ATR1,PDS2SCTR SCATTER FORMAT?
         BZ    NOTSCTR           NO.
         MVC   LL-22(2,R2),=C'SC'
NOTSCTR  TM    PDS2ATR2,PDS2TSTN TEST?
         BZ    NTESTRAN          NO.
         MVC   LL-19(2,R2),=C'TS'
NTESTRAN TM    PDS2FTB1,PDS2PGMO PROGRAM OBJECT?
         BO    MVSXATTR          YES, CHECK MVS/XA MODES.
         TM    PDS2FTB1,X'41'    AE LINK EDITED?
         BZ    MVSXATTR          NO, CHECK MVS/XA MODES.
         MVC   LL-15(2,R2),=C'AE'
         TM    PDS2FTB2,X'C0'    AE SECTION PRESENT IN USERDATA?
         BZ    GOTRMODE          NO, HAVE CORRECT DETAILS.
         MVC   LL-15(5,R2),=C'CAP31'
         TM    PDS2FTB2,X'04'    AMODE=CAP31?
         BO    GOTRMODE          YES, HAVE CORRECT DETAILS.
         MVC   LL-12(2,R2),=C'24'
         TM    PDS2FTB2,X'03'    AMODE=CAP24?
         BO    GOTRMODE          YES, HAVE CORRECT DETAILS.
         MVC   LL-15(5,R2),=C'ANY  '
         TM    PDS2FTB2,X'02'    AMODE=ANY?
         BO    GOTRMODE          YES, HAVE CORRECT DETAILS.
         MVC   LL-14(2,R2),=C'31'
         TM    PDS2FTB2,X'01'    AMODE=31?
         BO    GOTRMODE          YES, HAVE CORRECT DETAILS.
         MVC   LL-14(2,R2),=C'24'
         BO    GOTRMODE          AMODE=24 WAS SPECIFIED.
MVSXATTR TM    PDS2INDC,PDS2ALIS ALIAS?
         BO    ALAMODE           YES.
         TM    PDS2FTB2,PDSMAMOD
         BZ    GOTAMODE          NO AMODE SPECIFICATION.
         MVC   LL-15(3,R2),=C'ANY'
         BO    GOTAMODE          AMODE ANY SPECIFIED.
         MVC   LL-14(2,R2),=C'31'
         TM    PDS2FTB2,X'02'
         BO    GOTAMODE          AMODE 31 SPECIFIED.
         MVC   LL-14(2,R2),=C'64'
         B     GOTAMODE          AMODE 64 SPECIFIED.
ALAMODE  TM    PDS2FTB2,PDSAAMOD
         BZ    GOTAMODE          NO AMODE SPECIFICATION.
         MVC   LL-15(3,R2),=C'ANY'
         BO    GOTAMODE          AMODE ANY SPECIFIED.
         MVC   LL-14(2,R2),=C'31'
         TM    PDS2FTB2,X'08'
         BO    GOTAMODE           AMODE 31 SPECIFIED.
         MVC   LL-14(2,R2),=C'64' AMODE 64 SPECIFIED.
GOTAMODE TM    PDS2FTB2,PDSLRMOD
         BZ    GOTRMODE          RMODE ANY SPECIFIED.
         MVC   LL-11(4,R2),=C'RANY'
GOTRMODE BAS   R14,BADDLINE      LINE NOW COMPLETE.
         CLI   PDS2LIBF,PDS2LLNK WAS THE MEMBER FOUND IN THE LINK LIST?
         BNE   STPLBCHK          NO, MUST BE FROM SOME SORT OF TASKLIB.
         L     R7,BBLNKDCB       POINT TO THE LINK LIST DCB.
         USING IHADCB,R7
         L     R5,BBLNKLLT       POINT TO THE LINK LIST TABLE.
         LA    R5,8(,R5)         POINT TO FIRST ENTRY.
         SLR   R6,R6
         ICM   R6,1,PDS2CNCT     LOAD CONCATENATION COUNT - IS IT ZERO?
         BZ    FOUNDLL           YES, FOUND THE LIBRARY ALREADY.
         LR    R0,R6             COPY CONCATENATION COUNT.
NXTLLCHK LA    R5,45(,5)         POINT TO NEXT ENTRY.
         BCT   R0,NXTLLCHK       GET NEXT ENTRY.
FOUNDLL  ICM   R7,7,DCBDEBA      POINT TO THE LINK LIST/STEPLIB DEB.
         DROP  R7                IHADCB.
         USING DEBBASIC,R7
         SLR   R9,R9
         IC    R9,DEBNMEXT       GET THE NUMBER OF EXTENTS.
         LA    R7,DEBBASND       POINT TO DEB DASD EXTENSION.
         DROP  R7                DEBBASIC.
         SLL   R9,4              TIMES 16 FOR DASD EXTENSION SIZE.
         LA    R9,0(R9,R7)       POINT TO DEB BPAM EXTENSION.
         BCTR  R9,0              POINT TO ONE BEFORE IT.
         SLR   R1,R1
         LTR   R6,R6             FIRST ENTRY?
         BZ    HAVEDEBE          YES, ALREADY GOT DEB EXTNT DESCRIPTOR.
         IC    R1,0(R6,R9)       NO, LOAD ENTRY'S FIRST EXTENT NUMBER.
         SLL   R1,4              MULTIPLY BY 16 FOR INDEX.
HAVEDEBE LA    R1,0(R1,R7)       POINT TO ENTRY'S FIRST DEB EXTENT.
         USING DEBDASD,R1
         ICM   R1,7,DEBUCBA      POINT TO ENTRY'S FIRST DEB EXTENT UCB.
         DROP  R1                DEBDASD.
         USING UCBOB,R1
         L     R7,SAVE+28        POINT TO "LOCATION" DISPLAY LINE.
         MVI   LL-13(R7),C'('
         MVC   LL-12(3,R7),UCBNAME LOAD UCB NAME.
         CLI   LL-12(R7),C'U'    FOUR-DIGIT UCB NAME?
         BNE   BUCBNMOK          NO, PROCEED.
         ST    R1,WORK+4         YES, STORE UCB ADDRESS.
         DROP  R1                UCBOB.
         UCBDEVN UCBPTR=WORK+4,DEVN=WORK    GET UCB NAME.
         STCM  R1,15,LL-12(R7)   LOAD UCB NAME INTO DISPLAY LINE.
         L     R1,WORK+4         RESTORE UCB POINTER.
         LA    R7,1(,R7)         ALLOW FOR EXTRA NAME LENGTH.
BUCBNMOK MVI   LL-9(R7),C'-'
         MVC   LL-8(6,R7),28(R1) LOAD VOLUME SERIAL NUMBER.
         MVI   LL-2(R7),C')'
         MVC   LL-70(25,R2),=C'FOUND IN THE DIRECTORY OF'
         MVC   LL-44(44,R2),1(5) LOAD LINK LIST LIBRARY NAME.
         BAS   R14,BADDLINE      LINE NOW COMPLETE.
ENDOFBLD CLI   WORK2,0           ANY REAL NAME TO SEARCH FOR?
         BE    PLPALOOK          NO, CHECK OUT THE LINK PACK AREA.
         MVC   BLDLNAME,WORK2    YES, LOAD IT INTO BLDL PARAMETER LIST.
         XC    WORK2,WORK2       RESET SAVED REAL NAME.
         B     BUILDIT           PERFORM THE EXTRA BLDL.
STPLBCHK SLR   R0,R0             CLEAR FOR INSERTS.
         L     R5,PSATOLD        GET POINTER TO CURRENT TCB.
         L     R5,12(0,R5)       POINT TO TIOT.
         LA    R5,24(0,R5)       POINT TO TIOELNGH.
STPLBSCN CLC   4(8,R5),=C'STEPLIB '
         BE    STPLBLDL          FILE EXISTS SO GO AND OPEN IT.
         IC    R0,0(0,R5)        GET TIOT ENTRY LENGTH.
         ALR   R5,R0             POINT TO NEXT TIOT ENTRY.
         CLI   0(R5),0           ZERO LENGTH ENTRY?
         BNE   STPLBSCN          NO, CHECK OUT THIS ENTRY.
         B     ENDOFBLD          YES, END OF TIOT AND NO STEPLIB.
STPLBLDL MVC   TTRKSAVE,BLDLTT   SAVE DCB=0 TTRK FOR COMPARISON.
         USING ARL,R8
         LA    R8,SECWORKA       POINT TO THE ARL STORAGE.
         CLC   BLDLDCB-IHADCB+DCBDDNAM(8),=C'STEPLIB '
         BNE   STEPOPEN          BLDLDCB ALREADY OPEN.
         ST    R8,BLDEXLST       STORE THE POINTER TO THE ARL.
         MVI   BLDEXLST,X'93'    SAVE ARL EXIT CODE PLUS LAST FLAG.
         XC    ARL(36),ARL       ZERO THE ARL.
         MVI   ARLLEN+1,36       SUPPLY THE LENGTH INDICATOR.
         MVC   ARLIDENT,=C'AR'   SUPPLY ARL IDENTIFIER.
         CLI   12(R5),0          IS JFCB ABOVE THE 16MEG LINE?
         BNE   SKIPARL           NO, SKIP ALLOCATION RETRIEVAL.
         RDJFCB (BLDLDCB)        FETCH ALLOCATION INFORMATION.
SKIPARL  OPEN (BLDLDCB,(INPUT))  OPEN STEPLIB PRIVATELY.
         OI    MODESW2,CLNF      FLAG CLEAN-UP REQUIRED UPON EXIT.
STEPOPEN BLDL  BLDLDCB,BLDLIST   ISSUE PRIVATE BLDL.
         LTR   R15,R15           ZERO RETURN CODE?
         BNZ   ENDOFBLD          NO, NOT FOUND IN STEPLIB.
         CLC   TTRKSAVE,PDS2TTRP SAME TTR AND CONCATENATION?
         BNE   ENDOFBLD          NO, THIS IS NOT THE ONE FOUND EARLIER.
         LA    R7,BLDLDCB        POINT TO DCB FOR DEB SEARCH.
         SLR   R0,R0             CLEAR REGISTER FOR INSERT.
         ICM   R1,15,ARLAREA     POINT TO FIRST JFCB.
         BZ    NORDJFCB          RDJFCB DID NO GOOD (BACK LEVEL DFP).
         ICM   R0,1,PDS2CNCT     GET THE CONCATENATION NUMBER.
         LR    R6,0              COPY IT FOR DEB EXTENT SCAN.
         BZ    ARJFCBOK          IF ZERO THEN ALREADY HAVE THE JFCB.
JFCBLOOP AH    R1,0(,R1)         POINT TO NEXT JFCB.
         BCT   R0,JFCBLOOP       DECREMENT CONCATENATION COUNT.
ARJFCBOK LA    R5,3(,R1)         POINT TO ONE BYTE BEFORE DSNAME.
         B     FOUNDLL           HAVE NOW FOUND THE LINK LIBRARY.
NORDJFCB ICM   R0,1,PDS2CNCT     GET THE CONCATENATION NUMBER.
         LR    R6,R0             COPY IT FOR DEB EXTENT SCAN.
         BZ    STPDDENT          IF 0 THEN ALREADY HAVE THE DD ENTRY.
CNCTLOOP IC    R1,0(,R5)         GET THE LENGTH OF THIS DD ENTRY.
         ALR   R5,R1             POINT TO THE NEXT POINTER.
         BCT   R0,CNCTLOOP       LOOP THROUGH NEXT CONCATENATION.
STPDDENT ICM   R1,7,12(R5)       POINT TO JFCB PREFIX.
         LA    R5,15(,R1)        POINT TO ONE BYTE BEFORE DSNAME.
         B     FOUNDLL           HAVE NOW FOUND THE LINK LIBRARY.
PLPALOOK BAS   R14,BSPCLINE      INSERT A BLANK LINE.
         MVC   0(LL-79,R2),MEDX  SUPPLY ATTRIBUTE BYTES.
         MVC   LL-70(29,R2),=C'PLPA DIRECTORY SEARCH RESULTS'
         BAS   R14,BADDLINE      LINE NOW COMPLETE.
         MVC   LL-70(5,R2),=C'NAME='
         MVC   LL-65(8,R2),BILDNAME
         MVC   LL-55(14,R2),=C'LPDE NOT FOUND'
         ICM   R0,15,BILDNAME    LOAD NAME FOR IEAVVMSR TO SEARCH FOR.
         ICM   R1,15,BILDNAME+4
         L     R3,CVTPTR(,0)     CVT POINTER REQUIRED BY IEAVVMSR.
         USING CVT,R3
         L     R15,CVTLPDSR      GET ENTRY POINT FOR IEAVVMSR.
         DROP  R3                CVT.
         BASR  R14,R15           CALL IEAVVMSR (7, 8 AND 9 WORK REGS).
         B     ISINPLPA          FOUND IN PLPA.
         BAS   R14,BADDLINE      LINE NOW COMPLETE.
         B     PASTPLPA          NO LPDE, NOT IN PLPA.
ISINPLPA LR    R1,R0             SAVE LINK PACK DIRECTORY ELEMENT
         USING LPDE,R1
LPDEDTLS ST    R1,WORK                                    ADDRESS.
         MVC   LL-51(6,R2),=C'-ADDR='
         UNPK  LL-45(9,R2),WORK(5)
         TR    LL-45(8,R2),HEX-C'0'
         MVI   LL-37(R2),C' '    DISPLAY LPDE ADDRESS.
         MVC   LL-35(12,R2),BEPEQ
         UNPK  LL-23(9,R2),LPDENTP(5)
         TR    LL-23(8,R2),HEX-C'0'
*        MVI   LL-15(R2),C' '    DISPLAY ENTRY POINT ADDRESS.
         MVC   LL-13(12,R2),=C'(MAJOR LPDE)'
         TM    LPDEATTR,LPDEMIN  IS THIS A MINOR LPDE?
         BZ    MAJRLPDE          NO, IT IS A MAJOR LPDE.
         MVC   LL-11(2,R2),=C'IN'
         TR    LL-79(BFDL,R2),XLATETBL
         MVI   LL-36(R2),X'24'   MAKE ENTRY ADDRESS TAB SELECTABLE.
         MVI   LL-15(R2),X'25'
         BAS   R14,BSPCLINE      LINE NOW COMPLETE.
         MVC   LL-70(5,R2),=C'NAME='
         L     R1,LPDEMJP        POINT TO MAJOR LPDE.
         MVC   LL-65(8,R2),LPDENAME ARGUMENT IS AN ALIAS OF THIS NAME.
         MVC   LL-55(4,R2),=C'LPDE NOT FOUND'  (REUSE LITERAL.)
         B     LPDEDTLS          FORMAT AND DISPLAY LPDE DETAILS.
MAJRLPDE TR    LL-79(BFDL,R2),XLATETBL
         MVI   LL-36(R2),X'24'   MAKE ENTRY ADDRESS TAB SELECTABLE.
         MVI   LL-15(R2),X'25'
         BAS   R14,BSPCLINE      LINE NOW COMPLETE.
         MVC   LL-70(12,R2),BEXAD
         UNPK  LL-58(9,R2),LPDEXTAD(5)
         TR    LL-58(8,R2),HEX-C'0'
*        MVI   LL-50(R2),C' '    DISPLAY LOAD MODULE START ADDRESS.
         MVC   LL-48(14,R2),=C'EXTENT-LENGTH='
         L     R14,LPDEXTLN      GET THE EXTENT LENGTH.
         ST    R14,WORK
         UNPK  LL-34(9,R2),WORK(5)
         TR    LL-34(8,R2),HEX-C'0'
         MVI   LL-26(R2),C' '    DISPLAY LOAD MODULE LENGTH.
BPLPA0LP CLI   LL-34(R2),C'0'    LEADING ZERO?
         BNE   DONEPLPA          NO.
         MVC   LL-34(8,R2),LL-33(R2)
         B     BPLPA0LP
         DROP  R1                LPDE.
DONEPLPA TR    LL-79(BFDL,R2),XLATETBL
         MVI   LL-71(R2),X'24'   MAKE EXTENT ADDRESS TAB SELECTABLE.
         MVI   LL-50(R2),X'25'
         BAS   R14,BSPCLINE      LINE NOW COMPLETE.
PASTPLPA BAS   R14,BSPCLINE      INSERT A BLANK LINE.
         MVC   0(LL-79,2),MEDX   SUPPLY ATTRIBUTE BYTES.
         MVC   LL-70(25,R2),=C'LPAQ CHAIN SEARCH RESULTS'
         BAS   R14,BADDLINE      LINE NOW COMPLETE.
         MVC   LL-70(5,R2),=C'NAME='
         MVC   LL-65(8,R2),BILDNAME
         MVC   LL-54(13,R2),=C'CDE NOT FOUND'
         L     R15,CVTPTR(,0)    POINT TO CVT.
         USING CVT,R15
         L     R1,CVTQLPAQ       POINT TO LPAQ ORIGIN.
         TM    CVTOSLV2,CVTDYLPA DYNAMIC LPA SUPPORTED?
         BNO   LPAQLOOP          NO, DYNAMIC LPA NOT PRESENT.
         L     R15,CVTECVT       YES, POINT TO THE ECVT.
         DROP  R15               CVT.
         USING ECVT,R15
         LA    R1,ECVTDLPF       POINT TO CDE CHAIN ORIGIN.
         DROP  R15               ECVT.
         USING CDENTRY,R1
LPAQLOOP ICM   R1,15,CDCHAIN     LAST CDE ON CHAIN?
         BZ    PASTLPAQ          YES, WASN'T ON LINK PACK CHAIN.
         CLC   BILDNAME,CDNAME   FOUND THE LOAD MODULE?
         BNE   LPAQLOOP          NO, TRY NEXT ONE.
CDEDTLS  ST    R1,WORK           STORE CONTENTS DIRECTORY ELEMENT ADDR.
         MVC   LL-51(6,R2),=C'-ADDR='
         UNPK  LL-45(9,R2),WORK(5)
         TR    LL-45(8,R2),HEX-C'0'
         MVI   LL-37(R2),C' '    DISPLAY CDE ADDRESS.
         MVC   LL-35(12,R2),BEPEQ
         UNPK  LL-23(9,R2),CDENTPT(5)
         TR    LL-23(8,R2),HEX-C'0'
*        MVI   LL-15(R2),C' '    DISPLAY ENTRY POINT ADDRESS.
         MVC   LL-13(11,R2),=C'(MAJOR CDE)'
         TM    CDATTR,CDMIN      IS THIS A MINOR CDE?
         BZ    MAJORCDE          NO, IT IS A MAJOR CDE.
         MVC   LL-11(2,R2),=C'IN'
         TR    LL-79(BFDL,R2),XLATETBL
         MVI   LL-36(R2),X'24'   MAKE ENTRY ADDRESS TAB SELECTABLE.
         MVI   LL-15(R2),X'25'
         BAS   R14,BSPCLINE      LINE NOW COMPLETE.
         L     R1,CDXLMJP        POINT TO MAJOR CDE.
         MVC   LL-70(5,R2),=C'NAME='
         MVC   LL-65(8,R2),8(R1) ARGUMENT IS AN ALIAS OF THIS NAME.
         MVC   LL-54(3,R2),=C'CDE NOT FOUND'  (REUSE LITERAL.)
         B     CDEDTLS           FORMAT AND DISPLAY LPDE DETAILS.
PASTLPAQ BAS   R14,BADDLINE      LINE NOW COMPLETE.
         B     SHOWCSVQ
MAJORCDE TR    LL-79(BFDL,R2),XLATETBL
         MVI   LL-36(R2),X'24'   MAKE ENTRY ADDRESS TAB SELECTABLE.
         MVI   LL-15(R2),X'25'
         BAS   R14,BSPCLINE      LINE NOW COMPLETE.
         TM    CDATTR2,CDXLE     IS THERE AN EXTENT LIST?
         BZ    SHOWCSVQ          NO.
         L     R1,CDXLMJP        YES, POINT TO MAJOR CDE'S EXTENT LIST.
         DROP  R1                CDENTRY..
         USING XTLST,R1
         MVC   LL-70(12,R2),BEXAD
         L     R14,XTLMSBAD      GET THE EXTENT ADDRESS.
         ST    R14,WORK
         UNPK  LL-58(9,R2),WORK(5)
         TR    LL-58(8,R2),HEX-C'0'
*        MVI   LL-50(R2),C' '    DISPLAY LOAD MODULE START ADDRESS.
         MVC   LL-48(14,R2),=C'EXTENT-LENGTH='
         L     R14,XTLMSBLA      GET THE EXTENT LENGTH.
         LA    R14,0(,R14)       RESET LAST-EXTENT FLAG IN SIGN BIT.
         ST    R14,WORK
         UNPK  LL-34(9,R2),WORK(5)
         TR    LL-34(8,R2),HEX-C'0'
         MVI   LL-26(R2),C' '    DISPLAY LOAD MODULE LENGTH.
BLPAQ0LP CLI   LL-34(R2),C'0'    LEADING ZERO?
         BNE   DONELPAQ          NO.
         MVC   LL-34(8,R2),LL-33(R2)
         B     BLPAQ0LP
         DROP  R1                XTLST.
DONELPAQ TR    LL-79(BFDL,R2),XLATETBL
         MVI   LL-71(R2),X'24'   MAKE EXTENT ADDRESS TAB SELECTABLE.
         MVI   LL-50(R2),X'25'
         BAS   R14,BSPCLINE      LINE NOW COMPLETE.
SHOWCSVQ BAS   R14,BSPCLINE      INSERT A BLANK LINE.
         MVC   BLDLNAME,BILDNAME GET NAME TO SEARCH FOR.
BDOQUERY CSVQUERY INEPNAME=BLDLNAME,SEARCH=JPALPA,                     +
               OUTLENGTH=BQ_XOUTLENGTH,                              4 +
               OUTEPA=BQ_XOUTEPA,                                    4 +
               OUTMJNM=BQ_XOUTMJNM,                                  8 +
               OUTLOADPT=BQ_XOUTLOADPT,                              4 +
               OUTSP=BQ_XOUTSP,                                      1 +
               OUTATTR1=BQ_XOUTATTR1,                                1 +
               OUTATTR2=BQ_XOUTATTR2,                                1 +
               OUTATTR3=BQ_XOUTATTR3,                                1 +
               OUTPDATA=BQ_XOUTPDATA,                               16 +
               OUTPID=BQ_XOUTPID,                                    4 +
               MF=(E,BQ)
         STC   R15,WORK          SAVE RETURN CODE.
         MVC   0(LL-79,R2),MEDX  SUPPLY ATTRIBUTE BYTES.
         MVC   LL-70(35,R2),=C'CSVQUERY RESULTS  -  RETURN CODE=X'''
         UNPK  LL-35(3,R2),WORK(2)
         TR    LL-35(2,R2),HEX-C'0'
         MVI   LL-33(R2),C''''   DISPLAY RETURN CODE.
         BAS   R14,BADDLINE      LINE NOW COMPLETE.
         MVC   LL-70(5,R2),=C'NAME='
         MVC   LL-65(8,R2),BLDLNAME
         CLI   WORK,8            WAS THE PROGRAM NOT FOUND?
         BNE   BQFOUND           NO, IT WAS FOUND.
         MVC   LL-50(9,R2),=C'NOT FOUND IN LINK LIST'  (REUSE LITERAL.)
         BAS   R14,BADDLINE      LINE NOW COMPLETE.
BQFOUND  CLI   WORK,0            WAS CSVQUERY SUCCESSFUL?
         BNE   SHOWBLDL          NO, OUTPUT COMPLETE.
         MVC   LL-35(12,R2),BEPEQ
         UNPK  LL-23(9,R2),BQ_XOUTEPA(5)
         TR    LL-23(8,R2),HEX-C'0'
*        MVI   LL-15(R2),C' '    DISPLAY ENTRY POINT ADDRESS.
         TR    LL-79(BFDL,R2),XLATETBL
         MVI   LL-36(R2),X'24'   MAKE ENTRY ADDRESS TAB SELECTABLE.
         MVI   LL-15(R2),X'25'
         BAS   R14,BSPCLINE      LINE NOW COMPLETE.
         MVC   LL-70(12,R2),BEXAD
         UNPK  LL-58(9,R2),BQ_XOUTLOADPT(5)
         TR    LL-58(8,R2),HEX-C'0'
*        MVI   LL-50(R2),C' '    DISPLAY LOAD MODULE START ADDRESS.
         MVC   LL-48(14,R2),=C'EXTENT-LENGTH='
         UNPK  LL-34(9,R2),BQ_XOUTLENGTH(5)
         TR    LL-34(8,R2),HEX-C'0'
         MVI   LL-26(R2),C' '    DISPLAY LOAD MODULE LENGTH.
BCSVQ0LP CLI   LL-34(R2),C'0'    LEADING ZERO?
         BNE   DONEQLEN          NO.
         MVC   LL-34(8,R2),LL-33(R2)
         B     BCSVQ0LP
DONEQLEN TM    BQ_XOUTVALID,X'08'
         BZ    BDONEQSP
         MVC   LL-24(8,R2),=C'SUBPOOL='
         SLR   R0,R0
         IC    R0,BQ_XOUTSP
         CVD   R0,WORK
         MVC   LL-16(4,R2),ED3   DISPLAY LOAD MODULE SUBPOOL.
         ED    LL-16(4,R2),WORK+6
BSUBP0LP CLI   LL-16(R2),C' '
         BNE   BDONEQSP
         MVC   LL-16(4,R2),LL-15(R2)
         B     BSUBP0LP
BDONEQSP TR    LL-79(BFDL,R2),XLATETBL
         MVI   LL-71(R2),X'24'   MAKE EXTENT ADDRESS TAB SELECTABLE.
         MVI   LL-50(R2),X'25'
         BAS   R14,BSPCLINE      LINE NOW COMPLETE.
         TM    BQ_XOUTVALID+1,X'60'
         BZ    BDONPROV
         MVC   LL-70(17,R2),=C'PROVIDER DETAILS:'
         OC    BQ_XOUTPDATA(16),BQ_XOUTPDATA
         BZ    BDONPDAT          DON'T FORMAT AND SHOW NULLS.
         UNPK  LL-51(9,R2),BQ_XOUTPDATA(5)
         UNPK  LL-43(9,R2),BQ_XOUTPDATA+4(5)
         TR    LL-51(16,R2),HEX-C'0'
         MVI   LL-35(R2),C'.'
         UNPK  LL-34(9,R2),BQ_XOUTPDATA+8(5)
         TR    LL-34(8,R2),HEX-C'0'
         MVI   LL-26(R2),C' '
         ICM   R0,15,BQ_XOUTPDATA+12
         BZ    BDONPDAT          OBVIOUSLY NOT A DDNAME.
         MVC   LL-34(8,R2),BQ_XOUTPDATA+8
         TM    BQ_XOUTPDATA+15,7 IS "ADDRESS" D/W ALIGNED?
         BNZ   BDONPDAT          NO, ASSUME IT IS A DDNAME.
         CLI   BQ_XOUTPDATA+12,0 IS "ADDRESS" BELOW THE LINE?
         BE    LTRYFMD           YES, NULL NO GOOD IN DDNAME.
         CLI   BQ_XOUTPDATA+12,C'$' IS IT HIGH ATL STORAGE?
         BNH   BDONPDAT          NO, COULD BE DDNAME BLANK OR $.
LTRYFMD  ICM   R1,15,BQ_XOUTPDATA+12 YES, LOAD THE ADDRESS.
         BNP   BDONPDAT          PROBABLY DDNAME ALPHANUMERIC.
***      TPROT (R1),0            IS THE ADDRESS ACCESSIBLE?
***      BC    3,BDONPDAT        NO, AVOID S0C4.
         CLC   =CL8'IEWLFMD',0(R1) POINTING TO AN FMD?
         BNE   BDONPDAT          NO, IGNORE "ADDRESS".
         MVC   LL-34(8,R2),44(R1) YES, COPY THE DDNAME.
BDONPDAT MVC   LL-24(4,R2),BQ_XOUTPID
         BAS   R14,BADDLINE      LINE NOW COMPLETE.
BDONPROV MVC   LL-70(8,R2),=C'ATTR1=X'''
         UNPK  LL-62(3,R2),BQ_XOUTATTR1(2)
         TR    LL-62(2,R2),HEX-C'0'
         MVI   LL-60(R2),C''''
         MVC   LL-50(8,R2),=C'ATTR2=X'''
         UNPK  LL-42(3,R2),BQ_XOUTATTR2(2)
         TR    LL-42(2,R2),HEX-C'0'
         MVI   LL-40(R2),C''''
         MVC   LL-30(8,R2),=C'ATTR3=X'''
         UNPK  LL-22(3,R2),BQ_XOUTATTR3(2)
         TR    LL-22(2,R2),HEX-C'0'
         MVI   LL-20(R2),C''''
         BAS   R14,BADDLINE      LINE NOW COMPLETE.
         XI    BQ_XOUTATTR1,X'08'     CHANGE NOT-OL TO OL.
         ICM   R1,14,BQ_XOUTATTR1 LOAD 24 ATTRIBUTE FLAG BITS.
         BZ    BQATDONE
         LA    R14,BQATTAB       POINT TO ATTRIBUTE NAME TABLE.
         LA    R0,24             LOAD FLAG BIT COUNT.
         LA    R15,LL-70(,R2)    POINT TO FIRST DISPLAY LOCATION.
BQATLOOP LTR   R1,R1             FLAG BIT ON?
         BNM   BQATNEXT          NO.
         MVC   0(8,R15),2(R14)   YES, COPY ATTRIBUTE NAME.
         AH    R15,0(R14)        POINT TO NEXT DISPLAY LOCATION.
BQATNEXT LA    R14,10(,R14)      POINT TO NEXT ATTRIBUTE TABLE ENTRY.
         SLL   R1,1              PROMOTE NEXT FLAG BIT.
         BCT   R0,BQATLOOP       PROCESS NEXT ATTRIBUTE.
         BAS   R14,BADDLINE      LINE NOW COMPLETE.
BQATDONE CLC   BLDLNAME,BQ_XOUTMJNM MAJOR NAME MATCHES SEARCH ARGUMENT?
         BE    SHOWBLDL          YES, DISPLAY COMPLETE.
         MVC   BLDLNAME,BQ_XOUTMJNM   NO, SUPPLY NEW SEARCH ARGUMENT.
         B     BDOQUERY          PERFORM A QUERY ON THE MAJOR NAME.
SHOWBLDL BAS   R14,BSPCLINE      INSERT A BLANK LINE.
         DROP  R8                ARL.
         SPACE
         USING WNDWMNGR,R15
BSHOWSUM L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         BAS   R1,SYSUMMRY       PRODUCE & SHOW SYSTEM SUMMARY LINE.
         LA    R1,1
         A     R1,WINLINES       INCREMENT LINE COUNTER.
         ST    R1,WINLINES
         MVC   0(2,R2),FFFF+2    SET FINAL LINE FLAG FOR WINDOW DATA.
         MVI   BLLAFLAG,C'0'     RESET LLA REFRESH FLAG.
         DROP  R15               WNDWMNGR.
PUTSCRNB LA    R0,LL             MAKE REGISTER 0 POSITIVE FOR OUTPUT.
         MVI   XLATETBL+X'3B',C'.'
GETSCRNB L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         BASR  R14,R15           CALL WINDOW MANAGER.
         TM    MODESW2,XFLG      SUBROUTINE EXIT REQUIRED?
         BZ    ANYPRGRM          NO, PROCESS TGET RESULTS.
ISEXITB  CLOSE (BLDLDCB)         YES, CLOSE PRIVATE STEPLIB OPENING.
         LA    R8,SECWORKA       POINT TO ARL STORAGE.
         USING ARL,R8
         ICM   R0,15,ARLPOOL     LOAD ARL SUBPOOL AND SIZE.
         BZR   R9                ALLOCATION RETRIEVAL AREA NOT USED.
         L     R1,ARLAREA        LOAD ARL ADDRESS.
         FREEMAIN R,A=(1),LV=(0) FREE ALLOCATION RETRIEVAL AREA.
         BR    R9                RETURN TO MAINLINE VIA SCREENIO.
         DROP  R8                ARL.
ANYPRGRM CLI   DOWNCNTR,C' '     ARE WE IN AUTO REFRESH MODE?
         BH    REDOBLDL          YES.
         CLC   ONE,INBUFF+4      TEXT FROM PRIMARY COMMAND AREA?
         BNL   CMDSCANB          YES.
         CLI   INBUFF+4,3        TEXT FROM LINE 4?
         BNE   BBNOTPGM          NO, INPUT NOT PROGRAM NAME.
         MVC   BILDNAME,INCHARS  LOAD NEW PROGRAM NAME.
         B     REDOBLDL          PROCESS NEW SEARCH ARGUMENT.
BBNOTPGM MVI   INCHARS,C' '      SUPPRESS COMMAND SCAN.
CMDSCANB LA    R9,BPGMZOOM       GET SUBROUTINE ENTRY POINT.
         BASR  R14,R9            CHECK FOR PROGRAM RELATED DATA ZOOM.
         CLI   INCHARS,C'B'      REQUEST FOR PROGRAM SEARCH?
         BE    BILDSRCH          YES.
         CLI   INCHARS,C'F'      REQUEST FOR PROGRAM FETCH STATISTICS?
         BE    BPGMFECH          YES.
         CLI   BSUBOPTN,C'F'     IN PROGRAM FETCH REPORT MODE?
         BE    CMDSCNBF          YES, LOOK FOR ITS SUBCOMMANDS.
         CLI   INCHARS,C'S'      REQUEST FOR STANDARD SEARCH?
         BE    BILDDCB0          YES, UPDATE BLDL DCB FLAG.
         CLI   INCHARS,C'L'      REQUEST FOR LINKLIST-ONLY SEARCH?
         BE    BILDDCBL          YES, UPDATE BLDL DCB FLAG.
         TM    MODESW2,AUTH      APF AUTHORIZED?
         BZ    GIVEHLPB          NO, OTHER SUBCOMMAND IS NOT ALLOWED.
         CLI   INCHARS,C'R'      REQUEST FOR LLA REFRESH VIA LLACOPY?
         BE    BREFRESH          YES.
         B     GIVEHLPB          NO, INVALID.
CMDSCNBF CLI   INCHARS,C'L'      REQUEST FOR FETCH DISPLAY LOCATE?
         BE    BFLOCATE          YES, UPDATE DISPLAY LINE LOCATION.
         CLI   INCHARS,C'I'      REQUEST FOR FETCH DISPLAY LOCATE?
         BE    BFLOCATE          YES, UPDATE DISPLAY LINE LOCATION.
         TM    MODESW2,AUTH      APF AUTHORIZED?
         BZ    GIVEHLPB          NO, OTHER SUBCOMMAND IS NOT ALLOWED.
         L     R15,ATHTBADR      POINT TO FEATURE AUTHORIZATION TABLE.
         MVC   OPTNATR,C'V'-C' '(R15)  COPY CUSTOMIZABLE BYTE.
         NI    OPTNATR,X'F8'     RESET INVALID BITS.
         OC    OPTNATR,COPYATR1  TURN ON THIS USER'S BITS.
         TM    OPTNATR,X'FA'     SUITABLY AUTHORIZED?
         BNO   GIVEHLPB          NO, INVALID.
         LA    R9,REDOLLAF       POINT TO LLA FETCH DISPLAY ROUTINE.
         USING REDOLLAF,R9
         L     R4,BLLAADDR       YES, POINT TO LLA REPOSITORY.
         L     R1,PSATOLD        POINT TO THE CURRENT TCB.
         L     R1,12(,R1)        POINT TO THE TIOT JOB NAME.
         USING IMLLBASE,R4
         CLI   INCHARS,C'M'      SET PROGRAM NAME SELECTION MASK?
         BE    BFETPGMM          YES.
         CLI   INCHARS,C'J'      SET JOB NAME SELECTION MASK?
         BE    BFETJOBM          YES.
         CLI   INCHARS,C'C'      COLLECT DATA?
         BE    BFETCOLL          YES.
         CLI   INCHARS,C'R'      RESET DATA?
         BE    BFETRSET          YES.
         CLI   INCHARS,C'P'      PREVENT DATA COLLECTION?
         BNE   GIVEHLPB          NO, INVALID.
         MVC   BFPREVJB,0(R1)    YES, SUPPLY USERID IN MESSAGE.
         MODESET MF=(E,MDSTSUP0) GET INTO KEY ZERO.
         CLI   IMLLID+7,C'1'     IS DATA COLLECTION ALREADY PREVENTED?
         BNE   BFPREVOK          YES, DO NO ACTION.
         MVI   IMLLID+7,C'0'     NO, PREVENT IT NOW.
         MVC   IMLLPUID,BFPREVJB SET USERID.
         STCK  IMLLPTIM          SET TIMESTAMP.
         WTO   MF=(E,BFWTO11)    ISSUE MESSAGE TO LOG.
BFPREVOK MODESET MF=(E,MDSTPROB) REVERT TO USER KEY.
         B     REDOBLDL
BFETCOLL MVC   BFCOLLJB,0(R1)    SUPPLY USERID IN MESSAGE.
         MODESET MF=(E,MDSTSUP0) GET INTO KEY ZERO.
         CLI   IMLLID+7,C'1'     IS DATA COLLECTION ALREADY ALLOWED?
         BE    BFCOLLOK          YES, DO NO ACTION.
         MVI   IMLLID+7,C'1'     NO, ALLOW IT NOW.
         MVC   IMLLSUID,BFPREVJB SET USERID.
         STCK  IMLLSTIM          SET TIMESTAMP.
         WTO   MF=(E,BFWTO12)    ISSUE MESSAGE TO LOG.
BFCOLLOK MODESET MF=(E,MDSTPROB) REVERT TO USER KEY.
         B     REDOBLDL
BFETRSET MVC   BFRSETJB,0(R1)    SUPPLY USERID IN MESSAGE.
         MVI   ENDDEPTH+1,1      ALLOW PF3/15 TO CANCEL THE REQUEST.
         LA    R0,BCONMSGL
         LA    R1,BCONFIRM
         BAS   R14,SCREENIO      CALL SCREEN I/O HANDLER.
         TM    MODESW2,XFLG      SUBROUTINE EXIT REQUIRED?
         BO    ISEXITB           YES, PERFORM TERMINATION.
         CLI   ENDDEPTH+1,0      REQUEST TO BE CANCELLED?
         BE    REDOBLDL          YES.
         CLI   INBUFF,13         WAS ENTER SELECTED?
         BNE   REDOBLDL          NO, ABORT APF LIBRARY LIST RESET.
         MODESET MF=(E,MDSTSUP0) GET INTO KEY ZERO.
         MVI   IMLLID+7,C'0'     PREVENT FURTHER DATA COLLECTION.
         STIMER WAIT,BINTVL=TEN  WAIT A TICK FOR UPDATES TO COMPLETE.
         XC    IMLLTABL(40),IMLLTABL    RESET INDEX POINTERS.
         XC    IMLLTBLI(168),IMLLTBLI
         XC    IMLLTBLJ(128),IMLLTBLJ
         XC    IMLLOSTP(20),IMLLOSTP    RESET EVENT COUNTERS.
         LA    R0,IMLLBSND
         ST    R0,IMLLHIGH              RESET NEXT ENTRY POINTER.
         MVI   IMLLID+7,C'1'     RESTART DATA COLLECTION.
         MVC   IMLLRUID,BFRSETJB SET USERID.
         STCK  IMLLRTIM          SET TIMESTAMP.
         WTO   MF=(E,BFWTO13)    ISSUE MESSAGE TO LOG.
         MODESET MF=(E,MDSTPROB) REVERT TO USER KEY.
         B     REDOBLDL
BFETPGMM MVC   BFPMSKJB,0(R1)    SUPPLY USERID IN MESSAGE.
         MVC   BFPGMMSK,IMLLPGMM ECHO PREVIOUS MASK.
         MVI   ENDDEPTH+1,1      ALLOW PF3/15 TO CANCEL THE REQUEST.
         LA    R0,BFPGMLEN       LOAD THE LENGTH OF THE DATA STREAM.
         LA    R1,BFPGMMSG       POINT TO PROMPTING MESSAGE.
         BAS   R14,SCREENIO      ISSUE PROMPT FOR PROGRAM NAME MASK.
         TM    MODESW2,XFLG      SUBROUTINE EXIT REQUIRED?
         BO    ISEXITB           YES, PERFORM TERMINATION.
         CLI   ENDDEPTH+1,0      REQUEST TO BE CANCELLED?
         BE    REDOBLDL          YES.
         CLI   INBUFF,13         ENTER?
         BNE   REDOBLDL          NO, CANCEL MASK UPDATE.
         MVC   BFPMSK,STARS
         LH    R15,TGETLEN       GET LENGTH OF INPUT STREAM.
         AHI   R15,-6            GET LENGTH OF TEXT.
         BNP   BFPMSKOK          HANDLE NULL INPUT.
         BCTR  R15,0             GET LENGTH CODE OF TEXT INPUT.
         EX    R15,BFPMSKLD      COMPLETE NEW PROGAM NAME MASK.
         CLC   IMLLPGMM,BFPMSK   ANY CHANGE IN MASK?
         BE    REDOBLDL          NO, SO NO UPDATE TO IMPLEMENT.
BFPMSKOK MODESET MF=(E,MDSTSUP0) GET INTO KEY ZERO.
         MVC   IMLLPGMM,BFPMSK   SET NEW PROGRAM NAME SELECTION MASK.
         MVC   IMLLMUID,BFPMSKJB SET USERID.
         STCK  IMLLMTIM          SET TIMESTAMP.
         WTO   MF=(E,BFWTO14)    ISSUE MESSAGE TO LOG.
         MODESET MF=(E,MDSTPROB) REVERT TO USER KEY.
         B     REDOBLDL
BFPMSKLD MVC   BFPMSK(0),INCHARS                <<< EXECUTED >>>
BFETJOBM MVC   BFJMSKJB,0(R1)    SUPPLY USERID IN MESSAGE.
         MVC   BFJOBMSK,IMLLJOBM ECHO PREVIOUS MASK.
         MVI   ENDDEPTH+1,1      ALLOW PF3/15 TO CANCEL THE REQUEST.
         LA    R0,BFJOBLEN       LOAD THE LENGTH OF THE DATA STREAM.
         LA    R1,BFJOBMSG       POINT TO PROMPTING MESSAGE.
         BAS   R14,SCREENIO      ISSUE PROMPT AND GET JOB NAME MASK.
         TM    MODESW2,XFLG      SUBROUTINE EXIT REQUIRED?
         BO    ISEXITB           YES, PERFORM TERMINATION.
         CLI   ENDDEPTH+1,0      REQUEST TO BE CANCELLED?
         BE    REDOBLDL          YES.
         CLI   INBUFF,13         ENTER?
         BNE   REDOBLDL          NO, CANCEL MASK UPDATE.
         MVC   BFJMSK,STARS
         LH    R15,TGETLEN       GET LENGTH OF INPUT STREAM.
         AHI   R15,-6            GET LENGTH OF TEXT.
         BNP   BFJMSKOK          HANDLE NULL INPUT.
         BCTR  R15,0             GET LENGTH CODE OF TEXT INPUT.
         EX    R15,BFJMSKLD      COMPLETE NEW PROGAM NAME MASK.
         CLC   IMLLJOBM,BFJMSK   ANY CHANGE IN MASK?
         BE    REDOBLDL          NO, SO NO UPDATE TO IMPLEMENT.
BFJMSKOK MODESET MF=(E,MDSTSUP0) GET INTO KEY ZERO.
         MVC   IMLLJOBM,BFJMSK   SET NEW PROGRAM NAME SELECTION MASK.
         MVC   IMLLJUID,BFJMSKJB SET USERID.
         STCK  IMLLJTIM          SET TIMESTAMP.
         WTO   MF=(E,BFWTO15)    ISSUE MESSAGE TO LOG.
         MODESET MF=(E,MDSTPROB) REVERT TO USER KEY.
         B     REDOBLDL
BFJMSKLD MVC   BFJMSK(0),INCHARS                <<< EXECUTED >>>
         DROP  R4                IMLLBASE.
BFLOCATE CLI   BSUBOPTN,C'F'     IN PROGRAM FETCH REPORT MODE?
         BNE   GIVEHLPB          NO, INVALID SUBCOMMAND.
         MVC   BFLOCPGM,INCHARS  YES, LOAD LOCATE DATA.
         CLI   INCHARS,C'L'      WAS IS AN I-MODULE?
         BNE   REDOBLDL          YES, UPDATE THE SCREEN.
         MVC   BFLOCPGM,INCHARS+1
         MVI   BFLOCPGM+1,0      NO, CORRECT THE LOCATE DATA.
         B     REDOBLDL          GO AND UPDATE THE SCREEN.
BILDDCB0 MVI   BLDLMODE,C'0'     UPDATE BLDL DCB FLAG.
         B     BPGMALSO          GO AND UPDATE THE SCREEN.
BILDDCBL MVI   BLDLMODE,C'L'     UPDATE BLDL DCB FLAG.
         B     BPGMALSO          GO AND UPDATE THE SCREEN.
BREFRESH MVI   BLLAFLAG,C'R'     UPDATE LLA REFRESH REQUEST FLAG.
BPGMALSO LA    R0,3              CHECK 3 BYTES FOR SBA.
         LA    R1,INCHARS        POINT TO FIRST BYTE TO CHECK.
BPGMSCAN CLI   0(R1),X'11'       FOUND AN SBA?
         BE    BLOADPGM          PROGRAM NAME SPECIFIED.
         LA    R1,1(,R1)         POINT TO THE NEXT BYTE TO CHECK.
         BCT   R0,BPGMSCAN       CONTINUE SEARCH.
         B     REDOBLDL          GO AND UPDATE THE SCREEN.
BLOADPGM MVC   BILDNAME,3(R1)    LOAD NEW PROGRAM NAME.
         B     REDOBLDL          GO AND UPDATE THE SCREEN.
BILDSRCH MVI   BSUBOPTN,C'B'     UPDATE SUB-OPTION NAME.
         MVI   INCHARS,C' '      CLEAR INPUT REQUEST.
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         LA    R1,1
         ST    R1,WINTOP         GO TO TOP FOR SEARCH RESULTS DISPLAY.
         DROP  R15               WNDWMNGR.
         CLI   INCHARS+1,C'$'    POSSIBLE PROGRAM NAME SUPPLIED?
         BL    BBSETSUF          NO, GO INSTALL DATA STREAM SUFFIX.
         MVC   BILDNAME,INCHARS+1    LOAD IT.
         B     BBSETSUF          GO INSTALL DATA STREAM SUFFIX.
BPGMFECH MVI   BSUBOPTN,C'F'     UPDATE SUB-OPTION NAME.
         L     R1,CRNTOPTN       POINT TO CURRENT OPTION VECTOR.
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         MVI   9(R1),5           SET HEADING LINE COUNT.
         MVI   WINHDGCT+1,5      SET HEADING LINE COUNT.
         MVI   13(R1),BFLL       SET CORRECT LINE LENGTH.
         MVI   WINLNLEN+1,BFLL   SET CORRECT LINE LENGTH.
         MVI   WINSUFLN,X'FF'    NEGATE DATA STREAM SUFFIX LENGTH CODE.
         B     REDOBLDL          GO DISPLAY LLA STATISTICS.
         DROP  R15,R9            WNDWMNGR, REDOLLAF.
GIVEHLPB MVC   INBUFF(8),SBLST   REQUEST SUBCOMMAND LIST FROM TUTORIAL.
         MVI   TGETLEN+1,8       SUPPLY LENGTH OF INPUT TO PARSE.
         LNR   R0,R11            MAKE REGISTER 0 NEGATIVE FOR PARSE.
         B     GETSCRNB          GO DISPLAY HELP PANEL.
         SPACE
BADDLINE TR    LL-79(BFDL,R2),XLATETBL
BSPCLINE L     R15,CRNTOPTN      POINT TO CURRENT OPTION VECTOR.
         AH    R2,12(,R15)       ADJUST BUFFER POINTER.
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         LA    R0,1
         A     R0,WINLINES       INCREMENT LINE COUNTER.
         ST    R0,WINLINES
         MVC   0(2,R2),WINFULL   PREPARE FOR FULL WINDOW.
         C     R2,WINEND         SEE IF THE BUFFER IS FULL YET.
         BNL   PUTSCRNB          IF YES, THEN FORGET SUMMARY LINE.
         MVC   0(LL-79,R2),LOWX  SUPPLY ATTRIBUTE BYTES.
         MVI   LL-79(R2),C' '    BLANK A LINE.
         MVC   LL-78(BFDL-1,R2),LL-79(R2)
         BR    R14
         DROP  R15               WNDWMNGR.
         SPACE
B6HEXFIX TR    0(6,R15),HEX-C'0' MAKE DISPLAYABLE HEX DIGITS.
         MVI   6(R15),C' '       ERASE GARBAGE.
         LA    R0,5              GET MAXIMUM LEADING ZERO COUNT.
B6HXFXLP CLI   0(R15),C'0'       LEADING ZERO?
         BNER  R14               NO, RETURN.
         MVC   0(6,R15),1(R15)   YES, SUPPRESS IT.
         BCT   R0,B6HXFXLP       CONTINUE.
         BR    R14               FIVE ZEROS NOW SUPPRESSED.
         TITLE 'BLDL AND LPA SEARCHER - VARIABLES AND CONSTANTS'
         CSVQUERY PLISTVER=MAX,MF=(L,BQ) CSVQUERY MACRO PARAMETER LIST.
BLLALIST LLACOPY MF=(L,BL)       LLACOPY MACRO PARAMETER LIST.
BBLNKDCB DC    A(0)              ADDRESS OF CURRENT LINK LIST DCB.
BBLNKLLT DC    A(0)              ADDRESS OF CURRENT LINK LIST TABLE.
TTRKSAVE DC    F'0'              SAVED TTRK FROM PREVIOUS BLDL.
BLDLIST  DS    0F                BLDL PARAMETER LIST.
BLDLFF   DC    H'1'              ONE ENTRY IN BUILD LIST.
BLDLLL   DC    H'76'             CATER FOR MAXIMUM USER DATA LENGTH.
BLDLNAME DC    CL8' '            LINK LIST LOAD MODULE NAME.
BLDLTT   DC    XL2'0000'         RELATIVE TRACK OF MEMBER START.
BLDLR    DC    XL1'00'           FIRST RECORD NUMBER (0 FOR NOT FOUND).
BLDLK    DC    XL1'00'           CONCATENATION CODE.
BLDLZ    DC    XL1'00'           LOCATION CODE.
BLDLC    DC    XL1'00'           ALIAS FLAG + USERDATA HALFWORD COUNT.
BLDLUSER DC    XL62'00'          USERDATA AREA.
         ORG   BLDLNAME
         IHAPDS PDSBLDL=YES,DSECT=NO
         ORG   BLDLUSER+62
BFLOCPGM DC    XL2'0000'         PROGRAM LOCATE REQUEST DETAILS.
BQATTAB  DC    H'8',CL8'EOM-DEL '
         DC    H'7',CL8'GLOBAL  '
         DC    H'5',CL8'RENT    '
         DC    H'5',CL8'REUS    '
         DC    H'9',CL8'ONLYLOAD'
         DC    H'8',CL8'OVERLAY '
         DC    H'6',CL8'ALIAS   '
         DC    H'7',CL8'AT1-01  '
         DC    H'8',CL8'AUTHLIB '
         DC    H'5',CL8'AC=1    '
         DC    H'9',CL8'AMODEANY'
         DC    H'8',CL8'AMODE31 '
         DC    H'5',CL8'RTLS    '
         DC    H'5',CL8'DLPA    '
         DC    H'9',CL8'PAGEPROT'
         DC    H'8',CL8'AMODE64 '
         DC    H'8',CL8'RMODE31 '
         DC    H'4',CL8'JPA     '
         DC    H'5',CL8'PLPA    '
         DC    H'5',CL8'MLPA    '
         DC    H'5',CL8'FLPA    '
         DC    H'4',CL8'CSA     '
         DC    H'7',CL8'AT3-02  '
         DC    H'7',CL8'AT3-01  '
BLDLMODE DC    C'0'              BLDL DCB FLAG.
BLLAFLAG DC    C'0'              LLACOPY REQUEST FLAG.
BSUBOPTN DC    C'B'              SUB-OPTION DISPLAY FLAG.
BEPEQ    DC    C'ENTRY-POINT='
BEXAD    DC    C'EXTENT-ADDR='
BLDLHDG  DC    C'BLDL RESULTS (DCB=0)  -  RETURN CODE=X''??''  REASON C+
               ODE=X''??'''
HEADINGB DC    CL79'                  LINK LIST AND LINK PACK AREA PROG+
               RAM LOOK-UP                 '
NOLLAMSG DC    CL79' PROGRAM FETCH STATISTICS CANNOT BE SHOWN BECAUSE T+
               HEY ARE NOT BEING COLLECTED '
PGMFUDGE DCS   SBA,(4,54),X'1B',UNPHI,X'4E',IC,SA,HILITE,USCORE
         DCS   SA,COLOUR,YELLOW
BILDNAME DC    XL8'00'           LOAD MODULE TO BE SEARCHED FOR.
         DCS   X'1B',PROHI,X'C2'
PGMFIXLN EQU   *-PGMFUDGE
         SPACE
         LTORG
         SPACE
BLDEXLST DC    F'0'
BLDLDCB  DCB   DSORG=PO,DDNAME=STEPLIB,MACRF=(R),EXLST=BLDEXLST
         TITLE 'BROWSE PROGRAM OR DIRECTORY ELEMENT ZOOM SUBROUTINE'
         USING BPGMZOOM,R9
BPGMZOOM CLI   INCHARS,C' '      NULL INPUT?
         BNER  R14               NO, RETURN TO PROCESS SUBCOMMAND.
         CLI   BSUBOPTN,C'B'     PROGRAM SEARCH DISPLAY?
         BNE   REDOBLDL          NO, DO NOT PERFORM ZOOM PROCESSING.
         SLR   R0,R0
         ICM   R0,1,INBUFF+1     GET THE CURSOR ROW NUMBER.
         BZ    REDOBLDL          CURSOR ON HEADING LINE.
         BCTR  R0,0
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         A     R0,WINTOP         GET DETAIL LINE NUMBER.
         C     R0,WINLINES       BEFORE SUMMARY LINE?
         BNL   REDOBLDL          NO, CURSOR PAST END OF DISPLAY.
         BCTR  R0,0              GET THE RELATIVE LINE NUMBER.
         LA    R1,LL             GET THE LINE LENGTH.
         MR    R0,R0             GET OFFSET INTO DISPLAY.
         A     R1,WINBUFF        POINT TO THE DISPLAY LINE.
         DROP  R15               WNDWMNGR.
         LA    R15,LL-23(,R1)    POINT TO POSSIBLE ENTRY POINT.
         CLC   BEPEQ,LL-35(R1)   ENTRY POINT AVAILABLE?
         BE    BGOTZOOM          YES.
         LA    R15,LL-58(,R1)    POINT TO POSSIBLE EXTENT ADDRESS.
         CLC   BEXAD,LL-70(R1)   EXTENT ADDRESS AVAILABLE?
         BNE   REDOBLDL          NO, NOT A ZOOMABLE LINE.
BGOTZOOM MVC   INBUFF(9),BZMSTR  SUPPLY THE ZOOM COMMAND STRING.
         MVC   INBUFF+9(8),0(R15)  LOAD BROWSE ADDRESS.
         MVI   TGETLEN+1,17      SUPPLY "INPUT" DATA LENGTH.
         LNR   R0,R11            MAKE REGISTER 0 NEGATIVE FOR PARSE.
         CLI   INBUFF+9,C'0'     LEADING DECIMAL DIGIT?
         BNL   GETSCRNB          YES, PROCEED.
         TR    INBUFF+9(1),BSIGNOFF-C'A'   RESET SIGN BIT.
         B     GETSCRNB          ZOOM TO OPTION "VB".
         DROP  R9                BPGMZOOM.
         SPACE
BSIGNOFF DC    C'234567'         TOP HEX DIGITS FOR POSITIVE NUMBER.
BZMSTR   DC    X'7D40C11140C1'   READ HEADER FOR ZOOM.
         DC    C'=VB'            CHARACTER STRING FOR ZOOM.
         TITLE 'LLA PROGRAM FETCH STATISTICS DISPLAY SUBROUTINE'
         USING REDOLLAF,R9
REDOLLAF ICM   R4,15,BLLAADDR    KNOW THE LLA REPOSITORY ADDRESS?
         BNZ   BFBASEOK          YES, USE IT.
         L     R3,CVTPTR(,0)     POINT TO THE CVT.
         L     R3,CVTGDA-CVT(,R3) POINT TO THE GLOBAL DATA AREA.
         L     R3,136(,R3)       POINT TO THE CSA SUBPOOL TABLE.
         LA    R3,1172(,R3)      POINT TO SP=241,KEY=0,LOC=ANY ENTRY.
         TM    OSLEVEL+2,CVTH7703  OS/390 R10 OR LATER?
         BNO   *+8               NO, SKIP R10 CODE.
         LA    R3,1948-1172(,R3) POINT TO SP=241,KEY=0,LOC=ANY ENTRY.
         LR    R1,R3             COPY ENTRY ADDRESS.
BNEXTDQE L     R1,0(,R1)         POINT TO DQE.
         CR    R1,R3             END OF CHAIN?
         BE    BNOFETCH          YES, LLA REPOSITORY NOT FOUND.
         CLC   BLLASIZE,20(R1)   APPROPRIATE STORAGE SIZE?.
         BH    BNEXTDQE          NO, LOOK AT THE NEXT DQE.
         L     R4,16(,R1)        LOAD STORAGE BLOCK ADDRESS.
         CLC   0(7,R4),=C'IMONLIX1'  FOUND LLA REPOSITORY?
         BNE   BNEXTDQE          NO, LOOK AT THE NEXT DQE.
         ST    R4,BLLAADDR           SAVE THE ADDRESS.
         USING IMLLBASE,R4
BFBASEOK LA    R5,IMLLINIT       POINT TO INITIALIZATION TIMESTAMP.
         CLC   IMLLINIT,IMLLRTIM HAS A RESET BEEN DONE?
         BH    BFTIMEOK          NO, USE CREATION TIME.
         LA    R5,IMLLRTIM       YES, USE RESET TIME.
BFTIMEOK STCKCONV STCKVAL=(R5),      SPECIFY INPUT STCK VALUE.         +
               CONVVAL=SECRB,        POINT TO OUTPUT FOUR WORDS.       +
               TIMETYPE=DEC,         GET DECIMAL TIME (DEFAULT).       +
               DATETYPE=YYYYMMDD,    SPECIFY DATE FORMAT.              +
               MF=(E,STCKCNVL)       SPECIFY MACRO PARAMETER LIST.
         UNPK  BFSDATE(5),SECRB+8(3)     GET YYYY.
         MVI   BFSDATE+4,C'-'
         UNPK  BFSDATE+5(3),SECRB+10(2)  GET MM.
         MVI   BFSDATE+7,C'-'
         UNPK  BFSDATE+8(3),SECRB+11(2)  GET DD.
         MVI   BFSDATE+10,C' '
         UNPK  BFSTIME(3),SECRB(2)       GET HH.
         MVI   BFSTIME+2,C':'
         UNPK  BFSTIME+3(3),SECRB+1(2)   GET MM.
         MVI   BFSTIME+5,C':'
         UNPK  BFSTIME+6(3),SECRB+2(2)   GET SS.
         MVC   BFSPGMCT,ED7      LOAD EDIT MASK.
         L     R0,IMLLPGMS       GET CAPTURED PROGRAM COUNT.
         CVD   R0,WORK           SHOW IT.
         ED    BFSPGMCT,WORK+4
         MVI   LL-79(R2),C' '    BLANK A LINE.
         MVC   LL-78(BFDL-1,R2),LL-79(R2)
         MVC   LL-79(79,R2),BFSHEAD1     LOAD DISPLAYABLE HEADING.
         MVI   0(R2),X'FF'       INDICATE NON-SCROLLABLE LINE.
         BAS   R14,BADDLINE      LINE NOW COMPLETE.
         L     R1,CRNTOPTN       POINT TO CURRENT OPTION VECTOR.
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         MVI   9(R1),5           SET HEADING LINE COUNT.
         MVI   WINHDGCT+1,5      SET HEADING LINE COUNT.
         CLC   IMLLRTIM,IMLLPTIM RESET LATER THAN STOP?
         BNL   BFSUSPOK          YES, SUSPENSION NOW IRRELEVANT.
         MVC   0(LL-79,R2),HIGHX NO, SHOW SUSPENSION STUFF IN HIGH.
         MVI   LL-80(R2),X'F2'   SHOW SUSPENSION STUFF IN RED.  (I3279)
         CLI   IMLLID+7,C'1'     IS COLLECTION CURRENTLY ACTIVE?
         BE    BFSTATOK          YES.
         MVI   2(R2),X'F2'       NO, SHOW THIS WITH REVERSE.    (I3279)
BFSTATOK MVI   0(R2),X'FF'       INDICATE NON-SCROLLABLE LINE.
         MVI   9(R1),6           SET HEADING LINE COUNT.
         MVI   WINHDGCT+1,6      SET HEADING LINE COUNT.
         DROP  R15               WNDWMNGR.
         MVC   LL-78(9,R2),=C'SUSPENDED'
         MVC   WORK,IMLLPTIM     DISPLAY SUSPEND TIME.
         LA    R6,LL-68(,R2)
         BAS   R7,BFDATIME
         MVC   LL-53(4,R2),=C' BY '
         MVC   LL-49(8,R2),IMLLPUID
         CLI   IMLLSUID,0        ANY STARTING USERID?
         BE    BFSUSPDN          NO, EXTRA LINE NOW COMPLETE.
         MVC   LL-38(9,R2),=C'RESTARTED'
         MVC   WORK,IMLLSTIM     DISPLAY SUSPEND TIME.
         LA    R6,LL-28(,R2)
         BAS   R7,BFDATIME
         MVC   LL-13(4,R2),=C' BY '
         MVC   LL-9(8,R2),IMLLSUID
BFSUSPDN BAS   R14,BADDLINE      LINE NOW COMPLETE.
BFSUSPOK L     R3,IMLLOSTP       GET LOST PGM FETCH COUNT.
         L     R5,IMLLOSTL       GET LOST LLA FETCH COUNT.
         L     R6,IMLLPGMF       GET CAPTURED PGM FETCH COUNT.
         L     R7,IMLLLLAF       GET CAPTURED LLA FETCH COUNT.
         LR    R0,R5             SHOW LLA LOST FETCH COUNT.
         LA    R15,BFLLALST
         BAS   R14,BF9NUM
         AR    R0,R3             SHOW TOTAL LOST FETCH COUNT.
         LA    R15,BFTOTLST
         BAS   R14,BF9NUM
         LR    R0,R7             SHOW LLA CAPTURED FETCH COUNT.
         LA    R15,BFLLACAP
         BAS   R14,BF9NUM
         AR    R0,R6             SHOW TOTAL CAPTURED FETCH COUNT.
         LA    R15,BFTOTCAP
         BAS   R14,BF9NUM
         LR    R0,R5             SHOW LLA TOTAL FETCH COUNT.
         AR    R0,R7
         LA    R15,BFLLATOT
         BAS   R14,BF9NUM
         AR    R0,R3             SHOW GRAND TOTAL FETCH COUNT.
         AR    R0,R6
         LA    R15,BFTOTTOT
         BAS   R14,BF9NUM
         MVC   0(LL-79,R2),MEDX  LOAD LINE ATTRIBUTES.
         MVI   0(R2),X'FF'       INDICATE NON-SCROLLABLE LINE.
         MVC   LL-79(79,R2),BFSHEAD2
         BAS   R14,BADDLINE      LINE NOW COMPLETE.
         MVC   0(LL-79,R2),MEDX  LOAD LINE ATTRIBUTES.
         MVI   2(R2),X'F4'       UNDERSCORE FOR TOP OF TABLE.   (I3279)
         MVI   0(R2),X'FF'       INDICATE NON-SCROLLABLE LINE.
         MVC   LL-79(79,R2),BFSHEAD3
         BAS   R14,BADDLINE      LINE NOW COMPLETE.
         MVI   XLATETBL+C'|',X'3B'
         MVC   0(LL-79,R2),HIGHX LOAD LINE ATTRIBUTES.
         MVC   LL-79(BFDL,R2),BFDHEAD1
         BAS   R14,BADDLINE      LINE NOW COMPLETE.
         MVC   0(LL-79,R2),HIGHX LOAD LINE ATTRIBUTES.
         MVI   2(R2),X'F4'       UNDERSCORE TABLE HEADINGS.     (I3279)
         MVC   LL-79(BFDL,R2),BFDHEAD2
         BAS   R14,BADDLINE      LINE NOW COMPLETE.
         MVI   XLATETBL+C'|',C'|'
         SPACE
         MVI   XLATETBL+X'3B',X'3B'
         LA    R8,84             GET NUMBER OF CHAIN ORIGINS.
         LA    R3,IMLLTABL       POINT TO ENTRY CHAIN ORIGIN TABLE.
         USING BFLINE,R2
         USING IMLLNTRY,R5
BFNXTCHN LR    R5,R3             POINT TO ADDRESS OF FIRST ENTRY.
BFNXTPGM ICM   R5,15,IMLLNEXT    POINT TO NEXT ENTRY IN CHAIN.
         BZ    BFENDCHN          ADDRESS IS ZERO SO END OF CHAIN.
         MVC   BFPROG,IMLLPROG   LOAD PROGRAM NAME.
         UNPK  BFSTOR+1(7),IMLLSTOR(4)
         TR    BFSTOR+1(6),HEX-C'0'
         LA    R6,BFSTOR+1       SUPPRESS LEADING ZEROS.
BFSTR0LP CLI   0(R6),C'0'
         BNE   BFSTR0OK
         MVI   0(R6),C' '
         LA    R6,1(,R6)
         B     BFSTR0LP
BFSTR0OK LM    R6,R7,IMLLFECH    DISPLAY LATEST FETCH TIME.
         STM   R6,R7,WORK
         TM    WORK+7,X'01'      LOW-ORDER BIT ON?
         BZ    BFATTROK          NO, NORMAL PROGRAM FETCH FLAGGED.
         MVI   4(R2),X'F8'       YES, HIGH INTENSITY FOR LLA FETCH.
         MVI   LL-80(R2),X'F7'   WHITE FOR LLA FETCH.           (I3279)
BFATTROK SRDL  R6,12
         CVD   R7,WORK
         MVC   BFLAST,=X'40202021204B202020'
         ED    BFLAST,WORK+4
         ICM   R0,15,IMLPFCNT    DISPLAY DASD PROGRAM FETCH COUNT.
         BZ    BFNOPGMF
         CVD   R0,WORK
         MVC   BFPCNT,ED7
         ED    BFPCNT,WORK+4
         LM    R6,R7,IMLPFCUM    DISPLAY DASD AVERAGE FETCH TIME.
         SRDL  R6,12
         DR    R6,R0
         CVD   R7,WORK
         MVC   BFPAVG,=X'40202021204B202020'
         ED    BFPAVG,WORK+4
BFNOPGMF ICM   R0,15,IMLLACNT    DISPLAY LLA PROGRAM FETCH COUNT.
         BZ    BFNOLLAF
         CVD   R0,WORK
         MVC   BFLCNT,ED7
         ED    BFLCNT,WORK+4
         LM    R6,R7,IMLLACUM    DISPLAY LLA AVERAGE FETCH TIME.
         SRDL  R6,12
         DR    R6,R0
         CVD   R7,WORK
         MVC   BFLAVG,=X'40202021204B202020'
         ED    BFLAVG,WORK+4
BFNOLLAF MVC   WORK,IMLLTIME     DISPLAY LATEST FETCH TIMESTAMP.
         LA    R6,BFLDATE
         BAS   R7,BFDATIME
         MVC   BFLJOB,IMLLJOBN   DISPLAY LATEST FETCH JOB NAME
         UNPK  BFLASID(5),IMLLASID(3)                 AND ASID.
         TR    BFLASID,HEX-C'0'
         MVC   WORK,IMLFTIME     DISPLAY FIRST FETCH TIMESTAMP.
         LA    R6,BFFDATE
         BAS   R7,BFDATIME
         MVC   BFFJOB,IMLFJOBN   DISPLAY FIRST FETCH JOB NAME
         UNPK  BFFASID(5),IMLFASID(3)                AND ASID.
         TR    BFFASID,HEX-C'0'
         SLR   R0,R0
         IC    R0,IMLLCNCT       DISPLAY CONCATENATION CODE.
         CVD   R0,WORK
         MVC   BFCNCT,ED3
         ED    BFCNCT,WORK+6
         IC    R0,IMLLLOCN       DISPLAY LOCATION CODE.
         CVD   R0,WORK
         MVC   BFLOCN,ED3
         ED    BFLOCN,WORK+6
         MVC   BFFO,=C'DC'         DOWNWARD COMPATIBLE.
         TM    IMLLATR2,IMLLFLVL
         BZ    *+10
         MVC   BFFO,=C'FO'         F-LEVEL LINKAGE EDITOR ONLY.
         TM    IMLLATR1,IMLLEXEC
         BO    *+10
         MVC   BFNX,=C'NX'         NOT EXECUTABLE.
         TM    IMLLATR1,IMLLLOAD
         BZ    *+10
         MVC   BFOL,=C'OL'         ONLY LOADABLE.
         TM    IMLLATR1,IMLLOVLY
         BZ    *+10
         MVC   BFOV,=C'OV'         OVERLAY STRUCTURE.
         TM    IMLLATR2,IMLLREFR
         BZ    *+10
         MVC   BFRF,=C'RF'         REFRESHABLE.
         TM    IMLLATR1,IMLLRENT
         BZ    *+10
         MVC   BFRN,=C'RN'         REENTERABLE.
         TM    IMLLATR1,IMLLRENT
         BZ    *+10
         MVC   BFRU,=C'RU'         REUSABLE.
         TM    IMLLATR1,IMLLSCTR
         BZ    *+10
         MVC   BFSC,=C'SC'         SCATTER FORMAT.
         TM    IMLLATR2,IMLLTSTN
         BZ    *+10
         MVC   BFTS,=C'TS'         TEST SYMBOL CARDS.
         IC    R1,IMLLATR3         DISPLAY ADDRESS MODE.
         TM    IMLLTTRN+3,X'80'    ALIAS?
         BZ    *+8                 NO.
         SRL   R1,2                YES, REPORT AMODE OF ALIAS.
         STC   R1,WORK
         TM    WORK,X'03'
         BZ    BFAMODOK
         BO    BFAMODNE
         MVC   BFAMOD+1(2),=C'24'
         TM    WORK,X'01'
         BO    BFAMODOK
         MVC   BFAMOD+1(2),=C'31'
         B     BFAMODOK
BFAMODNE MVC   BFAMOD(3),=C'ANY'
BFAMODOK MVC   BFRMOD+1(2),=C'24'  DISPLAY RESIDENCE MODE.
         TM    IMLLATR3,IMLLRMOD
         BZ    *+10
         MVC   BFRMOD(3),=C'ANY'
         MVC   BFDSET,IMLLDSET   LOAD DATA SET NAME CONTAINING PROGRAM.
         MVI   BFSEP01,X'3B'     SUPPLY COLUMN DELINEATORS.
         MVI   BFSEP02,X'3B'
         MVI   BFSEP03,X'3B'
         MVI   BFSEP04,X'3B'
         MVI   BFSEP05,X'3B'
         MVI   BFSEP06,X'3B'
         MVI   BFSEP07,X'3B'
         MVI   BFSEP08,X'3B'
         MVI   BFSEP09,X'3B'
         MVI   BFSEP10,X'3B'
         MVI   BFSEP11,X'3B'
         MVI   BFSEP12,X'3B'
         MVI   BFSEP13,X'3B'
         MVI   BFSEP14,X'3B'
         MVI   BFSEP15,X'3B'
         MVI   BFSEP16,X'3B'
         MVI   BFSEP17,X'3B'
         MVI   BFSEP18,X'3B'
         MVI   BFSEP19,X'3B'
         MVI   BFSEP20,X'3B'
         BAS   R14,BADDLINE      LINE NOW COMPLETE.
         CLI   BFLOCPGM,0        ANY LOCATE REQUEST?
         BE    BFNXTPGM          NO, LOOK FOR NEXT ENTRY ON THE CHAIN.
         L     R15,WINMANAD      YES, POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         L     R0,WINLINES       GET THE CURRENT LINE NUMBER.
         SH    R0,WINHDGCT       ACCOUNT FOR FIXED HEADING LINES.
         ST    R0,WINTOP         MAKE THIS LINE THE NEW TOP LINE.
         CLC   BFLOCPGM,IMLLPROG UP TO REQUESTED SPOT YET?
         BH    BFNXTPGM          NO, LOOK FOR NEXT ENTRY ON THE CHAIN.
         MVI   BFLOCPGM,0        YES, CLEAR PENDING LOCATE REQUEST.
         B     BFNXTPGM          LOOK FOR NEXT ENTRY ON THE CHAIN.
         DROP  R15               WNDWMNGR.
BFENDCHN LA    R3,4(,R3)         POINT TO NEXT CHAIN ORIGIN SLOT.
         BCT   R8,BFNXTCHN       LOOK FOR NEXT CHAIN TO FOLLOW.
         DROP  R2,R5             BFLINE, IMLLNTRY.
         MVI   BFLOCPGM,0        CLEAR PENDING LOCATE REQUEST.
         LR    R1,R2             POINT PAST LATEST LINE.
         L     R15,CRNTOPTN      POINT TO CURRENT OPTION VECTOR.
         SH    R1,12(,R15)       POINT TO LATEST LINE.
         MVI   2(R1),X'F4'       UNDERSCORE FOR LAST LINE.      (I3279)
         BAS   R14,BFTRLRLN      PREPARE A TRAILER LINE.
         MVC   LL-78(34,R2),=C'PROGRAM NAME EVENT COLLECTION MASK'
         MVC   LL-42(8,R2),IMLLPGMM
         CLI   IMLLMUID,0
         BE    BFMSETOK
         MVC   LL-32(3,R2),=C'SET'
         MVC   WORK,IMLLMTIM
         LA    R6,LL-28(,R2)
         BAS   R7,BFDATIME
         MVC   LL-13(4,R2),=C' BY '
         MVC   LL-9(8,R2),IMLLMUID
BFMSETOK BAS   R14,BADDLINE      LINE NOW COMPLETE.
         BAS   R14,BFTRLRLN      PREPARE A TRAILER LINE.
         MVC   LL-74(30,R2),=C'JOB NAME EVENT COLLECTION MASK'
         MVC   LL-42(8,R2),IMLLJOBM
         CLI   IMLLJUID,0
         BE    BFJSETOK
         MVC   LL-32(3,R2),=C'SET'
         MVC   WORK,IMLLJTIM
         LA    R6,LL-28(,R2)
         BAS   R7,BFDATIME
         MVC   LL-13(4,R2),=C' BY '
         MVC   LL-9(8,R2),IMLLJUID
BFJSETOK BAS   R14,BADDLINE      LINE NOW COMPLETE.
         B     BSHOWSUM          COMPLETE DISPLAY WITH SYSTEM SUMMARY.
         DROP  R4                IMLLBASE.
         SPACE
BNOFETCH MVI   INCHARS,C' '      CLEAR INPUT REQUEST.
         MVI   BSUBOPTN,C'!'     FLAG FETCH REPOSITORY NOT FOUND.
         B     BBSETSUF          REVERT TO SUBOPTION 'B'.
         SPACE
BFTRLRLN MVC   0(LL-79,R2),MEDX  SET LINE ATTRIBUTES.
         MVI   0(R2),X'FF'       INDICATE NON-SCROLLABLE LINE.
         BR    R14               TRAILER LINE NOW PREPARED.
         SPACE
BF9NUM   DS    0H                DISPLAY A NUMBER UP TO 9 DIGITS.
         MVC   1(9,R15),ED11+3   LOAD EDIT MASK.
         CVD   R0,WORK           GET DECIMAL NUMBER.
         ED    0(10,R15),WORK+3  SHOW NUMBER.
         BR    R14               RETURN TO CALLER.
         SPACE
BFDATIME DS    0H                CONVERT STCK TO YYMMDD HH:MM:SS.
         STCKCONV STCKVAL=WORK,      SPECIFY INPUT STCK VALUE.         +
               CONVVAL=SECRB,        POINT TO OUTPUT FOUR WORDS.       +
               TIMETYPE=DEC,         GET DECIMAL TIME (DEFAULT).       +
               DATETYPE=YYYYMMDD,    SPECIFY DATE FORMAT.              +
               MF=(E,STCKCNVL)       SPECIFY MACRO PARAMETER LIST.
         UNPK  0(7,R6),SECRB+9(4)    GET YYMMDD.
         MVI   6(R6),C' '
         UNPK  7(3,R6),SECRB(2)      GET HH.
         MVI   9(R6),C':'
         UNPK  10(3,R6),SECRB+1(2)   GET MM.
         MVI   12(R6),C':'
         UNPK  13(3,R6),SECRB+2(2)   GET SS.
         MVI   15(R6),C'.'
         UNPK  16(3,R6),SECRB+3(2)   GET TH.
         BR    R7                RETURN TO CALLER.
         SPACE
         DROP  R11,R10,R9        BILDLIST, REDOLLAF.
         TITLE 'LLA FETCH STATISTICS DISPLAY - VARIABLES AND CONSTANTS'
BLLASIZE DC    A(16*4096)        MINIMUM LLA REPOSITORY SIZE.
BLLAADDR DC    A(0)              ADDRESS OF LLA REPOSITORY.
BFSHEAD1 DC    CL79'LLA-MANAGED LIBRARY FETCH STATISTICS SINCE YYYY-MM-+
               DD HH:MM:SS ####### PROGRAMS'
BFSDATE  EQU   BFSHEAD1+43,10
BFSTIME  EQU   BFSHEAD1+54,8
BFSPGMCT EQU   BFSHEAD1+62,8
BFSHEAD2 DC    CL79' TOTAL PROGRAM FETCHES: ######### CAPTURED + ######+
               ### LOST = ######### TOTAL  '
BFTOTCAP EQU   BFSHEAD2+23,10
BFTOTLST EQU   BFSHEAD2+44,10
BFTOTTOT EQU   BFSHEAD2+61,10
BFSHEAD3 DC    CL79'   LLA PROGRAM FETCHES: ######### CAPTURED + ######+
               ### LOST = ######### TOTAL  '
BFLLACAP EQU   BFSHEAD3+23,10
BFLLALST EQU   BFSHEAD3+44,10
BFLLATOT EQU   BFSHEAD3+61,10
BFDHEAD1 DC    C' PROGRAM|STORAGE| LATEST |_NON-LLA_FETCHES|___LLA_FETC+
               HES__|_DATA_FROM_LATEST_PROGRAM_FETCH_|DATA_FROM_FIRST_C+
               APTURED_PROGRAM_FETCH_INCLUDING_BLDL_FIELDS_AND_USERDATA+
               _FLAGS|DATA SET                                    '
BFDHEAD2 DC    C'  NAME  |  SIZE |MILLISEC|  COUNT|AVG-MSEC|  COUNT|AVG+
               -MSEC| DATE |TIME-OF-DAY|JOB-NAME|ASID| DATE |TIME-OF-DA+
               Y|JOB-NAME|ASID|CNCT|LOCN|FETCHED PROGRAM ATTRIBUTES|AMO+
               D|RMOD|NAME                                        '
*        DC    C'PROGNAME| XXXXXX|1234.567|1234567|1234.567|1234567|123
*              4.567|YYMMDD|HH:MM:SS.SS|JOB-NAME|ASID|YYMMDD|HH:MM:SS.S
*              S|JOB_NAME|ASID|CNCT|LOCN|FO NX OL OV RF RN RU SC TS|AMO
*              D|RMOD|11111111.22222222.33333333.44444444.55555555'
         SPACE
BFPGMMSG DC    X'C11140403C40400011C5C2&LOW'
         DC    C'ENTER FETCH MONITOR PROGRAM NAME MASK'
         DC    X'&MED',C'===>',X'1BC94E132841F4'
BFPGMMSK DC    CL8' '
         DC    X'2841001BF8C2114BD2&LOW'
         DC    C'(USE',X'&HIGH',C'PF3/15',X'&LOW'
         DC    C'TO CANCEL MASK CHANGE)'
         DC    X'11D1E3'
         DC    C'(USE',X'&HIGH',C'*',X'&LOW'
         DC    C'FOR NON-SPECIFIC PLACE-HOLDER CHARACTERS)'
BFPGMLEN EQU   *-BFPGMMSG
         SPACE
BFJOBMSG DC    X'C11140403C40400011C5C2&LOW'
         DC    C'ENTER FETCH MONITOR JOB NAME MASK'
         DC    X'&MED',C'===>',X'1BC94E132841F4'
BFJOBMSK DC    CL8' '
         DC    X'2841001BF8C2114BD2&LOW'
         DC    C'(USE',X'&HIGH',C'PF3/15',X'&LOW'
         DC    C'TO CANCEL MASK CHANGE)'
         DC    X'11D1E3'
         DC    C'(USE',X'&HIGH',C'*',X'&LOW'
         DC    C'FOR NON-SPECIFIC PLACE-HOLDER CHARACTERS)'
BFJOBLEN EQU   *-BFJOBMSG
         SPACE
BCONFIRM DC    X'C51140403C40400013'
         DCS   SBA,(6,1)
         DC    X'&LOW',C'SELECT'
         DC    X'&HIGH',C'ENTER',X'&LOW'
         DC    C'TO CONFIRM THE',X'&MED'
         DC    C'RESET AND LOSS',X'&LOW',C'OF ALL COLLECTED DATA.'
         DCS   SBA,(10,2)
         DC    C'SELECT',X'&HIGH',C'PF3/15',X'&LOW'
         DC    C'TO CANCEL THIS REQUEST.'
BCONMSGL EQU   *-BCONFIRM
         SPACE
BFWTO11  WTO   'PRYL11I IMON LLA FETCH MONITORING SUSPENDED BY 12345678+
               ',ROUTCDE=(2),MF=L
BFPREVJB EQU   BFWTO11+51,8
BFWTO12  WTO   'PRYL12I IMON LLA FETCH MONITORING RESTARTED BY 12345678+
               ',ROUTCDE=(2),MF=L
BFCOLLJB EQU   BFWTO12+51,8
BFWTO13  WTO   'PRYL13I IMON LLA FETCH MONITORING RESET BY 12345678',  +
               ROUTCDE=(2),MF=L
BFRSETJB EQU   BFWTO13+47,8
BFWTO14  WTO   'PRYL14I IMON LLA FETCH MONITORING PGM MASK ******** SET+
                BY 12345678',ROUTCDE=(2),MF=L
BFPMSK   EQU   BFWTO14+47,8
BFPMSKJB EQU   BFWTO14+63,8
BFWTO15  WTO   'PRYL15I IMON LLA FETCH MONITORING JOB MASK ******** SET+
                BY 12345678',ROUTCDE=(2),MF=L
BFJMSK   EQU   BFWTO15+47,8
BFJMSKJB EQU   BFWTO15+63,8
         SPACE
         LTORG
         SPACE
         DS    0H
