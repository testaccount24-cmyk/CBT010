*        COPYRIGHT (C) 1989  PRYCROFT SIX PTY LTD
         TITLE '3270 DATA STREAM GENERATOR'
*
*  THIS ROUTINE DYNAMICALLY ACQUIRES STORAGE, DYNAMICALLY GENERATES
*  THE OPTIMISED OUTPUT TERMINAL DATA STREAM (HOUSED IN SAID STORAGE),
*  SENDS THE DATA STREAM TO THE TERMINAL VIA A TPUT (IF RUNNING IN A
*  TSO USER ADDRESS SPACE) OR VIA A CALL TO EXCP3270, FREES THE
*  ACQUIRED STORAGE, AND RETURNS TO THE CALLER.
*
*  STRM3270 IS CALLED BY THE SCREEN I/O MANAGER SCRNIO.
*
*  ON ENTRY:   R0 = OUTPUT DATA LENGTH
*              R1 = OUTPUT DATA ADDRESS
*              R2 = RETURN ADDRESS
*             R12 = GLOBAL BASE
*
*  MENU3270 IS THE ENTRY POINT USED BY MAINMENU AFTER IT HAS ACQUIRED
*  STORAGE AND DYNAMICALLY LOADED AVAILABLE MENU OPTIONS INTO IT.
*
*  THE OUTPUT DATA TO BE PROCESSED AND OPTIMISED BY THIS ROUTINE MAY
*  CONTAIN (IN NO PARTICULAR ORDER):
*      (1) TEXT FOR DISPLAY;
*      (2) VALID ESCAPE CODES AND ORDERS (INCLUDING A VTAM WRITE
*          COMMAND) FOR BASIC 3270, EXTENDED 3270 AND FUJITSU F9526
*          TERMINALS;
*      (3) INTERNAL DISPLAY CODES TO BE INTERPRETED BY THIS ROUTINE.
*
*  THE OUTPUT DATA INPUT TO THIS ROUTINE REMAINS UNCHANGED.
*
*  THE OUTPUT DATA STREAM CREATED BY THIS ROUTINE MAY CONTAIN:
*      (1) A VTAM WRITE COMMAND, POSSIBLY PRECEDED BY AN ESCAPE;
*      (2) TEXT FOR DISPLAY;
*      (3) BASIC 3270 ORDERS;
*      (4) ORDERS OF ONE OF THE FOLLOWING TYPES:
*          (A) EXTENDED 3270 ORDERS INCLUDING GRAPHIC ESCAPE;
*          (B) EXTENDED FUJITSU F9526 ORDERS;
*          (C) EXTENDED FUJITSU F6680 ORDERS.
*
*  SUPPORTED INTERNAL DISPLAY CODES ARE:
*      (1) REVERSE VIDEO "CROSS HATCH" OF EACH COLOUR REQUESTED BY
*          CODE POINTS IN THE X'01' TO X'07' RANGE.  REVERSE VIDEO
*          BLANKS ARE USED WHEN THE TERMINAL DOES NOT SUPPORT
*          GRAPHIC ESCAPE.  VARIOUS KEYBOARD CHARACTERS ARE USED AS
*          SUPPLIED BY THE PRTXLATE TRANSLATE TABLE IF THE TERMINAL
*          DOES NOT SUPPORT EXTENDED COLOUR.
*      (2) NORMAL VIDEO "CROSS HATCH" OF EACH COLOUR REQUESTED BY
*          CODE POINTS IN THE X'09' TO X'0F' RANGE.  BLANKS ARE
*          USED WHEN THE TERMINAL DOES NOT SUPPORT GRAPHIC ESCAPE.
*          PERIODS ARE USED AS SUPPLIED BY THE PRTXLATE TRANSLATE
*          TABLE IF THE TERMINAL DOES NOT SUPPORT EXTENDED COLOUR.
*      (3) SUPERSCRIPT DECIMAL DIGITS REQUESTED BY CODE POINTS IN THE
*          X'30' TO X'39' RANGE.  NORMAL EBCDIC DECIMAL DIGITS ARE
*          USED WHEN THE TERMINAL DOES NOT SUPPORT GRAPHIC ESCAPE.
*          NOTE: "ATTRIBUTE PERCOLATION" IS SOMETIMES ENABLED WHERE
*          THE ATTRIBUTES OF THE PREVIOUS DISPLAY LOCATION CAN BE
*          INHERITED BY SUPERSCRIPT DIGITS.  THIS ALLOWS NUMBERS
*          TO BE SHOWN IN A GRAPH PLOT WITHOUT AFFECTING THE ACTUAL
*          PLOT DISPLAY.  THIS IS IMPLEMENTED FOR OPTION "G" (WHERE
*          THE GRAPHS ARE HORIZONTAL) BUT NOT FOR OPTION "U" (WHERE
*          THE GRAPHS ARE VERTICAL).
*      (4) CONTINUOUS HORIZONTAL LINE REQUESTED BY THE X'3A' CODE
*          POINT.  THE EBCDIC MINUS SIGN (X'60') IS USED WHEN THE
*          TERMINAL DOES NOT SUPPORT GRAPHIC ESCAPE.
*      (5) CONTINUOUS VERTICAL LINE REQUESTED BY THE X'3B' CODE
*          POINT.  THE EBCDIC OR SIGN (X'4F') IS USED WHEN THE
*          TERMINAL DOES NOT SUPPORT GRAPHIC ESCAPE.
*      (6) IMBEDDED COLOUR CHANGE TO EACH COLOUR REQUESTED BY CODE
*          POINTS IN THE X'21' TO X'27' RANGE.  THIS FEATURE WAS
*          ADDED TO ALLOW MORE THAN ONE COLOUR TO BE SHOWN ON A
*          SINGLE DISPLAY LINE.  THIS FEATURE IS ALSO USED TO CREATE
*          TAB-SELECTABLE "ZOOM" FIELDS.  AS AN SA ORDER WILL BE USED
*          TO EFFECT THE COLOUR CHANGE, THE SCREEN LOCATION WILL BE
*          OCCUPIED BY EITHER A BLANK (WHEN THE OPTION DOES NOT
*          POSSESS TAB-SELECTABLE FIELDS) OR A FIELD ATTRIBUTE BYTE
*          (WHEN THE OPTION CAN MAKE TAB-SELECTABLE FIELDS), THE
*          DECISION BEING MADE BY AN EXPLICIT CHECK FOR SPECIFIC
*          OPTIONS.  TAB-SELECTABLE FIELDS ARE CREATED BY OPTIONS
*          REQUESTING AN IMBEDDED COLOUR CHANGE TO GREEN, WHICH CAUSES
*          THE GENERATED FIELD ATTRIBUTE TO BE UNPROTECTED.  FIELD
*          ATTRIBUTES GENERATED BY REQUESTS FOR ALL SIX OTHER COLOURS
*          ARE PROTECTED NON-AUTOSKIP.
*
STRM3270 LR    R11,R0            SAVE ORIGINAL OUTPUT LENGTH.
         LR    R9,R1             SAVE ORIGINAL OUTPUT ADDRESS.
         LA    R0,2560
         SLL   R0,3              GET GETMAIN REQUIREMENTS (20K).
         LR    R6,R0             COPY STORAGE SIZE.
         GETMAIN RU,LV=(0),SP=SUBPOOL,LOC=(BELOW,ANY)
*  THE BRANCH TARGET OF THE GETMAIN MACRO ABOVE IS THE HIGHEST ADDRESS
*  IN THE PROGRAM THAT NEEDS TO BE COVERED BY THE GLOBAL BASE GPR12.
         LA    R1,0(,R1)         ENSURE ADDRESS FORMAT.
         ST    R6,0(,R1)         SAVE STORAGE SIZE.
         ST    R1,4(,R1)         SAVE STORAGE ADDRESS.
         LR    R4,R1             POINT TO GETMAINED AREA.
         LA    R11,0(R11,R9)     GET END ADDRESS OF ORIGINAL OUTPUT.
         BASR  R3,0
         USING MENU3270,R3
MENU3270 BCTR  R11,0             POINT TO LAST DATA STREAM BYTE.
         LA    R8,12(,R4)        POINT TO OUTPUT AREA.
         ST    R2,8(,R4)         SAVE RETURN ADDRESS.
         LA    R6,LINES          POINT TO SCREEN DIMENSIONS.
         NI    MODESW4,255-ALTO  RESET ALTS-WAS-SET FLAG.
         TM    MODESW,ALTS       WIDE SCREEN FORMAT REQUIRED?
         BNO   ALTSOKAY          NO.
         LA    R6,OLDSIZE        YES, POINT TO WIDE DIMENSIONS.
         OI    MODESW4,ALTO      REMEMBER ALTS WAS SET.
ALTSOKAY L     R2,0(,R6)
         MH    R2,6(,R6)         DETERMINE SCREEN SIZE.
         TM    MODESW,BTMP       NEED A CLEAR OR SIZE RESYNC?
         BNO   BTMPGONE          NO.
         MVI   STRMERAS,X'F1'    YES, ENSURE IT HAPPENS.
         NI    MODESW,255-BTMP   FLAG PROCESSED SO RESET IT.
BTMPGONE L     R6,FFFF           INITIAL SCREEN ADDRESS UNKNOWN.
         MVI   OLDHILIT,X'00'    USE DEFAULT FOR PREVIOUS HIGHLIGHTING.
         MVI   OLDCOLOR,X'00'    USE DEFAULT FOR PREVIOUS COLOUR.
         MVC   INTNLGRF(1),SACODE    LOAD CORRECT SA CODE VALUE.
         MVC   INTNLGRF+3(1),SACODE
         MVC   INTNLGRF+8(1),SACODE
         MVC   INTNLGRF+11(1),SACODE
         LA    R10,3
         CLI   0(R9),X'27'       LEADING ESCAPE?
         BNE   SCRNTESC          NO.
         CLI   1(R9),X'F5'       ERASE/WRITE?
         BE    STRMSVF5          YES.
         CLI   1(R9),X'7E'       TEST FOR ERASE/WRITE ALTERATE?
         BE    STRMSV7E          YES.
         B     COPYDATA          COPY ESCAPE, OP-CODE AND WCC.
SCRNTESC LA    R10,2
         CLI   0(R9),X'F1'       TEST FOR WRITE.
         BE    COPYDATA          COPY OP-CODE AND WCC.
         CLI   0(R9),X'F5'       TEST FOR ERASE/WRITE.
         BE    STRMSVF5          COPY OP-CODE AND WCC.
         CLI   0(R9),X'7E'       TEST FOR ERASE/WRITE ALTERATE.
         BE    STRMSV7E          COPY OP-CODE AND WCC.
         LA    R10,1
         TM    MODESW,ALTS       NEED WIDE SCREEN NOW?
         BO    STRMALTS          YES.
         CLI   OLDCOLS+3,80      USING A WIDE SCREEN?
         BH    STRMPRIM          YES, BUT NEED 80 COLUMNS NOW.
         CLI   STRMERAS,X'F5'    KNOWN SCREEN SIZE SETTING?
         BE    COPYDATA          YES, COPY WCC.
         CLI   STRMERAS,X'7E'    KNOWN SCREEN SIZE SETTING?
         BE    COPYDATA          YES, COPY WCC.
         CLI   LINES+3,24        80 COLUMNS, BUT MORE THAN 24 LINES?
         BH    STRMWIDE          YES, SET ALTERNATE SCREEN SIZE.
STRMPRIM CLI   STRMERAS,X'F5'    CURRENTLY USING PRIMARY SIZE?
         BE    COPYDATA          YES, COPY WCC.
         MVI   STRMERAS,X'F5'    NO, UPDATE SETTING.
         B     STRMSIZE          GO UPDATE SCREEN HARDWARE.
STRMALTS CLI   STRMERAS,X'7E'    CURRENTLY USING ALTERNATE SIZE?
         BE    COPYDATA          YES, COPY WCC.
STRMWIDE MVI   STRMERAS,X'7E'    NO, UPDATE SETTING.
STRMSIZE MVC   0(2,R8),STRMESCP  CHANGE SCREEN SIZE.
         LA    R8,2(,R8)         POINT PAST ESCAPE SEQUENCE.
         B     COPYDATA          COPY WCC.
STRMSVF5 MVI   STRMERAS,X'F5'
         B     COPYDATA
STRMSV7E MVI   STRMERAS,X'7E'
         B     COPYDATA
         SPACE
TESTORDR CLI   0(R9),X'13'       TEST FOR INSERT CURSOR.
         BE    HANDLEIC
         CLI   0(R9),X'1D'       TEST FOR START FIELD.
         BE    HANDL241
         CLI   0(R9),X'1B'       TEST FOR START FIELD EXTENDED (F9526).
         BE    HANDLSFE
         CLI   0(R9),X'11'       TEST FOR SET BUFFER ADDRESS.
         BE    UPDATADR
         CLI   0(R9),X'12'       TEST FOR ERASE UNPROTECTED.
         BE    UPDATADR
         CLI   0(R9),X'3C'       TEST FOR REPEAT TO ADDRESS.
         BE    UPDATADR
         CLI   0(R9),X'28'       TEST FOR SET ATTRIBUTE.
         BE    HANDLESA
         CLI   0(R9),X'29'       TEST FOR START FIELD EXTENDED.
         BE    HANDLEMF
         CLI   0(R9),X'2C'       TEST FOR MODIFY FIELD ATTRIBUTE.
         BE    HANDLEMF
         CLI   0(R9),X'0E'       TEST FOR SHIFT OUT.
         BE    HANDLESO
         CLI   0(R9),X'0F'       TEST FOR SHIFT IN.
         BE    HANDLESI
         CLI   0(R9),X'00'       TEST FOR NULL.
         BE    NOTORDER
         CLI   0(R9),X'08'       TEST FOR GRAPHICS ESCAPE.
         BE    HANDLEGE
         CLI   0(R9),X'10'       TEST FOR IMP INTERNAL GRAPHIC BYTE.
         BL    HANDLEGB
         SPACE
NOTORDER LA    R10,1             SET INCREMENT TO ONE.
         LR    R7,R9             SAVE ADDRESS OF FIRST CHARACTER.
TESTNEXT LA    R6,1(,R6)         INCREMENT SCREEN ADDRESS.
         BXH   R9,R10,ENDBUF     INCREMENT TO NEXT CHARACTER.
         CLI   0(R7),X'30'       NUMERIC SUPERSCRIPT REQUEST?
         BL    REPCHECK          NO, CHECK FOR CHARACTER REPITITION.
         CLI   0(R7),X'3B'       NUMERIC SUPERSCRIPT REQUEST?
         BNH   ENDBUF            YES, PROCESS IT BYTE BY BYTE.
REPCHECK CLC   0(1,R7),0(R9)     SEE IF SAME CHARACTER.
         BE    TESTNEXT          IF SAME THEN LOOP.
         SPACE
ENDBUF   LR    R1,R9             ADDRESS OF CURRENT CHARACTER.
         SR    R1,R7             NUMBER OF SAME CHARACTERS.
         CHI   R1,4              AT LEAST FOUR FOR RA.
         BH    BUILDRA
         TM    0(R7),X'F7'       IMP INTERNAL GRAPHIC BYTE?
         BZ    SKIPRA            NO, DON'T FORCE AN RA ORDER.
         CLI   0(R7),X'10'       IMP INTERNAL GRAPHIC BYTE?
         BL    BUILDRA           YES, ALSO BUILD AN RA ORDER.
         CLI   0(R7),X'21'       IMBEDDED COLOUR CHANGE?
         BL    SKIPRA            NO, JUST COPY THE DATA.
         CLI   0(R7),X'28'       IMBEDDED COLOUR CHANGE?
         BL    COLRCHNG          YES, HANDLE IT.
         CLI   0(R7),X'30'       NUMERIC SUPERSCRIPT REQUEST?
         BL    SKIPRA            NO, JUST COPY THE DATA.
         CLI   0(R7),X'3B'       NUMERIC SUPERSCRIPT REQUEST?
         BH    SKIPRA            NO, JUST COPY THE DATA.
         LA    R0,6              GET A SIX.
         LR    R15,R8            YES, COPY OUTPUT ADDRESS.
         SLR   R15,R0            POINT BACK SIX BYTES IN OUTPUT.
         CLC   SACODE,0(R15)     POINTING TO A SET ATTRIBUTE?
         BNE   DOSSHERE          NO, STAY AT CURRENT LOCATION.
         CLC   SACODE,3(R15)     FOLLOWED BY ANOTHER SET ATTRIBUTE?
         BNE   DOSSHERE          NO, STAY AT CURRENT LOCATION.
         L     R1,CRNTOPTN       YES.
         TM    0(R1),X'03'       OPTION NEEDING ATTRIBUTE PERCOLATION?
         BZ    DOSSHERE          NO, STAY AT CURRENT LOCATION.
         SLR   R8,R0             POINT TO THE EDS ORDERS.
         MVC   6(6,R8),0(R8)     MOVE THEM OUT OF THE WAY.
         MVC   2(6,R8),6(R8)     MOVE THEM BACK TO TWO BYTES LATER.
DOSSHERE MVC   1(1,R8),0(R7)     COPY SOURCE BYTE TO OUTPUT AREA.
         MVI   0(R8),X'08'       SUPPLY GRAPHIC ESCAPE FOR SUPERSCRIPT.
         OI    1(R8),X'F0'       CONVERT X'30'-X'3B' TO X'F0'-X'FB'.
         CLI   1(R8),X'FA'       NUMERIC?
         BL    SSNUMBOK          YES, GOOD.
         MVI   1(R8),X'A2'       NO, DISPLAY A CONTINUOUS DASH.
         BE    SSNUMBOK
         MVI   1(R8),X'85'       DISPLAY A CONTINUOUS VERTICAL BAR.
         CLI   SACODE,X'0E'      FUJITSU SCREEN EQUIPMENT?
         BNE   SSNUMBOK          NO, PROCEED.
         MVI   0(R8),X'1B'       YES, USE F9526 EXTENSIONS.
         MVC   1(2,R8),OLDFIELD  COPY PREVIOUS ATTRIBUTES.
         NI    2(R8),X'3F'       TURN OFF 3270 "PARITY" BITS.
         OI    2(R8),X'02'       TURN ON VERTICAL LINE.
         TR    2(1,R8),TABLE     SET APPROPRIATE "PARITY" BITS.
         LA    R1,2              COUNT EXTRA OUTPUT BYTES.
         B     SKPXLATE
SSNUMBOK LA    R1,1              COUNT GE AS AN EXTRA OUTPUT BYTE.
         TM    GRAFLAGS,GEOK     APL CHARACTERS AVAILABLE?
         BO    TIDYUPSS          YES, USE SUPERSCRIPT.
         MVC   0(1,R8),0(R7)     NO, COPY BYTE TO OUTPUT AREA AGAIN.
         MVC   1(6,R8),2(R8)     SHUFFLE UP TRAILING ORDERS.
         L     R1,PRNTADDR       GET ADDRESSABILITY TO TRANSLATE TABLE.
         USING SCRNPRNT,R1
         TR    0(1,R8),PRTXLATE  DO NOT ATTEMPT TO USE GRAPHIC ESCAPE.
         DROP  R1                SCRNPRNT.
         SLR   R1,R1             DO NOT COUNT GE AFTER ALL.
TIDYUPSS CR    R8,R15            WAS EDS DATA SHUFFLED?
         BNE   SKPXLATE          NO, GO ADJUST OUTPUT POINTER.
         LA    R8,6(,R8)         YES, ADJUST OUTPUT POINTER FOR THIS.
         B     SKPXLATE          GO ADJUST OUTPUT POINTER.
SKIPRA   BCTR  R1,0              SUBTRACT ONE FOR EXECUTE.
         EX    R1,COPY           COPY TO OUTPUT AREA.
XLATEJMP B     SKPXLATE          SKIP ROUGH GRAPHICS TRANSLATION.
         TR    0(1,8),GRAFTABL-C' '
         OI    XLATEJMP+1,X'F0'  RESTORE DEFAULT TO NO TRANSLATION.
SKPXLATE LA    R8,1(R1,R8)       INCREMENT OUTPUT ADDRESS.
         CR    R9,R11            SEE IF ANY MORE INPUT DATA.
         BH    OUT               NO.
         B     TESTORDR          YES, CHECK IT.
         SPACE
BUILDRA  MVC   3(1,R8),0(R7)     COPY CHARACTER TO BE REPEATED.
         MVI   0(R8),X'3C'       MOVE IN RA ORDER CODE.
         CR    R6,R2             CHECK FOR SCREEN WRAP-AROUND.
         BL    GETADDR           ADDRESS IS LESS THAN SCREEN SIZE.
         SR    R6,R2             ADDRESS TOO BIG - PERFORM WRAP-AROUND.
GETADDR  STCM  R6,3,1(R8)        ENCODE SCREEN ADDRESS FOR DATA STREAM.
         TM    MODESW,ADR14      14-BIT ADDRESSING SUPPORTED?
         BO    GOTADDR           YES, USE IT.
         LA    R14,4095
         CLR   R6,R14            TOO BIG FOR 12-BIT ADDRESSING ANYWAY?
         BH    GOTADDR           YES, USE 14-BIT ADDRESSING.
         SLR   R14,R14           NO, USE 12-BIT ADDRESSING.
         LR    R15,R6
         SLDL  R14,26
         SRL   R15,26
         IC    R14,TABLE(R14)
         IC    R15,TABLE(R15)
         STC   R14,1(,R8)
         STC   R15,2(,R8)
GOTADDR  TM    3(R8),X'F7'       IMP INTERNAL GRAPHIC CHARACTER?
         BZ    USUALRA           NO, NOTHING UNUSUAL HERE.
         CLI   3(R8),X'0F'       IMP INTERNAL GRAPHIC CHARACTER?
         BH    USUALRA           NO, NOTHING UNUSUAL HERE.
         MVC   3(8,R8),INTNLGRF+6    YES, LOAD GRAPHIC DATA STREAM.
         TM    GRAFLAGS,GEOK     APL CHARACTERS AVAILABLE?
         BO    GBAPLOK2          YES, USING ONE TAKES TWO BYTES.
         MVI   3(R8),C' '        NO, USE A BLANK.  (WAS A PLUS SIGN.)
         MVC   4(6,R8),5(R8)     SHUFFLE UP ATTRIBUTE RESETS.
         B     GRADONE1          CHARACTER SPECIFICATION TOOK ONE BYTE.
GBAPLOK2 LA    R8,1(,R8)         COUNT THE GE BYTE.
GRADONE1 CLC   OLDCOLOR,GBCOLOUR
         BE    DROPGRCL          CORRECT COLOUR SO DROP EXIT COLOURING.
         LA    R8,3(,R8)         COUNT THE COLOUR ORDER.
GRCOLROK CLC   OLDHILIT,GBHILITE
         BE    USUALRA           HIGHLIGHT OK SO DROP EXIT HILIGHTING.
         LA    R8,3(,R8)         COUNT THE HIGHLIGHT ORDER.
USUALRA  LA    R8,4(,R8)         INCREMENT OUTPUT AREA ADDRESS.
         CR    R9,R11            SEE IF ANY MORE INPUT DATA.
         BH    OUT               NO.
         B     TESTORDR          YES, CHECK IT.
DROPGRCL MVC   4(3,R8),7(R8)     OVERLAY COLOR ORDER WITH HILITE ORDER.
         B     GRCOLROK          NOW CHECK HIGHLIGHTING NECESSITY.
         SPACE
HANDLESA CLI   0(R9),X'0E'       FUJITSU SET ATTRIBUTE ORDER?
         BNE   SACODEOK          NO, PROCEED.
         CLI   1(R9),X'41'       VALID ATTRIBUTE TYPE?
         BL    HANDLEGB          NO, MUST BE INTERNAL GRAPHIC CODE.
         CLI   1(R9),X'42'       VALID ATTRIBUTE TYPE?
         BH    HANDLEGB          NO, MUST BE INTERNAL GRAPHIC CODE.
SACODEOK TM    MODESW2,COL2+COL4 7-COLOUR MODE?
         BZ    COPYSETA          YES, FORGET ABOUT COLOUR CONVERSION.
         TM    MODESW2,COL2      MONOCHROME MODE?
         BO    IGNORESA          YES, FORGET ABOUT COLOUR CONVERSION.
         CLI   1(R9),X'42'       COLOUR?
         BNE   IGNORESA          NO, IGNORE OTHER HIGHLIGHTING.
         CLI   2(R9),X'00'       DEFAULT?
         BE    IGNORESA          YES, YOU GOT IT.
         BCTR  R8,0
         BCTR  R8,0
         CLI   0(R8),X'1D'       IMMEDIATELY PRECEEDED BY START FIELD?
         BNE   DONESETA          NO, CAN'T DO ANYTHING ANYWAY.
         TM    1(R8),X'F0'       OUTPUT AUTOSKIP FIELD?
         BNO   DONESETA          NO, CAN'T DO ANYTHING ANYWAY.
         IC    R10,2(,R9)        GET 7-COLOUR CODE.
         SLL   R10,28            SHIFT OUT ZONE.
         SRL   R10,28            GET NUMERIC PART.
         IC    R10,COLR4TBL(R10) GET CORRESPONDING 4-COLOUR CODE.
         STC   R10,1(,R8)        REPLACE ATTRIBUTE BYTE.
DONESETA LA    R8,2(,R8)         RESTORE OUTPUT BUFFER POINTER.
IGNORESA LA    R10,R3            SET COUNT.
         B     INCRPTR
COPYSETA ICM   R10,2,OLDHILIT    LOAD PREVIOUS HIGHLIGHTING.
         ICM   R10,1,OLDCOLOR    LOAD PREVIOUS COLOUR.
         CLI   1(R9),X'41'       NEW HIGHLIGHTING?
         BE    NEWHILIT          YES.
         CLI   1(R9),X'42'       NEW COLOUR?
         BE    NEWCOLOR          YES.
         OC    1(2,R9),1(R9)     DEFAULTS FOR ALL CHARACTER ATTRIBUTES?
         BNZ   PERFRMSA          NO, COULD BE SETTING SYMBOL SET.
         ICM   R10,3,1(R9)       YES, LOAD TWO NULLS.
         B     TSTANYSA          SEE IF ANYTHING HAS CHANGED.
NEWCOLOR TM    GRAFLAGS,DIDQRY+COLR  COLOUR DEFINITELY NOT SUPPORTED?
         BM    IGNORESA          YES, DON'T DELIBERATELY CAUSE ERRORS.
         SLR   R10,R10           CLEAR FOR INSERT.
         ICM   R10,1,2(R9)       LOAD NEW COLOUR CODE.
         BZ    DFLTCOLR          HANDLE DEFAULT REQUEST.
         A     R10,ATHTBADR      POINT TO NEW COLOUR CODE.
         IC    R10,0(,R10)       LOAD NEW COLOUR CODE.
DFLTCOLR ICM   R10,2,OLDHILIT    RELOAD PREVIOUS HIGHLIGHTING.
         B     TSTNEWSA          SEE IF ANYTHING HAS CHANGED.
NEWHILIT ICM   R10,2,2(R9)       LOAD NEW HIGHLIGHTING CODE.
TSTANYSA TM    GRAFLAGS,DIDQRY+HLIT HIGHLIGHT DEFINITELY NOT SUPPORTED?
         BM    IGNORESA          YES, DON'T DELIBERATELY CAUSE ERROR.
TSTNEWSA CLM   R10,2,OLDHILIT    ANY HIGHLIGHTING CHANGE?
         BNE   GOTNEWSA          YES, TRANSMIT IT.
         CLM   R10,1,OLDCOLOR    ANY COLOUR CHANGE?
         BE    IGNORESA          NO, DON'T SEND THIS SET ATTRIBUTE.
GOTNEWSA STCM  R10,2,OLDHILIT    YES, SAVE NEW CHARACTER ATTRIBUTES.
         STCM  R10,1,OLDCOLOR
PERFRMSA LA    R10,3             SET COUNT.
         MVC   0(1,R8),SACODE    FORCE APPROPRIATE SA CODE.
         MVC   1(2,R8),1(R9)     COPY SA SEQUENCE.
         CLI   1(R8),X'42'       COLOR SA?
         BNE   COLRSAOK          NO.
         CLI   2(R8),X'F1'       VALID NON-DEFAULT COLOUR REQUEST?
         BL    COLRSAOK          NO.
         L     R15,ATHTBADR      POINT TO AUTHORIZATION TABLE.
         TR    2(1,R8),0(R15)    CONVERT TO TARGET COLOUR.
COLRSAOK LR    R15,R8            COPY OUTPUT ADDRESS.
         SLR   R15,R10           POINT BACK THREE BYTES.
         CLC   0(2,R15),0(R8)    CONSECUTIVE (SAME) ATTRIBUTE CHANGES?
         BNE   COPIEDOK          NO, COPY THIS SET ATTRIBUTE SEQUENCE.
         MVC   2(1,R15),2(R8)    YES, OVERRIDE PREVIOUS ATTRIBUTE CODE.
         B     INCRPTR           DO NOT COPY ANY MORE CODE FOR THIS SA.
         SPACE
HANDLEGE TM    GRAFLAGS,GEOK     IS GRAPHICS ESCAPE DEFINITELY OKAY?
         BO    HANDL241          YES, THEN DON'T SUPPRESS IT.
         LA    R10,1             SET COUNT.
         NI    XLATEJMP+1,X'0F'  HOPE DON'T GET THE SAME BYTE FIRST AS
         B     INCRPTR           GRAPHICS THEN MORE THAN THREE NORMAL.
         SPACE
HANDLEIC LA    R10,1             SET COUNT.
         CR    R9,R11            POINTING AT LAST DATA STREAM BYTE?
         BNL   COPYDATA          YES, COPY IT.
         CLI   1(R9),X'13'       MULTIPLE IC?
         BNE   COPYDATA          NO.
         LA    R9,1(,R9)         YES, INCREMENT OUTPUT ADDRESS.
         B     HANDLEIC          SEE IF THAT WAS THE LAST REPEAT.
         SPACE
HANDLESI L     R15,ATHTBADR      POINT TO CONFIGURATION FLAGS.
         TM    255(R15),X'10'    JAPANESE DISPLAY?
         BZ    HANDLEGB          NO, TREAT AS INTERNAL GRAPHIC CODE.
         LA    R10,1             SET COUNT.
         MVI   0(R8),X'0F'       LOAD IBM SHIFT IN CODE.
         CLI   SACODE,X'28'      IBM COMPATIBLE SCREEN?
         BE    COPIEDOK          YES, PROCEED.
         MVI   0(R8),X'28'       NO, USE FUJITSU CODE.
         B     COPIEDOK          PROCEED.
         SPACE
HANDLESO L     R15,ATHTBADR      POINT TO CONFIGURATION FLAGS.
         TM    255(R15),X'10'    JAPANESE DISPLAY?
         BZ    HANDLEGB          NO, TREAT AS INTERNAL GRAPHIC CODE.
         LA    R10,1             SET COUNT.
         MVI   0(R8),X'0E'       LOAD IBM SHIFT IN CODE.
         CLI   SACODE,X'28'      IBM COMPATIBLE SCREEN?
         BE    COPIEDOK          YES, PROCEED.
         MVI   0(R8),X'29'       NO, USE FUJITSU CODE.
         B     COPIEDOK          PROCEED.
         SPACE
HANDL241 LA    R10,2             SET COUNT.
         LA    R6,1(,R6)         INCREMENT SCREEN ADDR FOR ATTR BYTE.
         B     COPYDATA
         SPACE
HANDLSFE MVC   OLDFIELD,1(R9)    SAVE NEW FIELD ATTRIBUTES.
         LA    R10,3             SET COUNT.
         LA    R6,1(,R6)         INCREMENT SCREEN ADDR FOR ATTR BYTE.
         CLI   2(R9),X'40'       USING F9526 EXTENSIONS?
         BE    SFETOSF           NO, JUST USE NORMAL 3270 SF ANYWAY.
         TM    MODESW2,COL2      0, 1, 2 OR 3-COLOUR MODE?
         BZ    SFETOSF           NO, DROP F9526 EXTENSIONS.
         CLI   SACODE,X'0E'      NO, F9526-TYPE TERMINAL?
         BE    COPYDATA          YES, COPY THE THREE BYTES.
SFETOSF  MVI   0(R8),X'1D'       USE 3270 SF CODE.
         LR    R7,R9             COPY SOURCE ADDRESS.
         MVC   1(1,R8),1(R7)     COPY ATTRIBUTE BYTE.
         LA    R8,2(,R8)         UPDATE OUTPUT BUFFER ADDRESS.
         B     INCRPTR           INCREMENT ADDRESS AND LOOP.
         SPACE
HANDLEMF SLR   R10,R10
         IC    R10,1(,R9)        GET PAIR COUNT.
         LR    R15,R8            COPY CURRENT OUTPUT POINTER.
         MVC   0(2,R8),0(R9)     COPY ORDER AND PAIR COUNT.
         CLI   SACODE,X'0E'      FUJITSU SCREEN EQUIPMENT?
         BNE   SFEMFAOK          NO, 3270 COMPATIBLE.
         CLI   0(R8),X'2C'       MODIFY FIELD ATTRIBUTE?
         BE    SFEMFAOK          YES, SAME FOR 3270 AND 668X.
         MVI   0(R8),X'0F'       NO, SUPPLY FUJITSU SFE ORDER.
SFEMFAOK LA    R8,2(,R8)         POINT TO NEXT OUTPUT POSITION.
         LA    R7,2(,R9)         POINT TO NEXT SOURCE POSITION.
PAIRLOOP CLI   0(R7),X'C0'       FIELD ATTRIBUTE?
         BE    COPYPAIR          YES, COPY IT.
         TM    MODESW2,COL2+COL4 7-COLOUR MODE?
         BNZ   SKIPPAIR          NO, DO NOT COPY THIS PAIR.
         CLI   0(R7),X'41'       EXTENDED HIGHLIGHTING?
         BE    COPYPAIR          YES, COPY IT.
         CLI   0(R7),X'42'       EXTENDED COLOUR?
         BNE   SKIPPAIR          NO, DO NOT COPY THIS PAIR.
COPYPAIR MVC   0(2,R8),0(R7)     COPY THE PAIR.
         LA    R8,2(,R8)         POINT PAST THE PAIR.
SKIPPAIR LA    R7,2(,R7)         POINT PAST THE PAIR.
         BCT   R10,PAIRLOOP      PROCESS THE NEXT PAIR.
         IC    R10,1(,R9)        GET PAIR COUNT.
         LA    R10,1(,R10)
         SLL   R10,1             GET TOTAL INPUT ORDER BYTE COUNT.
         LA    R6,1(,R6)         INCREMENT SCREEN ADDR FOR ATTR BYTE.
         LR    R0,R8             COPY FINAL OUTPUT POINTER.
         SR    R0,R15            GET OUTPUT ORDER LENGTH.
         SRL   R0,1              HALVE IT.
         BCTR  R0,0              GET THE PAIR COUNT.
         STC   R0,1(,R15)        SET OUTPUT ORDER PAIR COUNT.
         CLI   0(R15),X'2C'      MODIFY FIELD ATTRIBUTE?
         BE    DONOEDIT          YES, NOEDIT TPUT REQUIRED.
         CLC   ONEFIELD,1(R15)   SFE WITH STANDARD FIELD ATTR ONLY?
         BNE   DONOEDIT          NO, NOEDIT TPUT REQUIRED.
         MVI   0(R15),X'1D'      YES, JUST USE STANDARD START FIELD.
         MVC   1(1,R15),3(R15)   COPY THE ATTRIBUTE SPECIFICATION.
         LA    R8,2(,R15)        ADJUST OUTPUT POINTER.
         B     INCRPTR           GET MORE SOURCE DATA TO PROCESS.
DONOEDIT OI    4(R4),X'80'       FLAG TPUT NOEDIT REQUIREMENT.
         B     INCRPTR           GET MORE SOURCE DATA TO PROCESS.
         SPACE
HANDLEGB TM    GRAFLAGS,COLR+HLIT    WILL GRAPHIC CODES BE USED?
         BM    XLATEGB           NO, REPLACE BYTE WITH A SPECIAL CHAR.
         TM    MODESW2,COL2+COL4 7-COLOUR MODE?
         BNZ   XLATEGB           NO, REPLACE BYTE WITH A SPECIAL CHAR.
         LA    R0,6              YES, GET A SIX.
         LR    R15,R8            COPY OUTPUT ADDRESS.
         SLR   R15,R0            POINT BACK SIX BYTES IN OUTPUT.
         CLC   SACODE,0(R15)     POINTING TO A SET ATTRIBUTE?
         BNE   DOGBHERE          NO, STAY AT CURRENT LOCATION.
         CLI   1(R15),X'41'      POINTING TO A SET ATTRIBUTE?
         BL    DOGBHERE          NO, STAY AT CURRENT LOCATION.
         CLI   1(R15),X'43'      POINTING TO A SET ATTRIBUTE?
         BH    DOGBHERE          NO, STAY AT CURRENT LOCATION.
         CLC   SACODE,3(R15)     FOLLOWED BY ANOTHER SET ATTRIBUTE?
         BNE   DOGBHERE          NO, STAY AT CURRENT LOCATION.
         CLI   4(R15),X'41'      FOLLOWED BY ANOTHER SET ATTRIBUTE?
         BL    DOGBHERE          NO, STAY AT CURRENT LOCATION.
         CLI   4(R15),X'43'      FOLLOWED BY ANOTHER SET ATTRIBUTE?
         BH    DOGBHERE          NO, STAY AT CURRENT LOCATION.
         SLR   R8,R0             YES, OVERWRITE THEM AND REDUCE OUTPUT.
         BAS   R14,IGRFSTRG      LOAD INTERNAL GRAPHIC DATA STREAM.
         LA    R8,6(,R8)         COUNT THE BYTES FOR THE ORDERS.
         B     GBCLRDON          NOW CHECK FOR APL SUPPORT.
DOGBHERE BAS   R14,IGRFSTRG      LOAD INTERNAL GRAPHIC DATA STREAM.
         CLC   2(1,R8),OLDHILIT  HAS THE HIGHLIGHTING CHANGED?
         BNE   GBDIFHIL          YES, NEED ALTERING ORDER.
         MVC   0(11,R8),3(R8)    NO, OVERLAY ORDER AND SAVE 3 BYTES.
         B     GBHILDON
GBDIFHIL LA    R8,3(,R8)         COUNT THE HILITE ORDER BYTES.
GBHILDON CLC   2(1,R8),OLDCOLOR  HAS THE COLOUR CHANGED?
         BNE   GBDIFCLR          YES, NEED ALTERING ORDER.
         MVC   0(8,R8),3(R8)     NO, OVERLAY ORDER AND SAVE 3 BYTES.
         B     GBCLRDON
GBDIFCLR LA    R8,3(,R8)         COUNT THE COLOUR ORDER BYTES.
GBCLRDON CLC   1(1,R9),0(R9)     MORE THAN ONE SUCH CHARACTER?
         BE    NOTORDER          YES, BUILD A REPEAT-TO-ADDRESS.
         TM    GRAFLAGS,GEOK     APL CHARACTERS AVAILABLE?
         BO    GBAPLOK1          YES, USING ONE TAKES TWO BYTES.
         MVI   0(R8),C' '        NO, USE A BLANK.  (WAS A PLUS SIGN.)
         MVC   1(6,R8),2(R8)     SHUFFLE UP ATTRIBUTE RESETS.
         B     GBDONE01          CHARACTER SPECIFICATION TOOK ONE BYTE.
GBAPLOK1 LA    R8,1(,R8)         COUNT THE GE BYTE.
GBDONE01 LA    R8,1(,R8)         COUNT THE CHARACTER BYTE.
         LA    R10,1             ONE SOURCE BYTE WAS PROCESSED.
         LA    R6,1(,R6)         INCREMENT SCREEN ADDRESS.
         CLC   OLDCOLOR,GBCOLOUR
         BE    DROPGXCL          CORRECT COLOUR SO DROP EXIT COLOURING.
         LA    R8,3(,R8)         COUNT THE COLOUR ORDER.
GXCOLROK CLC   OLDHILIT,GBHILITE
         BE    INCRPTR           HIGHLIGHT OK SO DROP EXIT HILIGHTING.
         LA    R8,3(,R8)         COUNT THE HIGHLIGHT ORDER.
         B     INCRPTR           GET MORE SOURCE DATA TO PROCESS.
DROPGXCL MVC   0(3,R8),3(R8)     OVERLAY COLOR ORDER WITH HILITE ORDER.
         B     GXCOLROK          NOW CHECK HIGHLIGHTING NECESSITY.
IGRFSTRG MVC   0(14,R8),INTNLGRF LOAD INTERNAL GRAPHIC STRING.
         MVC   5(1,R8),0(R9)     LET BYTE ITSELF DETERMINE COLOUR.
         OI    5(R8),X'F0'       PUT COLOUR CODE IN CORRECT RANGE.
         TM    5(R8),X'08'       VALID COLOUR?  (USE REVERSE VIDEO?)
         BZ    IGRFSXIT          YES, IN X'F1' TO X'F7' RANGE.
         MVI   2(R8),X'00'       NO, NON-REVERSE VIDEO FLAG IS ON.
         NI    5(R8),X'F7'       FOLD INTO VALID COLOUR CODE RANGE.
IGRFSXIT L     R15,ATHTBADR      POINT TO AUTHORIZATION TABLE.
         TR    5(1,R8),0(R15)    CONVERT TO TARGET COLOUR.
         MVC   GBHILITE,2(R8)    REMEMBER THE GRAPHIC BYTE HIGHLIGHT.
         MVC   GBCOLOUR,5(R8)    REMEMBER THE GRAPHIC BYTE COLOUR.
         BR    R14               RETURN TO CALLER.
XLATEGB  L     R15,PRNTADDR      GET ADDRESSABILITY TO TRANSLATE TABLE.
         USING SCRNPRNT,R15
         IC    R0,PRTXLATE+11    CONVERT PINK CROSSHATCH TO PLUS.
         MVI   PRTXLATE+11,C'+'  (PROBABLY FOR AN OPTION "K" DISPLAY.)
         TR    0(1,R9),PRTXLATE  DO NOT ATTEMPT TO USE GRAPHIC ESCAPE.
         STC   R0,PRTXLATE+11    RESTORE TRANSLATE TABLE TO ORIGINAL.
         DROP  R15               SCRNPRNT.
         B     TESTORDR          PROCESS IT AS USUAL.
         SPACE
COLRCHNG TM    MODESW2,COL2+COL4 7-COLOUR MODE?
         BNZ   COLRCHGD          NO, SKIP COLOUR ORDER.
         IC    R15,0(,R7)        COPY SOURCE CODE BYTE.
         LA    R15,X'D0'(,R15)   CONVERT INTO 3270 COLOUR CODE.
         CLM   R15,1,OLDCOLOR    ANY COLOUR CHANGE?
         BE    COLRCHGD          NO, SKIP REDUNDANT ORDER.
         MVC   0(1,R8),SACODE    SET ATTRIBUTE.
         MVI   1(R8),X'42'       COLOUR.
         STC   R15,2(,R8)        COLOUR CODE.
         LA    R8,3(,R8)         POINT PAST ORDER.
         STC   R15,OLDCOLOR      UPDATE CURRENT COLOUR.
COLRCHGD MVI   0(R8),C' '        PREPARE FOR NO-OP.
         L     R15,CRNTOPTN      POINT TO CURRENT OPTION ENTRY.
         CLI   0(R15),C'S'       SERVICE CLASS MONITOR?
         BE    COLRSFOK          YES, AVOID TABBABLE FIELD.
         CLI   0(R15),C'C'       CHANNEL PATH MONITOR?
         BE    COLRSFOK          YES, AVOID TABBABLE FIELD.
         MVI   0(R8),X'1D'       START FIELD.
         MVC   1(1,R8),0(R7)     COPY INTERNAL CODE BYTE.
         NI    1(R8),X'07'       MAP INTO COLOUR CODE.
         TR    1(1,R8),COLR4TBL  SUPPLY APPROPRIATE FIELD ATTRIBUTE.
         CLI   0(R7),X'24'       REQUEST FOR GREEN?
         BE    COLRTBOK          YES, LEAVE AS TABBABLE.
         TM    MODESW2,COL4      4-COLOUR MODE?
         BO    COLRTBOK          YES, LEAVE COLOUR MAPPING.
         OI    1(R8),X'20'       MAKE FIELD PROTECTED.
COLRTBOK LA    R8,1(,R8)         POINT PAST START FIELD.
COLRSFOK LA    R8,1(,R8)         POINT PAST BLANK OR ATTRIBUTE.
         LA    R7,1(,R7)         POINT TO NEXT INPUT BYTE.
         BCT   R1,COLRCHNG       HANDLE MULTIPLE CONSECUTIVE CODES.
         CR    R9,R11            SEE IF ANY MORE INPUT DATA.
         BH    OUT               NO.
         B     TESTORDR          YES, CHECK IT.
         SPACE
UPDATADR LA    R10,3             SET COUNT.
         SLR   R15,R15
         ICM   R15,B'0011',1(R9) LOAD SPECIFIED BUFFER ADDRESS.
         TM    1(R9),X'40'       IS IT A 12-BIT ADDRESS?
         BZ    ADR14BIT          NO, 14-BIT.
         SLDL  R14,24            CONVERT ADDRESS TO SCREEN POSITION.
         SLL   R15,2
         SRDL  R14,6
         SRL   R15,20
ADR14BIT CR    R6,R15            SEE IF ALREADY AT THIS ADDRESS.
         BNE   RESETADR
         CLI   0(R9),X'11'       IF ORDER IS SBA, SKIP IT.
         BE    INCRPTR
RESETADR LR    R6,R15            UPDATE SCREEN ADDRESS.
         CLI   0(R9),X'3C'       REPEAT-TO-ADDRESS ORDER?
         BNE   COPYDATA          NO, PROCEED WITH COPY.
         LA    R10,4             YES, SET COUNT.
         CLI   3(R9),X'08'       GRAPHICS CHARACTER TO BE REPEATED?
         BNE   COPYDATA          NO, COPY ENTIRE ORDER STREAM.
         LA    R10,3             YES, SET COUNT.
         BCTR  R6,0              DECREMENT SCREEN ADDRESS.
         LTR   R6,R6             BACK BEFORE START OF SCREEN?
         BNM   COPYDATA          NO, PROCEED.
         AR    R6,R2             YES, ADD BUFFER SIZE.
         SPACE
COPYDATA BCTR  R10,0             DECREMENT COUNT FOR EXECUTE.
         LR    R7,R9             COPY SOURCE ADDRESS.
         EX    R10,COPY          COPY TO OUTPUT AREA.
         LA    R10,1(,R10)       RESTORE COUNT.
COPIEDOK LA    R8,0(R10,R8)      UPDATE OUTPUT AREA ADDRESS.
INCRPTR  BXLE  R9,R10,TESTORDR   INCREMENT ADDRESS AND LOOP.
         SPACE
OUT      LA    R1,12(,R4)        GET OUTPUT ADDRESS.
         SR    R8,R1             CALCULATE OUTPUT LENGTH.
         LA    R0,0(,R8)         TURN OFF HIGH BIT.
         TM    MODESW3,TSU       TIME SHARING USER?
         BZ    OUTEXCP           NO, USE EXCP.
         TM    4(R4),X'80'       IS A NOEDIT TPUT REQUIRED?
         BO    OUTNOED           YES.
         CLI   0(R1),X'F1'       START WITH WRITE?
         BE    OUTNOED           YES.
         CLI   0(R1),X'F5'       START WITH ERASE/WRITE?
         BE    OUTNOED           YES.
         CLI   0(R1),X'7E'       START WITH ERASE/WRITE ALTERATE?
         BE    OUTNOED           YES.
         ICM   R1,B'1000',TPUTFLG
         TPUT  (1),(0),R         DISPLAY THIS SCREEN IMAGE.
OUTTPUT  CL    R15,MAXPUTRC      ACCEPTABLE RETURN CODE?
         BH    SVC3EXIT          NO, JUST EXIT WITH TPUT RETURN CODE.
OUTOKAY  NI    4(R4),X'7F'       ENSURE NOEDIT FLAG IS RESET.
         LM    R0,R2,0(R4)       GET FREEMAIN PARAMETERS AND EXIT ADDR.
         FREEMAIN RU,LV=(0),A=(1),SP=SUBPOOL
         BR    R2                RETURN.
OUTEXCP  LA    R15,4             SET ENTRY CODE OF FOUR.
         L     R11,EXCPIOAD      GET EXCP I/O ROUTINE ENTRY POINT.
         BASR  R14,R11           USE EXCP TO SEND THE DATA STREAM.
         B     OUTOKAY
OUTNOED  LR    R2,R1             COPY THE DATA STREAM ADDRESS.
         TPUT  (R2),(R0),NOEDIT,WAIT,MF=(E,TPUTNOED)
         B     OUTTPUT
         DROP  R3                MENU3270.
         SPACE
SVC3EXIT SVC   3                 TERMINATE THIS PROGRAM.
         SPACE
TPUTNOED TPUT  0,0,NOEDIT,WAIT,MF=L
         SPACE
COPY     MVC   0(0,R8),0(R7)                    <<< EXECUTED >>>
         SPACE
ONEFIELD DC    XL2'01C0'         ONE PAIR, FIELD ATTRIBUTE.
OLDFIELD DC    CL2'  '           FIELD ATTRIBUTE SAVE AREA.
MAXPUTRC DC    F'8'              MAXIMUM TOLERATED TPUT RETURN CODE.
         SPACE
COLR4TBL DC    C' '              7-COLOUR TO 4-COLOUR CONVERSION TABLE.
         DCS   PROLO             BLUE TO BLUE.
         DCS   UNPHI             RED TO RED.
         DCS   UNPHI             PINK TO RED.
         DCS   UNPLO             GREEN TO GREEN.
         DCS   PROLO             TURQUOISE TO BLUE.
         DCS   PROHI             YELLOW TO WHITE.
         DCS   PROHI             WHITE TO WHITE.
STRMESCP DC    X'27'  \______    ESCAPE (27).
STRMERAS DC    X'F1'  /          EW (F5) OR EWA (7E).
INTNLGRF DC    X'2841F22842F608D32842'
OLDCOLOR DC    X'00'             PREVIOUS COLOUR.
         DC    X'2841'
OLDHILIT DC    X'00'             PREVIOUS HIGHLIGHTING.
GBCOLOUR DC    X'00'             COLOUR USED IN GRAPHIC BYTE(S).
GBHILITE DC    X'00'             HILITE USED IN GRAPHIC BYTE(S).
GRAFTABL DC    C' ABCDEFGHI??????'        40 TO 4F.
         DC    C'?JKLMNOPQR??????'        50 TO 5F.
         DC    C'??STUVWXYZ??????'        60 TO 6F.
         DC    C'?',X'5354',C'?????'      70 TO 77.
         DC    X'52',C'???????'           78 TO 7F.
         DC    C'~??|||???????||?'        80 TO 8F.
         DC    C'???????????'             90 TO 9A.
         DC    X'83',C'?',X'96',C'??'     9B TO 9F.
         DC    X'4951',C'-?',X'95'        A0 TO A4.
         DC    C'????????',X'41',C'??'    A5 TO AF.
         DC    X'81858999A66FA7'          B0 TO B6.
         DC    C'\/???T',X'42',C'?|'      B7 TO BF.
         DC    C'{(+?--|-'                C0 TO C7.
         DC    X'48',C'???????'           C8 TO CF.
         DC    C'})?+--|-???!????'        D0 TO DF.
         DC    C'?123????????????'        E0 TO EF.
         DC    C'0123456789??????'        F0 TO FF.  (FF IS INVALID.)
