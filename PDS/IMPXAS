*        COPYRIGHT (C) 1986,1994,2001  PRYCROFT SIX PTY LTD
         TITLE 'SWAP DOMAIN MONITOR DISPLAY LINE MAPPING'
DMNLINE  DSECT
DMNENTRY DS    XL(L'LOWX)
DMNID    DS    CL4
MIN      DS    CL4
MAX      DS    CL4
         DS    CL1
MPLI     DS    CL4
         DS    CL1
MPLO     DS    CL4
         DS    CL1
CMPL     DS    CL4
RUA      DS    CL4
         DS    CL1
MXRU     DS    CL4
INC      DS    CL4
NSW      DS    CL4
         DS    CL1
OUTU     DS    CL4
TWSR     DS    CL7
CIDX     DS    CL10
ASRV     DS    CL10
         DS    CL3
DMDL     EQU   *-DMNID
DMLL     EQU   *-DMNENTRY
         SPACE
SVELINE  DSECT
SVLENTRY DS    XL(L'LOWX)
SVLCLS   DS    CL8
         DS    CL1
SVLPER   DS    CL1
         DS    CL1
SVLGOAL  DS    CL4
SVLVEL   DS    CL4
SVLCPU   DS    CL4
SVLIOU   DS    CL5
SVLCPWT  DS    CL5
SVLIOWT  DS    CL5
SVLCCAP  DS    CL5
SVLSWAP  DS    CL4
SVLAUX   DS    CL5
SVLUNKN  DS    CL5
SVLIDLE  DS    CL5
         SPACE
SRTLINE  DSECT
SRTENTRY DS    XL(L'LOWX)
SRTCLS   DS    CL8
         DS    CL1
SRTPER   DS    CL1
SRTXACT  DS    CL12
SRTRATE  DS    CL7
SRTAVRT  DS    CL12
SRTAVEX  DS    CL12
SRTGPCT  DS    CL4
SRTPCT   DS    CL1
SRTLT    DS    CL12
SRTDUR   DS    CL8
         DS    CL1
         SPACE
SSULINE  DSECT
SSUENTRY DS    XL(L'LOWX)
SSUCLS   DS    CL8
         DS    CL1
SSUPER   DS    CL1
         DS    CL1
SSUIMP   DS    CL1
SSURATE  DS    CL8
SSUTCB   DS    CL5
SSUSRB   DS    CL5
SSUPIR   DS    CL5
SSUHSP   DS    CL5
SSUBPIR  DS    CL5
SSUPIE   DS    CL5
SSUBPIE  DS    CL5
SSUBKIA  DS    CL5
SSUBKIE  DS    CL5
SSUSWP   DS    CL7
         SPACE
SIOLINE  DSECT
SIOENTRY DS    XL(L'LOWX)
SIOCLS   DS    CL8
         DS    CL1
SIOPER   DS    CL1
SIORATE  DS    CL7
SIOCONN  DS    CL7
SIODISC  DS    CL7
SIOWAIT  DS    CL7
SIOIOSQ  DS    CL7
SIOREST  DS    CL34
         TITLE 'SWAP DOMAIN MONITOR SUBROUTINE'
IMPXA    CSECT
         USING DOMAINS,R11,R10
DOMAINS  DS    0H
         LA    R10,2048(,R11)    SET UP SECOND
         LA    R10,2048(,R10)                  BASE REGISTER.
         TM    OSLEVEL,CVTH4410  MVS/SP4?
         BNO   DMDTSZOK          NO, DMDT ENTRY IS 64 BYTES.
         MVI   DMDTSIZE+1,180    YES, DMDT ENTRY IS 180 BYTES.
         TM    OSLEVEL+1,CVTH5510 MVS/SP5?
         BNO   DMDTSZOK          NO.
         MVI   DMDTSIZE+1,240    YES, DMDT ENTRY IS 240 BYTES.
DMDTSZOK CLI   INCHARS+1,C' '    ANY OPTION PRE-SPECIFIED?
         BH    GIVEHLPS          YES, CAN ONLY SHOW HELP PANEL.
         SPACE
REDODMNS L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         L     R2,WINBUFF        GET WINDOW BUFFER START ADDRESS.
         SLR   R0,R0             CLEAR FOR DIVIDE.
         ST    R0,WINLINES       INITIALIZE LINE COUNTER.
         DROP  R15               WNDWMNGR.
         SPACE
         SPACE
SWAPDMNS TIME  BIN               GET TIME-OF-DAY.
         LR    R5,R0             GET CURRENT CENTISECONDS.
         S     R5,SWAPTIME       GET CENTISECONDS SINCE LAST SCAN.
         ST    R0,SWAPTIME       SAVE CURRENT CENTISECONDS.
         L     R4,RMCTADDR       POINT TO RESOURCE MNGR CONTROL TABLE.
         L     R1,20(,R4)        POINT TO RESOURCE MNGR CONTROL AREA.
         L     R4,24(,R4)        POINT TO WORKLOAD MNGR SPEC TABLE.
         MVC   IPSLABEL,=C'IPS=IEAIPS'
         MVC   DMNIPSID,4(R4)    IPS ID.
         MVC   CPUCOEFF,148(R4)  CPU SERVICE COEFFICIENT.
         MVC   IOCCOEFF,152(R4)  I/O SERVICE COEFFICIENT.
         MVC   MSOCOEFF,80(R4)   MSO SERVICE COEFFICIENT.
         MVC   SRBCOEFF,160(R4)  SRB SERVICE COEFFICIENT.
         TM    OSLEVEL+1,CVTH5510 MVS/SP5?
         BNO   GOTMSO            NO, HAVE CORRECT MSO COEFFICIENT.
         MVC   CPUCOEFF,156(R4)  CPU SERVICE COEFFICIENT.
         MVC   IOCCOEFF,160(R4)  I/O SERVICE COEFFICIENT.
         MVC   MSOCOEFF,84(R4)   MSO SERVICE COEFFICIENT.
         MVC   SRBCOEFF,168(R4)  SRB SERVICE COEFFICIENT.
GOTMSO   L     R4,RMCTADDR       POINT TO THE RMCT.
         TM    220(R4),X'7F'     IN WLM GOAL MODE?
         BM    GOTIPS            NO, NO POLICY TO EXTRACT.
         MVC   IPSLABEL(12),=CL12'<GOAL MODE> '
GOTIPS   MVC   0(L'LOWX,R2),LOWX SHOW IPS DETAILS.
         MVI   0(R2),X'FF'       INDICATE NON-SCROLLABLE LINE.
         MVC   L'LOWX(DMDL,R2),IPSPARMS
         BAS   R14,SADDLINE      LINE NOW COMPLETE.
         LA    R3,244(,R1)       POINT TO FIRST SWAP REASON COUNTER.
         SLR   R6,R6             CLEAR FOR ACCUMULATION.
         LA    R14,11            NUMBER OF SWAP REASONS.
RMCALOOP A     R6,0(,R3)         ADD COUNT FOR THIS SWAP REASON.
         LA    R3,4(,R3)         POINT TO NEXT COUNTER.
         BCT   R14,RMCALOOP
         L     R7,288(,R1)       GET LOGICAL SWAP COUNT.
         LR    R9,R6             CURRENT TOTAL SWAP COUNT.
         S     R9,TOTLSWAP       GET CHANGE IN TOTAL SWAPS.
         LR    R14,R9            SAVE IT FOR NOW.
         ST    R6,TOTLSWAP       SAVE TOTAL SWAP COUNT.
         M     R8,ONEGRAND       FOR CENTISECONDS AND 1 DECIMAL PLACE.
         DR    R8,R5             GET TOTAL SWAP RATE.
         CVD   R9,WORK
         MVC   TOTSWPRT,ED2PNT1
         ED    TOTSWPRT,WORK+6
         LR    R9,R7             CURRENT LOGICAL SWAP COUNT.
         S     R9,LOGSWAP        GET CHANGE IN LOGICAL SWAPS COUNT.
         SR    R14,R9            GET CHANGE IN PHYSICAL SWAPS COUNT.
         ST    R7,LOGSWAP        SAVE TOTAL LOGICAL SWAP COUNT.
         M     R8,ONEGRAND       FOR CENTISECONDS AND 1 DECIMAL PLACE.
         DR    R8,R5             GET LOGICAL SWAP RATE.
         CVD   R9,WORK
         MVC   LOGSWPRT,ED2PNT1
         ED    LOGSWPRT,WORK+6
         LR    R9,R14            TOTAL SWAPS SINCE LAST SCAN.
         M     R8,ONEGRAND       FOR CENTISECONDS AND 1 DECIMAL PLACE.
         DR    R8,R5             GET PHYSICAL SWAP RATE.
         CVD   R9,WORK
         MVC   PHYSWPRT,ED2PNT1
         ED    PHYSWPRT,WORK+6
         L     R6,244(,R1)       TPUT SWAP COUNT.
         LR    R9,R6             CURRENT TPUT SWAP COUNT.
         S     R9,TPUTSWAP       GET CHANGE IN TOTAL TPUT SWAPS.
         ST    R6,TPUTSWAP       SAVE TPUT SWAP COUNT.
         M     R8,ONEGRAND       FOR CENTISECONDS AND 1 DECIMAL PLACE.
         DR    R8,R5             GET TPUT SWAP RATE.
         CVD   R9,WORK
         MVC   TPTSWPRT,ED2PNT1
         ED    TPTSWPRT,WORK+6
         L     R6,248(,R1)       TGET SWAP COUNT.
         LR    R9,R6             CURRENT TOTAL TGET SWAP COUNT.
         S     R9,TGETSWAP       GET CHANGE IN TGET SWAPS.
         ST    R6,TGETSWAP       SAVE TGET SWAP COUNT.
         M     R8,ONEGRAND       FOR CENTISECONDS AND 1 DECIMAL PLACE.
         DR    R8,R5             GET TGET SWAP RATE.
         CVD   R9,WORK
         MVC   TGTSWPRT,ED2PNT1
         ED    TGTSWPRT,WORK+6
         MVC   0(L'LOWX,R2),LOWX SUPPLY HEADING ATTRIBUTES.
         MVI   0(R2),X'FF'       INDICATE NON-SCROLLABLE LINE.
         MVC   L'LOWX(DMDL,R2),SWPRTHDR
         BAS   R14,SADDLINE      LINE NOW COMPLETE.
         MVC   0(LL-79,R2),HIGHX HIGH INTENSITY FOR HEADING.
         MVI   8(R2),X'F7'       SHOW HEADING IN WHITE.         (I3279)
         MVI   2(R2),X'F4'       USE UNDERSCORE FOR HEADING.    (I3279)
         MVI   5(R2),X'C4'       SUPPLY UNDERLINE ALSO.         (F9526)
         TM    220(R4),X'7F'     IN WLM GOAL MODE?
         BM    SCOMPAT           NO, NO POLICY TO EXTRACT.
         TM    MODESW2,AUTH      APF AUTHORIZED?
         BO    SRVCLSES          YES, GO EXTRACT POLICY.
SCOMPAT  MVC   LL-79(DMDL,R2),HEADINGS  LOAD COLUMN LABELS.
         BAS   R14,SADDLINE      LINE NOW COMPLETE.
         USING DMNLINE,R2
         XC    DMNTOTLS,DMNTOTLS CLEAR COUNTERS.
         LH    R3,188(,R4)       GET NUMBER OF DOMAINS.
         L     R4,180(,R4)       GET FIRST DOMAIN TABLE ENTRY.
DMNLOOP  MVC   DMNENTRY,LOWX     LOW INTENSITY AND TURQUOISE.
         SLR   R5,R5             PREPARE FOR INSERT CHARACTER.
         IC    R5,0(,R4)         GET DOMAIN NUMBER.
         CVD   R5,WORK
         MVC   DMNID,ED3
         ED    DMNID,WORK+6
         LH    R5,52(,R4)        MINIMUM MULTIPROGRAMMING LEVEL.
         CVD   R5,WORK
         MVC   MIN,ED3
         ED    MIN,WORK+6
         LH    R5,54(,R4)        MAXIMUM MULTIPROGRAMMING LEVEL.
         CVD   R5,WORK
         MVC   MAX,ED3
         ED    MAX,WORK+6
         LH    R5,2(,R4)         MPL IN TARGET.
         CVD   R5,WORK
         MVC   MPLI,ED3
         ED    MPLI,WORK+6
         LH    R5,4(,R4)         MPL OUT TARGET.
         CVD   R5,WORK
         MVC   MPLO,ED3
         ED    MPLO,WORK+6
         LH    R5,6(,R4)         AVERAGE NUMBER OF READY USERS.
         TM    OSLEVEL+1,CVTH5510
         BNO   SRUAINT
         L     R5,80(,R4)        AVERAGE NUMBER OF READY USERS.
SRUAINT  SRL   R5,4              CONVERT TO INTEGER.
         CVD   R5,WORK
         A     R5,RUATOTAL
         ST    R5,RUATOTAL
         MVC   RUA,ED3
         ED    RUA,WORK+6
         LH    R5,10(,R4)        CURRENT MULTIPROGRAMMING LEVEL.
         CVD   R5,WORK
         A     R5,CMPLTOTL
         ST    R5,CMPLTOTL
         MVC   CMPL,ED3
         ED    CMPL,WORK+6
         LH    R5,12(,R4)        CURRENT NUMBER OF USERS ON OUT QUEUE.
         CVD   R5,WORK
         A     R5,OUTUTOTL
         ST    R5,OUTUTOTL
         MVC   OUTU,ED3
         ED    OUTU,WORK+6
         LH    R5,14(,R4)        CURRENT NUMBER OF SWPABL INCORE USERS.
         CVD   R5,WORK
         A     R5,INCTOTL
         ST    R5,INCTOTL
         MVC   INC,ED3
         ED    INC,WORK+6
         LH    R5,34(,R4)        CURRENT NUMBER OF NON-SWAPPABLE USERS.
         CVD   R5,WORK
         A     R5,NSWTOTL
         ST    R5,NSWTOTL
         MVC   NSW,ED3
         ED    NSW,WORK+6
         LH    R5,36(,R4)        MAXIMUM NUMBER OF READY USERS
         CVD   R5,WORK                   IN INTERVAL.
         A     R5,MXRUTOTL
         ST    R5,MXRUTOTL
         MVC   MXRU,ED3
         ED    MXRU,WORK+6
         L     R5,24(,R4)        WEIGHTED INTERVAL DOMAIN SERVICE.
         CVD   R5,WORK
         OC    WORK(5),WORK      GREATER THAN 99,999?
         BNZ   BIGTWSR           YES.
         MVC   TWSR+1(6),ED5     NO.
         ED    TWSR+1(6),WORK+5
         B     DONETWSR          DONE TIME-WEIGHTED SERVICE RATE.
BIGTWSR  SRP   WORK,64-3,0       DIVIDE BY ONE THOUSAND.
         MVC   TWSR,ED5          EDIT MASK AND 'K' FOR THOUSAND.
         ED    TWSR(6),WORK+5
DONETWSR SLR   R7,R7
         ICM   R7,3,32(R4)       GET CONTENTION INDEX FOR THIS DOMAIN.
         TM    OSLEVEL,CVTH4410  PRE MVS/SP4?
         BNO   DMNOLDCI          YES.
         MVC   CIDX,=X'404020202021204B2020'
         CVD   R7,WORK
         ED    CIDX,WORK+4
         B     DMNDONCI
DMNOLDCI M     R6,ONEGRAND       THREE DECIMAL PLACES.
         SRDL  R6,8              SHIFT OUT 8 HEX PLACES.
         MVC   CIDX,=X'4040202021204B202020'
         CVD   R7,WORK
         ED    CIDX,WORK+4
DMNDONCI ICM   R7,15,20(R4)      SHOW INTERVAL ACCUMULATED SERVICE.
         BZ    NODMNSRV          ZERO, SO THIS DOMAIN IS INACTIVE.
         MVI   DMNENTRY+4,X'F8'  HIGH INTENSITY.
         MVI   DMNENTRY+8,X'F3'  USING SOME RESOURCES - PINK.   (I3279)
NODMNSRV DS    0H
         MVC   ASRV,=X'40202020202020202120'
         CVD   R7,WORK
         A     R7,ACUMTOTL
         ST    R7,ACUMTOTL
         ED    ASRV,WORK+3
         BAS   R14,SADDLINE      LINE NOW COMPLETE.
         TM    OSLEVEL+1,CVTH5510 SP5?
         BNO   SADDLEN           NO.
         L     R4,128(,R4)       YES, POINT TO NEXT DOMAIN ENTRY.
         B     SADDEDL
SADDLEN  AH    R4,DMDTSIZE       POINT TO NEXT DOMAIN ENTRY.
SADDEDL  BCT   R3,DMNLOOP
         MVC   DMNENTRY,MEDX     MEDIUM INTENSITY.
         MVI   DMNENTRY+8,X'F2'  RED.                           (I3279)
         MVI   DMNID,C' '        CLEAR OUTPUT LINE TO BLANKS.
         MVC   DMNID+1(DMDL-1),DMNID
         MVC   MAX(5),=C'TOTAL'
         L     R5,RUATOTAL
         CVD   R5,WORK
         MVC   RUA,ED3
         ED    RUA,WORK+6
         L     R5,CMPLTOTL
         CVD   R5,WORK
         MVC   CMPL,ED3
         ED    CMPL,WORK+6
         L     R5,OUTUTOTL
         CVD   R5,WORK
         MVC   OUTU,ED3
         ED    OUTU,WORK+6
         L     R5,INCTOTL
         CVD   R5,WORK
         MVC   INC,ED3
         ED    INC,WORK+6
         L     R5,NSWTOTL
         CVD   R5,WORK
         MVC   NSW,ED3
         ED    NSW,WORK+6
         L     R5,MXRUTOTL
         CVD   R5,WORK
         MVC   MXRU,ED3
         ED    MXRU,WORK+6
         L     R5,ACUMTOTL
         CVD   R5,WORK
         MVC   ASRV-2(12),ED11
         ED    ASRV-2(12),WORK+2
         BAS   R14,SADDLINE      LINE NOW COMPLETE.
         B     SSUMMARY
         DROP  R2                DMNLINE.
         SPACE
SRVCLSES DS    0H
         ICM   R1,15,SPQRYPTR    COLLECTION AREA CREATED?
         BNZ   PQRYREDO          YES.
         L     R0,SPQRYLEN       NO, GET AREA SIZE.
         GETMAIN RU,LV=(0),SP=SUBPOOL,LOC=(31,64),BNDRY=PAGE
         ST    R1,SPQRYPTR       SAVE AREA ADDRESS.
PQRYREDO DS    0H
         MODESET MF=(E,MDSTSUP)  GET INTO SUPERVISOR STATE.
         L     R4,SPQRYPTR       POINT TO QUERY AREA.
         IWMPQRY ANSAREA=(R4),ANSLEN=SPQRYLEN,QUERYLEN=SPQRETLN,       +
               MF=(E,SPQRYLST)   GET CURRENT WORKLOAD POLICY.
         LR    R4,R0             SAVE REASON CODE.
         MODESET MF=(E,MDSTPRB)  REVERT TO PROBLEM STATE.
         CLM   R4,3,=X'040A'     WAS AREA LARGE ENOUGH?
         BNE   COLLINIT          YES.
         LM    R0,R1,SPQRYLEN    NO, GET LENGTH AND ADDRESS OF AREA.
         FREEMAIN RU,A=(1),LV=(0),SP=SUBPOOL
         ST    R15,SPQRYPTR      RESET AREA POINTER.
         L     R1,SPQRETLN       GET REQUIRED AREA SIZE.
         LA    R1,4095(,R1)
         SRL   R1,12
         SLL   R1,12             ROUND UP TO NEXT PAGE BOUNDARY.
         ST    R1,SPQRYLEN       SAVE THE NEW SIZE.
         B     SRVCLSES          RETRY.
COLLINIT DS    0H
         ICM   R1,15,SCOLLPTR    COLLECTION AREA CREATED?
         BNZ   COLLREDO          YES.
         L     R0,SCOLLLEN       NO, GET AREA SIZE.
         SLL   R0,1              DOUBLE IT FOR TWO AREAS.
         GETMAIN RU,LV=(0),SP=SUBPOOL,LOC=(31,64),BNDRY=PAGE
         ST    R1,SCOLLPTR       SAVE AREA ADDRESS.
         A     R1,SCOLLLEN       POINT HALFWAY INTO AREA.
         ST    R1,SCOLLPT2       SAVE AREA ADDRESS.
COLLREDO DS    0H
         MODESET MF=(E,MDSTSUP)  GET INTO SUPERVISOR STATE.
         L     R4,SCOLLPTR       POINT TO QUERY AREA.
         MVC   SCOLLPTR,SCOLLPT2 SWITCH COLLECTION AREAS.
         ST    R4,SCOLLPT2
         IWMRCOLL ICS=NO,ANSAREA=(R4),ANSLEN=SCOLLLEN,                 +
               MINLEN=SCOLLMIN,MAXLEN=SCOLLMAX,ANSTOKN=SANSTOKN,       +
               MF=(E,SCOLLST)    GET CURRENT WORKLOAD POLICY.
         LR    R4,R0             SAVE REASON CODE.
         MODESET MF=(E,MDSTPRB)  REVERT TO PROBLEM STATE.
*        CLM   R4,3,=X'040F'     IS POLICY TOKEN STILL CURRENT?
*        BE    ?                 NO.
         CLM   R4,3,=X'0832'     WAS AREA LARGE ENOUGH?
         BE    COLLFREE          NO, MORE NEEDED WITH NEW POLICY.
         CLM   R4,3,=X'040A'     WAS AREA LARGE ENOUGH?
         BNE   COLLOKAY          YES.
COLLFREE LM    R0,R1,SCOLLLEN    NO, GET LENGTH AND ADDRESS OF AREA.
         C     R1,SCOLLPT2       GOT START OF AREA?
         BNH   *+8               YES.
         L     R1,SCOLLPT2       NO, BUT HAVE NOW.
         SLL   R0,1              DOUBLE IT FOR TWO AREAS.
         FREEMAIN RU,A=(1),LV=(0),SP=SUBPOOL
         ST    R15,SCOLLPTR      RESET AREA POINTER.
         ST    R15,SCOLLPT2      RESET AREA POINTER.
         L     R1,SCOLLMAX       GET REQUIRED AREA SIZE.
         LA    R1,4095(,R1)
         SRL   R1,12
         SLL   R1,12             ROUND UP TO NEXT PAGE BOUNDARY.
         ST    R1,SCOLLLEN       SAVE THE NEW SIZE.
         B     COLLINIT          RETRY.
COLLOKAY L     R3,SCOLLPT2       POINT TO RETURNED DATA.
         USING RCAA,R3
         L     R4,SCOLLPTR       POINT TO PREVIOUS AREA.
         L     R15,RCAANTV#
         S     R15,RCAANTV#-RCAA(,R4)
         ST    R15,SSAMPLES      SAVE CHANGE IN SAMPLE CYCLE COUNT.
         LM    R14,R15,RCAATMR-RCAA(R4)
         CLI   0(R4),C'R'        PREVIOUS AREA BEEN USED YET?
         BE    *+8               YES, USE PREVIOUS COLLECTION TIME.
         LM    R14,R15,RCAATMI   NO, USE REPORTING INITIALIZATION TIME.
         LM    R0,R1,RCAATMR     GET CURRENT REPORT TIME.
         STM   R14,R15,WORK      SAVE FROM TIME.
         SLR   R1,R15            GET TIME DIFFERENCE  - LOW ORDER.
         BC    3,*+6
         BCTR  R0,0              BORROW.
         SLR   R0,R14            GET TIME DIFFERENCE  - HIGH ORDER.
         SRDL  R0,12             CONVERT TO MICROSECONDS.
         CL    R0,=F'499'        IS ELAPSED TOO LONG TO PROCESS?
         BNL   SELAPSDN          YES, SKIP DIVIDE AND STORE.
         D     R0,ONEGRAND       CONVERT TO MILLISECONDS.
         ST    R1,SELAPSED       SAVE THE ELAPSED TIME SAMPLE BASE.
SELAPSDN STCKCONV STCKVAL=WORK,  INPUT STCK VALUE.                     +
               CONVVAL=SECWORKA, OUTPUT FOUR WORDS.                    +
               TIMETYPE=DEC,     GET TIME DECIMAL DIGITS (DEFAULT).    +
               DATETYPE=YYYYMMDD, DATE FORMAT.                         +
               MF=(E,STCKCNVL)   SPECIFY PARAMETER LIST.
         UNPK  HEADWSDT(5),SECWORKA+8(3)
         MVI   HEADWSDT+4,C'-'
         UNPK  HEADWSDT+5(3),SECWORKA+10(2)
         MVI   HEADWSDT+7,C'-'
         UNPK  HEADWSDT+8(3),SECWORKA+11(2)
         MVI   HEADWSDT+10,C' '
         UNPK  HEADWSTM(3),SECWORKA(2)
         MVI   HEADWSTM+2,C':'
         UNPK  HEADWSTM+3(3),SECWORKA+1(2)
         MVI   HEADWSTM+5,C':'
         UNPK  HEADWSTM+6(3),SECWORKA+2(2)
         MVI   HEADWSTM+8,C'.'
         UNPK  HEADWSTM+9(3),SECWORKA+2(2)
         MVI   HEADWSTM+11,C' '
         MVC   LL-79(79,R2),HEADWLMS  LOAD HEADING.
         BAS   R14,SADDLINE      LINE NOW COMPLETE.
         SPACE
         USING SVELINE,R2
         ICM   R0,15,SSAMPLES    ANY SAMPLING DONE?
         BNP   SVELDONE          NO, SKIP VELOCITY/DELAY DISPLAY.
         MVC   SVLENTRY,MEDX     SUPPLY HEADING ATTRIBUTES.
         MVC   SVLCLS(30),=C'VELOCITY AND DELAY PERCENTAGES'
         BAS   R14,SADDLINE      LINE NOW COMPLETE.
         MVC   SVLENTRY,HIGHX    SUPPLY HEADING ATTRIBUTES.
         MVC   SVLCLS(79),HEADSVEL
         BAS   R14,SADDLINE      LINE NOW COMPLETE.
         LH    R1,RCAASCA#       GET NUMBER OF SERVICE CLASS ENTRIES.
         L     R4,RCAASCOF       GET OFFSET TO SERVICE CLASS ENTRIES.
         AR    R4,R3             POINT TO SERVICE CLASS ENTRIES.
         USING RCAE,R4
SSCLVLLP ST    R1,SSRVCNTR       SAVE SERVICES CLASSES TO GO.
         LH    R7,RCAEPER#       GET THE NUMBER OF PERIODS FOR CLASS.
         L     R5,RCAEPERO       GET OFFSET TO PERIOD DATA.
         AR    R5,R4             POINT TO PERIOD DATA.
         USING RCAEIHDR,R5
SVLPERLP ICM   R6,15,RCAEIGOF    GET EXECUTION DELAY DATA OFFSET.
         BZ    SNXVLPER          NO DATA SO CHECK NEXT PERIOD.
         AR    R6,R5             POINT TO EXECUTION DELAY DATA.
SNDELA   USING RCAEDELA,R6
         LR    R8,R6             COPY EXECUTION DELAY DATA ADDRESS.
         SR    R8,R3             GET OFFSET INTO THIS AREA.
         A     R8,SCOLLPTR       POINT TO PREVIOUS COLLECTION DATA.
SODELA   USING RCAEDELA,R8
         L     R9,SNDELA.RCAETOTS2
         S     R9,SODELA.RCAETOTS2
         LTR   R9,R9
         BNP   SNXVLPER          NO SAMPLES SO CHECK NEXT PERIOD.
         ST    R9,SSAMPLES       SAVE CHANGE IN TOTAL PERIOD SAMPLES.
         L     R9,SNDELA.RCAETOTD
         S     R9,SODELA.RCAETOTD
         L     R15,SNDELA.RCAETOTU
         S     R15,SODELA.RCAETOTU
         MVI   SVLVEL+3,C'0'     PREPARE FOR EXACTLY ZERO.
         BZ    SVELOCOK          VELOCITY IS EXACTLY ZERO.
         AR    R9,R15            GET RCAETOTD + RCAETOTU.
         MVI   SVLVEL+3,C' '     PREPARE FOR NO SAMPLES.
         BNP   SNXVLPER          NO SAMPLES SO CHECK NEXT PERIOD.
         ST    R9,SSAMPDEN       SET DENOMINATOR.
         LA    R1,SVLVEL         POINT TO DISPLAY AREA.
         BAS   R14,SDLAYFMT      SHOW VELOCITY.
SVELOCOK MVC   SSAMPDEN,SSAMPLES SET DENOMINATOR.
         L     R15,SNDELA.RCAECUSE
         S     R15,SODELA.RCAECUSE
         LA    R1,SVLCPU         POINT TO DISPLAY AREA.
         BAS   R14,SDLAYFMT      SHOW USING CPU PERCENTAGE.
         L     R15,SNDELA.RCAEIOU
         S     R15,SODELA.RCAEIOU
         LA    R1,SVLIOU         POINT TO DISPLAY AREA.
         BAS   R14,SDLAYFMT      SHOW USING I/O PERCENTAGE.
         L     R15,SNDELA.RCAECDEL
         S     R15,SODELA.RCAECDEL
         LA    R1,SVLCPWT        POINT TO DISPLAY AREA.
         BAS   R14,SDLAYFMT      SHOW CPU DELAY PERCENTAGE.
         L     R15,SNDELA.RCAEIOD
         S     R15,SODELA.RCAEIOD
         LA    R1,SVLCPWT        POINT TO DISPLAY AREA.
         BAS   R14,SDLAYFMT      SHOW I/O DELAY PERCENTAGE.
         L     R15,SNDELA.RCAECCAP
         S     R15,SODELA.RCAECCAP
         LA    R1,SVLCCAP        POINT TO DISPLAY AREA.
         BAS   R14,SDLAYFMT      SHOW CPU CAPPING DELAY PERCENTAGE.
         L     R15,SNDELA.RCAESWIN
         S     R15,SODELA.RCAESWIN
         A     R15,SNDELA.RCAEDMPL
         S     R15,SODELA.RCAEDMPL
         LA    R1,SVLSWAP        POINT TO DISPLAY AREA.
         BAS   R14,SDLAYFMT      SHOW SWAP IN DELAY PERCENTAGE.
         L     R15,SNDELA.RCAEAPRV
         S     R15,SODELA.RCAEAPRV
         A     R15,SNDELA.RCAEACOM
         S     R15,SODELA.RCAEACOM
         A     R15,SNDELA.RCAEXM
         S     R15,SODELA.RCAEXM
         A     R15,SNDELA.RCAEVIO
         S     R15,SODELA.RCAEVIO
         A     R15,SNDELA.RCAEHSPC
         S     R15,SODELA.RCAEHSPC
         A     R15,SNDELA.RCAECHS
         S     R15,SODELA.RCAECHS
         A     R15,SNDELA.RCAEASPD
         S     R15,SODELA.RCAEASPD
         LA    R1,SVLAUX         POINT TO DISPLAY AREA.
         BAS   R14,SDLAYFMT      SHOW AUX PAGE IN DELAY PERCENTAGE.
         L     R15,SNDELA.RCAEUNKN
         S     R15,SODELA.RCAEUNKN
         LA    R1,SVLUNKN        POINT TO DISPLAY AREA.
         BAS   R14,SDLAYFMT      SHOW UNKNOWN DELAY PERCENTAGE.
         L     R15,SNDELA.RCAEIDLE
         S     R15,SODELA.RCAEIDLE
         LA    R1,SVLIDLE        POINT TO DISPLAY AREA.
         BAS   R14,SDLAYFMT      SHOW IDLING PERCENTAGE.
         DROP  SNDELA,SODELA     RCAEDELA.
SVLDROK2 L     R1,SPQRYPTR       POINT TO POLICY QUERY DATA AREA.
         SLR   R9,R9             YES.
         ICM   R9,3,RCAECLX      GET SERVICE CLASS INDEX.
         USING SVPOLHD,R1
         BNP   SVLCLSOK          ZERO IS INVALID.
         CH    R9,SVPOLDCC       IS SERVICE CLASS INDEX TOO HIGH?
         BH    SVLCLSOK          YES, CAN'T SHOW SERVICE CLASS.
         BCTR  R9,0              CONVERT TO RELATIVE ENTRY NUMBER.
         MH    R9,SVPOLDCL       GET OFFSET INTO CLASS ENTRIES.
         A     R9,SVPOLDCO       ADD OFFSET OF FIRST CLASS ENTRY.
         ALR   R9,R1             POINT TO SERVICE CLASS ENTRY.
         USING SVPOLCD,R9
         MVC   SVLCLS,SVPOLCNM   LOAD THE SERVICE CLASS NAME.
SVLCLSOK LA    R14,1
         SLR   R6,R6
         CH    R14,RCAEPER#      SINGLE-PERIOD CLASS?
         BE    SVLPEROK          YES, DO NOT SHOW PERIOD NUMBER.
         LH    R14,RCAEPER#      GET THE NUMBER OF PERIODS FOR CLASS.
         SR    R14,R7
         LR    R6,R14
         IC    R14,HEX+1(R14)    GET PERIOD NUMBER.
         STC   R14,SVLPER        SHOW IT.
         MH    R6,SVPOLDZL
SVLPEROK AL    R6,SVPOLCPO       GET PERIOD'S ENTRY OFFSET.
         ALR   R6,R9             POINT TO PERIOD'S ENTRY.
         DROP  R1                SVPOLHD.
         USING SVPOLPD,R6
         TM    SVPOLTYP,SVPOLVEL VELOCITY GOAL?
         BZ    SVLGOALD          NO, DO NOT SHOW GOAL.
         L     R0,SVPOLVAL       YES, SHOW GOAL VELOCITY.
         CVD   R0,WORK
         MVC   SVLGOAL,ED3
         ED    SVLGOAL,WORK+6
         DROP  R6,R9             SVPOLPD, SVPOLCD.
SVLGOALD TR    LL-79(DMDL,R2),XLATETBL
         MVI   SVLCPU,X'24'      CONSUMPTION IN GREEN.
         MVI   SVLCPWT,X'22'     DELAYS IN RED.
         MVI   SVLUNKN,X'25'
         BAS   R14,SSPCLINE      LINE NOW COMPLETE.
SNXVLPER A     R5,RCAEINXP       POINT TO NEXT PERIOD'S DATA.
         BCT   R7,SVLPERLP       PROCESS NEXT PERIOD.
         L     R1,SSRVCNTR       GET REMAINING CLASS COUNT.
         AH    R4,RCAASCAL       POINT TO NEXT CLASS'S DATA.
         BCT   R1,SSCLVLLP       PROCESS NEXT CLASS.
         DROP  R5,R4,R2          RCAEIHDR, RCAE, SVELINE.
         LR    R1,R2             GET BUFFER POINTER.
         AHI   R1,-DMLL          POINT TO PREVIOUS LINE.
         MVI   2(R1),X'F4'       UNDERSCORE FOR SEPARATION.
         SPACE
         USING SRTLINE,R2
SVELDONE MVC   SRTENTRY,MEDX     SUPPLY HEADING ATTRIBUTES.
         MVC   SRTCLS(19),=C'TRANSACTION SUMMARY'
         BAS   R14,SADDLINE      LINE NOW COMPLETE.
         MVC   SRTENTRY,HIGHX    SUPPLY HEADING ATTRIBUTES.
         MVC   SRTCLS(79),HEADSRTS
         BAS   R14,SADDLINE      LINE NOW COMPLETE.
         LH    R1,RCAASCA#       GET NUMBER OF SERVICE CLASS ENTRIES.
         L     R4,RCAASCOF       GET OFFSET TO SERVICE CLASS ENTRIES.
         AR    R4,R3             POINT TO SERVICE CLASS ENTRIES.
         USING RCAE,R4
SSCLRTLP ST    R1,SSRVCNTR       SAVE SERVICES CLASSES TO GO.
         LH    R7,RCAEPER#       GET THE NUMBER OF PERIODS FOR CLASS.
         L     R5,RCAEPERO       GET OFFSET TO PERIOD DATA.
         AR    R5,R4             POINT TO PERIOD DATA.
         USING RCAEIHDR,R5
SRTPERLP ICM   R6,15,RCAEIPOF    GET RESPONSE TIME DATA OFFSET.
         BZ    SNXRTPER          NO DATA SO CHECK NEXT PERIOD.
         AR    R6,R5             POINT TO DISTRIBUTION DATA.
SNRST    USING RCAERST,R6
         LR    R8,R6             COPY DISTRIBUTION DATA ADDRESS.
         SR    R8,R3             GET OFFSET INTO THIS AREA.
         A     R8,SCOLLPTR       POINT TO PREVIOUS COLLECTION DATA.
SORST    USING RCAERST,R8
         L     R9,SNRST.RCAERCP  GET TRANSACTION COMPLETION COUNT.
         S     R9,SORST.RCAERCP  GET CHANGE IN TRANSACTION COUNT.
         BNP   SNXRTPER          NO TRANSACTIONS SO CHECK NEXT PERIOD.
         CVD   R9,WORK           SHOW THE TRANSACTION COUNT.
         MVC   SRTXACT,ED11
         ED    SRTXACT,WORK+2
         LR    R15,R9            COPY TRANSACTION COUNT.
         M     R14,TENGRAND
         ICM   R0,15,SELAPSED    COPY ELAPSED TIME.
         BNP   SRTDOK1           SKIP DIVIDE IF ELAPSED IS INVALID.
         SRL   R0,1              HALVE IT.
         CLR   R14,R0            DIVIDE PROBLEMS?
         BH    SRTDOK1           YES, SKIP DIVIDE.
         D     R14,SELAPSED      GET TRANSACTIONS PER DECISECOND.
         CVD   R15,WORK          SHOW TRANSACTION RATE.
         MVC   SRTRATE,=X'40202021204B20'
         ED    SRTRATE,WORK+5
SRTDOK1  LM    R14,R15,SNRST.RCAETET
         SL    R15,SORST.RCAETET2
         BC    3,SRTSLHI1
         BCTR  R14,0             BORROW.
SRTSLHI1 SL    R14,SORST.RCAETET1
         LR    R0,R14
         OR    R0,R15            ANY TIME ACRUED?
         BZ    SRTDROK1          NO, SKIP DISPLAY.
         LR    R0,R9             COPY TRANSACTION COUNT.
         SRL   R0,1              HALVE IT.
         MVI   SRTAVRT+6,C'>'
         MVC   SRTAVRT+7(5),SRTAVRT+6
         CLR   R14,R0            DIVIDE PROBLEMS?
         BH    SRTDROK1          YES, SKIP DIVIDE.
         DR    R14,R9            GET TIME PER TRANSACTION.
         SLR   R14,R14           CLEAR REMAINDER.
         SLDL  R14,10            CONVERT TO MICROSECONDS.
         CL    R14,=F'499'       IS TIME TOO BIG TO PROCESS?
         BNL   SRTDROK1          YES, SKIP DIVIDE.
         D     R14,ONEGRAND      CONVERT TO MILLISECONDS.
         CVD   R15,WORK          SHOW AVERAGE RESPONSE TIME.
         MVC   SRTAVRT,ED11
         ED    SRTAVRT,WORK+2
SRTDROK1 LM    R14,R15,SNRST.RCAEXET
         SL    R15,SORST.RCAEXET2
         BC    3,SRTSLHI2
         BCTR  R14,0             BORROW.
SRTSLHI2 SL    R14,SORST.RCAEXET1
         LR    R0,R14
         OR    R0,R15            ANY TIME ACRUED?
         BZ    SRTDROK2          NO, SKIP DISPLAY.
         LR    R0,R9             COPY TRANSACTION COUNT.
         SRL   R0,1              HALVE IT.
         MVI   SRTAVEX+6,C'>'
         MVC   SRTAVEX+7(5),SRTAVEX+6
         CLR   R14,R0            DIVIDE PROBLEMS?
         BH    SRTDROK2          YES, SKIP DIVIDE.
         DR    R14,R9            GET TIME PER TRANSACTION.
         SLR   R14,R14           CLEAR REMAINDER.
         SLDL  R14,10            CONVERT TO MICROSECONDS.
         CL    R14,=F'499'       IS TIME TOO BIG TO PROCESS?
         BNL   SRTDROK2          YES, SKIP DIVIDE.
         D     R14,ONEGRAND      CONVERT TO MILLISECONDS.
         CVD   R15,WORK          SHOW AVERAGE EXECUTION TIME.
         MVC   SRTAVEX,ED11
         ED    SRTAVEX,WORK+2
         DROP  SNRST,SORST       RCAERST.
SRTDROK2 L     R1,SPQRYPTR       POINT TO POLICY QUERY DATA AREA.
         SLR   R9,R9             YES.
         ICM   R9,3,RCAECLX      GET SERVICE CLASS INDEX.
         USING SVPOLHD,R1
         BNP   SRTCLSOK          ZERO IS INVALID.
         CH    R9,SVPOLDCC       IS SERVICE CLASS INDEX TOO HIGH?
         BH    SRTCLSOK          YES, CAN'T SHOW SERVICE CLASS.
         BCTR  R9,0              CONVERT TO RELATIVE ENTRY NUMBER.
         MH    R9,SVPOLDCL       GET OFFSET INTO CLASS ENTRIES.
         A     R9,SVPOLDCO       ADD OFFSET OF FIRST CLASS ENTRY.
         ALR   R9,R1             POINT TO SERVICE CLASS ENTRY.
         USING SVPOLCD,R9
         MVC   SRTCLS,SVPOLCNM   LOAD THE SERVICE CLASS NAME.
SRTCLSOK LA    R14,1
         SLR   R6,R6
         CH    R14,RCAEPER#      SINGLE-PERIOD CLASS?
         BE    SRTPEROK          YES, DO NOT SHOW PERIOD NUMBER.
         LH    R14,RCAEPER#      GET THE NUMBER OF PERIODS FOR CLASS.
         SR    R14,R7
         LR    R6,R14
         IC    R14,HEX+1(R14)    GET PERIOD NUMBER.
         STC   R14,SRTPER        SHOW IT.
         MH    R6,SVPOLDZL
SRTPEROK AL    R6,SVPOLCPO       GET PERIOD'S ENTRY OFFSET.
         ALR   R6,R9             POINT TO PERIOD'S ENTRY.
         DROP  R1                SVPOLHD.
         USING SVPOLPD,R6
         TM    SVPOLTYP,SVPOLPRC+SVPOLAVG
         BZ    SRTGOALD          DO NOT SHOW GOAL.
         MVC   SRTGPCT+2(3),=C'AVG'
         TM    SVPOLTYP,SVPOLAVG
         BO    SRTGLTIM
         LH    R0,SVPOLPER       SHOW PERCENTILE.
         CVD   R0,WORK
         MVC   SRTGPCT,ED3
         ED    SRTGPCT,WORK+6
         MVI   SRTPCT,C'%'
SRTGLTIM L     R0,SVPOLVAL
         CVD   R0,WORK
         MVC   SRTLT,ED11
         ED    SRTLT,WORK+2
         MVI   SRTLT+1,C'<'
         SLR   R1,R1
         IC    R1,SVPOLRTU
         SLL   R1,1              MULTIPLY BY TWO FOR INDEX.
         LA    R1,SRTUNITS(R1)
         MVC   SRTLT+12(2),0(R1) SHOW RESPONSE TIME UNITS.
         CLC   =X'F0F0F094A2',SRTLT+12-3
         BNE   SRTUNTOK          NOT MULTIPLE OF 1000 MILLISECONDS.
         MVC   SRTLT+12-3(5),BLANKS
         MVI   SRTLT+12-3,X'A2'  CONVERT TO SECONDS.
SRTUNTOK CLI   SRTLT+3,C' '      LEADING BLANK TO REMOVE?
         BNE   SRTGLOK           NO
         MVC   SRTLT+3(11),SRTLT+4
         B     SRTUNTOK
SRTGLOK  L     R0,SVPOLDUR       SHOW DURATION.
         CVD   R0,WORK
         MVC   SRTDUR,ED7Z
         ED    SRTDUR,WORK+4
         DROP  R6,R9             SVPOLPD, SVPOLCD.
SRTGOALD BAS   R14,SADDLINE      LINE NOW COMPLETE.
SNXRTPER A     R5,RCAEINXP       POINT TO NEXT PERIOD'S DATA.
         BCT   R7,SRTPERLP       PROCESS NEXT PERIOD.
         L     R1,SSRVCNTR       GET REMAINING CLASS COUNT.
         AH    R4,RCAASCAL       POINT TO NEXT CLASS'S DATA.
         BCT   R1,SSCLRTLP       PROCESS NEXT CLASS.
         DROP  R5,R4,R2          RCAEIHDR, RCAE, SRTLINE.
         LR    R1,R2             GET BUFFER POINTER.
         AHI   R1,-DMLL          POINT TO PREVIOUS LINE.
         MVI   2(R1),X'F4'       UNDERSCORE FOR SEPARATION.
         SPACE
         MVC   0(LL-79,R2),MEDX  SUPPLY HEADING ATTRIBUTES.
         MVC   LL-79(37,R2),=C'RESPONSE TIME AS A PERCENTAGE OF GOAL'
         BAS   R14,SADDLINE      LINE NOW COMPLETE.
         MVC   0(LL-79,R2),HIGHX SUPPLY HEADING ATTRIBUTES.
         LH    R0,RCAABMP#       GET NUMBER OF RESPONSE TIME BUCKETS.
         L     R4,RCAABMPO       GET OFFSET TO RESPONSE TIME BUCKETS.
         AR    R4,R3             POINT TO RESPONSE TIME BUCKETS.
         LA    R15,5             GET COLUMNS PER BUCKET.
         MR    R14,R0
         LA    R1,DMLL(,R2)      POINT PAST DISPLAY LINE.
         SR    R1,R15            POINT TO DISPLAY AREA.
SDBHDGLP MVC   1(4,R1),=C'REST'  CATER FOR LAST ONE.
         ICM   R15,15,0(R4)      GET PERCENTAGE.
         BM    SDBHDGOK
         CVD   R15,WORK          SHOW IT.
         MVC   0(4,R1),ED3
         ED    0(4,R1),WORK+6
         MVI   4(R1),C'%'
SDBHDGOK AH    R4,RCAABMPL       POINT TO NEXT SLOT.
         LA    R1,5(,R1)         POINT TO NEXT DISPLAY AREA.
         BCT   R0,SDBHDGLP
         MVC   LL-79(10,R2),HEADSRTS
         BAS   R14,SADDLINE      LINE NOW COMPLETE.
         LH    R1,RCAASCA#       GET NUMBER OF SERVICE CLASS ENTRIES.
         L     R4,RCAASCOF       GET OFFSET TO SERVICE CLASS ENTRIES.
         AR    R4,R3             POINT TO SERVICE CLASS ENTRIES.
         USING RCAE,R4
SSCLDBLP ST    R1,SSRVCNTR       SAVE SERVICES CLASSES TO GO.
         LH    R7,RCAEPER#       GET THE NUMBER OF PERIODS FOR CLASS.
         L     R5,RCAEPERO       GET OFFSET TO PERIOD DATA.
         AR    R5,R4             POINT TO PERIOD DATA.
         USING RCAEIHDR,R5
SDBPERLP ICM   R6,15,RCAEIDOF    GET DISTRIBUTION DATA OFFSET.
         BZ    SNXDBPER          NO DATA SO CHECK NEXT PERIOD.
         LH    R0,RCAEID#        GET NUMBER OF RESPONSE TIME BUCKETS.
         AR    R6,R5             POINT TO DISTRIBUTION DATA.
         LR    R8,R6             COPY DISTRIBUTION DATA ADDRESS.
         LR    R1,R6             COPY DISTRIBUTION DATA ADDRESS.
         SR    R8,R3             GET OFFSET INTO THIS AREA.
         A     R8,SCOLLPTR       POINT TO PREVIOUS COLLECTION DATA.
         SLR   R9,R9             CLEAR ACCUMULATOR.
SDBDSLP1 L     R15,0(,R1)        GET TRANSACTION COMPLETION COUNT.
         S     R15,0(,R8)        GET CHANGE IN TRANSACTION COUNT.
         AR    R9,R15            ACCUMULATE PERIOD TOTAL.
         AH    R1,RCAEIDLN       POINT TO NEXT SLOT.
         AH    R8,RCAEIDLN       POINT TO NEXT SLOT IN PREVIOUS AREA.
         BCT   R0,SDBDSLP1
         LTR   R9,R9             SENSIBLE TRANSACTION COUNT?
         BNP   SNXDBPER          NO, SKIP THIS PERIOD.
         LH    R0,RCAEID#        GET NUMBER OF RESPONSE TIME BUCKETS.
         LA    R15,5             GET COLUMNS PER BUCKET.
         MR    R14,R0
         LA    R1,DMLL(,R2)      POINT PAST DISPLAY LINE.
         SR    R1,R15            POINT TO DISPLAY AREA.
         LR    R8,R6             COPY DISTRIBUTION DATA ADDRESS.
         SR    R8,R3             GET OFFSET INTO THIS AREA.
         A     R8,SCOLLPTR       POINT TO PREVIOUS COLLECTION DATA.
SDBDSLP2 L     R15,0(,R6)        GET TRANSACTION COMPLETION COUNT.
         S     R15,0(,R8)        GET CHANGE IN TRANSACTION COUNT.
         BNP   SDBBUKOK          NO CHANGE IN THIS BUCKET.
         MVC   2(3,R1),=C'ALL'
         CR    R15,R9            100%?
         BE    SDBBUKOK          YES, SAVE A DISPLAY COLUMN.
         M     R14,AHUNDRED
         DR    R14,R9
         CVD   R15,WORK          SHOW IT.
         MVC   0(4,R1),ED3
         ED    0(4,R1),WORK+6
         MVI   4(R1),C'%'
SDBBUKOK AH    R6,RCAEIDLN       POINT TO NEXT SLOT.
         AH    R8,RCAEIDLN       POINT TO NEXT SLOT IN PREVIOUS AREA.
         LA    R1,5(,R1)         POINT TO NEXT DISPLAY AREA.
         BCT   R0,SDBDSLP2
         L     R1,SPQRYPTR       POINT TO POLICY QUERY DATA AREA.
         SLR   R9,R9
         ICM   R9,3,RCAECLX      GET SERVICE CLASS INDEX.
         USING SVPOLHD,R1
         BNP   SDBCLSOK          ZERO IS INVALID.
         CH    R9,SVPOLDCC       IS SERVICE CLASS INDEX TOO HIGH?
         BH    SDBCLSOK          YES, CAN'T SHOW SERVICE CLASS.
         BCTR  R9,0              CONVERT TO RELATIVE ENTRY NUMBER.
         MH    R9,SVPOLDCL       GET OFFSET INTO CLASS ENTRIES.
         A     R9,SVPOLDCO       ADD OFFSET OF FIRST CLASS ENTRY.
         DROP  R1                SVPOLHD.
         ALR   R1,R9             POINT TO SERVICE CLASS ENTRY.
         USING SVPOLCD,R1
         MVC   LL-79(8,R2),SVPOLCNM    LOAD THE SERVICE CLASS NAME.
         DROP  R1                SVPOLCD.
SDBCLSOK LA    R14,1
         CH    R14,RCAEPER#      SINGLE-PERIOD CLASS?
         BE    SDBDSTOK          YES, DO NOT SHOW PERIOD NUMBER.
         LH    R14,RCAEPER#      GET THE NUMBER OF PERIODS FOR CLASS.
         SR    R14,R7
         IC    R14,HEX+1(R14)    GET PERIOD NUMBER.
         STC   R14,LL-70(,R2)    SHOW IT.
SDBDSTOK TR    LL-79(DMDL,R2),XLATETBL
         MVI   LL-69(R2),X'24'   GREEN FOR NOT LONGER THAN GOAL.
         MVI   LL-40(R2),X'22'   RED FOR LONGER THAN GOAL.
         BAS   R14,SSPCLINE      LINE NOW COMPLETE.
SNXDBPER A     R5,RCAEINXP       POINT TO NEXT PERIOD'S DATA.
         BCT   R7,SDBPERLP       PROCESS NEXT PERIOD.
         L     R1,SSRVCNTR       GET REMAINING CLASS COUNT.
         AH    R4,RCAASCAL       POINT TO NEXT CLASS'S DATA.
         BCT   R1,SSCLDBLP       PROCESS NEXT CLASS.
         DROP  R5,R4             RCAEIHDR, RCAE.
         LR    R1,R2             GET BUFFER POINTER.
         AHI   R1,-DMLL          POINT TO PREVIOUS LINE.
         MVI   2(R1),X'F4'       UNDERSCORE FOR SEPARATION.
         SPACE
         ICM   R0,15,SELAPSED    SENSIBLE ELAPSED TIME?
         BNP   SSUDONE           NO, SKIP FURTHER DISPLAY.
         USING SSULINE,R2
         MVC   SSUENTRY,MEDX     SUPPLY HEADING ATTRIBUTES.
         MVC   SSUCLS(35),=C'SERVICE ABSORPTION AND PAGING RATES'
         BAS   R14,SADDLINE      LINE NOW COMPLETE.
         MVC   SSUENTRY,HIGHX    SUPPLY HEADING ATTRIBUTES.
         MVC   SSUCLS(79),HEADSRES
         BAS   R14,SADDLINE      LINE NOW COMPLETE.
         LH    R1,RCAASCA#       GET NUMBER OF SERVICE CLASS ENTRIES.
         L     R4,RCAASCOF       GET OFFSET TO SERVICE CLASS ENTRIES.
         AR    R4,R3             POINT TO SERVICE CLASS ENTRIES.
         USING RCAE,R4
SSCLSULP ST    R1,SSRVCNTR       SAVE SERVICES CLASSES TO GO.
         LH    R7,RCAEPER#       GET THE NUMBER OF PERIODS FOR CLASS.
         L     R5,RCAEPERO       GET OFFSET TO PERIOD DATA.
         AR    R5,R4             POINT TO PERIOD DATA.
         USING RCAEIHDR,R5
SSUPERLP ICM   R6,15,RCAEIROF    GET RESOURCE DATA OFFSET.
         BZ    SNXSUPER          NO RESOURCE DATA FOR PERIOD.
         AR    R6,R5             POINT TO RESOURCE DATA.
SNRES    USING RCAERESC,R6
         LR    R8,R6             COPY RESOURCE DATA ADDRESS.
         SR    R8,R3             GET OFFSET INTO THIS AREA.
         A     R8,SCOLLPTR       POINT TO PREVIOUS COLLECTION DATA.
SORES    USING RCAERESC,R8
         CLC   SNRES.RCAESRV,SORES.RCAESRV
         BE    SNXSUPER          SKIP PERIOD WITH NO ACTIVITY.
         LM    R14,R15,SNRES.RCAESRV
         SL    R15,SORES.RCAESRV2
         BC    3,SSUSLHI1
         BCTR  R14,0             BORROW.
SSUSLHI1 SL    R14,SORES.RCAESRV1
         L     R0,SELAPSED
         M     R14,ONEGRAND      WANT SERVICE UNITS PER SECOND.
         SRL   R0,1
         CLR   R14,R0
         BNL   SNXSUPER          SKIP PERIOD WITH TOO MUCH ACTIVITY.
         D     R14,SELAPSED
         CVD   R15,WORK
         MVC   SSURATE,ED7
         ED    SSURATE,WORK+4
*                                TCB CPU UTILISATION PERCENTAGE.
         L     R1,SPQRYPTR       POINT TO WLM POLICY AREA.
         USING SVPOLHD,R1
         L     R9,SVPOLDPO       GET OFFSET TO POLICY DEFINITION.
         ALR   R9,R1             POINT TO POLICY DEFINITION SECTION.
         USING SVPOLSP,R9
         ICM   R9,15,SVPOLCPU    GET CPU COEFFICIENT TIMES 10,000.
         DROP  R9,R1             SVPOLSP, SVPOLHD.
         BNP   SDONETCB
         LA    R1,RCAECPU-RCAERESC
         LA    R15,SSUTCB        POINT TO DISPLAY AREA.
         BAS   R14,SCPUBFMT      FORMAT CPU PERCENTAGE.
SDONETCB DS    0H
*                                SRB CPU UTILISATION PERCENTAGE.
         L     R1,SPQRYPTR       POINT TO WLM POLICY AREA.
         USING SVPOLHD,R1
         L     R9,SVPOLDPO       GET OFFSET TO POLICY DEFINITION.
         ALR   R9,R1             POINT TO POLICY DEFINITION SECTION.
         USING SVPOLSP,R9
         ICM   R9,15,SVPOLSRB    GET SRB COEFFICIENT TIMES 10,000.
         DROP  R9,R1             SVPOLSP, SVPOLHD.
         BNP   SDONESRB
         LA    R1,RCAESRB-RCAERESC
         LA    R15,SSUSRB        POINT TO DISPLAY AREA.
         BAS   R14,SCPUBFMT      FORMAT CPU PERCENTAGE.
SDONESRB DS    0H
*                                TOTAL PAGE-INS RATE.
         LA    R1,RCAEPIR-RCAERESC
         LA    R15,SSUPIR        POINT TO DISPLAY AREA.
         BAS   R14,SPGRTFMT      FORMAT PAGE-IN RATE.
*                                HIPERSPACE PAGE-INS RATE.
         LA    R1,RCAEHSP-RCAERESC
         LA    R15,SSUHSP        POINT TO DISPLAY AREA.
         BAS   R14,SPGRTFMT      FORMAT PAGE-IN RATE.
*                                AUX BLOCK PAGE-INS RATE.
         LA    R1,RCAEBPIR-RCAERESC
         LA    R15,SSUBPIR       POINT TO DISPLAY AREA.
         BAS   R14,SPGRTFMT      FORMAT PAGE-IN RATE.
*                                EXPANDED PAGE-INS RATE.
         LA    R1,RCAEPIE-RCAERESC
         LA    R15,SSUPIE        POINT TO DISPLAY AREA.
         BAS   R14,SPGRTFMT      FORMAT PAGE-IN RATE.
*                                BLOCK EXPANDED PAGE-INS RATE.
         LA    R1,RCAEBPIE-RCAERESC
         LA    R15,SSUBPIE       POINT TO DISPLAY AREA.
         BAS   R14,SPGRTFMT      FORMAT PAGE-IN RATE.
*                                TOTAL AUX BLOCK PAGE-IN RATE.
         LA    R1,RCAEBKIA-RCAERESC
         LA    R15,SSUBKIA       POINT TO DISPLAY AREA.
         BAS   R14,SPGRTFMT      FORMAT PAGE-IN RATE.
*                                TOTAL EXP BLOCK PAGE-IN RATE.
         LA    R1,RCAEBKIE-RCAERESC
         LA    R15,SSUBKIE       POINT TO DISPLAY AREA.
         BAS   R14,SPGRTFMT      FORMAT PAGE-IN RATE.
*                                TOTAL SWAP RATE.
         L     R15,SNRES.RCAESWC GET NEW SWAP COUNT.
         L     R14,SORES.RCAESWC GET OLD SWAP COUNT.
         SR    R15,R14           GET CHANGE IN SWAP COUNT.
         BNP   SSUSWPOK          NO NEW SWAPS DONE.
         M     R14,TENGRAND
         D     R14,SELAPSED      GET SWAPS PER 10 SECONDS.
         CVD   R15,WORK
         MVC   SSUSWP,=X'40202021204B20'
         ED    SSUSWP,WORK+5
SSUSWPOK DS    0H
         DROP  SNRES,SORES       RCAERESC.
         L     R1,SPQRYPTR       POINT TO POLICY QUERY DATA AREA.
         SLR   R9,R9
         ICM   R9,3,RCAECLX      GET SERVICE CLASS INDEX.
         USING SVPOLHD,R1
         BNP   SSUCLSOK          ZERO IS INVALID.
         CH    R9,SVPOLDCC       IS SERVICE CLASS INDEX TOO HIGH?
         BH    SSUCLSOK          YES, CAN'T SHOW SERVICE CLASS.
         BCTR  R9,0              CONVERT TO RELATIVE ENTRY NUMBER.
         MH    R9,SVPOLDCL       GET OFFSET INTO CLASS ENTRIES.
         A     R9,SVPOLDCO       ADD OFFSET OF FIRST CLASS ENTRY.
         ALR   R9,R1             POINT TO SERVICE CLASS ENTRY.
         USING SVPOLCD,R9
         MVC   SSUCLS,SVPOLCNM   LOAD THE SERVICE CLASS NAME.
SSUCLSOK LA    R14,1
         SLR   R6,R6
         CH    R14,RCAEPER#      SINGLE-PERIOD CLASS?
         BE    SSUPEROK          YES, DO NOT SHOW PERIOD NUMBER.
         LH    R14,RCAEPER#      GET THE NUMBER OF PERIODS FOR CLASS.
         SR    R14,R7
         LR    R6,R14
         IC    R14,HEX+1(R14)    GET PERIOD NUMBER.
         STC   R14,SSUPER        SHOW IT.
         MH    R6,SVPOLDZL
SSUPEROK AL    R6,SVPOLCPO       GET PERIOD'S ENTRY OFFSET.
         ALR   R6,R9             POINT TO PERIOD'S ENTRY.
         USING SVPOLPD,R6
         ICM   R0,1,SVPOLIMP+1   GET PERIOD IMPORTANCE LEVEL.
         BZ    SSUIMPOK          SUPPRESS DISPLAY OF ZERO.
         STC   R0,SSUIMP         SHOW IT.
         NI    SSUIMP,X'0F'
         TR    SSUIMP,HEX
         DROP  R6,R9,R1          SVPOLPD, SVPOLCD, SVPOLHD.
SSUIMPOK TR    LL-79(DMDL,R2),XLATETBL
         MVI   SSUIMP-1,X'27'    WHITE FOR IMPORTANCE AND ABSORPTION.
         MVI   SSUTCB,X'24'      GREEN FOR TCB USAGE.
         MVI   SSUSRB,X'26'      YELLOW FOR SRB USAGE.
         MVI   SSUSRB+L'SSUSRB,X'25'
         BAS   R14,SSPCLINE      LINE NOW COMPLETE.
SNXSUPER A     R5,RCAEINXP       POINT TO NEXT PERIOD'S DATA.
         BCT   R7,SSUPERLP       PROCESS NEXT PERIOD.
         L     R1,SSRVCNTR       GET REMAINING CLASS COUNT.
         AH    R4,RCAASCAL       POINT TO NEXT CLASS'S DATA.
         BCT   R1,SSCLSULP       PROCESS NEXT CLASS.
         DROP  R5,R4,R2          RCAEIHDR, RCAE, SSULINE.
         LR    R1,R2             GET BUFFER POINTER.
         AHI   R1,-DMLL          POINT TO PREVIOUS LINE.
         MVI   2(R1),X'F4'       UNDERSCORE FOR SEPARATION.
         SPACE
         USING SIOLINE,R2
SSUDONE  MVC   SIOENTRY,MEDX     SUPPLY HEADING ATTRIBUTES.
         MVC   SIOCLS(21),=C'DASD ACTIVITY SUMMARY'
         BAS   R14,SADDLINE      LINE NOW COMPLETE.
         MVC   SIOENTRY,HIGHX    SUPPLY HEADING ATTRIBUTES.
         MVC   SIOCLS(79),HEADSIOS
         BAS   R14,SADDLINE      LINE NOW COMPLETE.
         LH    R1,RCAASCA#       GET NUMBER OF SERVICE CLASS ENTRIES.
         L     R4,RCAASCOF       GET OFFSET TO SERVICE CLASS ENTRIES.
         AR    R4,R3             POINT TO SERVICE CLASS ENTRIES.
         USING RCAE,R4
SSCLIOLP ST    R1,SSRVCNTR       SAVE SERVICES CLASSES TO GO.
         LH    R7,RCAEPER#       GET THE NUMBER OF PERIODS FOR CLASS.
         L     R5,RCAEPERO       GET OFFSET TO PERIOD DATA.
         AR    R5,R4             POINT TO PERIOD DATA.
         USING RCAEIHDR,R5
SIOPERLP ICM   R6,15,RCAEIROF    GET RESOURCE DATA OFFSET.
         BZ    SNXIOPER          NO RESOURCE DATA FOR PERIOD.
         AR    R6,R5             POINT TO RESOURCE DATA.
SNRS2    USING RCAERESC,R6
         LR    R8,R6             COPY RESOURCE DATA ADDRESS.
         SR    R8,R3             GET OFFSET INTO THIS AREA.
         A     R8,SCOLLPTR       POINT TO PREVIOUS COLLECTION DATA.
SORS2    USING RCAERESC,R8
*                                I/O RATE.
         L     R15,SNRS2.RCAEIORC
         S     R15,SORS2.RCAEIORC
         LTR   R15,R15           ANY I/O?
         BNP   SNXIOPER          NO, SKIP PERIOD.
         ST    R15,SIODELTA      SAVE I/O COUNT CHANGE FOR PERIOD.
         L     R0,SELAPSED
         M     R14,TENGRAND
         SRL   R0,1
         CLR   R14,R0
         BNL   SIORATED
         D     R14,SELAPSED      GET I/O RATE.
         CVD   R15,WORK          SHOW I/O RATE.
         MVC   SIORATE,=X'40202021204B20'
         ED    SIORATE,WORK+5
SIORATED DS    0H                CONNECT TIME PER I/O.
         LA    R1,RCAEIOCT-RCAERESC
         LA    R15,SIOCONN       POINT TO DISPLAY AREA.
         BAS   R14,SFMTIOTM      FORMAT TIME PER I/O.
*                                DISCCONNECT TIME PER I/O.
         LA    R1,RCAEIODT-RCAERESC
         LA    R15,SIODISC       POINT TO DISPLAY AREA.
         BAS   R14,SFMTIOTM      FORMAT TIME PER I/O.
*                                WAIT (QUEUE+PENDING) TIME PER I/O.
         LA    R1,RCAEIOWT-RCAERESC
         LA    R15,SIOWAIT       POINT TO DISPLAY AREA.
         BAS   R14,SFMTIOTM      FORMAT TIME PER I/O.
*                                IOS QUEUE TIME PER I/O.
         TM    OSLEVEL+2,CVTOS390_R4
         BNO   SIOSQOK           IOSQ FIELD NOT PRESENT.
         LA    R1,RCAEIOST-RCAERESC
         LA    R15,SIOIOSQ       POINT TO DISPLAY AREA.
         BAS   R14,SFMTIOTM      FORMAT TIME PER I/O.
         DROP  SNRS2,SORS2       RCAERESC.
SIOSQOK  DS    0H
         SPACE
         L     R1,SPQRYPTR       POINT TO POLICY QUERY DATA AREA.
         SLR   R9,R9
         ICM   R9,3,RCAECLX      GET SERVICE CLASS INDEX.
         USING SVPOLHD,R1
         BNP   SIOCLSOK          ZERO IS INVALID.
         CH    R9,SVPOLDCC       IS SERVICE CLASS INDEX TOO HIGH?
         BH    SIOCLSOK          YES, CAN'T SHOW SERVICE CLASS.
         BCTR  R9,0              CONVERT TO RELATIVE ENTRY NUMBER.
         MH    R9,SVPOLDCL       GET OFFSET INTO CLASS ENTRIES.
         A     R9,SVPOLDCO       ADD OFFSET OF FIRST CLASS ENTRY.
         ALR   R9,R1             POINT TO SERVICE CLASS ENTRY.
         USING SVPOLCD,R9
         MVC   SIOCLS,SVPOLCNM   LOAD THE SERVICE CLASS NAME.
         DROP  R9,R1             SVPOLCD, SVPOLHD.
SIOCLSOK LA    R14,1
         SLR   R6,R6
         CH    R14,RCAEPER#      SINGLE-PERIOD CLASS?
         BE    SIOPEROK          YES, DO NOT SHOW PERIOD NUMBER.
         LH    R14,RCAEPER#      GET THE NUMBER OF PERIODS FOR CLASS.
         SR    R14,R7
         LR    R6,R14
         IC    R14,HEX+1(R14)    GET PERIOD NUMBER.
         STC   R14,SIOPER        SHOW IT.
SIOPEROK TR    LL-79(DMDL,R2),XLATETBL
         MVI   SIORATE,X'27'     WHITE FOR I/O RATE.
         MVI   SIOCONN,X'25'     TURQUOISE FOR CONNECT TIME.
         MVI   SIODISC,X'26'     YELLOW FOR DISCONNECT TIME.
         MVI   SIOWAIT,X'22'     RED FOR DELAYS.
         MVI   SIOREST,X'25'
         BAS   R14,SSPCLINE      LINE NOW COMPLETE.
SNXIOPER A     R5,RCAEINXP       POINT TO NEXT PERIOD'S DATA.
         BCT   R7,SIOPERLP       PROCESS NEXT PERIOD.
         L     R1,SSRVCNTR       GET REMAINING CLASS COUNT.
         AH    R4,RCAASCAL       POINT TO NEXT CLASS'S DATA.
         BCT   R1,SSCLIOLP       PROCESS NEXT CLASS.
         DROP  R5,R4,R3,R2       RCAEIHDR, RCAE, RCAA, SIOLINE.
         SPACE
SSUMMARY BAS   R1,SYSUMMRY       PRODUCE & SHOW SYSTEM SUMMARY LINE.
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         LA    R1,1
         A     R1,WINLINES       INCREMENT LINE COUNTER.
         ST    R1,WINLINES
         MVC   0(2,R2),FFFF+2    SET FINAL LINE FLAG FOR WINDOW DATA.
         DROP  R15               WNDWMNGR.
PUTSCRNS LA    R0,LL             MAKE REGISTER 0 POSITIVE FOR OUTPUT.
GETSCRNS L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         BASR  R14,R15           CALL WINDOW MANAGER.
         CLI   DOWNCNTR,C' '     ARE WE IN AUTO REFRESH MODE?
         BH    REDODMNS          YES, BRANCH TO NEW PARTE LOGIC.
         CLI   INCHARS,C' '      CONTINUE REQUESTED?
         BE    REDODMNS          YES, START OVER.
GIVEHLPS MVC   INBUFF(8),SBLST   REQUEST SUBCOMMAND LIST FROM TUTORIAL.
         MVI   TGETLEN+1,8       SUPPLY LENGTH OF INPUT TO PARSE.
         LNR   R0,R11            MAKE REGISTER 0 NEGATIVE FOR PARSE.
         B     GETSCRNS          GO DISPLAY HELP PANEL.
         SPACE
SADDLINE TR    LL-79(DMDL,R2),XLATETBL
SSPCLINE LA    R2,DMLL(,R2)      ADJUST BUFFER POINTER.
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         LA    R0,1
         A     R0,WINLINES       INCREMENT LINE COUNTER.
         ST    R0,WINLINES
         MVC   0(2,R2),WINFULL   PREPARE FOR FULL WINDOW.
         C     R2,WINEND         SEE IF THE BUFFER IS FULL YET.
         BNL   PUTSCRNS          IF YES, THEN FORGET SUMMARY LINE.
         MVC   0(LL-79,R2),LOWX  SUPPLY LINE ATTRIBUTES.
         MVI   LL-79(R2),C' '    CLEAR NEXT OUTPUT LINE TO BLANKS.
         MVC   LL-78(DMDL-1,R2),LL-79(R2)
         BR    R14
         DROP  R15               WNDWMNGR.
         SPACE
SDLAYFMT LTR   R15,R15           NON-ZERO VALUE?
         BNPR  R14               NO, SUPPRESS DISPLAY OF 0.0.
         ST    R14,WORK          SAVE RETURN ADDRESS.
         M     R14,ONEGRAND      SCALE FOR PERMILLAGE.
         D     R14,SSAMPDEN      GET FRACTION OF TIME.
         L     R14,WORK          RESTORE RETURN ADDRESS.
         CVD   R15,WORK
         C     R15,AHUNDRED      AT LEAST TEN PERCENT?
         BL    SDLAYSML          NO, SHOW A DECIMAL POINT.
         SRP   WORK,64-1,0       YES, DIVIDE BY TEN.
         MVC   0(4,R1),ED3
         ED    0(4,R1),WORK+6
         BR    R14
SDLAYSML MVC   0(4,R1),=X'40212020'
         ED    0(4,R1),WORK+6
         MVC   0(2,R1),1(R1)
         MVI   2(R1),C'.'
         BR    R14
         SPACE
SCPUBFMT STM   R14,R12,12(R13)
         AR    R6,R1             POINT TO NEW COUNTER.
         AR    R8,R1             POINT TO OLD COUNTER.
         CLC   0(8,R6),0(R8)     IS NEW COUNTER BIGGER?
         BNH   SCPUEXIT          NO, COUNTER UNCHANGED SO SKIP IT.
         LR    R2,R15            POINT TO DISPLAY AREA.
         LM    R14,R15,0(R6)     GET NEW COUNTER.
         LM    R0,R1,0(R8)       GET OLD COUNTER.
         CLR   R15,R1
         BNL   SCPUBORO
         BCTR  R14,0             BORROW.
SCPUBORO SLR   R15,R1
         SLR   R14,R0
         MVI   1(R2),C'>'
         MVC   2(3,R2),1(R2)     SHOW OVERFLOW.
         LTR   R14,R14           TOO BIG TOO HANDLE?
         BNZ   SCPUEXIT          YES.
         L     1,RMCTADDR        POINT TO THE RMCT.
         M     R14,64(,R1)       MULTIPLY BY RMCTADJC.
         SRDL  R14,4             DIVIDE BY SIXTEEN.
         LTR   R14,R14           TOO BIG TOO HANDLE?
         BNZ   SCPUEXIT          YES.
         M     R14,TENGRAND
         LR    R0,R9             GET COEFFICIENT BY 10,000.
         SRL   R0,1              HALVE IT.
         CR    R14,R0            TOO BIG TO HANDLE?
         BNL   SCPUEXIT          YES.
         DR    R14,R9            GET CPU MICROSECONDS USED.
         SLR   R14,R14
         D     R14,SELAPSED      GET CPU PERMILLAGE.
         L     R9,CVTPTR(,0)     POINT TO THE CVT.
         L     R9,660(,R9)       POINT TO COMMON SYSTEM DATA AREA.
         LH    R0,10(,R9)        GET ALIVE CPU COUNT.
         SLR   R14,R14
         DR    R14,R0            SCALE TO CAPACITY OF WHOLE BOX.
         CVD   R15,WORK
         MVC   0(5,R2),ED2PNT1
         ED    0(5,R2),WORK+6
SCPUEXIT LM    R14,R12,12(R13)
         BR    R14
         SPACE
SPGRTFMT STM   R14,R12,12(R13)
         AR    R6,R1             POINT TO NEW COUNTER.
         AR    R8,R1             POINT TO OLD COUNTER.
         CLC   0(8,R6),0(R8)     IS NEW COUNTER BIGGER?
         BNH   SPGREXIT          NO, COUNTER UNCHANGED SO SKIP IT.
         LR    R2,R15            POINT TO DISPLAY AREA.
         LM    R14,R15,0(R6)     GET NEW COUNTER.
         LM    R0,R1,0(R8)       GET OLD COUNTER.
         CLR   R15,R1
         BNL   SPGRBORO
         BCTR  R14,0             BORROW.
SPGRBORO SLR   R15,R1
         SLR   R14,R0
         MVI   1(R2),C'>'
         MVC   2(2,R2),1(R2)     SHOW OVERFLOW.
         LTR   R14,R14           TOO BIG TOO HANDLE?
         BNZ   SPGREXIT          YES.
         M     R14,ONEGRAND      PREPARE FOR RATE PER SECOND.
         L     R0,SELAPSED       GET ELAPSED TIME.
         SRL   R0,1              HALVE IT.
         CLR   R14,R0            TO BIG TO HANDLE DIVIDE?
         BNL   SPGREXIT          YES.
         D     R14,SELAPSED      GET PAGE-INS PER MILLISECOND.
         CVD   R15,WORK
         MVC   1(4,R2),ED3
         ED    1(4,R2),WORK+6
SPGREXIT LM    R14,R12,12(R13)
         BR    R14
         SPACE
SFMTIOTM STM   R14,R12,12(R13)
         AR    R6,R1             POINT TO NEW COUNTER.
         AR    R8,R1             POINT TO OLD COUNTER.
         LR    R2,R15            POINT TO DISPLAY AREA.
         LM    R14,R15,0(R6)     GET NEW COUNTER.
         LM    R0,R1,0(R8)       GET OLD COUNTER.
         CLC   0(8,R6),0(R8)     IS NEW COUNTER SMALLER?
         BE    SFMTEXIT          NO, COUNTER UNCHANGED SO SKIP IT.
         BH    SFMTCTOK          NO, BIGGER SO PROCEED.
         LM    R14,R15,0(R8)     GET OLD COUNTER.
         LM    R0,R1,0(R6)       GET NEW COUNTER.
SFMTCTOK CLR   R15,R1
         BNL   SFMTBORO
         BCTR  R14,0             BORROW.
SFMTBORO SLR   R15,R1
         SLR   R14,R0
         SLDL  R14,7             BY 128 TO CONVERT TO MICROSECONDS.
         L     R0,SIODELTA       GET I/O COUNT.
         SRL   R0,1              HALVE IT.
         MVI   1(R2),C'>'
         MVC   2(5,R2),1(R2)     SHOW OVERFLOW.
         CLR   R14,R0            TO BIG TO HANDLE DIVIDE?
         BNL   SFMTEXIT          YES.
         D     R14,SIODELTA      GET MICROSECONDS PER I/O.
         CVD   R15,WORK          SHOW CONNECT TIME PER I/O.
         SRP   WORK,64-2,5       GET 10*MILLISECONDS PER I/O.
         MVC   0(7,R2),=X'40202021204B20'
         ED    0(7,R2),WORK+5
SFMTEXIT LM    R14,R12,12(R13)
         BR    R14
         SPACE
         DROP  R11,R10           DOMAINS.
         TITLE 'DOMAIN MONITOR - VARIABLES AND CONSTANTS'
SANSTOKN DC    D'0'              WLM POLICY TOKEN.
SPQRYLEN DC    F'4096'  \______  POLICY QUERY AREA LENGTH.
SPQRYPTR DC    A(0)     /        POLICY QUERY AREA POINTER.
SPQRETLN DC    F'0'              RETURNED AREA SIZE REQUIREMENT.
         IWMPQRY MF=(L,SPQRYLST) POLICY QUERY PARAMETER LIST.
SCOLLLEN DC    F'24576' \______  POLICY QUERY AREA LENGTH.
SCOLLPTR DC    A(0)     /        POLICY QUERY AREA POINTER.
SCOLLPT2 DC    A(0)              POLICY QUERY AREA POINTER.
SCOLLMIN DC    F'0'              RETURNED AREA SIZE REQUIREMENT.
SCOLLMAX DC    F'0'              RETURNED AREA SIZE REQUIREMENT.
         IWMRCOLL MF=(L,SCOLLST) COLLECTION SERVICE PARAMETER LIST.
SSRVCNTR DC    F'0'
SELAPSED DC    F'0'
SSAMPLES DC    F'0'
SSAMPDEN DC    F'0'
SIODELTA DC    F'0'
SWAPTIME DC    F'0'
TOTLSWAP DC    F'0'
LOGSWAP  DC    F'0'
TGETSWAP DC    F'0'
TPUTSWAP DC    F'0'
DMNTOTLS DS    0CL28
CMPLTOTL DC    F'0'
RUATOTAL DC    F'0'
MXRUTOTL DC    F'0'
INCTOTL  DC    F'0'
NSWTOTL  DC    F'0'
OUTUTOTL DC    F'0'
ACUMTOTL DC    F'0'
DMDTSIZE DC    H'64'
SRTUNITS DC    X'404094A2A24094408840' C'  MSS M H '
IPSPARMS DC    CL12' '
IPSLABEL DC    C'IPS=IEAIPS'
DMNIPSID DC    C'??'
         DC    C'    CPU='
CPUCOEFF DC    CL4' '
         DC    C'   IOC='
IOCCOEFF DC    CL4' '
         DC    C'   MSO='
MSOCOEFF DC    CL4' '
         DC    C'   SRB='
SRBCOEFF DC    CL4' '
         DC    CL10' '
SWPRTHDR DC    C'   SWAP RATES:   TOTAL'
TOTSWPRT DC    C' ??.?'
         DC    C'   PHYS'
PHYSWPRT DC    C' ??.?'
         DC    C'   LOG'
LOGSWPRT DC    C' ??.?'
         DC    C'   TGET'
TGTSWPRT DC    C' ??.?'
         DC    C'   TPUT'
TPTSWPRT DC    C' ??.?'
         DC    CL5' '
HEADINGS DC    CL79' DMN MIN MAX MPLI MPLO CMPL RUA MXRU INC NSW OUTU  +
                TWSR CONTN-IDX ACCUM-SRV   '
HEADWLMS DC    C'            SERVICE CLASS PERFORMANCE SINCE '
HEADWSDT DC    C'YYYY-MM-DD'
         DC    C' '
HEADWSTM DC    C'HH:MM:SS.SS'
         DC    C'             '
HEADSVEL DC    CL79'SRVCLASS P GOAL VEL CPU I/O CPWT IOWT CCAP SWAP AUX+
                UNKN IDLE                  '
HEADSRTS EQU   *,79
         DC    C'SRVCLASS P TRANSACT-CT TRN-RT AVGRESP('
         DC    X'94A2',C') AVGEXEC(',X'94A2'
         DC    C')  GOAL             DUR(SU)'
HEADSRES DC    CL79'SRVCLASS P I SU-RATE TCB% SRB%  PIR  HSP BPIR  PIE +
               BPIE BKIA BKIE SWAPRT       '
HEADSIOS DC    CL79'SRVCLASS P DAIO/S DACONN DADISC DAWAIT DAIOSQ (TIME+
               S IN MILLISECONDS PER I/O)  '
         SPACE
         LTORG
         SPACE
         DS    0H
