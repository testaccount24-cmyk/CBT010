IMGATGET TITLE 'IMP DATA GATHERER - GET INPUT RECORD'
*        COPYRIGHT (C) 1991  PRYCROFT SIX PTY LTD
*
*        ENTRY CODE IN R0 UPON ENTRY.
*        RETURN CODE IN R15 UPON EXIT.
*
*        R0 = 0 ==> REQUEST AN SMF RECORD IF AVAILABLE.
*                   R15 = 0 ==> RECORD RETURNED WITH ADDRESS IN R1.
*                   R15 = 8 ==> NO RECORD CURRENTLY AVAILABLE.
*
*        R0 = 4 ==> REQUEST TERMINATION.
*                   R15 = 4 ==> TERMINATION COMPLETE (FILE(S) CLOSED).
*
         SPACE
************************************************************
*                                                          *
*         PERFORM INITIALIZATION FOR THIS INVOCATION       *
*                                                          *
************************************************************
         SPACE
IMGATGET CSECT
IMGATGET AMODE ANY
IMGATGET RMODE 24
         USING IMGATGET,R15
         B     GETSTART           BRANCH AROUND HEADER.
         DC    AL1(47)
         DC    CL47'IMGATGET COPYRIGHT (C) 1991 PRYCROFT SIX P/L   '
         DROP  R15                IMGATGET.
GETSTART STM   R14,R12,12(R13)    SAVE REGISTERS.
         LR    R12,R15            COPY BASE REGISTER.
         LA    R11,2048(,R12)
         LA    R11,2048(,R11)     LOAD SECOND BASE REGISTER.
         USING IMGATGET,R12,R11
         LA    R2,GETSAVE         POINT TO NEW SAVE AREA.
         ST    R2,8(,R13)
         ST    R13,4(,R2)         CHAIN SAVE AREAS.
         LR    R13,R2
         L     R10,=V(IMGATCOM)   POINT TO DATA GATHERER COMMON AREA.
         USING IMGATCOM,R10
         SPACE
************************************************************
*                                                          *
*         DETERMINE INVOCATION TYPE                        *
*                                                          *
************************************************************
         SPACE
         LTR   R0,R0              INPUT RECORD REQUESTED?
         BZ    GETINIT            YES.
*                                 NO, TERMINATION HAS BEEN REQUESTED.
         SPACE
************************************************************
*                                                          *
*         PERFORM FINAL TERMINATION                        *
*                                                          *
************************************************************
         SPACE
         TM    GATFLAGS,DONEOPEN+DONCLOSE
         BNM   TERMEXIT
         CLOSE SMFPRIME           CLOSE THE "PRIMING" FILE.
         OI    GATFLAGS,DONCLOSE  FLAG THAT THE CLOSE WAS DONE.
ACTIVXIT ICM   R4,15,ACTIVRDS     CURRENTLY PROCESSING A VSAM RDS?
         BZ    TERMEXIT           NO.
         CLOSE MANX               YES, CLOSE IT.
         MODESET MF=(E,MDSET0)    GET INTO KEY ZERO.
         L     R1,540             POINT TO THE CURRENT TCB.
         L     R1,180(,R1)        POINT TO THE ASSOCIATED JSCB.
*        L     R1,348(,R1)        POINT TO THE ACTIVE JSCB.
         NI    243(R1),X'7F'      DISABLE BYPASS PASSWORD PROTECTION.
         ICM   R1,15,LIDADDR      WAS READALL ATTRIBUTE SET HERE?
         BZ    *+8                NO.
         NI    220(R4),X'FB'      YES, RESET READALL ATTRIBUTE.
         MODESET MF=(E,MDSETN0)   REVERT TO USER KEY.
         LA    R1,MANXFREE        POINT TO THE DYNALLOC PARAMETER LIST.
         DYNALLOC                 FREE THE VSAM SMF DATA SET.
TERMEXIT L     R0,SPANSIZE
         ICM   R1,15,SPANPTR      ANY SPANNED RECORD BLOCK TO FREE?
         BZ    SPANFREE           NO.
         FREEMAIN RU,LV=(0),A=(1) YES, FREE IT.
SPANFREE L     R0,SPANSIZE
         ICM   R1,15,BLOCKPTR     ANY CI BLOCK BUFFER TO FREE?
         BZ    BLOKFREE           NO.
         FREEMAIN RU,LV=(0),A=(1) YES, FREE IT.
BLOKFREE L     R13,4(,R13)        POINT TO CALLER'S SAVE AREA.
         LM    R14,R12,12(R13)    RESTORE REGISTERS.
         LA    R15,4              INDICATE THAT THERE IS NO OPEN FILE.
         BSM   0,R14              RETURN TO CALLER.
         SPACE
************************************************************
*                                                          *
*         PERFORM FINAL TERMINATION UNDER TSO              *
*                                                          *
************************************************************
         SPACE
TSOTERM  LA    R1,PRIMEMSG        POINT TO THE RECORD COUNT MESSAGE.
         LA    R0,L'PRIMEMSG      GET THE MESSAGE LENGTH.
         TPUT  (1),(0),R          SHOW FINAL COUNT ON THE TERMINAL.
         STIMER WAIT,BINTVL==F'150'    WAIT 1.5 SECONDS.
         STLINENO LINE=1,MODE=ON  TURN ON FULLSCREEN MODE FOR I-MON.
TSOTERMD L     R13,4(,R13)        POINT TO CALLER'S SAVE AREA.
         LM    R14,R12,12(R13)    RESTORE REGISTERS.
         LA    R15,4              INDICATE THAT THERE IS NO OPEN FILE.
         BSM   0,R14              RETURN TO CALLER.
         SPACE
************************************************************
*                                                          *
*         PERFORM PRIMING FILE PROCESSING                  *
*                                                          *
************************************************************
         SPACE
GETINIT  TM    GATFLAGS,DONEOPEN  ALREADY OPENED THE FILE?
         BO    OPENOKAY           YES.
         OI    GATFLAGS,DONEOPEN  FLAG THAT THE OPEN HAS NOW BEEN DONE.
         SLR   R5,R5
         L     R4,540             GET POINTER TO CURRENT TCB.
         L     R4,12(,R4)         POINT TO TIOT.
         LA    R4,24(,R4)         POINT TO TIOELNGH.
CHKDDNM1 CLC   DCBDDNAM-IHADCB+SMFPRIME,4(R4)
         BE    OPENFILE           FILE EXISTS SO GO AND OPEN IT.
         IC    R5,0(,R4)          GET TIOT ENTRY LENGTH.
         AR    R4,R5              POINT TO NEXT TIOT ENTRY.
         CLI   0(R4),0            ZERO LENGTH ENTRY?
         BNE   CHKDDNM1           NO, CHECK OUT THIS ENTRY.
         B     FLAGCLOS           YES, NOT IN TIOT SO NO PRIMING FILE.
OPENFILE DS    0H
         OPEN  (SMFPRIME,(INPUT)) NO, OPEN THE INPUT PRIMING FILE.
OPENOKAY DS    0H
         TM    GATFLAGS,DONCLOSE  ALREADY CLOSED THE FILE?
         BO    ACTIVCHK           YES, CHECK ACTIVE FILE STATUS.
         TM    GATFLAGS,TSU       RUNNING UNDER A TSO USER?
         BZ    GETGET             NO, JUST GET A RECORD.
         L     R0,PRIMEDEC        YES, COUNT DOWN TO MESSAGE.
         BCT   R0,GETDECD         PERFORM DECREMENT.
         L     R0,CLEARDEC        DO MESSAGE, COUNT DOWN TO CLEAR.
         BCT   R0,GETCLRD         PERFORM DECREMENT.
         STLINENO LINE=4,MODE=OFF CLEAR THE SCREEN.
         LA    R0,CLEARINT        GET THE CLEAR SCREEN INTERVAL.
GETCLRD  ST    R0,CLEARDEC        UPDATE COUNT DOWN QUANTITY.
         L     R0,PRIMECNT        GET SMFPRIME RECORD COUNT SO FAR.
         CVD   R0,GETWORK
         MVC   PRIMSGCT,PRIMEMSK  LOAD EDIT MASK.
         ED    PRIMSGCT,GETWORK+3 SHOW RECORD COUNT IN MESSAGE.
         LA    R1,PRIMEMSG        POINT TO THE RECORD COUNT MESSAGE.
         LA    R0,L'PRIMEMSG      GET THE MESSAGE LENGTH.
         TPUT  (1),(0),R          SHOW COUNT ON THE TERMINAL.
         LA    R0,PRIMEINT        GET THE MESSAGE INTERVAL.
GETDECD  ST    R0,PRIMEDEC        UPDATE COUNT DOWN QUANTITY.
GETGET   DS    0H
         GET   SMFPRIME           GET AN INPUT RECORD.
         LA    R0,1               INCREMENT SMFPRIME RECORD COUNT.
         A     R0,PRIMECNT
         ST    R0,PRIMECNT
         SPACE
************************************************************
*                                                          *
*         EXIT WITH AN SMF RECORD TO RETURN                *
*                                                          *
************************************************************
         SPACE
RECRDXIT L     R13,4(,R13)        POINT TO CALLER'S SAVE AREA.
         ST    R1,24(,R13)        SAVE RECORD ADDRESS IN R1 SLOT.
         LM    R14,R12,12(R13)    RESTORE REGISTERS.
         SLR   R15,R15            INDICATE THAT A RECORD IS RETURNED.
         BSM   0,R14              RETURN TO CALLER.
         SPACE
************************************************************
*                                                          *
*         HANDLE THE END OF THE PRIMING DATA               *
*                                                          *
************************************************************
         SPACE
SMFEODAD DS    0H
         CLOSE SMFPRIME           END OF FILE SO CLOSE THE FILE.
         L     R0,PRIMECNT        GET SMFPRIME RECORD COUNT.
         CVD   R0,GETWORK
         MVC   PRIMSGCT,PRIMEMSK  LOAD EDIT MASK.
         ED    PRIMSGCT,GETWORK+3 SHOW RECORD COUNT IN MESSAGE.
         TM    GATFLAGS,NOTRACK   TRACKING CURRENT DATA REQUIRED?
         BO    TSOTERM            NO, SIGNAL TERMINATION.
         WTO   MF=(E,PRIMEWTO)    ISSUE PRIMING RECORD COUNT MESSAGE.
FLAGCLOS OI    GATFLAGS,DONCLOSE  FLAG THAT THE CLOSE WAS DONE.
         SLR   R5,R5
         L     R4,540             GET POINTER TO CURRENT TCB.
         L     R4,12(,R4)         POINT TO TIOT.
         LA    R4,24(,R4)         POINT TO TIOELNGH.
CHKDDNM2 CLC   DCBDDNAM-IHADCB+SMFPRIME,4(R4)
         BE    FREEFILE           FILE REMAINS SO GO AND FREE IT.
         IC    R5,0(,R4)          GET TIOT ENTRY LENGTH.
         AR    R4,R5              POINT TO NEXT TIOT ENTRY.
         CLI   0(R4),0            ZERO LENGTH ENTRY?
         BNE   CHKDDNM2           NO, CHECK OUT THIS ENTRY.
*                                 YES, NOT IN TIOT SO FREE=CLOSE OKAY.
         TM    GATFLAGS,NOTRACK   TRACKING CURRENT DATA REQUIRED?
         BO    TSOTERMD           NO, SIGNAL TERMINATION.
         B     ENDPRIME           YES, END OF PRIMING PROCESSING.
FREEFILE LA    R1,MANXFREE        POINT TO THE DYNALLOC PARAMETER LIST.
         DYNALLOC                 FREE THE PRIMING FILE.
ENDPRIME DS    0H                 END OF PRIMING PROCESSING.
         SPACE
************************************************************
*                                                          *
*         PERFORM ONCE-ONLY VSAM INITIALIZATION            *
*                                                          *
************************************************************
         SPACE
         MODESET MF=(E,MDSET0)    GET INTO KEY ZERO.
         L     R1,540             POINT TO THE CURRENT TCB.
         L     R1,180(,R1)        POINT TO THE ASSOCIATED JSCB.
*        L     R1,348(,R1)        POINT TO THE ACTIVE JSCB.
         OI    243(R1),X'80'      ENABLE BYPASS PASSWORD PROTECTION.
         MODESET MF=(E,MDSETN0)   REVERT TO USER KEY.
         L     R0,SPANSIZE        GET AREA LARGE ENOUGH FOR ANY BLOCK.
         GETMAIN RU,LV=(0),LOC=BELOW
         ST    R1,BLOCKPTR        SAVE ITS ADDRESS.
         L     R0,SPANSIZE        GET AREA LARGE ENOUGH FOR ANY RECORD.
         GETMAIN RU,LV=(0),LOC=(BELOW,ANY)
         ST    R1,SPANPTR         SAVE ITS ADDRESS.
         TM    OSBITS,X'13'       MVS?
         BNO   ACTIVCHK           NO, SKIP ACF2 CHECK.
         L     R3,CVTPTR(,0)      POINT TO THE CVT.
         USING CVT,R3
         L     R4,CVTJESCT        POINT TO THE JESCT.
         DROP  R3                 CVT.
         USING JESCT,R4
         L     R4,JESSSCT         POINT TO THE FIRST SSCVT.
         DROP  R4                 JESCT.
         USING SSCT,R4
SSCTLOOP CLC   =C'ACF2',SSCTSNAM  ACF2?
         BE    ACF2HERE           YES, ACF2 IS PRESENT.
         ICM   R4,15,SSCTSCTA     NO, POINT TO NEXT SSCVT.
         BNZ   SSCTLOOP           TRY NEXT SUBSYSTEM.
         B     ACTIVCHK           ACF2 SUBSYSTEM NOT ON CHAIN.
ACF2HERE L     R4,SSCTSUSE        GET ACCVT ADDRESS.
         DROP  R4                 SSCT.
         L     R4,100(,R4)        POINT TO ACFASVT.
         L     R3,548             POINT TO CURRENT ASCB.
         SLR   R0,R0
         ICM   R0,3,36(R3)        LOAD ASID.
         SLL   R0,5               MULTIPLY ASID BY 32 FOR INDEX.
         ALR   R4,R0              POINT TO ACASVT ENTRY.
         L     R4,28(,R4)         POINT TO ACUCB.
         L     R4,28(,R4)         POINT TO LID.
         TM    220(R4),X'04'      DOES USER HAVE READALL ATTRIBUTE?
         BO    ACTIVCHK           YES, DO NOT ZAP THE LID.
         ST    R4,LIDADDR         NO, SAVE ITS ADDRESS.
         MODESET MF=(E,MDSET0)    GET INTO KEY ZERO.
         OI    220(R4),X'04'      SET READALL ATTRIBUTE.
         MODESET MF=(E,MDSETN0)   REVERT TO USER KEY.
         SPACE
************************************************************
*                                                          *
*         PERFORM CURRENT VSAM DATA SET CHECKING           *
*                                                          *
************************************************************
         SPACE
ACTIVCHK TM    GATFLAGS,NOTRACK   TRACKING CURRENT DATA REQUIRED?
         BO    NORECXIT           NO, RETURN WITHOUT AN SMF RECORD.
         ICM   R4,15,ACTIVRDS     LOAD THE ACTIVE RDS POINTER.
         BNZ   READVSAM           GET THE NEXT LOGICAL RECORD.
*                                 IF THE POINTER IS ZERO THEN THE
*                                 ACTIVE RDS IS UNKNOWN, SO IT WILL
*                                 HAVE TO BE DETERMINED.
         L     R4,CVTPTR(,0)      POINT TO THE CVT.
         USING CVT,R4
         L     R4,CVTSMCA         POINT TO THE SMCA.
         DROP  R4                 CVT.
         TM    OSBITS,X'13'       MVS?
         BO    MVSRDS             YES.
         ICM   R5,15,40(R4)       NO, POINT TO FIRST SDMC UNDER MSP.
         BZ    NORECXIT           IF ZERO THEN NO RECORD CAN BE READ.
SMDCLOOP CLI   72(R5),X'60'       ACTIVE DATA SET?
         BE    MSPACTIV           YES.
         ICM   R5,15,4(R5)        NO, POINT TO NEXT SMDC.
         BZ    NORECXIT           IF ZERO THEN NO RECORD CAN BE READ.
         C     R5,40(,R4)         BACK TO FIRST SDMC?
         BE    NORECXIT           YES, NO RECORD CAN BE READ.
         B     SMDCLOOP           NO, SEE IF THIS IS THE ACTIVE ONE.
MSPACTIV LR    R4,R5              POINT TO THE ACTIVE SDMC.
         MVC   DSNAMMA(9),16(R4)  COPY VSAM CLUSTER NAME TO ALLOCATE.
         B     USERDS             GO ALLOCATE THE DATA SET.
MVSRDS   ICM   R4,15,252(R4)      POINT TO THE ACTIVE RDS.
         BZ    NORECXIT           IF ZERO THEN NO RECORD CAN BE READ.
         USING RDS,R4
         TM    RDSFLAG2,RDSLOST   DUMMY RDS FOR LOST DATA?
         BO    NORECXIT           YES, NO DATA CAN BE READ.
         SPACE
************************************************************
*                                                          *
*         ALLOCATE AND OPEN THE NEW CURRENT VSAM RDS       *
*                                                          *
************************************************************
         SPACE
         MVC   MANX+DCBBLKSI-IHADCB,RDSCINV+2  COPY CISZ TO BLKSIZE.
         MVC   DSNAMMA(9),RDSNAME COPY VSAM CLUSTER NAME TO ALLOCATE.
         TM    OSLVL+1,X'20'      MVS/SP5 OR LATER?
         BZ    USERDS             NO.
         MVC   MANX+DCBBLKSI-IHADCB,RDSCINV+38 COPY CISZ TO BLKSIZE.
         MVC   DSNAMMA,RDSNAME    COPY VSAM CLUSTER NAME TO ALLOCATE.
         LA    R1,DSNAMMA         POINT TO DATA SET NAME.
         LA    R0,44              GET LENGTH OF DATA SET NAME.
NAMLENLP CLI   0(R1),C' '         REACHED END OF DATA SET NAME?
         BE    ADDDATA            YES
         LA    R1,1(,R1)          NO, POINT TO NEXT CHARACTER IN NAME.
         BCT   R0,NAMLENLP        GO TEST IT.
ADDDATA  CH    R0,=H'2'           AT LEAST 2 BLANKS SPARE?
         BL    USERDS             NO, LOOKS LIKE ABEND TIME.
         MVC   0(2,R1),DATASUFX   YES, ADD '.D'.
         CH    R0,=H'5'           AT LEAST 5 BLANKS SPARE?
         BL    USERDS             NO, DATA COMPONENT NAME COMPLETE.
         MVC   0(5,R1),DATASUFX   YES, ADD '.DATA'.
         XI    SUFXFLAG,1         FLIP RETRY FLAG.
USERDS   ST    R4,ACTIVRDS        SAVE THIS ADDRESS FOR LATER.
         LA    R1,MANXALOC        POINT TO THE DYNALLOC PARAMETER LIST.
         DYNALLOC                 ALLOCATE THE VSAM SMF DATA SET.
         LTR   R15,R15            WAS ALLOCATION SUCCESSFUL?
         BNZ   ALOCFAIL           NO, DISPLAY ERROR DETAILS.
         MVI   SUFXFLAG,0         YES, RESET RETRY FLAG.
         MVC   DCBDDNAM-IHADCB+MANX,RTDDNMA   PUT DDNAME INTO DCB.
         MVC   DDNAMMF,RTDDNMA    LOAD DDNAME TO FREE LATER.
         OPEN  (MANX,(INPUT))     OPEN THE VSAM SMF FILE.
         XC    TTRZ,TTRZ          CLEAR RESIDUAL TTR DATA.
         SPACE
************************************************************
*                                                          *
*         GET A LOGICAL RECORD FROM THE VSAM RDS           *
*                                                          *
************************************************************
         SPACE
READVSAM OC    DEBLOCKS,DEBLOCKS  FIRST READ?
         BZ    READI              YES.
         LM    R0,R1,DEBLOCKS+4   NO, GET DEBLOCKING STATUS.
         L     R2,DEBLOCKS        GET CIDF POINTER.
         L     R5,BLOCKPTR        POINT TO THE START OF THE CI.
         AH    R5,0(R2)           POINT PAST END OF CI DATA.
         AR    R1,R0              POINT TO NEXT RECORD.
         CR    R1,R5              END OF CONTROLINTERVAL DATA?
         BNL   READI              YES, BRANCH.
         ST    R1,DEBLOCKS+8      NO, SAVE NEXT RECORD POINTER.
         L     R1,BLOCKPTR        POINT TO THE START OF THE CI.
         SLR   R5,R5
NEXTRDF  SH    R2,=H'3'           POINT TO "NEXT" RDF.
         LA    R0,1               ASSUME ONE RECORD DESCRIBED BY IT.
         ICM   R5,3,1(R2)         GET ITS HALFWORD COUNTER.
         CLI   0(R2),X'40'        ASSOCIATED WITH RDF TO THE LEFT?
         BNE   RDFLOOP            NO, THE TESTED BYTE SHOULD BE NULL.
         SH    R2,=H'3'           POINT TO ASSOCIATED RDF.
         ICM   R0,3,1(R2)         GET ITS HALFWORD COUNTER.
RDFLOOP  AR    R1,R5              POINT TO NEXT RECORD.
         C     R1,DEBLOCKS+8      PAST THE CURRENT RECORD?
         BH    RDFEXIT            YES, NOW HAVE RECORD'S LENGTH.
         BCT   R0,RDFLOOP         NO, KEEP GOING.
         B     NEXTRDF            GET MORE RDF'S TO KEEP GOING.
RDFEXIT  ST    R5,DEBLOCKS+4      SAVE THE CURRENT RECORD'S LENGTH.
NOTSEGX  LM    R1,R2,DEBLOCKS+4   LOAD RECORD'S LENGTH AND ADDRESS.
         SPACE
READX    LR    R0,R1              GET RECORD'S LENGTH.
         LR    R1,R2              PUT RECORD ADDRESS INTO CORRECT GPR.
         CH    R0,=H'18'          DOES RECORD HAVE VALID SMF LENGTH?
         BNL   RECRDXIT           YES, EXIT WITH A RECORD.
         WTO   'PRY641W  IMPGAT ENCOUNTERED RECORD TOO SHORT FOR SMF', +
               ROUTCDE=(2,11)
         B     ALTCHECK           SEE IF RDS IS STILL ACTIVE.
         SPACE
READI    L     R2,BLOCKPTR
         XC    DEBLOCKS(12),DEBLOCKS
         TM    OSBITS,X'13'       MVS?
         BO    READMVS            YES.
         L     R5,84(,R4)         LOAD MSP USED BLOCK COUNT.
         C     R5,CICOUNTR        READ ALL USED BLOCKS?
         BNH   ALTCHECK           YES, SEE IF IT IS STILL ACTIVE.
         CLI   72(R4),X'60'       STILL LOOKING AT ACTIVE RDS?
         BNE   REREAD             NO, INDICATES NOT THE ACTIVE RDS.
         C     R5,CICOUNTR        READ ALL USED BLOCKS?
         BNH   ALTCHECK           YES, SEE IF IT IS STILL ACTIVE.
         B     REREAD             NO, GO READ A BLOCK.
READMVS  L     R5,RDSNXTBL        GET THE NEXT FREE BLOCK NUMBER.
         TM    OSLVL+1,X'20'      MVS/SP5 OR LATER?
         BZ    USENXTBL           NO.
         L     R5,RDSNXTBL+36     GET THE NEXT FREE BLOCK NUMBER.
USENXTBL BCTR  R5,0               GET THE USED BLOCK COUNT.
         C     R5,CICOUNTR        READ ALL USED BLOCKS?
         BNH   ALTCHECK           YES, SEE IF IT IS STILL ACTIVE.
         ICM   R0,14,RDSFLAG1     ARE ANY RDS FLAGS ON?
         BNZ   REREAD             YES, INDICATES NOT THE ACTIVE RDS.
         BCTR  R5,0               GET THE "WRITTEN" BLOCK COUNT.
         C     R5,CICOUNTR        READ ALL OF THESE BLOCKS?
         BNH   NORECXIT           YES, SO RETURN WITHOUT A RECORD.
         BCTR  R5,0               GET WRITTEN BLOCK COUNT MINUS ONE.
         C     R5,CICOUNTR        JUST ONE MORE BLOCK TO READ?
         BNE   REREAD             NO, MORE THAN ONE SO GET READING.
         STIMER WAIT,BINTVL==F'100'   WAIT A SECOND FOR SMF TO WRITE.
REREAD   DS    0H                 CONTINUE FETCHING BLOCKS FOR CI.
         READ  DYNDECB,SF,,(R2),'S',MF=E
         MVI   SYNADSW,0          RESET SYNAD FLAG.
         CHECK DYNDECB
         CLI   SYNADSW,X'FF'      WAS SYNAD EXIT TAKEN JUST NOW?
         BE    ALTCHECK           YES, BRANCH.
         ICM   R0,15,DEBLOCKS+4   NO, FIRST READ FOR THIS CI?
         BNZ   GETNOTED           NO, SKIP NOTE MACRO.
         NOTE  MANX               YES, GET THE BLOCK ADDRESS.
         ST    R1,TTRZ            SAVE IT FOR LATER.
GETNOTED LH    R1,DCBBLKSI-IHADCB+MANX
         L     R14,DYNDECB+16
         SH    R1,14(,R14)        SUBTRACT RESIDUAL COUNT.
         LA    R0,0(R1,R2)        END OF BLOCK.
         A     R1,DEBLOCKS+4      ADD PREVIOUSLY READ DATA OF THIS CI.
         STM   R0,R2,DEBLOCKS     SAVE STATUS INFO.
         CLM   R1,3,DCBBLKSI-IHADCB+MANX  BLOCK SHORTER THAN CI?
         BE    VSAMCIOK           NO, PROCESS CONTROLINTERVAL.
         BH    READEOD            NO, TOO LARGE SO SIGNAL E-O-D.
         LR    R2,R0              POINT PAST BLOCK JUST READ.
         B     REREAD             READ ANOTHER BLOCK FOR THIS CI.
VSAMCIOK L     R2,BLOCKPTR        POINT TO THE CI START.
         CLC   EOFMARK,4(R2)      DOES THIS CI HAVE SMF RECORDS?
         BNE   REC1OKAY           YES.
         POINT MANX,TTRZ          NO, POINT BACK TO CI JUST READ.
         B     ALTCHECK           GO RE-VERIFY THE ENVIRONMENT.
REC1OKAY L     R2,DEBLOCKS        POINT PAST END OF CI.
         SH    R2,=H'4'           POINT TO CI DEFINITION FIELD.
         ST    R2,DEBLOCKS        SAVE CIDF ADDRESS.
         LA    R0,1
         A     R0,CICOUNTR        INCREMENT READ CI COUNT.
         ST    R0,CICOUNTR
         ICM   R0,B'1111',0(R2)   NULL CIDF?
         BZ    SOFTEOD            YES, SOFTWARE END-OF-FILE.
VSAMRDF  SH    R2,=H'3'            POINT TO "FIRST" RDF.
         MVC   DEBLOCKS+6(2),1(R2) LOAD LENGTH OF FIRST RECORD.
         TM    0(R2),X'30'         VSAM SPANNED SEGMENT?
         BZ    NOTSEGX             NO, EXIT NORMALLY
*        BNZ   READVSEG            YES, HANDLE IT
         SPACE
*               FLAG BYTE HAS X'50' FOR FIRST SEGMENT
*                             X'70' FOR MIDDLE SEGMENT
*                             X'60' FOR LAST SEGMENT
READVSEG CLI   0(R2),X'50'        FIRST SEGMENT?
         BNE   RDVSSEG2           NO.
         L     R14,SPANPTR        ADDRESS TO MOVE TO.
         LH    R15,DEBLOCKS+6     LENGTH TO MOVE.
         LR    R1,R15             LENGTH TO MOVE.
         ST    R1,GETWORK         SAVE LENGTH SO FAR.
         L     R0,DEBLOCKS+8      ADDRESS TO MOVE FROM.
         MVCL  R14,R0             MOVE VSAM RECORD SEGMENT.
         B     READI              GET NEXT CI FOR NEXT SEGMENT.
RDVSSEG2 L     R14,SPANPTR        ADDRESS OF FIRST SEGMENT.
         A     R14,GETWORK        ADDRESS OF THIS SEGMENT.
         LH    R15,DEBLOCKS+6     LENGTH TO MOVE.
         LR    R1,R15             LENGTH TO MOVE.
         A     R1,GETWORK         ADD PREVIOUS LENGTH.
         ST    R1,GETWORK         SAVE LENGTH SO FAR.
         LR    R1,R15             LENGTH TO MOVE.
         L     R0,DEBLOCKS+8      ADDRESS TO MOVE FROM.
         MVCL  R14,R0             MOVE SEGMENT DATA.
         CLI   0(R2),X'60'        LAST SEGMENT?
         BNE   READI              NO, GET NEXT CI FOR NEXT SEGMENT.
         L     R2,SPANPTR         YES, POINT TO COMBINED RECORD.
         L     R1,GETWORK         GET COMBINED LENGTH.
         B     READX              EXIT.
         SPACE
************************************************************
*                                                          *
*         END-OF-FILE AND I/O ERROR HANDLING               *
*                                                          *
************************************************************
         SPACE
READEOD  WTO   'PRY642W  IMPGAT ENCOUNTERED UNEXPECTED END-OF-FILE',   +
               ROUTCDE=(2,11)
         B     ALTCHECK
         SPACE
SOFTEOD  WTO   'PRY643W  IMPGAT ENCOUNTERED UNEXPECTED SOFTWARE END-OF-+
               FILE',ROUTCDE=(2,11)
         B     ALTCHECK
         SPACE
RDSYNAD  WTO   MF=(E,SYNADWTO)
         B     ALTCHECK
SYNADWTO WTO   'PRY644W  1234567890123456789012345678901234567890123456+
               78901234567890123456789012345678 ',ROUTCDE=(2,11),MF=L
SYNADMSG EQU   SYNADWTO+13,78
         SPACE
PRIMEWTO WTO   'PRY646I  ZZZ,ZZZ,ZZ9 IMPGAT PRIMING RECORDS READ',     +
               ROUTCDE=(2,11),MF=L
PRIMSGCT EQU   PRIMEWTO+12,12
PRIMEMSG EQU   PRIMEWTO+4,48
         SPACE
************************************************************
*                                                          *
*         SYNAD EXIT                                       *
*                                                          *
************************************************************
         SPACE
*        THIS ROUTINE IS ENTERED DURING THE 'CHECK' MACRO
*        IF AN I/O ERROR OCCURS.
         SPACE
DYNSYNAD DS    0H
         SYNADAF ACSMETH=BSAM
         MVC   SYNADMSG(78),50(R1)
         MVI   SYNADSW,X'FF'
         SYNADRLS
         BR    R14
         SPACE
************************************************************
*                                                          *
*         CHECK FOR AND PERFORM ACTIVE DATA SET CHANGE     *
*                                                          *
************************************************************
         SPACE
ALTCHECK TM    OSBITS,X'13'       MVS?
         BO    MVSCHECK           YES.
         CLI   72(R4),X'60'       STILL LOOKING AT ACTIVE RDS?
         BE    NORECXIT           YES, SO NO RECORD AT THIS TIME.
         B     ALTCLOSE           NO, CLOSE THIS DATA SET.
MVSCHECK L     R1,CVTPTR(,0)      POINT TO THE CVT.
         USING CVT,R1
         L     R1,CVTSMCA         POINT TO THE SMCA.
         DROP  R1                 CVT.
         C     R4,252(,R1)        STILL LOOKING AT ACTIVE RDS?
         BE    NORECXIT           YES, SO NO RECORD AT THIS TIME.
ALTCLOSE CLOSE MANX               NO, SO CLOSE THIS FILE.
         LA    R1,MANXFREE        POINT TO THE DYNALLOC PARAMETER LIST.
         DYNALLOC                 FREE THE VSAM SMF DATA SET.
         SLR   R0,R0
         ST    R0,ACTIVRDS        RESET THE ACTIVE RDS POINTER.
         ST    R0,CICOUNTR        RESET THE READ BLOCKS COUNTER.
         B     ACTIVCHK           DETERMINE THE NEW ACTIVE RDS.
         SPACE
************************************************************
*                                                          *
*         HANDLE ALLOCATION FAILURE                        *
*                                                          *
************************************************************
         SPACE
ALOCFAIL SLR   R0,R0              ALLOCATION FAILURE EXIT POINT.
         ST    R0,ACTIVRDS        ZERO ADDRESS OF RDS BEING TRACKED.
         MVC   ALWTODSN,DSNAMMA   LOAD DATA SET NAME INTO MESSAGE.
         ST    R15,GETWORK
         UNPK  ALWTORC(3),GETWORK+3(2)
         TR    ALWTORC,GETHEX-C'0'
         MVI   ALWTORC+2,C' '     LOAD RETURN CODE INTO MESSAGE.
         UNPK  ALWTOERR(5),ERRORMA(3)
         TR    ALWTOERR,GETHEX-C'0'
         MVI   ALWTOERR+4,C' '    LOAD ERROR CODE INTO MESSAGE.
         UNPK  ALWTOINF(5),INFOMA(3)
         TR    ALWTOINF,GETHEX-C'0'
         MVI   ALWTOINF+4,C' '    LOAD INFORMATION CODE INTO MESSAGE.
         WTO   MF=(E,ALLOCWTO)    ISSUE ALLOCATION FAILURE MESSAGE.
         SPACE
         CLI   SUFXFLAG,0         RETRY ALLOWED?
         BE    NORECXIT           NO, EXIT FROM SUBROUTINE.
         XC    DATASUFX+2(3),=X'81A381'
         B     ACTIVCHK           YES, SO RETRY WITH DIFFERENT NAME.
         SPACE
************************************************************
*                                                          *
*         RETURN WITHOUT ANY RECORD                        *
*                                                          *
************************************************************
         SPACE
NORECXIT L     R13,4(,R13)        YES, POINT TO CALLER'S SAVE AREA.
         LM    R14,R12,12(R13)    RESTORE REGISTERS.
         LA    R15,8              INDICATE THAT NO RECORD IS RETURNED.
         BSM   0,R14              RETURN TO CALLER.
         TITLE 'VARIABLES AND CONSTANTS'
GETWORK  DC    D'0'
GETSAVE  DC    18F'0'
GETHEX   DC    CL16'0123456789ABCDEF'
PRIMEMSK DC    XL12'402020206B2020206B202120'
SPANSIZE DC    F'32768'           SIZE OF SPANNED RECORD BLOCK.
LIDADDR  DC    A(0)               ADDRESS OF ACF2 LOGONID AREA.
BLOCKPTR DC    A(0)               ADDRESS OF CONTROLINTERVAL BUFFER.
SPANPTR  DC    A(0)               ADDRESS OF SPANNED RECORD BLOCK.
CIPNTR   DC    A(0)               ADDRESS OF CONTROL INTERVAL BLOCK.
ACTIVRDS DC    A(0)               ADDRESS OF ACTIVE RECORDING DATA SET.
PRIMECNT DC    F'0'               COUNT OF SMFPRIME RECORDS READ.
PRIMEINT EQU   1000               INTERVAL BETWEEN RECORD COUNT MSGS.
PRIMEDEC DC    AL4(PRIMEINT+1)    DECREMENT AND SHOW MESSAGE ON ZERO.
CLEARINT EQU   1                  LINE COUNT BETWEEN CLEAR SCREENS.
CLEARDEC DC    F'1'               DECREMENT AND CLEAR SCREEN ON ZERO.
CICOUNTR DC    F'0'               COUNT OF READ BLOCKS IN ACTIVE RDS.
TTRZ     DC    F'0'               RELATIVE ADDRESS OF LAST BLOCK READ.
DEBLOCKS DC    3F'0'              CI DEBLOCKING STATUS SAVE AREA.
         SPACE
MDSTSUP0 MODESET KEY=ZERO,MODE=SUP,MF=L
MDSTPROB MODESET KEY=NZERO,MODE=PROB,MF=L
MDSET0   MODESET KEY=ZERO,MF=L
MDSETN0  MODESET KEY=NZERO,MF=L
         SPACE
DYNREAD  READ  DYNDECB,SF,MANX,0,'S',MF=L
         SPACE
MANXALOC DYNALC SUFFIX=MA,DSNAME=SYS1.MANX.DATA,RETDD=YES,             +
               STATUS=SHR
MANXFREE DYNALC SUFFIX=MF,DEALLOC=YES,DDNAME=SMFPRIME,TYPSP=TRK
         SPACE
ALLOCWTO WTO   'PRY645W  ALLOC FAIL RC=__ ERROR=____ INFO=____ DSN=1111+
               1111.22222222.33333333.44444444.55555555',              +
               ROUTCDE=(2,11),MF=L
ALWTORC  EQU   ALLOCWTO+27,2
ALWTOERR EQU   ALLOCWTO+36,4
ALWTOINF EQU   ALLOCWTO+46,4
ALWTODSN EQU   ALLOCWTO+55,44
         SPACE
EOFMARK  DC    C'SMFEOFMARK'      SMF EMPTY CONTROLINTERVAL MARKER.
SYNADSW  DC    X'00'              SYNAD EXIT I/O ERROR FLAG.
DATASUFX DC    C'.DATA'           DATA COMPONENT SUFFIX.
SUFXFLAG DC    X'00'              SUFFIX ALLOCATION RETRY FLAG.
         SPACE
         DS    0F
         SPACE
         PRINT NOGEN
         SPACE
SMFPRIME DCB   DSORG=PS,MACRF=GL,DDNAME=SMFPRIME,BFTEK=A,EODAD=SMFEODAD
         SPACE
MANX     DCB   DSORG=PS,MACRF=RP,DDNAME=MANXFILE,BLKSIZE=4096,         +
               EODAD=READEOD,SYNAD=DYNSYNAD
         SPACE
         LTORG
         SPACE 2
         DS    0D                 END OF CSECT.
         COPY  IMGATCOM
         TITLE 'DSECTS'
RDS      DSECT
******* START OF SPECIFICATIONS ***************************************
***                                                                  **
***  MACRO-NAME = IEEMBRDS                                           **
***                                                                  **
***  DESCRIPTIVE-NAME = SMF RECORDING DATA SET CONTROL BLOCK         **
***                                                                  **
***                                                                  **
***  FUNCTION = MAPPING FOR THE RDS.  AN RDS CONTAINS THE            **
***             DATA NECESSARY TO CONTROL AN SMF RECORDING           **
***             DATASET.  IT INCLUDES THE VSAM ACB AND RPL AND       **
***             OTHER FLAGS AND FIELDS DESCRIBING THE STATUS         **
***             OF THE DATASET.                                      **
***                                                                  **
******* END OF SPECIFICATIONS *****************************************
RDSID    DS    CL4           CONTROL BLOCK ID
RDSNEXT  DS    F             FORWARD CHAIN POINTER
RDSPREV  DS    F             BACKWARD CHAIN POINTER
RDSFLAG1 DS    XL1           DATASET STATUS INDICATORS
*                            XXX. ....  RESERVED
RDSFREE  EQU   X'10'         ...1 ....  NEED TO FREE DATASET AND RDS
RDSDUMP  EQU   X'08'         .... 1...  OPER HAS BEEN TOLD TO DUMP DS
RDSREADY EQU   X'04'         .... .1..  DS IS OPEN AND READY TO USE
RDSCLOSE EQU   X'02'         .... ..1.  DS NEEDS TO BE CLOSED
RDSNDOP  EQU   X'01'         .... ...1  DS NEEDS TO BE OPENED
RDSFLAG2 DS    XL1           DATASET STATUS INDICATORS
RDSLOST  EQU   X'80'         1... ....  DUMMY RDS FOR LOST DATA
RDSPHYER EQU   X'40'         .1.. ....  PHYSICAL I/O ERROR
RDSLOGER EQU   X'20'         ..1. ....  LOGICAL I/O ERROR
*                            ...X XXXX  RESERVED
RDSFLAG3 DS    XL1           RESERVED
RDSFLAG4 DS    XL1           RESERVED
RDSNAME  DS    CL10          DATASET NAME
RDSVOLID DS    CL6           VOLUME SERIAL
RDSDDN   DS    CL8           DDNAME RETURNED BY DYNAMIC ALLOC
RDSCAPTY DS    F             DATASET CAPACITY IN # OF BLOCKS
RDSNXTBL DS    F             NUMBER OF NEXT AVAILABLE BLOCK
RDSBQE   DS    A             ADDRESS OF BQE BEING WRITTEN
RDSAVSPC DS    F             AVAILABLE SPACE FROM SHOWCB
RDSENRBA DS    F             ENDRBA FROM SHOWCB
RDSCINV  DS    F             CONTROL INTERVAL SIZE
RDSDOMID DS    F             MSG # OF DUMP MSG
RDSRPL   DS    CL76          VSAM RPL
RDSACB   DS    CL76          VSAM ACB
         SPACE 2
         DCBD  DSORG=PS,DEVD=DA
         SPACE 2
         CVT   DSECT=YES
         SPACE 2
         IEFJESCT
         SPACE 2
         IEFJSCVT
         SPACE 2
         END   IMGATGET
