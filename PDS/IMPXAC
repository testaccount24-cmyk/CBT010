*        COPYRIGHT (C) 1986,1994,2003,2006  PRYCROFT SIX PTY LTD
         TITLE 'CHANNEL PATH MONITOR DISPLAY LINE MAPPING'
CHNLINE  DSECT
CHNENTRY DS    XL(L'LOWX)
CHCHPID  DS    CL3
CHPTYPE  DS    CL5
         DS    CL1
CHSTATUS DS    CL8
CHBUSY   DS    CL7
         DS    CL1
CHDESC   DS    CL32
CHBAR    DS    CL1
CHGRAF   DS    CL20
         DS    CL1
         TITLE 'CHANNEL PATH MONITOR SUBROUTINE'
IMPXA    CSECT
         USING CHANNELS,R11
CHANNELS DS    0H
         L     R1,SMCAADDR       POINT TO THE SMCA.
         MVC   CIOSRATE+71(4),16(R1)   COPY SYSTEM ID.
         MVC   INCHARS(L'INCHARS-1),INCHARS+1
         MVI   INCHARS+L'INCHARS-1,C' '  ADJUST ANY COMMAND INPUT.
         B     CMDSCANC          PROCESS IT.
         SPACE
         USING WNDWMNGR,R15
REDOCHAN L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         SLR   R0,R0
         ST    R0,WINLINES       INITIALIZE LINE COUNTER.
         L     R2,WINBUFF        GET WINDOW BUFFER START ADDRESS.
         MVC   0(LL-79,R2),HIGHX LOAD HEADING ATTRIBUTES.
         MVI   8(R2),X'F3'       SHOW HEADING IN PINK.          (I3279)
         MVC   LL-79(79,R2),BLANKS
         MVC   LL-60(39,R2),HEADINGC
         BAS   R14,CADDLINE      HEADING LINE NOW COMPLETE.
         MVC   0(LL-79,R2),HIGHX LOAD HEADING ATTRIBUTES.
         MVI   2(R2),X'F4'       USE UNDERSCORE FOR HEADING.    (I3279)
         MVI   5(R2),X'C4'       SUPPLY UNDERLINE ALSO.         (F9526)
         MVI   8(R2),X'F7'       SHOW HEADING IN WHITE.         (I3279)
         L     R3,CVTPTR(,0)     POINT TO THE CVT.
         CLI   CHANMDSW,C'S'     SHOWING SUMMARY?
         BE    ESACHANS          YES.
         USING CVT,R3
         MVC   LL-79(79,R2),CHPDCOLS
         BAS   R14,CADDLINE      COLUMN HEADINGS NOW COMPLETE.
         L     R8,CVTICHPT       PT TO INSTALLATION CHANNEL PATH TBL.
         DROP  R3                CVT.
         L     R3,CMCTADDR       POINT TO CHANNEL MEASUREMENT CNTL TBL.
         L     R4,12(,R3)        POINT TO CHANNEL PATH MEASUREMENT TBL.
         LA    R4,12(,R4)        POINT TO FIRST CPMT ENTRY.
         L     R3,28(,R3)        POINT TO LAST CPMT ENTRY.
         LA    R6,256            GET MAXIMUM CHPID COUNT.
         USING CHNLINE,R2
CHPDLNLP TM    0(R8),X'80'       ANY SIGN OF LIFE?
         BZ    NXTCHPID          HE'S DEAD, JIM.
         MVC   CHNENTRY,LOWX     LOAD ATTRIBUTE BYTES.
         MVI   CHBAR,C'|'        SUPPLY GRAPH BORDER.
         MVI   CHBAR+5,C'¦'
         MVI   CHBAR+10,C'¦'
         MVI   CHBAR+15,C'¦'
         MVI   CHBAR+20,C'¦'
         LA    R0,256
         SR    R0,R6             GET CHANNEL PATH ID.
         STH   R0,CHANNMBR       SAVE IT.
         UNPK  CHCHPID,CHANNMBR+1(2)
         TR    CHCHPID,HEX-C'0'  SHOW IT.
         MVI   CHCHPID+2,C' '
         ICM   R0,1,0(R8)        GET ARRAY BYTE.
         BNM   NXTCHPID          FLAG JUST GOT RESET.
         SLR   R1,R1             PREPARE FOR SHIFT.
         LA    R15,CHSTATAB      POINT TO STATUS LABELS.
         SRL   R0,2              DISCARD UNWANTED BITS.
CHSTATLP SRDL  R0,1              TRANSMIT A BIT.
         LTR   R1,R1             WAS IT A ONE?
         BNZ   CHSTATOK          YES, GO LOAD LABEL.
         LA    R15,8(,R15)       NO, POINT TO NEXT LABEL.
         B     CHSTATLP          GO TEST NEXT BIT.
CHSTATOK MVC   CHSTATUS,0(R15)   SHOW CHANNEL STATUS.
         CLI   0(R8),X'E0'       ONLINE AND HUNKY-DORY?
         BE    CHCOLROK          YES.
         MVI   CHCHPID-1,X'F1'   NO, SHOW OFFLINE IN BLUE.
         BL    CHCOLROK          CHANNEL NOT ONLINE.
         MVC   CHNENTRY,HIGHX    HIGH INTENSITY FOR ERROR STATUS.
CHCOLROK DS    0H
         IOSCHPD CHPID=CHANNMBR,ACRONYM=CHPTYPE,DESC=CHDESC,MF=(E,CCHP)
         LH    R1,8(,R4)         GET CHANNEL PATH BUSY.
         LTR   R1,R1             CHECK VALUE.
         BNP   CHLINEOK          LEAVE BLANK IF ZERO OR OFFLINE.
         LR    R14,R1            COPY VALUE.
         M     R0,AHUNDRED       WANT % TO 2 DECIMAL PLACES.
         LA    R1,128(,R1)       PERFORM ROUNDING.
         SRL   R1,8              ALLOW FOR FRACTIONAL BITS.
         CVD   R1,WORK
         MVC   CHBUSY,=X'402021204B2020'
         ED    CHBUSY,WORK+5     SHOW BUSY PERCENTAGE.
         LR    R1,R14            RESTORE VALUE.
         LA    R1,5*128(,R1)     PERFORM ROUNDING.
         D     R0,=A(5*256)      MAP 100% TO 20.
         LTR   R1,R1             ANYTHING TO GRAPH?
         BNP   CHLINEOK          NO.
         MVI   CHGRAF,X'05'      YES, GRAPH SOMETHING.
         BCTR  R1,0              GET WHAT'S LEFT TO GRAPH.
         LTR   R1,R1             ANYTHING TO GRAPH?
         BNP   CHLINEOK          NO.
         BCTR  R1,0              GET LENGTH CODE OF WHAT'S LEFT.
         EX    R1,CHGRAFIT       FINISH THE GRAPH FOR THIS LINE.
CHLINEOK BAS   R14,CADDLINE      DISPLAY LINE NOW COMPLETE.
NXTCHPID LA    R4,12(,R4)        POINT TO NEXT CPMT ENTRY.
         LA    R8,1(,R8)         POINT TO NEXT ICHPT ENTRY.
         CR    R4,R3             PAST THE LAST VALID ENTRY?
         BH    CLCSYSRT          YES, FINISH OFF DISPLAY SCREEN IMAGE.
         BCT   R6,CHPDLNLP       PROCESS NEXT CHPID.
         B     CLCSYSRT          CHPID X'FF' NOW FORMATTED.
CHGRAFIT MVC   CHGRAF+1(0),CHGRAF               <<< EXECUTED >>>
         DROP  R2                CHNLINE.
         SPACE
ESACHANS MVC   LL-79(79,R2),CHANCOLS
         BAS   R14,CADDLINE      COLUMN HEADINGS NOW COMPLETE.
         LA    R1,2
         ST    R1,WINLINES       INITIALIZE LINE COUNTER.
         DROP  R15               WNDWMNGR.
         L     R3,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R3
         L     R8,CVTICHPT       POINT TO INSTALLED CHANNEL PATH TBL.
         DROP  R3                CVT.
         L     R3,CMCTADDR       POINT TO CHANNEL MEASUREMENT CNTL TBL.
         USING CMCT,R3
         L     R4,CMCTCPMT       POINT TO CHANNEL PATH MEASUREMENT TBL.
         LA    R4,12(,R4)        POINT TO FIRST CPMT ENTRY.
         L     R3,CMCTHICP       POINT TO LAST CPMT ENTRY.
         DROP  R3                CMCT.
         LA    R6,16             GET NUMBER OF LINES PER SCREEN.
NXTCHLIN LA    R5,16             GET NUMBER OF CHANNELS PER LINE.
         MVC   0(LL-79,R2),LOWX  LOAD ATTRIBUTE BYTES.
         LA    R7,LL-79(,R2)     POINT PAST ATTRIBUTE BYTES.
         BAS   R14,CADDLINE      THIS WHOLE LINE TO BE DISPLAYED.
NEXTCHAN LH    R1,8(,R4)         GET CHANNEL PATH BUSY.
         LTR   R1,R1             EXAMINE BUSY VALUE.
         BM    ZEROCHAN          LEAVE BLANK IF CHANNEL PATH OFFLINE.
         BP    PATHUSED          GO AND DO CALCULATION IF POSITIVE.
         MVI   0(R7),X'24'       FLAG ONLINE WITH GREEN.
SHOWCHAN MVI   3(R7),X'25'       REVERT TO TURQUOISE FOR UTILIZATION.
         LA    R15,16
         SR    R15,R6
         STC   R15,1(,R7)
         LA    R15,16
         SR    R15,R5
         STC   R15,2(,R7)
         TR    1(2,R7),HEX       SHOW CHPID IF PATH COMPLETELY UNUSED.
         B     DONECHAN          HAVE NOW PROCESSED THIS ENTRY.
ZEROCHAN CLI   0(R8),X'00'       IS THE CHANNEL PATH OWNED?
         BE    DONECHAN          NO, LEAVE BLANK.
         MVI   0(R7),X'22'       YES, FLAG WITH RED.
         B     SHOWCHAN
PATHUSED M     R0,TEN            WANT % TO 1 DECIMAL PLACE.
         LA    R1,128(,R1)       PERFORM ROUNDING.
         SRL   R1,8              CONVERT PERMILLE BUSY.
         C     R1,ONEGRAND       CHANNEL AT LEAST TEN PERCENT BUSY?
         BNL   INTECHER          YES, DON'T SHOW FRACTIONAL PERCENTAGE.
         CVD   R1,WORK           GET DECIMAL PERMILLEAGE.
         OI    WORK+7,X'0F'      ENSURE RESULT IS NUMERIC CHARACTERS.
         UNPK  1(2,R7),WORK+6(2) UNPACK RESULT.
         MVC   0(1,R7),1(R7)     PUT WHOLE PERCENT IN RIGHT COLUMN.
         MVI   1(R7),C'.'        INSERT DECIMAL POINT.
         B     CHANPCNT          GO GET PERCENTAGE SIGN.
INTECHER LA    R1,5(,R1)         ROUND TO NEAREST PERCENT.
         D     R0,TEN            GET PERCENT BUSY.
         MVC   0(4,R7),ED3       LOAD EDIT MASK.
         CVD   R1,WORK           GET DECIMAL PERCENTAGE.
         ED    0(4,R7),WORK+6    LOAD PERCENTAGE INTO DISPLAY LINE.
         MVC   0(3,R7),1(R7)     MOVE INTO CORRECT COLUMNS.
CHANPCNT MVI   3(R7),C'%'        INDICATE PERCENTAGE.
DONECHAN LA    R7,5(,R7)         UPDATE SCREEN BUFFER POINTER.
         LA    R4,12(,R4)        POINT TO NEXT CPMT ENTRY.
         LA    R8,1(,R8)         POINT TO NEXT ICHPT ENTRY.
         CR    R4,R3             PAST THE LAST VALID ENTRY?
         BH    CLCSYSRT          YES, FINISH OFF DISPLAY SCREEN IMAGE.
         BCT   R5,NEXTCHAN       NO, PROCESS THE NEXT ENTRY,
         BCT   R6,NXTCHLIN           PERHAPS ON THE NEXT DISPLAY LINE.
*        B     CLCSYSRT          CHPID X'FF' NOW FORMATTED.
         SPACE
CLCSYSRT LR    R1,R2             POINT TO THE CURRENT DISPLAY LINE.
         LA    R4,LL             GET THE LINE LENGTH.
         SR    R1,R4             POINT TO THE PREVIOUS DISPLAY LINE.
         MVI   2(R1),X'F4'       UNDERSCORE.                    (I3279)
         MVI   5(R1),X'C4'       UNDERLINE.                     (F9526)
         L     R5,PARTADDR       POINT TO PAGING ACTIVITY REF. TABLE.
         LA    R8,80(,R5)        POINT TO THE FIRST PARTE.
         SLR   R4,R4             ZERO DATA SET COUNTER.
         ST    R4,CDAIOCT1       RESET DASD I/O COUNTERS.
         ST    R4,CDAIOCT2
         L     R1,4(,R5)         COPY TOTAL PARTE COUNT.
         ST    R1,WORK2          CONVERT IT TO A FULLWORD.
         SLR   R1,R1             ZERO ACCUMULATOR.
         B     CFSTPRT1
CNXTPRT1 AH    R8,PARTELEN       POINT TO NEXT PART ENTRY.
CFSTPRT1 LA    R4,1(,R4)         INCREMENT USED PARTE COUNTER.
         C     R4,WORK2          END OF USED PART ENTRIES?
         BH    CPRTEOK1          YES, PROCESS SWAP DATA SETS.
         TM    9(R8),X'80'       IS THIS PARTE IN USE?
         BO    CNXTPRT1          NO, GET THE NEXT ONE.
         L     R15,28(,R8)       POINT TO FIRST IORB.
         USING IORB,R15
         SLR   R0,R0
         ICM   R0,1,IORNUM       GET PAGE DATA SET IORB COUNT.
         BZ    CPRTRBL1          SHOULD NOT HAPPEN.
         LA    R0,1
CPRTRBL1 AL    R1,IORSION        GET CURRENT SSCH+RSCH COUNT.
         L     R15,IORIORB       POINT TO THE NEXT IORB.
         BCT   R0,CPRTRBL1
         B     CNXTPRT1          PROCESS NEXT PARTE.
         DROP  R15               IORB.
CPRTEOK1 ST    R1,SAVE+20        SAVE PAGE I/O COUNT SOMEWHERE.
         TIME  BIN               GET THE CURRENT TIME.
         SLR   R1,R1             CLEAR FOR ACCUMULATION.
         SLR   R15,R15           CLEAR FOR ACCUMULATION.
         SLR   R9,R9             CLEAR FOR WORK.
         USING ASVT,R7
         L     R7,ASVTADDR       POINT TO ADDRESS SPACE VECTOR TABLE.
         L     R8,ASVTMAXU       GET MAXUSER.
         LA    R7,ASVTENTY       POINT TO FIRST ASVTE.
         DROP  R7                ASVT.
ASVTLPC1 ICM   R4,15,0(R7)       POINT TO ASCB.
         BM    ASVNXTC1          ASID NOT ASSIGNED.
         USING ASCB,R4
         AL    R1,ASCBIOSC       ACCUMULATE EXCP COUNT.
         ICM   R9,3,ASCBSWCT     LOAD SHORT WAIT COUNT.
         ALR   R15,R9            ACCUMULATE IT.
         DROP  R4                ASCB.
ASVNXTC1 LA    R7,4(,R7)         POINT TO NEXT ENTRY.
         BCT   R8,ASVTLPC1       NO, GET NEXT ASVT ENTRY.
         STM   R15,R1,SAVE+40    SAVE COUNTS AND TIME-OF-DAY SOMEWHERE.
         L     R4,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R4
         L     R3,CVTUCBA        POINT TO FIRST UNIT CONTROL BLOCK.
         DROP  R4                CVT.
         L     R9,CMCTADDR       POINT TO CHANNEL MEASUREMENT CNTL TBL.
         USING CMCT,R9
         L     R9,CMCTCMBV       POINT TO CHANNEL MEASUREMENT BLOCK.
         DROP  R9                CMCT.
         TM    OSLEVEL,CVTUCBSV  UCB SERVICES AVAILABLE?
         BNO   CHANUCB1          NO, FIRST TIME THROUGH THE LOOP.
         XC    CSCNWORK,CSCNWORK CLEAR WORK AREA FOR THIS UCB SCAN.
CNXTUCB1 TM    OSLEVEL,CVTUCBSV  UCB SERVICES AVAILABLE?
         BNO   CNXAUCB1          NO, FOLLOW STATIC UCB CHAIN.
         L     R15,CNFGTKAD      YES, POINT TO IOCTOKEN AREA.
         UCBSCAN COPY,           SCAN UCBS, EVEN IF NOT APF'D.         +
               WORKAREA=CSCNWORK,                                      +
               UCBAREA=CSCNUCB,                                        +
               UCBPAREA=CSCNPRFX,                                      +
               DYNAMIC=YES,                                            +
               RANGE=ALL,                                              +
               NONBASE=YES,                                            +
               DEVCLASS=DASD,                                          +
               IOCTOKEN=(R15),                                         +
               LINKAGE=SYSTEM,                                         +
               MF=(E,CSCN,COMPLETE)
         LTR   R15,R15           WAS A UCB RETURNED BY UCBSCAN?
         BNZ   GOTUCNT1          NO, NO MORE UCB ENTRIES.
         LA    R3,CSCNUCB        YES, POINT TO THE RETURNED UCB COPY.
         B     CHANUCB1          PROCESS IT.
         USING UCBPMCW1,R3
         USING UCBOB,UCBBASIC
CNXAUCB1 ICM   R3,15,UCBNXUCB    GET NEXT UCB ADDRESS.
         BZ    GOTUCNT1          CHECK FOR END OF UCB CHAIN.
CHANUCB1 LA    R15,32            GET "UCB PREFIX" LENGTH.
         SLR   R3,R15            POINT TO PATH MGMT CONTROL WORD.
         CLI   UCBTBYT3,UCB3DACC DASD UCB?
         BNE   CNXTUCB1          NO, TRY NEXT UCB.
         TM    UCBPMCW1+1,UCBMCMB MEASUREMENTS BEING STORED IN CMB?
         BZ    CNXTUCB1          NO, TRY NEXT UCB.
         SLR   R1,R1
         ICM   R1,3,UCBMBI       GET CMB BLOCK INDEX FOR THIS DEVICE.
         SLL   R1,5              GET OFFSET OF ENTRY INTO CMB.
         ALR   R1,R9             POINT TO ENTRY FOR THIS DEVICE.
         TM    MODESW4,ECMB      ECMB RATHER THAN CMB FOR DEVICE?
         BNO   CUSECMB1          NO, DIRECTLY ACCESS THE CMB.
         TM    MODESW2,AUTH      APF AUTHORIZED?
         BNO   CNXTUCB1          NO, CANNOT FETCH ECMB DATA.
         L     R15,IOSECMB@      YES, POINT TO IOSCMB ROUTINE.
         LA    R1,32(,R3)        POINT TO THE UCB.
         BASR  R14,R15           INVOKE IT.
         LTR   R15,R15           SUCCESS?
         BNZ   CNXTUCB1          NO.
         LA    R1,SECWORKA+48    POINT TO CMB DATA.
CUSECMB1 SLR   R8,R8             CLEAR FOR INSERT.
         ICM   R8,3,0(R1)        GET SSCH/RSCH COUNT.
         A     R8,CDAIOCT1       ACCUMULATE DASD SSCH/RSCH COUNT.
         ST    R8,CDAIOCT1
         B     CNXTUCB1          GET NEXT UCB.
         DROP  R3                UCBPMCW1.
GOTUCNT1 BAS   R14,CTOTIORT      GET I/O COUNT ACCUMULATOR VALUES.
         STM   R7,R8,SAVE+28     SAVE THESE VALUES SOMEWHERE.
         STIMER WAIT,BINTVL=CHANRTWT WAIT FOR A FRACTION OF A SECOND.
         L     R5,PARTADDR       POINT TO PAGING ACTIVITY REF. TABLE.
         LA    R8,80(,R5)        POINT TO THE FIRST PARTE.
         SLR   R4,R4             ZERO DATA SET COUNTER.
         SLR   R5,R5             ZERO ACCUMULATOR.
         B     CFSTPRT2
CNXTPRT2 AH    R8,PARTELEN       POINT TO NEXT PART ENTRY.
CFSTPRT2 LA    R4,1(,R4)         INCREMENT USED PARTE COUNTER.
         C     R4,WORK2          END OF USED PART ENTRIES?
         BH    CPRTEOK2          YES, PROCESS SWAP DATA SETS.
         TM    9(R8),X'80'       IS THIS PARTE IN USE?
         BO    CNXTPRT2          NO, GET THE NEXT ONE.
         L     R15,28(,R8)       POINT TO FIRST IORB.
         USING IORB,R15
         SLR   R0,R0
         ICM   R0,1,IORNUM       GET PAGE DATA SET IORB COUNT.
         BZ    CPRTRBL2          SHOULD NOT HAPPEN.
         LA    R0,1
CPRTRBL2 AL    R5,IORSION        GET CURRENT SSCH+RSCH COUNT.
         L     R15,IORIORB       POINT TO THE NEXT IORB.
         BCT   R0,CPRTRBL2
         B     CNXTPRT2          PROCESS NEXT PARTE.
         DROP  R15               IORB.
CPRTEOK2 SL    R5,SAVE+20        GET PAGE SSCH+RSCH COUNT CHANGE.
         M     R4,TENGRAND
         TIME  BIN               GET THE CURRENT TIME.
         SL    R0,SAVE+44        GET THE CHANGE IN TIME.
         ST    R0,SAVE+44        SAVE IT.
         DR    R4,R0             GET PAGE SSCH+RSCH RATE.
         CVD   R5,WORK
         MVC   CASMRATE+24(9),=X'4020202021204B2020'
         ED    CASMRATE+24(9),WORK+4
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),CASMRATE
         BAS   R14,CADDLINE      LINE NOW COMPLETE.
         L     R7,ASVTADDR       POINT TO ADDRESS SPACE VECTOR TABLE.
         USING ASVT,R7
         L     R8,ASVTMAXU       GET MAXUSER.
         LA    R7,ASVTENTY       POINT TO FIRST ASVTE.
         DROP  R7                ASVT.
         SLR   R1,R1             CLEAR FOR ACCUMULATION.
         SLR   R15,R15           CLEAR FOR ACCUMULATION.
         SLR   R9,R9             CLEAR FOR WORK.
ASVTLPC2 ICM   R4,15,0(R7)       POINT TO ASCB.
         BM    ASVNXTC2          ASID NOT ASSIGNED.
         USING ASCB,R4
         AL    R1,ASCBIOSC       ACCUMULATE EXCP COUNT.
         ICM   R9,3,ASCBSWCT     LOAD SHORT WAIT COUNT.
         ALR   R15,R9            ACCUMULATE IT.
         DROP  R4                ASCB.
ASVNXTC2 LA    R7,4(,R7)         POINT TO NEXT ENTRY.
         BCT   R8,ASVTLPC2       NO, GET NEXT ASVT ENTRY.
         SL    R15,SAVE+40       GET THE CHANGE IN SHORT WAIT COUNT.
         SL    R1,SAVE+48        GET THE CHANGE IN THE EXCP COUNT.
         LTR   R15,R15
         BM    CIOSLINE          SUPPRESS LINE UPON NEGATIVE RESULT.
         LTR   R1,R1
         BM    CIOSLINE          SUPPRESS LINE UPON NEGATIVE RESULT.
         M     R0,TENGRAND       MULTIPLY FOR TWO FRACTIONAL DIGITS.
         D     R0,SAVE+44        DIVIDE BY THE TIME TO GET THE RATE.
         M     R14,TENGRAND      MULTIPLY FOR TWO FRACTIONAL DIGITS.
         D     R14,SAVE+44       DIVIDE BY THE TIME TO GET THE RATE.
         CVD   R1,WORK
         MVC   CSYSRATE+24(9),=X'4020202021204B2020'
         ED    CSYSRATE+24(9),WORK+4
         CVD   R15,WORK
         MVC   CSYSRATE+43(9),=X'4020202021204B2020'
         ED    CSYSRATE+43(9),WORK+4
         L     R9,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R9
         L     R3,CVTUCBA        POINT TO FIRST UNIT CONTROL BLOCK.
         DROP  R9                CVT.
         L     R9,CMCTADDR       POINT TO CHANNEL MEASUREMENT CNTL TBL.
         USING CMCT,R9
         L     R9,CMCTCMBV       POINT TO CHANNEL MEASUREMENT BLOCK.
         DROP  R9                CMCT.
         TM    OSLEVEL,CVTUCBSV  UCB SERVICES AVAILABLE?
         BNO   CHANUCB2          NO, FIRST TIME THROUGH THE LOOP.
         XC    CSCNWORK,CSCNWORK CLEAR WORK AREA FOR THIS UCB SCAN.
CNXTUCB2 TM    OSLEVEL,CVTUCBSV  UCB SERVICES AVAILABLE?
         BNO   CNXAUCB2          NO, FOLLOW STATIC UCB CHAIN.
         L     R15,CNFGTKAD      YES, POINT TO IOCTOKEN AREA.
         UCBSCAN COPY,           SCAN UCBS, EVEN IF NOT APF'D.         +
               WORKAREA=CSCNWORK,                                      +
               UCBAREA=CSCNUCB,                                        +
               UCBPAREA=CSCNPRFX,                                      +
               DYNAMIC=YES,                                            +
               RANGE=ALL,                                              +
               NONBASE=YES,                                            +
               DEVCLASS=DASD,                                          +
               IOCTOKEN=(R15),                                         +
               LINKAGE=SYSTEM,                                         +
               MF=(E,CSCN,COMPLETE)
         LTR   R15,R15           WAS A UCB RETURNED BY UCBSCAN?
         BNZ   GOTUCNT2          NO, NO MORE UCB ENTRIES.
         LA    R3,CSCNUCB        YES, POINT TO THE RETURNED UCB COPY.
         B     CHANUCB2          PROCESS IT.
         USING UCBPMCW1,R3
         USING UCBOB,UCBBASIC
CNXAUCB2 ICM   R3,15,UCBNXUCB    GET NEXT UCB ADDRESS.
         BZ    GOTUCNT2          CHECK FOR END OF UCB CHAIN.
CHANUCB2 LA    R15,32            GET "UCB PREFIX" LENGTH.
         SLR   R3,R15            POINT TO PATH MGMT CONTROL WORD.
         CLI   UCBTBYT3,UCB3DACC DASD UCB?
         BNE   CNXTUCB2          NO, TRY NEXT UCB.
         TM    UCBPMCW1+1,UCBMCMB MEASUREMENTS BEING STORED IN CMB?
         BZ    CNXTUCB2          NO, TRY NEXT UCB.
         SLR   R1,R1
         ICM   R1,3,UCBMBI       GET CMB BLOCK INDEX FOR THIS DEVICE.
         SLL   R1,5              GET OFFSET OF ENTRY INTO CMB.
         ALR   R1,R9             POINT TO ENTRY FOR THIS DEVICE.
         TM    MODESW4,ECMB      ECMB RATHER THAN CMB FOR DEVICE?
         BNO   CUSECMB2          NO, DIRECTLY ACCESS THE CMB.
         TM    MODESW2,AUTH      APF AUTHORIZED?
         BNO   CNXTUCB2          NO, CANNOT FETCH ECMB DATA.
         L     R15,IOSECMB@      YES, POINT TO IOSCMB ROUTINE.
         LA    R1,32(,R3)        POINT TO THE UCB.
         BASR  R14,R15           INVOKE IT.
         LTR   R15,R15           SUCCESS?
         BNZ   CNXTUCB2          NO.
         LA    R1,SECWORKA+48    POINT TO CMB DATA.
CUSECMB2 SLR   R8,R8             CLEAR FOR INSERT.
         SLR   R8,R8             CLEAR FOR INSERT.
         ICM   R8,3,0(R1)        GET SSCH/RSCH COUNT.
         A     R8,CDAIOCT2       ACCUMULATE DASD SSCH/RSCH COUNT.
         ST    R8,CDAIOCT2
         B     CNXTUCB2          GET NEXT UCB.
         DROP  R3                UCBPMCW1.
GOTUCNT2 S     R8,CDAIOCT1       GET TOTAL DASD SSCH/RSCH COUNT DELTA.
         BNM   CUCNTOK           PROCEED IF NON-NEGATIVE.
CUCNTNEG A     R8,SIXFOURK       HANDLE HALFWORD COUNTER WRAP-AROUND.
         BM    CUCNTNEG          ASSUME MORE THAN 1 IF STILL NEGATIVE.
CUCNTOK  LTR   R1,R8             COPY THE DASD SSCH/RSCH CHANGE.
         BNZ   CUCNTPUT          SHOW THE NON-ZERO COUNT.
         TM    MODESW4,ECMB      ECMBS BEING USED FOR THIS SYSTEM?
         BNO   CUCNTPUT          NO, IT REALLY WAS ZERO.
         TM    MODESW2,AUTH      APF AUTHORIZED?
         BO    CUCNTPUT          YES, IT REALLY WAS ZERO.
         MVC   CSYSRATE(9),=CL9'(NOT APF)'
         B     CUCNTSHO          SHOW THE BAD NEWS.
CUCNTPUT M     R0,TENGRAND       MULTIPLY FOR TWO FRACTIONAL DIGITS.
         D     R0,SAVE+44        DIVIDE BY THE TIME TO GET THE RATE.
         CVD   R1,WORK
         MVC   CSYSRATE(9),=X'4020202021204B2020'
         ED    CSYSRATE(9),WORK+4
CUCNTSHO MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),CSYSRATE
         BAS   R14,CADDLINE      LINE NOW COMPLETE.
CIOSLINE BAS   R14,CTOTIORT      GET I/O COUNT ACCUMULATOR VALUES.
         SL    R7,SAVE+28        GET THE I/O SLIH ENTRY COUNT CHANGE.
         SL    R8,SAVE+32        GET THE TPI CC=1 COUNT CHANGE.
         LR    R1,R7             COPY THE I/O SLIH ENTRY COUNT CHANGE.
         ALR   R1,R8             ADD THE TPI CC=1 COUNT CHANGE.
         M     R6,TENGRAND       MULTIPLY FOR TWO FRACTIONAL DIGITS.
         D     R6,SAVE+44        DIVIDE BY THE TIME TO GET THE RATE.
         CVD   R7,WORK
         MVC   CIOSRATE(9),=X'4020202021204B2020'
         ED    CIOSRATE(9),WORK+4
         LR    R9,R8             COPY THE TPI CC=1 COUNT CHANGE.
         M     R8,TENGRAND       MULTIPLY FOR TWO FRACTIONAL DIGITS.
         D     R8,SAVE+44        DIVIDE BY THE TIME TO GET THE RATE.
         CVD   R9,WORK
         MVC   CIOSRATE+24(9),=X'4020202021204B2020'
         ED    CIOSRATE+24(9),WORK+4
         M     R0,TENGRAND       MULTIPLY FOR TWO FRACTIONAL DIGITS.
         D     R0,SAVE+44        DIVIDE BY THE TIME TO GET THE RATE.
         CVD   R1,WORK
         MVC   CIOSRATE+43(9),=X'4020202021204B2020'
         ED    CIOSRATE+43(9),WORK+4
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),CIOSRATE
         BAS   R14,CADDLINE      LINE NOW COMPLETE.
         SPACE
         BAS   R1,SYSUMMRY       PRODUCE & SHOW SYSTEM SUMMARY LINE.
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         LA    R1,1
         A     R1,WINLINES       INCREMENT LINE COUNTER.
         ST    R1,WINLINES
         MVC   0(2,R2),FFFF+2    SET FINAL LINE FLAG FOR WINDOW DATA.
         DROP  R15               WNDWMNGR.
PUTSCRNC LA    R0,LL             MAKE REGISTER 0 POSITIVE FOR OUTPUT.
GETSCRNC L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         BASR  R14,R15           CALL WINDOW MANAGER.
         CLI   DOWNCNTR,C' '     ARE WE IN AUTO REFRESH MODE?
         BH    REDOCHAN          YES, CONTINUE WITH DISPLAYS.
CMDSCANC CLI   INCHARS,C'D'      DISPLAY DETAILS REQUEST?
         BE    CHANMODE          YES, SET DISPLAY MODE.
         CLI   INCHARS,C'S'      DISPLAY SUMMARY REQUEST?
         BE    CHANMODE          YES, SET DISPLAY MODE.
         CLI   INCHARS,C' '      CONTINUE REQUESTED?
         BE    REDOCHAN          YES, CONTINUE WITH REPORT.
GIVEHLPC MVC   INBUFF(8),SBLST   REQUEST SUBCOMMAND LIST FROM TUTORIAL.
         MVI   TGETLEN+1,8       SUPPLY LENGTH OF INPUT TO PARSE.
         LNR   R0,R11            MAKE REGISTER 0 NEGATIVE FOR PARSE.
         B     GETSCRNC          GO DISPLAY HELP PANEL.
CHANMODE MVC   CHANMDSW,INCHARS  SET DISPLAY MODE.
         B     REDOCHAN
         SPACE
CTOTIORT SLR   R7,R7             ZERO ACCUMULATOR.
         SLR   R8,R8             ZERO ACCUMULATOR.
         L     R1,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R1
         L     R1,CVTPCCAT       POINT TO THE PCCA VECTOR TABLE.
         DROP  R1                CVT.
         LA    R0,16             GET MAXIMUM CPU COUNT.
CHPCCALP ICM   R15,15,0(R1)      POINT TO PCCA OF THIS PCCAVT ENTRY.
         BZ    CPCCANXT          ZERO POINTER SO CHECK OUT NEXT CPU.
         USING PCCA,R15
*                                LOAD ACCUMULATED I/O COUNTS.
         LM    R4,R5,PCCASLIH + PCCASTPI
         ALR   R7,R4             ACCUMULATE I/O SLIH ENTRY COUNT.
         ALR   R8,R5             ACCUMULATE TPI WITH CC=1 COUNT.
         DROP  R15               PCCA.
CPCCANXT LA    R1,4(,R1)         POINT TO NEXT PCCA POINTER.
         BCT   R0,CHPCCALP
         BR    R14               RETURN TO CALLER.
         SPACE
CADDLINE LA    R2,LL(,R2)        ADJUST BUFFER POINTER.
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         LA    R0,1
         A     R0,WINLINES       INCREMENT LINE COUNTER.
         ST    R0,WINLINES
         MVC   0(2,R2),WINFULL   PREPARE FOR FULL WINDOW.
         C     R2,WINEND         SEE IF THE BUFFER IS FULL YET.
         BNL   PUTSCRNC          IF YES, THEN FORGET SUMMARY LINE.
         MVC   LL-79(79,R2),BLANKS
         BR    R14
         DROP  R15               WNDWMNGR.
         SPACE
         DROP  R11               CHANNELS.
         TITLE 'CHANNEL PATH MONITOR - VARIABLES AND CONSTANTS'
CHANRTWT DC    F'40'
SIXFOURK DC    F'65536'
CDAIOCT1 DC    F'0'
CDAIOCT2 DC    F'0'
CSCNWORK DC    XL100'00'         UCBSCAN WORKAREA.
CSCNPRFX DC    XL48'00'          UCBSCAN UCB PREFIX AREA.
CSCNUCB  DC    XL48'00'          UCBSCAN UCB BASE AREA.
CHSTATAB DC    CL8'BADFORCE'
         DC    CL8'VARY OFF'
         DC    CL8'RECOVERY'
         DC    CL8'ONLINE  '
         DC    CL8'OFFLINE '
         DC    CL8'OTHERSYS'
CHANNMBR DC    H'0'              CHPID.
CHANMDSW DC    C'D'              DISPLAY MODE FLAG.
HEADINGC DC    CL39'CHANNEL PATH UTILIZATION/STATUS DISPLAY'
CHANCOLS DC    CL79' X0   X1   X2   X3   X4   X5   X6   X7   X8   X9   +
               XA   XB   XC   XD   XE   XF '
CHPDCOLS DC    CL79'ID TYPE  STATUS    BUSY% DESCRIPTION               +
                     |---2+5--5+0--7+5--->%'
CASMRATE DC    CL79'SYSTEM I/O RATES:        ZZZZ9.99 ASM-PAGE-SSCH/SEC+
                                           '
CSYSRATE DC    CL79' ZZZZ9.99 DASD-SSCH/SEC  ZZZZ9.99 EXCP/SEC  ZZZZ9.9+
               9 ADDR-SPACE-SHORT-WAITS/SEC'
CIOSRATE DC    CL79' ZZZZ9.99 I/O-SLIH/SEC + ZZZZ9.99 TPI/SEC = ZZZZ9.9+
               9 IO/SEC FOR SYSTEM SSSS    '
         SPACE
         UCBSCAN MF=(L,CSCN)     UCBSCAN PARAMETER LIST.
         SPACE
         IOSCHPD MF=(L,CCHP)     IOSCHPD PARAMETER LIST.
         SPACE
         LTORG
         SPACE
         DS    0H
