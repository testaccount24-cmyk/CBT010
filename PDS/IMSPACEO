IMSPACER TITLE 'DASD FREE SPACE MONITOR - 07 FEB 1989'
***********************************************************************
*                                                                     *
*        IMSPACER - DASD FREE SPACE MONITOR                           *
*                                                                     *
*        IMSPACER IS A PROGRAM FOR A CONSTANTLY RUNNING STARTED TASK  *
*   WHICH WILL COLLECT DASD FREE SPACE INFORMATION EVERY TEN (10)     *
*   MINUTES.  SVC 78 IS USED TO COLLECT THE INFORMATION.  THE FREE    *
*   SPACE DATA IS ACCUMULATED IN THE EXTENDED REGION AND IS ACCESS-   *
*   IBLE VIA OPTION "$" OF I-MON - THE INTERACTIVE MONITORING PROGRAM *
*   EXECUTING IN ANY ADDRESS SPACE.  BY DEFAULT, IMSPACER USES AN SVC *
*   78 FLAG BYTE OF X'40' WHICH MEANS GENERATE A TYPE 19 SMF RECORD   *
*   IF THE INSTALLATION IS COLLECTING VOLUME ACCOUNTING INFORMATION.  *
*   A PROGRAM PARAMETER OF 'SMF' SPECIFIES THE USE OF X'80' AS THE    *
*   FLAG BYTE TO UNCONDITIONALLY REQUEST A TYPE 19 RECORD.  TYPE 19   *
*   RECORDS MAY BE SUPPRESSED BY USING A PROGRAM PARAMETER OF 'NOSMF' *
*   WHICH SPECIFIES THAT A FLAG BYTE OF X'00' IS TO BE USED.  THE     *
*   GENERATION OF TYPE 19 SMF RECORDS IS A CONVENIENT WAY TO SAVE     *
*   DASD FREE SPACE INFORMATION ACROSS IPLS FOR REGULAR REPORTING.    *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        A DSST ENTRY (DSSTE) EXISTS FOR EACH CONFIGURED ("SYSGENNED")*
*   DASD (EXCLUDING 23XX AND DEMOUNTABLE DISKS) IN EVERY DSST.  THE   *
*   DSSTE CONTAINS THE UCB ADDRESS AND VOLUME PARTICULARS CURRENT AT  *
*   THE SNAP-SHOT SAMPLE TIME.  DSST ENTRIES FOR OFFLINE, UNMOUNTED   *
*   AND NON-OS VOLUMES WILL BE ZERO EXCEPT FOR THE UCB ADDRESS.       *
*                                                                     *
*        RETURN CODES:                                                *
*                0 - IMPSPACE WAS STOPPED BY AN OPERATOR STOP COMMAND.*
*               12 - AN IMPSPACE TASK IS ALREADY ACTIVE SO A SECOND   *
*                    IMPSPACE TASK SHOULD NOT BE STARTED.             *
*                                                                     *
*        IMSPACER IS NOT REENTRANT NOR SERIALLY REUSABLE.             *
*                                                                     *
*        IMSPACER REQUIRES APF AUTHORIZATION.                         *
*                                                                     *
*        IMSPACER USES MACROS FROM SYS1.MACLIB AND SYS1.MODGEN.       *
*                                                                     *
*        IMSPACER USES 31-BIT ADDRESSABILITY.                         *
*                                                                     *
*        IMSPACER REQUIRES 24-BIT RESIDENCY.                          *
*                                                                     *
*        IMSPACER WAS WRITTEN BY GREG PRICE OF PRYCROFT SIX PTY. LTD. *
*                                                                     *
*        (C) COPYRIGHT 1989-2006 PRYCROFT SIX PTY LTD                 *
*                                                                     *
***********************************************************************
         EJECT
IMSPACER CSECT
IMSPACER AMODE 31
IMSPACER RMODE 24
         USING IMSPACER,R15
         B     SPCSTART             BRANCH AROUND HEADER.
         DC    AL1(47)
         DC    CL47'IMSPACER COPYRIGHT (C) 1989 PRYCROFT SIX P/L   '
FRSTDSST DC    A(0)                 POINTER TO FIRST DSST.
LASTDSST DC    A(0)                 POINTER TO LAST DSST.
         DC    CL8'&SYSDATC'
         DROP  R15                  IMSPACER.
SPCSTART STM   R14,R12,12(R13)
         LR    R12,R15              SET UP BASE REGISTERS.
         LA    R11,2048(,R12)
         LA    R11,2048(,R11)
         LA    R10,2048(,R11)
         LA    R10,2048(,R10)
         USING IMSPACER,R12,R11,R10
         LA    R2,SAVEAREA          POINT TO NEW SAVE AREA.  WELL, IT
         ST    R13,4(,R2)           HAS TO BE DONE.  I MEAN, YOU GET
         ST    R2,8(,R13)           THE DUMP, AND IF THE SAVE AREAS ARE
         LR    R13,R2               STUFFED, WHAT HOPE HAVE YOU GOT?
         L     R2,0(,R1)            POINT TO PROGRAM PARAMETER.
         SLR   R0,R0
         ICM   R0,3,0(R2)           IS THERE ONE?
         BZ    DONEPARM             NO, LENGTH IS ZERO.
         CLI   2(R2),C'5'           FIVE MINUTE INTERVALS REQUESTED?
         BNE   FIVEOKAY             NO.
         OI    FLAGS,FIVEFLAG       YES.
         LA    R2,1(,R2)            POINT PAST '5'.
         BCT   R0,FIVEOKAY          GO TEST FOR SMF SPECIFICATION.
         B     DONEPARM             SKIP TEST FOR PARM='5'.
FIVEOKAY CLC   2(3,R2),=C'SMF'      PARM='SMF'?
         BNE   TRYNOSMF             NO.
         NI    SVC78FLG,255-X'40'   YES, RESET SMF=TEST.
         OI    SVC78FLG,X'80'       YES, TRY TO FORCE SMF 19 RECORDS.
         B     DONEPARM
TRYNOSMF CLC   2(5,R2),=C'NOSMF'    PARM='NOSMF'?
         BNE   WRONGPRM             NO, INVALID PARAMETER.
         NI    SVC78FLG,255-X'C0'   YES, SUPPRESS SMF 19 RECORDS.
         B     DONEPARM
WRONGPRM WTO   MF=(E,WRONGWTO)      INDICATE INVALID PARAMETER.
         SPACE
DONEPARM L     R4,540               POINT TO THE CURRENT TCB.
         L     R4,12(,R4)           POINT TO THE TIOT.
         MVC   TWICEWTO+4(8),0(R4)  PUT ACTUAL A.S. NAME IN MESSAGE.
         MVC   STARTWTO+4(8),0(R4)  PUT ACTUAL A.S. NAME IN MESSAGE.
         MVC   SVC78WTO+4(8),0(R4)  PUT ACTUAL A.S. NAME IN MESSAGE.
         MVC   FINALWTO+4(8),0(R4)  PUT ACTUAL A.S. NAME IN MESSAGE.
         MVC   LOGICWTO+4(8),0(R4)  PUT ACTUAL A.S. NAME IN MESSAGE.
         MVC   INPUTWTO+4(8),0(R4)  PUT ACTUAL A.S. NAME IN MESSAGE.
         MVC   WRITEWTO+4(8),0(R4)  PUT ACTUAL A.S. NAME IN MESSAGE.
         MVC   PURGEWTO+4(8),0(R4)  PUT ACTUAL A.S. NAME IN MESSAGE.
         LA    R4,24(,R4)           POINT TO TIOELNGH.
         SLR   R5,R5
CHKDDNAM CLI   0(R4),0              ZERO LENGTH ENTRY?
         BE    FILEOKAY             NO, CHECK OUT THIS ENTRY.
         CLC   SAVEHIST+40(8),4(R4) COMPARE DDNAME.
         BE    FILEHERE             FILE EXISTS SO GO AND OPEN IT.
         IC    R5,0(,R4)            GET TIOT ENTRY LENGTH.
         AR    R4,R5                POINT TO NEXT TIOT ENTRY.
         B     CHKDDNAM             CHECK OUT THIS ENTRY.
FILEHERE OI    FLAGS,FILEFLAG       SAVEHIST IS ALLOCATED.
FILEOKAY DS    0H
         ENQ   (IMPMAJOR,IMPMINOR,E,IMINRLEN,SYSTEM),RET=USE
         LTR   R15,R15              IMSPACER ALREADY ACTIVE?
         BZ    ONE@ONCE             NO, THIS IS THE ONLY IMSPACER.
         WTO   MF=(E,TWICEWTO)      DISPLAY IMSPACER IS ALREADY UP.
         L     R13,4(,R13)          POINT TO PREVIOUS SAVE AREA.
         LM    R14,R12,12(R13)      RESTORE REGISTERS.
         LA    R15,4                COND CODE = 4.
         BSM   0,R14                RETURN TO CALLER.
ONE@ONCE DS    0H
         MODESET MF=(E,MDSTSUP0)    GET INTO SYSTEM STATE.
         XC    WORK,WORK            CLEAR AN ECB.
         LA    R1,WORK              POINT TO A MAKESHIFT ECB.
         SYSEVENT TRANSWAP          BECOME NON-SWAPPABLE.
         LTR   R15,R15              WAS ANYTHING TO BE DONE?
         BNZ   TRANOKAY             NO, ALREADY NON-SWAPPABLE.
         WAIT  ECB=WORK             YES, WAIT TILL TRANSWAP COMPLETE.
TRANOKAY DS    0H                   CAN NOW BE ACCESSED BY TS USERS.
         MODESET MF=(E,MDSTPROB)    REVERT TO PROBLEM STATE.
         EXTRACT MF=(E,EXTRCOMM)    GET ADDRESS OF COMMUNICATION LIST.
         TM    FLAGS,FILEFLAG       IS SAVEHIST ALLOCATED?
         BZ    DASDINIT             NO, CAN'T READ IT.
         OPEN  (SAVEHIST,INPUT)     YES, OPEN IT.
         SLR   R3,R3                CLEAR DSST BYTES-TO-GO.
READLOOP GET   SAVEHIST,GETPUTBF    READ A RECORD.
         LA    R0,1
         A     R0,INRECNUM          INCREMENT READ RECORD COUNT.
         ST    R0,INRECNUM
         LA    R2,GETPUTBF          POINT TO IT.
         LTR   R3,R3                PROCESSING DSSTE SLOTS?
         BP    GOTDSSTE             YES.
         CLC   =C'DSST',DSSTELEN-4(R2)
         BNE   LOGICERR
         USING DSST,R2
         TM    DSSTSIZE+3,X'07'     CHECK FOR EXPECTED ALIGNMENT.
         BNZ   LOGICERR
         TM    DSSTADDR+3,X'07'
         BNZ   LOGICERR
         TM    DSSTDSST+3,X'07'
         BNZ   LOGICERR
         TM    DSSTBACK+3,X'07'
         BNZ   LOGICERR
         TM    DSSTDATE+3,X'0F'     CHECK FOR EXPECTED DATE SIGN.
         BNO   LOGICERR
         ICM   R0,15,DSSTSIZE       GET SIZE OF THIS DSST.
         BNP   LOGICERR
         GETMAIN RU,LV=(0),SP=23,LOC=(ANY,ANY)
         MVC   0(DSSTBLEN,R1),DSST  LOAD THE DSST BASE.
         DROP  R2                   DSST.
         LR    R5,R1
         USING DSST,R5
         ST    R5,DSSTADDR          CORRECT ADDRESS FOR FREEMAIN.
         XC    DSSTDSST,DSSTDSST    CLEAR FORWARD POINTER.
         ICM   R0,15,FRSTDSST       FIRST ONE?
         BNZ   LINKREAD             NO.
         ST    R5,FRSTDSST          YES.
         XC    DSSTBACK,DSSTBACK    CLEAR BACKWARD POINTER.
         B     NEWLAST
LINKREAD L     R1,LASTDSST
         ST    R1,DSSTBACK
         ST    R5,8(,R1)
NEWLAST  ST    R5,LASTDSST
         LA    R0,1
         A     R0,IDSSTNUM          INCREMENT READ DSST COUNT.
         ST    R0,IDSSTNUM
         L     R3,DSSTSIZE
         LA    R0,DSSTBLEN
         SR    R3,R0                GET REMAINING DSSTE TOTAL BYTES.
         LA    R6,DSSTE             POINT TO THE FIRST DSSTE.
         B     READLOOP
         SPACE
GOTDSSTE MVC   0(DSSTELEN,R6),0(R2) LOAD DSSTE.
         LA    R0,DSSTELEN
         SR    R3,R0                ADJUST REMAINING BYTES FOR DSST.
         AR    R6,R0                POINT TO NEXT DSSTE SLOT.
         B     READLOOP
         SPACE
LOGICERR WTO   MF=(E,LOGICWTO)      BAD DATA ON INPUT.
         SPACE
EOINPUT  CLOSE (SAVEHIST)           CLOSE INPUT FILE.
         L     R0,INRECNUM
         CVD   R0,WORK
         MVC   INRECCNT,ED7
         ED    INRECCNT,WORK+4
         L     R0,IDSSTNUM
         CVD   R0,WORK
         MVC   IDSSTCNT,ED7
         ED    IDSSTCNT,WORK+4
         WTO   MF=(E,INPUTWTO)      SAVEHIST NOW READ.
         SPACE
DASDINIT L     R4,CVTPTR(,0)        POINT TO THE CVT.
         USING CVT,R4
         SLR   R2,R2                ZERO DASD COUNTER.
         MVC   OSBITS,CVTDCB        COPY OS FLAG BYTE FROM CVTDCB.
         TM    OSBITS,X'93'         MVS/XA OR LATER?
         BNO   MSPUCB1              NO, ASSUME MSP OS.
         TM    OSBITS,X'9B'         MVS/ESA OR LATER?
         BNO   XAUCB1               NO, ASSUME MVS/XA.
         MVC   OSLEVEL,CVTOSLVL     COPY OS FLAG BYTE FROM CVTOSLVL.
         TM    OSLEVEL,CVTUCBSV     UCB SERVICES AVAILABLE?
         BZ    XAUCB1               NO, USE THE STATIC UCB CHAIN.
         BAS   R8,GETDACNT          YES, GET DASD UCB COUNT.
         L     R2,VOLCOUNT          LOAD THE MAXIMUM VOLUME COUNT.
         SLA   R2,4                 USE FUDGE FACTOR OF 16.
         B     GOTUCBCT
XAUCB1   L     R3,CVTUCBA           POINT TO THE FIRST UCB.
         B     FRSTUCB
         USING UCBOB,R3
NXTUCB   ICM   R3,15,UCBNXUCB       POINT TO THE NEXT UCB.
         BZ    GOTUCBCT             END OF UCB CHAIN.
FRSTUCB  CLI   UCBID,UCBSTND        STANDARD UCB?
         BNE   NXTUCB               NO.
         CLI   UCBTBYT3,UCB3DACC    DASD?
         BNE   NXTUCB               NO.
         LA    R2,1(,R2)            YES, INCREMENT COUNTER.
         B     NXTUCB               CHECK NEXT UCB.
MSPUCB1  NI    SVC78FLG,X'C0'       TURN OFF INVALID FLAGS.
         L     R4,CVTIXAVL          POINT TO THE IOS COMM'N AREA.
         DROP  R4                   CVT.
         L     R4,388(,R4)          POINT TO THE UCB LOOKUP TABLE.
         B     FRSTUCB1             FIRST TIME THROUGH THE LOOP.
NEXTUCB1 LA    R4,4(0,R4)           POINT TO NEXT FULLWORD UCB ADDRESS.
FRSTUCB1 ICM   R3,B'1111',0(R4)     GET UCB ADDRESS.
         BZ    NEXTUCB1             EMPTY ENTRY.
         BM    GOTUCBCT             NO MORE UCB ENTRIES.
         CLI   UCBID,UCBSTND        STANDARD UCB?
         BNE   NEXTUCB1             NO.
         CLI   UCBTBYT3,UCB3DACC    DASD?
         BNE   NEXTUCB1             NO.
         LA    R2,1(,R2)            YES, INCREMENT COUNTER.
         B     NEXTUCB1             CHECK NEXT UCB.
         SPACE
GOTUCBCT ST    R2,VOLCOUNT          SAVE THE MAXIMUM VOLUME COUNT.
         MH    R2,LENDSSTE          MULTIPLY BY DSST ENTRY SIZE.
         LA    R2,DSSTBLEN(,R2)     ADD SIZE OF BASE.
         ST    R2,GMSZDSST          DSST GETMAIN SIZE (MULTIPLE OF 8).
         LR    R0,R2                COPY GETMAIN SIZE.
         GETMAIN RU,LV=(0),LOC=(BELOW,ANY)
         ST    R1,WKDSSTAD          ADDRESS OF WORKING-STORAGE DSST.
         LR    R5,R1                POINT TO WORKING-STORAGE DSST.
         USING DSST,R5
         XC    DSSTDSST(8),DSSTDSST ZERO THE CHAINING POINTERS.
         LA    R6,DSSTE             POINT TO FIRST ENTRY.
         USING DSSTE,R6
         SPACE
         TM    OSBITS,X'93'         MVS/XA OR LATER?
         BNO   MSPUCB2              NO, ASSUME MSP OS.
         TM    OSLEVEL,X'08'        UCB SERVICES AVAILABLE?
         BO    IMSPINIT             YES, DO NOT GET UCB ADDRESSES.
         L     R3,CVTUCBA-CVT(,R4)  POINT TO THE FIRST UCB.
         B     FIRSTUCB
NEXTUCB  ICM   R3,15,UCBNXUCB       POINT TO THE NEXT UCB.
         BZ    IMSPINIT             END OF UCB CHAIN.
FIRSTUCB CLI   UCBID,UCBSTND        STANDARD UCB?
         BNE   NEXTUCB              NO.
         CLI   UCBTBYT3,UCB3DACC    DASD?
         BNE   NEXTUCB              NO.
         XC    DSSTE(DSSTELEN),DSSTE CLEAR THE DSSTE OF RESIDUAL DATA.
         ST    R3,DSSTEUCB          SUPPLY UCB ADDRESS FOR THIS ENTRY.
         LA    R6,DSSTELEN(,R6)     POINT TO NEXT VOLUME'S SLOT.
         B     NEXTUCB              CHECK NEXT UCB.
MSPUCB2  L     R4,CVTPTR(,0)        POINT TO THE CVT.
         USING CVT,R4
         L     R4,CVTIXAVL          POINT TO THE IOS COMM'N AREA.
         DROP  R4                   CVT.
         L     R4,388(,R4)          POINT TO THE UCB LOOKUP TABLE.
         B     FRSTUCB2             FIRST TIME THROUGH THE LOOP.
NEXTUCB2 LA    R4,4(0,R4)           POINT TO NEXT FULLWORD UCB ADDRESS.
FRSTUCB2 ICM   R3,B'1111',0(R4)     GET UCB ADDRESS.
         BZ    NEXTUCB2             EMPTY ENTRY.
         BM    IMSPINIT             NO MORE UCB ENTRIES.
         CLI   UCBID,UCBSTND        STANDARD UCB?
         BNE   NEXTUCB2             NO.
         CLI   UCBTBYT3,UCB3DACC    DASD?
         BNE   NEXTUCB2             NO.
         XC    DSSTE(DSSTELEN),DSSTE CLEAR THE DSSTE OF RESIDUAL DATA.
         ST    R3,DSSTEUCB          SUPPLY UCB ADDRESS FOR THIS ENTRY.
         LA    R6,DSSTELEN(,R6)     POINT TO NEXT VOLUME'S SLOT.
         B     NEXTUCB2             CHECK NEXT UCB.
         DROP  R6,R3                DSSTE, UCBOB.
         SPACE
IMSPINIT WTO   MF=(E,STARTWTO)      ISSUE INITIALIZATION NOTIFICATION.
         SPACE 2
WAITLOOP TIME  DEC                  GET THE TIME OF DAY IN DECIMAL.
         ST    R0,WORK              PUT THE TIME INTO STORAGE.
         MVC   WORK+4(1),WORK+1     COPY MINUTES TO WORK AREA.
         NI    WORK+4,X'0F'         GET MINUTES UNITS DIGIT.
         NI    WORK+1,X'F0'         TRUNCATE TO TEN MINUTE BOUNDARY.
         MVI   WORK+2,X'0C'         SUPPLY PACKED DECIMAL SIGN.
         TM    FLAGS,FIVEFLAG       FIVE MINUTE INTERVALS REQUESTED?
         BZ    NEXTTEN              NO, USE TEN MINUTE INTERVALS.
         CLI   WORK+4,4             5 MINUTES INTO 10 MINUTES YET?
         BH    NEXTTEN              YES, SO UP THE TENS DIGIT.
         OI    WORK+1,X'05'         NO, GO FOR NEXT 5 MINUTE TIME.
         B     HOURSOK              SHOULD STILL HAVE VALID TIME.
NEXTTEN  AP    WORK(3),=P'100'      ADD TEN MINUTES TO TIME.
         CLI   WORK+1,X'60'         SIXTY MINUTES?
         BL    HOURSOK              NO.
         AP    WORK(3),=P'400'      YES, SHOULD HAVE INCREMENTED HOURS.
         CLI   WORK,X'24'           REACHED 24 O'CLOCK?
         BL    HOURSOK              NO.
         MVI   WORK,X'00'           YES, MAKE MIDNIGHT 0 O'CLOCK.
         STIMER WAIT,LT=MIDNIGHT    GO TO SLEEP UNTIL THEN.
         TM    FLAGS,FILEFLAG       SAVEHIST FILE PRESENT?
         BO    BACKITUP             YES, BACK UP DATA TO FILE.
HOURSOK  DS    0H                   HAVE DESIRED HHMM IN WORK H/W.
         STIMER WAIT,BINTVL=SNOOZE  GO TO SLEEP.
         L     R1,COMMADDR          POINT TO MODIFY/STOP ECB ADDRESS.
         L     R1,0(,R1)            POINT TO MODIFY/STOP ECB.
         TM    0(R1),X'40'          HAS THE ECB BEEN POSTED?
         BO    STOPSPAC             YES, TERMINATE IMSPACER.
         TIME  DEC                  NOW GET THE CURRENT TIME.
         CLM   R0,B'1100',WORK      TIME FOR NEXT SAMPLE YET?
         BL    HOURSOK              NO, HAVE ANOTHER LITTLE SNOOZE.
         L     R5,WKDSSTAD          YES, POINT TO DSST BUFFER.
         STM   R0,R1,DSSTTIME       SUPPLY TIME-STAMP.
         SLR   R0,R0
         STH   R0,GOODVOLS          ZERO "GOOD" VOLUME COUNT.
         L     R2,VOLCOUNT          LOAD THE VOLUME COUNT.
         LA    R6,DSSTE             POINT TO THE FIRST DSSTE.
         TM    OSLEVEL,CVTUCBSV     UCB SERVICES AVAILABLE?
         BZ    LSPACELP             NO, USE PRIMED UCB ADDRESSES.
         L     R3,CVTPTR(,0)        POINT TO THE CVT.
         USING CVT,R3
         L     R7,CVTIXAVL          POINT TO THE IOCM.
         DROP  R3                   CVT.
         USING IOCOM,R7
         L     R7,IOCIOVTP          POINT TO THE IOVT.
         DROP  R7                   IOCOM.
         L     R7,8(,R7)            POINT TO THE UCB LOOK-UP TABLE.
         TM    OSLEVEL+5,CVTH7720   Z/OS 1.7 OR LATER?
         BNO   *+8                  NO.
         LA    R7,8(,R7)            YES.
         L     R2,16(,R7)           GET THE TOTAL UCB COUNT.
         L     R7,12(,R7)           POINT TO FIRST ENTRY.
         USING DSSTE,R6
LSPACELP TM    OSLEVEL,X'08'        UCB SERVICES AVAILABLE?
         BZ    USEUCBAD             NO, USE PRIMED UCB ADDRESSES.
         MVI   DSSTEVOL,0           YES, FLAG DSST ENTRY UNUSED AS YET.
         L     R3,8(,R7)            GET UCB ADDRESS.
         USING UCBOB,R3
         CLI   UCBID,UCBSTND        STANDARD UCB?
         BNE   NXTDSSTE             NO, TRY NEXT UCB.
         CLI   UCBTBYT3,UCB3DACC    DASD?
         BNE   NXTDSSTE             NO, TRY NEXT UCB.
         UNPK  DSSTEUCB(5),UCBCHAN(3)   LOAD DEVICE NUMBER.
         TR    DSSTEUCB,HEX-C'0'
         XC    WORK,WORK
         B     GOTUCBAD
USEUCBAD L     R3,DSSTEUCB          POINT TO THIS VOLUME'S UCB.
         MVC   WORK(6),DSSTECPV     SAVE DEVICE CONSTANTS.
GOTUCBAD XC    DSSTEVOL(DSSTELEN-4),DSSTEVOL ZERO PREVIOUS DATA.
         MVC   DSSTECPV(6),WORK     RESTORE DEVICE CONSTANTS.
         TM    UCBSTAT,UCBONLI      IS THIS UNIT ONLINE?
         BZ    NXTDSSTE             NO, SKIP LSPACE.
         TM    UCBSTAT,UCBCHGS      IS THIS UNIT PENDING OFFLINE?
         BO    NXTDSSTE             YES, SKIP LSPACE.
         TM    UCBDMCT,UCBMOUNT     MOUNT PENDING?
         BO    NXTDSSTE             YES, SKIP LSPACE.
         TM    UCBFLA,UCBNRY        IS THE DEVICE NOT READY?
         BO    NXTDSSTE             YES, SKIP LSPACE.
         TM    UCBFLA,UCBDEFER+UCBBOX DEFERRING I/O OR BOXED?
         BNZ   NXTDSSTE             YES, SKIP LSPACE.
         CLI   UCBVOLI,C' '         ANY VOLUME SERIAL NUMBER?
         BNH   NXTDSSTE             NO, SKIP LSPACE.
         CLI   UCBVOLI,C'9'         VOL=SER=SCRTCH?  (X'FF'?)
         BH    NXTDSSTE             YES, SKIP LSPACE.
         CLI   UCBVTOC+2,X'01'      OS VTOC ADDRESS?  (R OF TTR0 IS 1?)
         BNE   NXTDSSTE             NO, SKIP LSPACE.  (VM DISK?)
         ICM   R0,3,UCBVTOC         OS VTOC ADDRESS?  (TT OF TTR0 > 0?)
         BZ    NXTDSSTE             NO, SKIP LSPACE.  (VM DISK?)
         TM    OSBITS,X'13'         MVS?
         BNO   ORIGLSPC             NO, IT MUST BE MSP.
         TM    UCBFL5,UCBSMS        YES, SMS-MANAGED VOLUME?
         BNO   EXTDLSPC             NO, DON'T ASK SMS.
         LA    R1,SMSWORKA          POINT TO SSOB AREA.
         USING SSOB,R1
         LA    R0,SSOBHSIZ          LOAD SSOB LENGTH.
         STH   R0,SSOBLEN
         MVC   SSOBID,=C'SSOB'      LOAD SSOB IDENTIFIER.
         LA    R0,SSOBSSMS          LOAD SSOB FUNCTION CODE TO 55.
         STH   R0,SSOBFUNC
         L     R14,CVTPTR(,0)       POINT TO THE CVT.
         USING CVT,R14
         L     R14,CVTJESCT         POINT TO THE JESCT.
         DROP  R14                  CVT.
         USING JESCT,R14
         L     R14,JESCTEXT         POINT TO PAGEABLE JESCT ENTENSION.
         DROP  R14                  JESCT.
         USING JESPEXT,R14
         L     R15,12               PREPARE FOR NO SMS SUBSYSTEM.
         ICM   R14,15,JESSMSIB      POINT TO THE SMS SSIB.
         BZ    EXTDLSPC             NO SSIB SO SKIP SMS CALL.
         DROP  R14                  JESPEXT.
         ST    R14,SSOBSSIB         SAVE THE SSIB ADDRESS.
         XC    SSOBRETN,SSOBRETN    RESET SUBSYSTEM RETURN CODE.
         LA    R8,SSOB+SSOBHSIZ     POINT PAST SSOB HEADER.
         ST    R8,SSOBINDV          LOAD FUNCTION-DEPENDENT AREA PTR.
         USING IEFSSSA,R8
         LA    R0,SSSALN+SSSA1LN    LOAD SSOB SMS EXTENTION LENGTH.
         STH   R0,SSSALEN
         MVC   SSSAID,=C'SSSA'      SUPPLY IDENTIFIER.
         MVI   SSSAVER+1,SSOBSSVR   SUPPLY VERSION INDICATOR.
         MVI   SSSASFN+1,SSSAACTV   SUPPLY SUB-FUNCTION CODE.
         MVI   SSSAIFLG,SSSANAUT    INDICATE NON-AUTHORIZED CALLER.
         MVI   SSSA1TYP,SSSA1VOL    FLAG VOLSER IS SUPPLIED.
         MVI   SSSA1CNT+3,1         FLAG ONE CONSTRUCT PASSED.
         MVI   SSSA1NML+1,6         SET VOLUME SERIAL NUMBER LENGTH.
         MVC   SSSA1NAM(6),UCBVOLI  LOAD VOLUME SERIAL NUMBER.
         DROP  R1                   SSOB.
         ST    R1,WORK              SAVE PARAMETER LIST ITEM.
         OI    WORK,X'80'           INDICATE ONLY ITEM IN LIST.
         MODESET MF=(E,MDSTSUP0)    GET INTO SUPERVISOR STATE.
         LA    R1,WORK              POINT TO PARAMETER LIST.
         IEFSSREQ                   PASS REQUEST TO SSI.
         LR    R4,R15               COPY SSI RETURN CODE.
         MODESET MF=(E,MDSTPROB)    YES, REVERT TO PROBLEM STATE.
         LTR   R4,R4                WAS SSI CALL SUCCESSFUL?
         BNZ   EXTDLSPC             NO, GO ISSUE AN LSPACE.
         LA    R1,SMSWORKA          POINT TO SSOB AREA.
         USING SSOB,R1
         ICM   R4,15,SSOBRETN       WAS SSI RETURN CODE ZERO?
         BNZ   EXTDLSPC             NO, GO ISSUE AN LSPACE.
         DROP  R1                   SSOB.
         ICM   R0,15,SSSA1PTR       AREA RETURNED?
         BZ    EXTDLSPC             NO, SMS PROBLEM.
         MVC   SSSA1LEN,SSSA1ALN    YES, SET SUPPLIED LENGTH VALUE.
         DROP  R8                   SSSA.
         LR    R8,R0                POINT TO RETURNED VLD.
         USING VLD,R8
         MVC   DSSTEGRP,VLDSTGRP    LOAD SMS STORAGE GROUP OF VOLUME.
         OC    DSSTEGRP,=CL8' '     CONVERT TRAILING NULLS TO BLANKS.
         LA    R1,VLDMVSS           POINT TO OLD MVS STATUS FLAGS.
         CLC   =H'3',VLDPVER        "NEW" VLD?
         BH    MVSCHECK             NO.
         L     R1,VLDSYSOF          YES, GET OFFSET FOR THIS SYSTEM.
         LA    R1,VLDEF(R1)         POINT TO SYSTEM DATA ENTRY.
         USING VLDSYSDT,R1
         LA    R1,VLDSTMVS          POINT TO MVS STATUS BYTE.
         DROP  R1                   VLDSYSDT.
MVSCHECK CLI   0(R1),VLDONLN        IS THE DEVICE ONLINE AND READY?
         NOP   NXTDSSTE      (BNE)  NO, DO NOT ISSUE LSPACE.
         DROP  R8                   VLD.
EXTDLSPC LR    R0,R3                COPY UCB ADDRESS.
         LSPACE UCB=(R3),MF=(E,LSPACEL)  ISSUE LSPACE (MAKE A TYPE 19).
         B     TEST78RC             GO TEST THE RETURN CODE.
ORIGLSPC MVC   DS4DEVCT(6),DSSTECPV COPY DEVICE CONSTANTS IF NO OBTAIN.
         ICM   R0,3,DSSTECPV        DEVICE CONSTANTS KNOWN?
         BNZ   OBTAINOK             YES, SKIP FORMAT-4 OBTAIN.
         LA    R15,VTOCNAME         POINT TO THE VTOC "DATA SET NAME".
         LA    R0,UCBVOLI           POINT TO THE VOLUME SERIAL NUMBER.
         LA    R1,IECSDSL4          POINT TO DSCB1 RETRIEVAL AREA.
         STM   R15,R1,OBTSRCH+4     SAVE IN OBTAIN PARAMETER LIST.
         OBTAIN OBTSRCH             OBTAIN FORMAT-4 DSCB.
         LTR   R15,R15              WAS FORMAT 4 READ OK?
         BNZ   NXTDSSTE             NO, SOUNDS A BIT DODGEY TO ME.
OBTAINOK LR    R0,R3                YES, COPY UCB ADDRESS.
         LA    R1,SVC78BUF          POINT TO THE MESSAGE BUFFER.
         ICM   R1,8,SVC78FLG        LOAD SMF FLAG BYTE.
         SVC   78                   ISSUE LSPACE (MAKE A TYPE 19).
TEST78RC LTR   R15,R15              DID THE LSPACE WORK?
         BZ    LSPACEOK             YES.
         STC   15,WORK              NO, STORE RETURN CODE.
         UNPK  SVC78WTO+41(3),WORK(2)
         TR    SVC78WTO+41(2),HEX-C'0'
         MVI   SVC78WTO+43,C' '     FORMAT LSPACE RETURN CODE.
         MVC   SVC78WTO+48(6),UCBVOLI LOAD VOLUME SERIAL NUMBER.
         UNPK  WORK(5),UCBCHAN(3)
         TR    WORK(4),HEX-C'0'
         MVC   SVC78WTO+58(4),WORK  LOAD DEVICE NUMBER.
         WTO   MF=(E,SVC78WTO)      NOTIFY OPS OF DISK I/O TROUBLE.
         B     NXTDSSTE             CAN'T DO ANY MORE WITH THIS DISK.
LSPACEOK LA    R0,1
         AH    R0,GOODVOLS          INCREMENT "GOOD" VOLUME COUNT.
         STH   R0,GOODVOLS
         C     R0,VOLCOUNT          ROOM FOR MORE VOLUMES?
         BL    *+8                  YES.
         LA    R2,1                 NO, SET LOOP CONTROL FOR LAST DISK.
         MVC   DSSTEVOL,UCBVOLI     COPY DISK VOLUME SERIAL NUMBER.
         MVC   DSSTECPV(6),DS4DEVCT COPY DEVICE CONSTANTS.
         SLR   R0,R0                CLEAR FOR INSERT.
         ICM   R0,3,DS4HCCHH        GET ALTERNATE CYLINDER ADDRESS.
         BZ    CYLSOKAY             ZERO, SO KEEP PHYSICAL COUNT.
         CH    R0,DSSTECPV          ARE ALTERNATES PAST END OF VOLUME?
         BNL   CYLSOKAY             YES, SO KEEP PHYSICAL COUNT.
         STH   R0,DSSTECPV          DO NOT COUNT ALTERNATES AS SPACE.
CYLSOKAY TM    OSBITS,X'13'         MVS SYSTEM?
         BO    MVSSTATS             YES, GET FIGURES FOR MVS.
         MVC   DSSTEUSE,42(R3)      COPY DISK ALLOCATION COUNT.
         MVC   DSSTEOPN,38(R3)      COPY DISK OPEN COUNT.
         PACK  WORK,FREECYL         EXTRACT LSPACE-SUPPLIED FIGURES.
         CVB   R0,WORK
         ST    R0,DSSTECYL
         PACK  WORK,FREETRK
         CVB   R0,WORK
         ST    R0,DSSTETRK
         PACK  WORK,FREEEXT
         CVB   R0,WORK
         ST    R0,DSSTEEXT
         PACK  WORK,MAXCYL
         CVB   R0,WORK
         ST    R0,DSSTEMXC
         PACK  WORK,MAXTRK
         CVB   R0,WORK
         ST    R0,DSSTEMXT
         B     NXTDSSTE
MVSSTATS MVC   DSSTEUSE,UCBUSER     COPY DISK ALLOCATION COUNT.
         MVC   DSSTEOPN,UCBDMCT     COPY DISK OPEN COUNT.
         PACK  WORK,FREECYLX        EXTRACT LSPACE-SUPPLIED FIGURES.
         CVB   R0,WORK
         ST    R0,DSSTECYL
         PACK  WORK,FREETRKX
         CVB   R0,WORK
         ST    R0,DSSTETRK
         PACK  WORK,FREEEXTX
         CVB   R0,WORK
         ST    R0,DSSTEEXT
         PACK  WORK,MAXCYLX
         CVB   R0,WORK
         ST    R0,DSSTEMXC
         PACK  WORK,MAXTRKX
         CVB   R0,WORK
         ST    R0,DSSTEMXT
NXTDSSTE TM    OSLEVEL,CVTUCBSV     UCB SERVICES AVAILABLE?
         BZ    NEXTDISK             NO.
         LA    R7,12(,R7)           POINT TO NEXT UCB ENTRY.
         CLI   DSSTEVOL,0           WAS LSPACE ISSUED?
         BE    *+8                  NO.
NEXTDISK LA    R6,DSSTELEN(,R6)     POINT TO NEXT VOLUME'S SLOT.
         BCT   R2,LSPACELP
         DROP  R6,R3                DSSTE, UCBOB.
         SPACE
         LA    R1,DSSTELEN          GET DSSTE LENGTH.
         MH    R1,GOODVOLS          GET TOTAL DSSTE SIZE.
         LA    R0,DSSTBLEN(,R1)     GET TOTAL DSST SIZE.
         ST    R0,DSSTSIZE          PUT GETMAIN SIZE IN TEMPLATE BASE.
REDRIVE  DS    0H
         GETMAIN RU,LV=(0),SP=23,LOC=(ANY,ANY)
         ST    R1,DSSTADDR          SAVE THE NEW DSST ADDRESS.
         CLI   DSSTADDR,0           DID EXTENDED REGION OVERFLOW?
         BNE   USEDSST              NO, USE THIS DSST AREA.
         LM    R2,R3,FRSTDSST       POINT TO FIRST AND LAST DSST.
         CLC   DSSTDATE-DSST(4,R2),DSSTDATE-DSST(R3)
         BNL   USEDSST              FIRST IS NOT FROM AN EARLIER DAY.
         LM    R0,R1,DSSTSIZE       LOAD FREEMAIN VALUES.
         FREEMAIN RU,LV=(0),A=(1),SP=23  FREE THE AREA JUST ACQUIRED.
         DROP  R5                   DSST.
         USING DSST,R2
         ZAP   WORK,DSSTDATE        REMEMBER DATE TO PURGE.
         XC    PURGENUM,PURGENUM    RESET PURGED DSST COUNT.
PURGLOOP CP    DSSTDATE,WORK        PURGE THIS ENTRY?
         BNE   PURGOVER             NO, PURGE NOW COMPLETE.
         LM    R0,R1,DSSTSIZE       YES, GET FREEMAIN VALUES.
         L     R2,DSSTDSST          POINT TO NEXT DSST.
         XC    DSSTBACK,DSSTBACK    CLEAR BACKWARD POINTER.
         ST    R2,FRSTDSST          THIS IS GOING TO BE THE FIRST DSST.
         FREEMAIN RU,LV=(0),A=(1),SP=23  FREE THE FIRST DSST.
         LA    R0,1
         A     R0,PURGENUM          INCREMENT PURGED DSST COUNT.
         ST    R0,PURGENUM
         LTR   R2,R2                WAS THAT THE LAST DSST?
         BNZ   PURGLOOP             NO, GO CHECK NEXT DSST.
         ST    R2,LASTDSST          YES, CHAIN NOW HAS NO ENTRIES.
PURGOVER AP    WORK,=P'1900000'     CONVERT PURGE DATE TO 4-DIGIT YEAR.
         MVC   PURGEDAY,ED7
         ED    PURGEDAY,WORK+4      SHOW DATE OF PURGED DATA.
         L     R0,PURGENUM
         CVD   R0,WORK
         MVC   PURGECNT,ED7
         ED    PURGECNT,WORK+4      SHOW QUANTITY OF PURGED DATA.
         WTO   MF=(E,PURGEWTO)      LOG PURGE ACTIVITY.
         DROP  R2                   DSST.
         USING DSST,R5
         L     R0,DSSTSIZE          RESTORE DSST GETMAIN SIZE.
         B     REDRIVE              REDRIVE THE GETMAIN REQUEST.
         SPACE
USEDSST  ICM   R2,15,LASTDSST       POINT TO PREVIOUS LAST DSST.
         ST    R2,DSSTBACK          SUPPLY BACKWARD CHAIN POINTER.
         MVC   0(DSSTBLEN,R1),DSST  MOVE DSST BASE INTO NEW ENTRY.
         BZ    TOPDSST              SPECIAL CASE FOR 1ST DSST THIS IPL.
         ST    R1,DSSTDSST-DSST(,R2)  SUPPLY FORWARD CHAIN POINTER.
         B     CHAINOK
TOPDSST  ST    R1,FRSTDSST          THIS IS THE FIRST DSST.
CHAINOK  ST    R1,LASTDSST          THIS IS NOW THE LATEST DSST.
         L     R2,VOLCOUNT          GET THE NUMBER OF DSST ENTRIES.
         LA    R1,DSSTBLEN(,R1)     POINT TO THE FIRST NEW DSSTE SLOT.
         LA    R6,DSSTE             LIKEWISE, BUT WORKING-STORAGE COPY.
         TM    OSLEVEL,X'08'        UCB SERVICES AVAILABLE?
         BZ    DATALOAD             NO.
         LH    R2,GOODVOLS          POINT TO NEXT UCB ENTRY.
         USING DSSTE,R6
DATALOAD CLI   DSSTEVOL,0           IS THIS A "GOOD" VOLUME?
         BE    DONDSSTE             NO, DO NOT COPY IT.
         MVC   0(DSSTELEN,R1),DSSTE LOAD A DSSTE INTO NEW ENTRY.
         LA    R1,DSSTELEN(,R1)     POINT TO NEXT DSSTE IN NEW ENTRY.
DONDSSTE LA    R6,DSSTELEN(,R6)     POINT TO NEXT DSSTE IN TEMPLATE.
         BCT   R2,DATALOAD          GO LOAD THE NEXT ENTRY.
         SPACE
         B     WAITLOOP             NOW WAIT FOR ANOTHER INTERVAL.
         DROP  R6                   DSSTE.
         SPACE 2
STOPSPAC OI    FLAGS,STOPPING       PERFORM TERMINATION PROCESSING.
         WTO   MF=(E,FINALWTO)      ISSUE NOTIFICATION OF TERMINATION.
         SPACE
         TM    FLAGS,FILEFLAG       SAVEHIST FILE PRESENT?
         BZ    WINDITUP             NO.
         SPACE
BACKITUP ICM   R5,15,FRSTDSST       POINT TO THE FIRST DSST.
         BZ    BACKUPOK             THERE IS NO DATA TO WRITE OUT.
         SLR   R0,R0
         ST    R0,WRITENUM          CLEAR OUTPUT COUNTERS.
         ST    R0,ODSSTNUM
         OPEN  (SAVEHIST,OUTPUT)    YES, OPEN IT.
OUTLOOP  XC    GETPUTBF,GETPUTBF    CLEAR RESIDUAL DATA.
         MVC   GETPUTBF(DSSTBLEN),DSST
         MVC   GETPUTBF+L'GETPUTBF-4(4),=C'DSST'
         LA    R2,DSSTELEN          GET DSSTE SIZE.
         L     R3,DSSTSIZE          GET SIZE OF WHOLE DSST.
         LA    R4,DSSTBLEN          GET DSST BASE SIZE.
         LA    R6,DSSTE             POINT TO FIRST DSSTE.
         SR    R3,R4                GET TOTAL DSSTE SIZE.
         LA    R0,1
         A     R0,ODSSTNUM          INCREMENT WRITTEN DSST COUNT.
         ST    R0,ODSSTNUM
         B     WRITEOUT             GO WRITE THE DSST BASE.
OUTELOOP MVC   GETPUTBF,0(R6)       COPY THE DSSTE.
         AR    R6,R2                POINT TO THE NEXT DSSTE.
         SR    R3,R2                ADJUST BYTES-TO-GO COUNT.
WRITEOUT PUT   SAVEHIST,GETPUTBF    WRITE THE RECORD.
         LA    R0,1
         A     R0,WRITENUM          INCREMENT RECORDS WRITTEN COUNT.
         ST    R0,WRITENUM
         LTR   R3,R3                END OF DSSTE DATA?
         BP    OUTELOOP             NO, WRITE NEXT ONE.
         LM    R0,R1,DSSTSIZE       YES, GET FREEMAIN VALUES.
         ICM   R5,15,DSSTDSST       POINT TO NEXT DSST.
         BZ    CLOSEOUT             THIS IS THE LAST DSST CREATED.
         TM    FLAGS,STOPPING       TERMINATION IN PROGRESS?
         BZ    OUTLOOP              NO, DO NOT DELETE DATA.
         XC    DSSTBACK,DSSTBACK    CLEAR BACKWARD POINTER.
         ST    R5,FRSTDSST          MAKE SECOND DSST THE FIRST.
         FREEMAIN RU,LV=(0),A=(1),SP=23  FREE THE FIRST DSST.
         B     OUTLOOP              PROCESS NEXT DSST.
         DROP  R5                   DSST.
CLOSEOUT CLOSE (SAVEHIST)           CLOSE OUTPUT FILE.
         L     R0,WRITENUM
         CVD   R0,WORK
         MVC   WRITECNT,ED7
         ED    WRITECNT,WORK+4
         L     R0,ODSSTNUM
         CVD   R0,WORK
         MVC   ODSSTCNT,ED7
         ED    ODSSTCNT,WORK+4
         WTO   MF=(E,WRITEWTO)      SAVEHIST NOW WRITTEN.
BACKUPOK TM    FLAGS,STOPPING       TERMINATION IN PROGRESS?
         BZ    HOURSOK              NO, RESUME DATA COLLECTION.
         SPACE
WINDITUP DS    0H                   PERFORM TERMINATION.
         DEQ   (IMPMAJOR,IMPMINOR,IMINRLEN,SYSTEM),RET=NONE
         MODESET MF=(E,MDSTSUP0)    GET INTO SYSTEM STATE.
         SYSEVENT OKSWAP            BECOME SWAPPABLE.
         MODESET MF=(E,MDSTPROB)    REVERT TO PROBLEM STATE.
         FREEMAIN RU,SP=23          FREE ALL THE STORAGE.
         LM    R0,R1,GMSZDSST       GET WORKING DSST SIZE AND ADDRESS.
         FREEMAIN RU,LV=(0),A=(1)   FREE WORKING STORAGE DSST.
         L     R13,4(,R13)          POINT TO PREVIOUS SAVE AREA.
         LM    R14,R12,12(R13)      RESTORE REGISTERS.
         SLR   R15,R15              COND CODE = 00.
         BSM   0,R14                RETURN TO CALLER.
         TITLE 'DETERMINE NUMBER OF DASD UCBS'
GETDACNT XC    UTOKEN,UTOKEN        RESET I/O CONFIGURATION TOKEN.
         UCBINFO DEVCOUNT,DEVCLASS=DASD,COUNT=VOLCOUNT,                +
               IOCTOKEN=UTOKEN,MF=(E,UINFOL)
         BR    R8                   RETURN TO CALLER.
         SPACE
         DROP  R10,R11,R12          IMSPACER.
         TITLE 'VARIABLES AND CONSTANTS AND MACRO PARAMETERS'
WORK     DC    D'0'
SAVEAREA DC    18F'0'
HEX      DC    CL16'0123456789ABCDEF'
ED7      DC    XL8'4020202020202120'
MIDNIGHT DC    CL8'00000100'        ONE SECOND PAST MIDNIGHT.
SNOOZE   DC    F'1200'              SNOOZE FOR TWELVE SECONDS.
COMMADDR DC    A(0)                 ADDRESS OF COMMUNICATION LIST.
INRECNUM DC    F'0'                 NUMBER OF RECORDS READ.
IDSSTNUM DC    F'0'                 NUMBER OF DSSTS READ.
WRITENUM DC    F'0'                 NUMBER OF RECORDS WRITTEN.
ODSSTNUM DC    F'0'                 NUMBER OF DSSTS WRITTEN.
PURGENUM DC    F'0'                 NUMBER OF DSSTS PURGED.
VOLCOUNT DC    F'0'                 MAXIMUM NUMBER OF LSPACE DISKS.
GMSZDSST DC    F'0'                 GETMAIN SIZE FOR A SPACE SNAP-SHOT.
WKDSSTAD DC    A(0)                 ADDRESS OF WORKING-STORAGE DSST.
LENDSSTE DC    AL2(DSSTELEN)        LENGTH OF A DSST VOLUME ENTRY.
VTOCNAME DC    44X'04'              FORMAT-4 DSCB "DATA SET NAME".
IMPMAJOR DC    CL8'IMPMAJOR'        ENQUEUE MAJOR NAME.
IMPMINOR DC    C'IMPSPACER ACTIVE'  ENQUEUE MINOR NAME.
IMINRLEN EQU   *-IMPMINOR           ENQUEUE MINOR NAME LENGTH.
MDSTSUP0 MODESET KEY=ZERO,MODE=SUP,MF=L
MDSTPROB MODESET KEY=NZERO,MODE=PROB,MF=L
WRONGWTO WTO   'PARM NOT ''5'', ''SMF'', ''NOSMF'', ''5SMF'' OR ''5NOSM+
               F''  -  IGNORED',ROUTCDE=(2,11),MF=L
TWICEWTO WTO   'IMSPACER IS ALREADY UP - ONLY ONE CAN RUN AT A TIME',  +
               ROUTCDE=(2,11),MF=L
STARTWTO WTO   'IMSPACER - INITIALIZATION COMPLETE',                   +
               ROUTCDE=(2,11),MF=L
SVC78WTO WTO   'IMSPACER - LSPACE (SVC 78) FAILED RC=XX FOR VVVVVV ON U+
               UUU',ROUTCDE=(2,4,6,11),MF=L
FINALWTO WTO   'IMSPACER STOPPING BECAUSE OF STOP COMMAND',            +
               ROUTCDE=(2,11),MF=L
LOGICWTO WTO   'IMSPACER - BAD DATA FOUND - STOPPING FILE INPUT',      +
               ROUTCDE=(2,11),MF=L
INPUTWTO WTO   'IMSPACER - 1234567 RECORDS 1234567 DSSTS READ FROM SAVE+
               HIST FILE',ROUTCDE=(2,11),MF=L
INRECCNT EQU   INPUTWTO+14,8
IDSSTCNT EQU   INPUTWTO+30,8
WRITEWTO WTO   'IMSPACER - 1234567 RECORDS 1234567 DSSTS WRITTEN TO SAV+
               EHIST FILE',ROUTCDE=(2,11),MF=L
WRITECNT EQU   WRITEWTO+14,8
ODSSTCNT EQU   WRITEWTO+30,8
PURGEWTO WTO   'IMSPACER - 1234567 DSST ENTRIES PURGED FOR DAY YYYYDDD'+
               ,ROUTCDE=(2,11),MF=L
PURGECNT EQU   PURGEWTO+14,8
PURGEDAY EQU   PURGEWTO+50,8
EXTRCOMM EXTRACT COMMADDR,'S',FIELDS=(COMM),MF=L
OBTSRCH  CAMLST SEARCH,2,3,4        OBTAIN SEARCH PARAMETER LIST.
LSPACEL  LSPACE EXPMSG=SVC78BUF,SMF=TEST,F4DSCB=IECSDSL4,MF=L
SVC78FLG EQU   LSPACEL+6,1          SMF 19 RECORDS ONLY IF VOLUME ACCT.
         IECSDSL1 (4)               BODY OF FORMAT-4 DSCB.
         DC    XL44'00'             MAKE WORK AREA 140 LONG FOR OBTAIN.
SVC78BUF DS    0CL40                LSPACE EXPANDED MESSAGE AREA.
*        DS    0CL30                LSPACE STANDARD MESSAGE AREA.
         DC    CL6'SPACE='
FREECYL  DS    CL4
         DS    CL1
FREETRK  DS    CL4
         DS    CL1
FREEEXT  DS    CL4
         DS    CL1
MAXCYL   DS    CL4
         DS    CL1
MAXTRK   DS    CL4
         ORG   FREECYL
FREECYLX DC    CL6'000000'
         DC    CL1','
FREETRKX DC    CL6'000000'
         DC    CL1','
FREEEXTX DC    CL6'000000'
         DC    CL1'/'
MAXCYLX  DC    CL6'000000'
         DC    CL1','
MAXTRKX  DC    CL6'000000'
GOODVOLS DC    H'0'
FLAGS    DC    X'00'                FLAG BYTE.
FIVEFLAG EQU   X'80'                0==> 10 MIN. INTERVAL, ELSE 5 MINS.
FILEFLAG EQU   X'40'                SAVEHIST ALLOCATED.
STOPPING EQU   X'20'                PROGRAM TERMINATING.
OSBITS   DC    X'00'                OS BITS FROM CVTDCB.
OSLEVEL  DC    XL16'00'             OS BITS FROM CVTOSLVL.
         SPACE
         UCBINFO PLISTVER=MAX,MF=(L,UINFOL)
UTOKEN   DC    XL48'00'             IOCTOKEN AREA.
         SPACE
         PRINT NOGEN
SAVEHIST DCB   DSORG=PS,DDNAME=SAVEHIST,MACRF=(GM,PM),EODAD=EOINPUT,   +
               RECFM=FB,LRECL=DSSTELEN,BLKSIZE=0
         PRINT GEN
GETPUTBF DC    XL(DSSTELEN)'00'     I/O BUFFER.
         SPACE
         LTORG
         SPACE
         DS    0D
SMSWORKA DS    XL256'00'            SSOB AND SSSA AREA.
         DS    0D
         DC    CL48'(C) COPYRIGHT 1989-1998 PRYCROFT SIX PTY LTD'
         DS    0D                   END OF CSECT.
         TITLE 'DSECTS AND EQUATES'
         COPY  IMSPDSST             DISK SPACE SNAP-SHOT TABLE.
         SPACE 2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         TITLE 'SYSTEM CONTROL BLOCKS'
         PRINT NOGEN
         SPACE
         CVT   DSECT=YES
         SPACE
         IECDIOCM
         SPACE
         IEFJESCT
         SPACE
         IEFJSSIB
         SPACE
         IEFJSSOB
         SPACE
         IEFSSSA
         SPACE
         IEFUCBOB PREFIX=YES,DEVCLAS=DA
         SPACE
         IGDVLD
         SPACE
         PRINT GEN
         SPACE
         END   IMSPACER
