IM       TITLE 'IMPXA - REAL-TIME OS/390 + Z/OS SYSTEM MONITOR FOR TSO'
         ENTRY IM
***********************************************************************
*        THE SOURCE OF THE NAME OF THIS PROGRAM IS/WAS:
*         INTERACTIVE MONITORING PROGRAM  (FOR MVS/XA).
*
*        IMPXA REQUIRES MACROS FROM SYS1.MACLIB AND SYS1.MODGEN.
*
*        IMPXA IS NOT RE-ENTRANT NOR SERIALLY REUSABLE.
*
*        IMPXA REQUIRES AMODE=24 AND RMODE=24.
*
*        IMPXA WAS DEVELOPED AND WRITTEN BY GREG PRICE
*              FOR PRYCROFT SIX PTY. LTD.
*        (C) COPYRIGHT  1986-2019.
*
*        THIS COMMAND HAS DISPLAY OPTIONS (LISTED IN ORDER ADDED):
*
*     A  -  ADDRESS SPACE MONITOR                              (PF6/18)
*     D  -  DEVICE MONITOR                                     (PF9/21)
*     C  -  CHANNEL PATH MONITOR
*     S  -  DOMAIN MONITOR
*     E  -  RESERVE/ENQUEUE MONITOR
*     P  -  PAGE DATA SET MONITOR
*     F  -  REAL PAGE FRAME MEMORY MONITOR
*     J  -  JOB STATUS MONITOR
*     L  -  SYSTEM LIBRARY LISTER
*     V  -  VIRTUAL STORAGE MONITOR
*     B  -  BLDL AND LPA SEARCHER
*     T  -  SVC TABLE DISPLAY
*     R  -  CPU SPEED RATER
*     O  -  OS/MVS CONSOLE MONITOR
*     M  -  SYSTEM MANAGEMENT STATUS DISPLAY
*     U  -  I/O UNIT ACTIVITY MONITOR
*     N  -  NUCLEUS MAP DISPLAY AND LOOKUP
*     $  -  DISK SPACE DISPLAY
*     G  -  GRAPHIC ACTIVITY MONITOR
*     K  -  HISTORICAL KNOWLEDGE DISPLAY
*     @  -  UNIX USER AND GROUP DATA BASE DISPLAY
*
*     FOR TUTORIAL INFORMATION TYPE ?.                         (PF1/13)
*
*     TO EXIT FROM THIS COMMAND, SIMPLY TYPE Z.                (PF3/15)
*
***********************************************************************
         EJECT
***********************************************************************
*
* ADDRESS SPACE MONITOR OPTIONS:
*
*     I   - THIS MODE WILL DISPLAY ONLY THOSE MEMORIES WHICH ARE EITHER
*           SWAPPED IN AND RUNNING OR SWAPPED OUT BUT READY TO RUN.
*     O   - THIS MODE WILL DISPLAY ALL ACTIVE MEMORIES IN THE SYSTEM,
*           REGARDLESS OF LOCATION.
*
*   TO SWITCH BETWEEN MODES, TYPE EITHER I OR O.
*
*
*      YOU MAY ALSO ENTER OPTIONS TO RESTRICT THE OUTPUT TO ONLY
*      TSO MEMORIES (IN EITHER IN/OUT OR WAITING STATUS ACCORDING
*      TO YOUR USE OF THE I AND O OPTIONS ABOVE) OR ONLY STARTED
*      TASK/BATCH JOB MEMORIES:
*
*     T  - RESTRICTS THE OUTPUT TO ONLY TSO MEMORIES.
*
*     B  - RESTRICTS THE OUTPUT TO STARTED TASK/BATCH MEMORIES.
*
*     A  - RESETS THE TSO/STARTED TASK/BATCH JOB SELECTION.
*
*     Y  - ALLOWS DISPLAY OF EMPTY INITIATORS WHERE APPLICABLE.
*
*     N  - SUPPRESSES DISPLAY OF EMPTY INITIATORS.
*
*
*     J  - ISSUES A PROMPT FOR THE JOB NAME (OR JUST A PREFIX)
*          TO WHICH YOU WISH TO RESTRICT THE DISPLAY.
*
*
* DEVICE MONITOR OPTIONS:
*
*     O  - START/STOP SELECTION OF OFFLINE DEVICES.
*
*     D  - START/STOP SELECTION OF DIRECT ACCESS STORAGE DEVICES.
*
*     T  - START/STOP SELECTION OF MAGNETIC TAPE DEVICES.
*
*     G  - START/STOP SELECTION OF GRAPHICS DEVICES.
*
*     R  - START/STOP SELECTION OF UNIT RECORD DEVICES.
*
*     C  - START/STOP SELECTION OF COMMUNICATION DEVICES (INCL. CTC'S).
*
*     I  - START/STOP RESTRICTION OF UNITS TO IN-USE (IE. ALLOCATED OR
*          OFFLINE & BUSY) DEVICES.
*
*     P  - START/STOP RESTRICTION OF DASD DEVICES TO PAGING VOLUMES.
*
*     U  - ISSUES A PROMPT FOR THE UCB LABEL (OR JUST A PREFIX)
*          TO WHICH YOU WISH TO RESTRICT THE DISPLAY.
*
*     V  - ISSUES A PROMPT FOR THE VOLUME SERIAL (OR JUST A PREFIX)
*          TO WHICH YOU WISH TO RESTRICT THE DISPLAY.
*
*     J  - ISSUES A PROMPT FOR THE JOB NAME (OR JUST A PREFIX)
*          TO WHICH YOU WISH TO RESTRICT THE DISPLAY.
*
*
* DOMAIN MONITOR OPTIONS:
*
*     PF10/22 SELECTS DISPLAY MODE-1 (THE DEFAULT).
*
*     PF11/23 SELECTS DISPLAY MODE-2 WHERE ACCUM-SRV IS DISPLAYED
*             INSTEAD OF CONTN-IDX.
*
*
* ENQUEUE MONITOR OPTIONS:
*
*     W  - SELECT RESOURCE CONFLICTS ONLY.
*
*     D  - SELECT HARDWARE DASD RESERVES ONLY.
*
*     P  - SELECT ALL ENQUEUES SUBJECT ONLY TO PREFIX SELECTION.
*
*     J  - ISSUES A PROMPT FOR THE JOB NAME (OR JUST A PREFIX)
*          TO WHICH YOU WISH TO RESTRICT THE DISPLAY.
*
*     Q  - ISSUES A PROMPT FOR THE MAJOR QUEUE NAME (OR JUST A PREFIX)
*          TO WHICH YOU WISH TO RESTRICT THE DISPLAY.
*
*     R  - ISSUES A PROMPT FOR THE MINOR QUEUE NAME (OR JUST A PREFIX)
*          TO WHICH YOU WISH TO RESTRICT THE DISPLAY.
*
*
*  GLOSSARY OF TERMS FOR OUTPUT DISPLAY:
*
*              ADDRESS SPACE MONITOR
*    JOB       JOB NAME OF MEMORY.
*    STEP      NAME OF CURRENT STEP.
*  IORT(SWAP)  NUMBER OF EXCPS PER SECOND SO FAR THIS INTERVAL.
*              IT IS ACTUALLY THE I/O COMPONENT OF INT-SRV DIVIDED
*              BY THE IOC WEIGHTING DIVIDED BY ELAPSED TIME.
*              ASSUMPTION: IOC COEFFICIENT IS A POSITIVE INTEGER.
*              IF THIS IS ZERO THEN THE TOTAL NUMBER OF SWAPS THAT
*              HAVE OCCURED THIS JOB STEP WILL BE REPORTED IN
*              PARENTHESES.  FOR SWAPPED-OUT JOBS THIS FIGURE IS
*              USUALLY UNAVAILABLE, SO THE DURATION OF THE SWAP-OUT
*              WILL BE SHOWN IN MINUTES AND SECONDS.
*              ALSO TWO CHARACTER CODE (RMF CONVENTION) FOR THE
*              REASON OF SWAP-OUT:
*                TO   TERMINAL OUTPUT WAIT SWAP-OUT.
*                TI   TERMINAL INPUT WAIT SWAP-OUT.
*                LW   LONG WAIT CAUSED SWAP-OUT.
*                XS   AUXILIARY STORAGE SHORTAGE SWAP-OUT.
*                RS   REAL STORAGE SHORTAGE SWAP-OUT.
*                DW   MAIN STORAGE OCCUPANCY DETECTED WAIT SWAP-OUT.
*                RQ   SWAP-OUT REQUESTED BY REQSWAP SYSEVENT.
*                NQ   ENQ EXCHANGE SWAP-OUT.
*                EX   EXCHANGE SWAP BASED UPON RECOMMENDATION VALUES.
*                US   UNILATERAL SWAP-OUT.
*                TR   TRANSITION SWAP-OUT (SWAPPABLE TO NON-SWAPPABLE).
*    REAL      CURRENT AMOUNT OF REAL MEMORY ALLOCATED TO THIS MEMORY.
*    WSS       SRM'S VIEW OF THE WORKING SET SIZE FOR THIS MEMORY.
*    C         FIRST CHAR OF TRANSACTION CLASS OR @ FOR TSO USERS.
*    LOC       CURRENT LOCATION OF THIS MEMORY:
*                IN   SWAPPED IN AND ELIGIBLE TO RUN.
*                PRV  SWAPPED IN, ELIGIBLE TO RUN AND PRIVILEGED.
*                OUT  SWAPPED OUT BUT READY TO RUN.
*                WT   SWAPPED OUT AND NOT READY (IE. IN A WAIT STATE).
*                LOG  LOGICALLY SWAPPED OUT AND NOT READY TO RUN.
*                N/S  SWAPPED IN NON-SWAPPABLE STATUS.
*                V=R  SWAPPED IN AND V=R.
*                <+>  TRANSITIONING BETWEEN STATES (TRANSITIONING IN).
*                <->  TRANSITIONING BETWEEN STATES (TRANSITIONING OUT).
*    DP        DISPATCHING PRIORITY OF MEMORY (IN HEXADECIMAL).
*    DQ        DISPATCHING QUEUE POSITION OF MEMORY (IN DECIMAL).
*    PG        PERFORMANCE GROUP.
*    DMN       DOMAIN.
*    XSC       NUMBER OF TIMES THE MEMORY HAS BEEN SWAPPED IN THE
*              CURRENT TRANSACTION.
*    WMR       CURRENT SRM WORKLOAD MANAGER RECOMMENDATION VALUE.
*              (ACTUALLY THE WORKLOAD LEVEL AT WHICH THIS MEMORY IS
*               OPERATING).
*    INT-SRV   SERVICE ACCUMULATED IN THE LAST SWAPPED IN PERIOD.
*    CPU       CPU TIME IN SECONDS USED BY THE MEMORY (SRB PLUS TASK).
*
*              REAL MEMORY SUMMARY
*    DISPLAYED SUM OF REAL COLUMN FOR ALL JOBS SHOWN THIS SCAN.
*    ALL JOBS  SUM OF REAL COLUMN FOR ALL JOBS (SHOWN OR NOT).
*    COMMON    REAL STORAGE USED NOT ATTRIBUTABLE TO ANY JOB.
*    MAX       TOTAL MAIN STORAGE OF CPU.
*
*              SYSTEM SUMMARY
*    PDT       PAGE DELAY TIME IN MILLISECONDS.
*    AFCA      AVAILABLE (REAL STORAGE) FRAME COUNT AVERAGE.
*    UICA      UNREFERENCED INTERVAL COUNT AVERAGE.  A LOW VALUE
*              INDICATES HIGH CONTENTION FOR REAL STORAGE.
*    CPUA      AVERAGE CPU UTILIZATION.
*    ASMQA     AVERAGE WORK QUEUE LENGTH FOR THE AUXILIARY
*              STORAGE MANAGER.
*    PGRT      AVERAGE PAGING RATE IN PAGES PER SECOND.
*    TKT       SYSTEM THINK TIME IN SECONDS.
*
*              DEVICE MONITOR
*    Â¬         THE DEVICE IS NOT READY.
*    V         VSAM IS ACTIVE ON THIS VOLUME.
*    P         ACTIVE PAGE DATA SET(S) RESIDE ON THIS VOLUME.
*    *         THIS IS A SHARED DASD DEVICE. (RESV/RLSE CAN BE USED.)
*    VOLUME    VOLUME SERIAL NUMBER OF THE STORAGE UNIT.
*    UCB       ADDRESS OF THE UNIT AS DEFINED AT SYSGEN TIME.
*    PATH      PATH USED IN THE LAST I/O TO THE DEVICE.
*    UNIT-STATUS
*         OFF         THE DEVICE IS OFFLINE.
*         OFF-IN-USE  THE DEVICE IS OFFLINE BUT IS BEING USED.
*         ON          THE DEVICE IS ONLINE.
*         ALC         THE DEVICE IS ONLINE AND ALLOCATED.
*         UNL         THE OPERATOR HAS ISSUED AN UNLOAD COMMAND
*                     FOR THIS DEVICE.
*         VRY         THE OPERATOR HAS ISSUED A VARY COMMAND
*                     FOR THIS DEVICE.
*         SYS         THE DEVICE IS A SYSTEM CONSOLE OR THE DIRECT
*                     ACCESS STORAGE DEVICE IS THE SYSTEM
*                     RESIDENCE VOLUME.
*         PVT         THIS VOLUME IS MOUNTED AS A PRIVATE VOLUME.
*         PUB         THIS VOLUME IS MOUNTED AS A PUBLIC VOLUME.
*         STG         THIS VOLUME IS MOUNTED AS A STORAGE VOLUME.
*         REM         THIS VOLUME IS A REMOVABLE VOLUME.
*         RSD         THIS VOLUME IS A PERMANENTLY RESIDENT VOLUME.
*         RSV         THE MOUNT ATTRIBUTES OF THE VOLUME ARE RESERVED.
*         REW         A REWIND COMMAND HAS BEEN ADDRESSED TO THIS
*                     MAGNETIC TAPE DRIVE.
*         INT-REQ     OPERATOR INTERVENTION OF SOME KIND IS REQUIRED.
*         MNT-PND     A VOLUME MOUNT IS PENDING FOR THIS DEVICE.
*         INT-REQ-PND PROBABLY A TAPE DID NOT LOAD PROPERLY.
*    VTOC      TRACK ADDRESS OF THE VOLUME TABLE OF CONTENTS (IN HEX).
*    USE       NUMBER OF LOGICAL FILES (DD CARDS) ALLOCATED TO
*              THIS DEVICE.
*    OPN       NUMBER OF OPEN FILES (DCB'S) RELATED TO THIS DEVICE.
*    QUE       NUMBER OF REQUESTS QUEUED BECAUSE THE PATH IS BUSY.
*    RSV       NUMBER OF HARDWARE RESERVES ISSUED TO THIS DASD DEVICE.
*    IORATE    NUMBER OF I/O OPERATIONS PER SECOND SINCE LAST DISPLAY.
*    RSPTM     AVERAGE DEVICE RESPONSE TIME SINCE LAST DISPLAY.  THIS
*              THIS APPLIES TO DASD ONLY.  NOTE THE FOLLOWING RELATION:
*                 RESPONSE TIME  =  TIME QUEUED + I/O SERVICE TIME
*              THIS FIELD IS DERIVED FROM I/O RATE AND THE APPARENT
*              BUSY PERCENTAGE.
*    LST-USER  CURRENT NAME OF THE ADDRESS SPACE WHICH LAST ALLOCATED
*              THIS UNIT.  FOR DASD, THIS IS PROBABLY NOT THE JOB
*              RESPONSIBLE FOR THE INSTANTANEOUS I/O.  THIS ADDRESS
*              SPACE MAY HAVE TERMINATED OR BE RUNNING ANOTHER JOB
*              OR USER SINCE THE ALLOCATION.  IF THE DEVICE IS BUSY
*              THIS IS THE NAME OF THE ADDRESS SPACE WHICH IS TO BE
*              SCHEDULED AT I/O COMPLETION.
*    CYL       CYLINDER ADDRESS OF THE LAST I/O REQUEST.
*    FSC       FOR TAPES THIS IS THE DATA SET COUNT FOR THE VOLUME.
*    HD        READ/WRITE HEAD USED BY THE LAST I/O REQUEST.
*    LB        FOR TAPES THIS IS THE LABEL TYPE.
*              SL - STANDARD LABELS.
*              NL - NO LABELS, INCLUDING BYPASS LABEL PROCESSING.
*              UL - NON-STANDARD OR USER LABELS.
*    REC       RECORD NUMBER OF THE LAST I/O REQUEST.
*    FSN       FOR TAPES THIS IS THE DATA SET SEQUENCE NUMBER.
*    K         STORAGE PROTECT KEY OF THE CHANNEL PROGRAM.
*    DRVR      NAME OF THE I/O DRIVER BEING USED.
*    BUSY%     PERCENTAGE OF (ALL I/O ELAPSED TIME)/(REAL ELAPSED TIME)
*              AND SO MAY BE OVER 100% IF REQUESTS ARE QUEUED.
*              IN FACT THIS FIGURE IS THE SUM OF EACH BUSY PERCENTAGE
*              AS VIEWED BY EVERY USER OF THE DASD (OR EVERY USER).
*
*              CHANNEL MONITOR
*
*              DOMAIN MONITOR
*    ITEMS DISPLAYED BY THE DOMAIN MONITOR ARE SIMILAR TO THOSE SHOWN
*    BY A "D DMN" OPERATOR COMMAND.  LOOK UP IEE796I IN THE SYSTEM
*    MESSAGES MANUAL.
*
*    CONTN-IDX CONTENTION INDEX OF THE DOMAIN.  IT IS PROPORTIONAL
*              TO THE SERVICE ABSORBTION RATE OF THE DOMAIN.
*    ACCUM-SRV ACCUMULATED SERVICE UNITS CONSUMED BY THIS DOMAIN
*              SINCE IPL.
*
*              ENQUEUE MONITOR
*    QNAME     NAME OF THE CATEGORY OF RESOURCE THAT IS BEING USED.
*    RESOURCE-NAME  NAME OF THE SPECIFIC RESOURCE.
*    (RSV-DEVICE)   IF THE ENQUEUE IS ALSO A HARDWARE RESERVE THEN
*              UNIT AND VOLUME OF THE RESERVED DASD WILL BE SHOWN
*              IN PARETHESES.
*    USER      THE NAME OF THE JOB ISSUING THE ENQUEUE.
*
*              PAGE DATASET MONITOR
*    PAGE DATASET NAME  NAME OF THE PAGE DATASET.
*    TYP       TYPE OF USAGE.
*              LPA   PAGEABLE LINK PACK AREA PAGE DATASET.
*              CMN   COMMON PAGE DATASET.
*              DUC   DUPLEX DATASET FOR COMMON OR LPA.
*              LCL   LOCAL PAGE DATASET.
*              DUL   DUPLEX DATASET FOR LOCAL.
*              BAD   PAGE DATASET MARKED IN ERROR AND NOT TO BE USED.
*    BUSY      APPARENT FRACTION OF THE TIME THAT THE DATASET WAS BUSY.
*    SRV-TM    AVERAGE SERVICE TIME PER PAGE READ/WRITTEN IN SECONDS.
*    PIO-RT    AVERAGE NUMBER OF PAGES READ & WRITTEN PER SECOND.
*              NOTE THAT THIS MAY BE GREATER THAN ASM EXCPS/SEC.
*    VOLUME    VOLUME SERIAL NUMBER OF THE PAGING DEVICE.
*    ALLOC     NUMBER OF SLOTS ALLOCATED. IE. THE SIZE OF THE DATASET.
*    ERROR     NUMBER OF SLOTS MARKED AS UNUSABLE BECAUSE OF DETECTED
*              I/O ERRORS.
*    USED      NUMBER OF 4K SLOTS CURRENTLY IN USE.
*       %      THE PERCENTAGE OF (USED/ALLOC) IS ALSO SHOWN.
*
*              REAL MEMORY (PAGE FRAME) MONITOR
*    DISPLAYS THE USAGE OF EACH 4K FRAME OF REAL STORAGE, ONE MEGABYTE
*    PER SCREEN IMAGE.  HARDCOPY IS NOT SUPPORTED IN THIS OPTION.
*              FIVE BYTES ARE USED PER FRAME.  MEANING OF CONTENTS:
*    AAAAA     FIRST FIVE CHARACTERS OF STARTED TASK NAME OR LAST FIVE
*              NON-BLANK CHARACTERS OF JOB OR TIME SHARING USER NAME.
*    *****     THE ADDRESS SPACE OWNING THIS FRAME HAS NO JOB NAME.
*              (IE. EQUIVALENT TO STAR-TING. (PLAY ON WORDS.))
*     ...      THIS FRAME IS UNUSED AND AVAILABLE FOR USE.
*     ---      THIS FRAME IS USED BY A JOB WITH AN UNSELECTED NAME.
*     BAD      THIS FRAME IS UNUSED BUT UNAVAILABLE FOR USE.
*     OFF      THIS FRAME IS OFFLINE.
*     R/W      THIS IS A READ/WRITE NUCLEUS FRAME.
*     R-O      THIS IS A READ-ONLY NUCLEUS FRAME.
*     V=R      THIS IS A DAT-OFF NUCLEUS FRAME.
*     SQA      THIS IS A SYSTEM QUEUE AREA FRAME.
*              RED       ==> LONG-TERM FIXED OR OFFLINE.
*              TURQUOISE ==> SQA OR LSQA FRAME.
*              WHITE     ==> PSA OR HSA FRAME.
*              PINK      ==> NUCLEUS FRAME.
*              GREEN     ==> PAGEABLE FRAME.
*              BLUE      ==> PLPA/CSA FRAME.
*              YELLOW    ==> VIO REUSEABLE FRAME.
*
*
*
*
*
*
***********************************************************************
         TITLE 'REGISTER EQUATES'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 2
A0       EQU   0
A1       EQU   1
A2       EQU   2
A3       EQU   3
A4       EQU   4
A5       EQU   5
A6       EQU   6
A7       EQU   7
A8       EQU   8
A9       EQU   9
A10      EQU   10
A11      EQU   11
A12      EQU   12
A13      EQU   13
A14      EQU   14
A15      EQU   15
         SPACE 2
F0       EQU   0
F2       EQU   2
F4       EQU   4
F6       EQU   6
         TITLE 'ASSEMBLER VARIABLES - DEFINE AND INITIALIZE'
         LCLB  &MVSMON
         LCLB  &MSPMON
         LCLC  &LOW
         LCLC  &MED
         LCLC  &HIGH
         LCLC  &DD
         LCLC  &MM
         LCLC  &YY
         LCLC  &IMPDATE
         LCLC  &IMPSECT
&MVSMON  SETB  1                        MVS VERSION OF PROGRAM.
&MSPMON  SETB  0                        NOT MSP VERSION OF PROGRAM.
&LOW     SETC  '1BF0402842F5'           TURQUOISE FOR LOW INTENSITY.
&MED     SETC  '1BF4402842F3'           PINK FOR "MEDIUM" INTENSITY.
&HIGH    SETC  '1BF8402842F6'           YELLOW FOR HIGH INTENSITY.
&IMPDATE SETC  '&SYSDATE'
         AIF   ('&IMPDATE'(3,1) NE '/').GOTDATE
&MM      SETC  '&IMPDATE'(1,2)          GET MM.
&DD      SETC  '&IMPDATE'(4,2)          GET DD.
&YY      SETC  '&IMPDATE'(7,2)          GET YY.
&IMPDATE SETC  '&YY..&MM..&DD'          GET YY.MM.DD (FACOM &SYSDATE).
.GOTDATE ANOP
&IMPSECT SETC  'IMPXA'                  CSECT NAME.
         TITLE 'GETMAINED AREA AND DYNAMIC DSECTS'
GOTAREA  DSECT
SAVE     DS    18F
SECWORKA DS    CL256
WORK     DS    D
WORK2    DS    D
SCRNPA2A DS    D
SCRNPA3A DS    D
VSBTRACE DS    64F              VIRTUAL STORAGE BROWSE TRACE TABLE.
VSBTREND EQU   *
SECTIOWA DS    CL256
SECTCT   DS    CL1024
SECRBPFX EQU   SECTCT,8         BUFFER FOR PREFIX FETCHED WITH RB.
SECRB    EQU   SECTCT+8         RB AND TCT NOT USED AT SAME TIME.
SECCDE   EQU   SECTCT+96
SECJSCB  EQU   *-140,140
TTSTATUS EQU   SECJSCB,8        TRACE TABLE/SYSLOG BUFFER STATUS.
HOME     DC    X'C11140401B404E13'  BEGINNING OF SCREEN IMAGE.
         DC    X'2841F42842F4'      SA,HILITE,USCORE,SA,COLOUR,GREEN.
DOWNCNTR DC    X'0000'              COMMAND AREA.
HEADATTR DC    X'1BF8C62842F7'      SF,PROHIS,SA,COLOUR,WHITE.
HEADING  DC    CL71' '              HEADING.
BUSYATTR DC    X'2841F42842F2'      SA,HILITE,USCORE,SA,COLOUR,RED.
BUSY     DC    C' ZZ9'              CURRENT CPU UTILIZATION DISPLAY.
TEMPHOME DC    C'%'
*
*  INTENSITY, COLOUR AND HIGHLIGHTING ARE GENERALLY IMPLEMENTED ON
*  A DISPLAY-LINE BY DISPLAY-LINE BASIS.  A TYPICAL 80-COLUMN DETAIL
*  DISPLAY LINE CONSISTS OF TERMINAL ORDERS WITH DISPLAY ATTRIBUTE
*  INFORMATION CAUSING THE FIRST COLUMN TO BE OCCUPIED BY A FIELD
*  ATTRIBUTE BYTE, AND 79 BYTES OF DISPLAY TEXT.
*
*  THE LL SYMBOL IS SET TO THE NUMBER OF BYTES REQUIRED TO CREATE
*  A STANDARD DETAIL DISPLAY LINE.  AS THE ORDERS USED IN THE STANDARD
*  DETAIL LINE HEADER CHANGE, THE VALUE OF LL WILL CHANGE ALSO.
*
*  BUT, AS LL CHANGES THE OFFSET OF EVERY ITEM DISPLAYED IN A DETAIL
*  LINE ALSO CHANGES, WHICH CAN MEAN EXTENSIVE SOURCE CODE CHANGES.
*
*  HENCE, MANY SUBROUTINES EXPRESS THE DISPLAY OFFSET AS A FUNCTION
*  OF LL.  FOR EXAMPLE, CODE TO SET A DISPLAY LINE TO BLANKS CAN BE:
*        MVI   LL-79(R2),C' '
*        MVC   LL-78(78,R2),LL-79(R2)
*
*  NOTE THAT R2 IS GENERALLY USED AS THE CURRENT LINE POINTER.
*
*  THE DETAIL LINE HEADER ORDER SEQUENCE HAS EVOLVED OVER YEARS.
*
*    ORDER SEQUENCE     LOW INTENSITY EXAMPLE   CORRESPONDING LL VALUE
*         SF                   1DF0                      81
*         SFE                  1BF040                    82
*         SFE+COLR             1BF0402842F5              85
*    HLIT+SFE+COLR       2841001BF0402842F5              88
*
*  SINCE THE COLOUR SA ORDER IS LAST, THE COLOUR CODE BYTE IS SOMETIMES
*  REFERENCED VIA LL-80.  FOR EXAMPLE:
*        MVI   LL-80(R2),X'F1'  MAKE THIS LINE BLUE.            (I3279)
*
*  IT WOULD BE POSSIBLE TO REENGINEER THINGS SO THAT ONLY 1 BYTE USING
*  AN INTERNAL CODE SCHEME WOULD BE REQUIRED, THUS REDUCING LL TO 80,
*  BUT THIS HAS NOT CURRENTLY BEEN PUT INTO EFFECT HERE.
*
LL       EQU   88               LINE LENGTH: 88 FOR 80 COLUMN SCREEN.
BUFFER   DS    124CL(LL)        UP TO 123 DETAIL LINES PLUS TRAILERS.
VBUFFER  DS    XL512            BROWSE FETCH HOLD AREA.
*  THIS SHOULD GIVE ENOUGH SPACE FOR A 62 ROW BY 160 COLUMN SCREEN.
         DS    0D               END OF PRIMARY DYNAMIC AREA.
WORKLEN  EQU   *-SAVE
         SPACE 2
ASENTRY  DSECT                  20 BYTE ADDRESS SPACE TABLE ENTRY.
TOD      DS    F
CPUSOFAR DS    F
XCPSOFAR DS    F
IOCSOFAR DS    F
ASPAGECT DS    F
ASENTLEN EQU   *-ASENTRY
         SPACE 2
IOENTRY  DSECT                  40 BYTE DEVICE TABLE ENTRY.
IOTODBIN DS    F
SIO_ECMB EQU   *,36
SIOSOFAR DS    F
SIOSAMPL DS    F               \
SIOCONTM DS    F                \   SAME ORDER
SIOPNDTM DS    F                 \  AS IN (E)CMB.
SIODSCTM DS    F                  \
*SIOCUQTM DS    F                  /
*SIODAOTM DS    F                 /
*SIODBZTM DS    F                /
*SIOICRTM DS    F               /
UCBDEVNO DS    H
UCBUSYCT DS    H
DEVQUEUD DS    H
DEVRSRVD DS    H
IOUCBADR DS    A
IOPFXADR DS    A
IOENTLEN EQU   *-IOENTRY
         SPACE 2
UDXENTRY DSECT                  64 BYTE DATA SET EXTENT ENTRY.
UDXDSNAM DS    CL44
UDSCBADR DS    XL5
UDXTNTNO DS    XL1           \
UDXLCCHH DS    XL4            \
UDXHCCHH DS    XL4             \____THESE THREE IN THIS ORDER.
UDSCBPTR DS    XL5
UDXTNTCT DS    XL1
         DS    0D
UDXENTSZ EQU   *-UDXENTRY
         TITLE 'DSECTS AND EQUATES'
RDS      DSECT
******* START OF SPECIFICATIONS ***************************************
***                                                                  **
***  MACRO-NAME = IEEMBRDS                                           **
***                                                                  **
***  DESCRIPTIVE-NAME = SMF RECORDING DATA SET CONTROL BLOCK         **
***                                                                  **
***                                                                  **
***  FUNCTION = MAPPING FOR THE RDS.  AN RDS CONTAINS THE            **
***             DATA NECESSARY TO CONTROL AN SMF RECORDING           **
***             DATASET.  IT INCLUDES THE VSAM ACB AND RPL AND       **
***             OTHER FLAGS AND FIELDS DESCRIBING THE STATUS         **
***             OF THE DATASET.                                      **
***                                                                  **
******* END OF SPECIFICATIONS *****************************************
RDSID    DS    CL4           CONTROL BLOCK ID.
RDSNEXT  DS    F             FORWARD CHAIN POINTER.
RDSPREV  DS    F             BACKWARD CHAIN POINTER.
RDSFLAG1 DS    XL1           DATASET STATUS INDICATORS.
*                            XXX. ....  RESERVED.
RDSFREE  EQU   X'10'         ...1 ....  NEED TO FREE DATASET AND RDS.
RDSDUMP  EQU   X'08'         .... 1...  OPER HAS BEEN TOLD TO DUMP DS.
RDSREADY EQU   X'04'         .... .1..  DS IS OPEN AND READY TO USE.
RDSCLOSE EQU   X'02'         .... ..1.  DS NEEDS TO BE CLOSED.
RDSNDOP  EQU   X'01'         .... ...1  DS NEEDS TO BE OPENED.
RDSFLAG2 DS    XL1           DATASET STATUS INDICATORS.
RDSLOST  EQU   X'80'         1... ....  DUMMY RDS FOR LOST DATA.
RDSPHYER EQU   X'40'         .1.. ....  PHYSICAL I/O ERROR.
RDSLOGER EQU   X'20'         ..1. ....  LOGICAL I/O ERROR.
*                            ...X XXXX  RESERVED.
RDSFLAG3 DS    XL1           RESERVED.
RDSFLAG4 DS    XL1           RESERVED.
RDSNAME  DS    CL10          DATASET NAME.
RDSVOLID DS    CL6           VOLUME SERIAL.
RDSDDN   DS    CL8           DDNAME RETURNED BY DYNAMIC ALLOCATION.
RDSCAPTY DS    F             DATASET CAPACITY IN # OF BLOCKS.
RDSNXTBL DS    F             NUMBER OF NEXT AVAILABLE BLOCK.
RDSBQE   DS    A             ADDRESS OF BQE BEING WRITTEN.
RDSAVSPC DS    F             AVAILABLE SPACE FROM SHOWCB.
RDSENRBA DS    F             ENDRBA FROM SHOWCB.
RDSCINV  DS    F             CONTROL INTERVAL SIZE.
RDSDOMID DS    F             MSG # OF DUMP MSG.
RDSRPL   DS    CL76          VSAM RPL.
RDSACB   DS    CL76          VSAM ACB.
         SPACE
*        SYSTEM CONTROL OFFSETS TO CALLABLE SERVICES
#BPX1ACC EQU   52                  ACCESS
#BPX1ACK EQU   972                 AUTH_CHECK_RSRC_NP
#BPX1ACP EQU   508                 ACCEPT
#BPX1AIO EQU   988                 ASYNCIO
#BPX1ALR EQU   224                 ALARM
#BPX1ANR EQU   1060                ACCEPT_AND_RECV
#BPX1ASP EQU   1088                AIO_SUSPEND
#BPX1ATM EQU   668                 ATTACH_EXECMVS
#BPX1ATX EQU   664                 ATTACH_EXEC
#BPX1BND EQU   512                 BIND
#BPX1CCA EQU   480                 COND_CANCEL
#BPX1CCS EQU   1012                CONSOLE_NP
#BPX1CHA EQU   84                  CHAUDIT
#BPX1CHD EQU   56                  CHDIR
#BPX1CHM EQU   60                  CHMOD
#BPX1CHO EQU   64                  CHOWN
#BPX1CHP EQU   764                 CHPRIORITY
#BPX1CHR EQU   500                 CHATTR
#BPX1CID EQU   968                 CONVERT_ID_NP
#BPX1CLD EQU   68                  CLOSEDIR
#BPX1CLO EQU   72                  CLOSE
#BPX1CON EQU   516                 CONNECT
#BPX1CPO EQU   484                 COND_POST
#BPX1CRT EQU   872                 CHROOT
#BPX1CSE EQU   488                 COND_SETUP
#BPX1CTW EQU   492                 COND_TIMED_WAIT
#BPX1CWA EQU   496                 COND_WAIT
#BPX1DEL EQU   888                 DELETEHFS
#BPX1ENV EQU   960                 OE_ENV_NP
#BPX1EXC EQU   228                 EXEC
#BPX1EXI EQU   232                 _EXIT
#BPX1EXM EQU   236                 EXECMVS
#BPX1EXT EQU   200                 EXTLINK_NP
#BPX1FCA EQU   140                 FCHAUDIT
#BPX1FCD EQU   852                 FCHDIR
#BPX1FCM EQU   88                  FCHMOD
#BPX1FCO EQU   92                  FCHOWN
#BPX1FCR EQU   504                 FCHATTR
#BPX1FCT EQU   96                  FCNTL
#BPX1FPC EQU   100                 FPATHCONF
#BPX1FRK EQU   240                 FORK
#BPX1FST EQU   104                 FSTAT
#BPX1FSY EQU   108                 FSYNC
#BPX1FTR EQU   112                 FTRUNCATE
#BPX1FTV EQU   848                 FSTATVFS
#BPX1GCL EQU   1024                GETCLIENTID
#BPX1GCW EQU   116                 GETCWD
#BPX1GEG EQU   244                 GETEGID
#BPX1GEP EQU   860                 GETPGID
#BPX1GES EQU   864                 GETSID
#BPX1GET EQU   736                 W_GETIPC
#BPX1GEU EQU   248                 GETEUID
#BPX1GGE EQU   772                 GETGRENT
#BPX1GGI EQU   252                 GETGRGID
#BPX1GGN EQU   256                 GETGRNAM
#BPX1GGR EQU   260                 GETGROUPS
#BPX1GID EQU   264                 GETGID
#BPX1GIV EQU   1028                GIVESOCKET
#BPX1GLG EQU   268                 GETLOGIN
#BPX1GMN EQU   76                  W_GETMNTENT
#BPX1GNM EQU   524                 GETPEERNAME
#BPX1GPE EQU   776                 GETPWENT
#BPX1GPG EQU   272                 GETPGRP
#BPX1GPI EQU   276                 GETPID
#BPX1GPN EQU   280                 GETPWNAM
#BPX1GPP EQU   284                 GETPPID
#BPX1GPS EQU   428                 W_GETPSENT
#BPX1GPT EQU   916                 GRANTPT
#BPX1GPU EQU   288                 GETPWUID
#BPX1GPY EQU   744                 GETPRIORITY
#BPX1GRL EQU   820                 GETRLIMIT
#BPX1GRU EQU   824                 GETRUSAGE
#BPX1GTH EQU   1056                __GETTHENT
#BPX1GTR EQU   752                 GETITIMER
#BPX1GUG EQU   292                 GETUGRPS
#BPX1GUI EQU   296                 GETUID
#BPX1GWD EQU   936                 GETWD
#BPX1HST EQU   520                 GETHOSTID
#BPX1IOC EQU   120                 W_IOCTL
#BPX1IPT EQU   396                 MVSIPTAFFINITY
#BPX1ITY EQU   12                  ISATTY
#BPX1KIL EQU   308                 KILL
#BPX1LCO EQU   832                 LCHOWN
#BPX1LNK EQU   124                 LINK
#BPX1LOD EQU   880                 LOADHFS
#BPX1LSK EQU   128                 LSEEK
#BPX1LSN EQU   532                 LISTEN
#BPX1LST EQU   132                 LSTAT
#BPX1MAT EQU   720                 SHMAT
#BPX1MCT EQU   724                 SHMCTL
#BPX1MDT EQU   728                 SHMDT
#BPX1MGT EQU   732                 SHMGET
#BPX1MKD EQU   136                 MKDIR
#BPX1MKN EQU   144                 MKNOD
#BPX1MMP EQU   796                 MMAP
#BPX1MNT EQU   148                 MOUNT
#BPX1MP  EQU   688                 MVSPAUSE
#BPX1MPC EQU   408                 MVSPROCCLP
#BPX1MPI EQU   680                 MVSPAUSEINIT
#BPX1MPR EQU   800                 MPROTECT
#BPX1MSD EQU   336                 MVSUNSIGSETUP
#BPX1MSS EQU   312                 MVSSIGSETUP
#BPX1MSY EQU   804                 MSYNC
#BPX1MUN EQU   808                 MUNMAP
#BPX1NIC EQU   748                 NICE
#BPX1OPD EQU   152                 OPENDIR
#BPX1OPN EQU   156                 OPEN
#BPX1OPT EQU   528                 GETSOCKOPT
#BPX1PAF EQU   1072                __PID_AFFINITY
#BPX1PAS EQU   316                 PAUSE
#BPX1PCF EQU   160                 PATHCONF
#BPX1PCT EQU   768                 PFSCTL
#BPX1PIO EQU   984                 W_PIOCTL
#BPX1PIP EQU   164                 PIPE
#BPX1POL EQU   932                 POLL
#BPX1PSI EQU   460                 PTHREAD_SETINTR
#BPX1PST EQU   472                 PTHREAD_SETINTRTYPE
#BPX1PTB EQU   448                 PTHREAD_CANCEL
#BPX1PTC EQU   432                 PTHREAD_CREATE
#BPX1PTD EQU   444                 PTHREAD_DETACH
#BPX1PTI EQU   476                 PTHREAD_TESTINTR
#BPX1PTJ EQU   440                 PTHREAD_JOIN
#BPX1PTK EQU   464                 PTHREAD_KILL
#BPX1PTQ EQU   412                 PTHREAD_QUIESC
#BPX1PTR EQU   320                 PTRACE
#BPX1PTS EQU   452                 PTHREAD_SELF
#BPX1PTT EQU   1016                PTHREAD_TAG_NP
#BPX1PTX EQU   436                 PTHREAD_XANDG
#BPX1PWD EQU   788                 __PASSWD
#BPX1QCT EQU   692                 MSGCTL
#BPX1QDB EQU   948                 QUERYDUB
#BPX1QGT EQU   696                 MSGGET
#BPX1QRC EQU   700                 MSGRCV
#BPX1QSE EQU   388                 QUIESCE
#BPX1QSN EQU   704                 MSGSND
#BPX1RCV EQU   540                 RECV
#BPX1RDD EQU   168                 READDIR
#BPX1RDL EQU   172                 READLINK
#BPX1RDV EQU   536                 READV
#BPX1RDX EQU   940                 READ_EXTLINK
#BPX1RD2 EQU   856                 READDIR2
#BPX1RED EQU   176                 READ
#BPXB1REL EQU  600                 V_REL
#BPX1REN EQU   180                 RENAME
#BPX1RFM EQU   544                 RECVFROM
#BPX1RMD EQU   188                 RMDIR
#BPX1RMG EQU   8                   RESOURCE
#BPX1RMS EQU   548                 RECVMSG
#BPX1RPH EQU   884                 REALPATH
#BPX1RWD EQU   184                 REWINDDIR
#BPX1SA2 EQU   1084                __SIGACTIONSET
#BPX1SCT EQU   708                 SEMCTL
#BPX1SDD EQU   300                 SET_DUB_DEFAULT
#BPX1SEC EQU   1044                __SECURITY
#BPX1SEG EQU   424                 SETEGID
#BPX1SEL EQU   552                 SELECT
#BPX1SEU EQU   420                 SETEUID
#BPX1SF  EQU   1064                SEND_FILE PC-ONLY
#BPX1SGE EQU   780                 SETGRENT
#BPX1SGI EQU   328                 SETGID
#BPX1SGR EQU   792                 SETGROUPS
#BPX1SGT EQU   712                 SEMGET
#BPX1SHT EQU   572                 SHUTDOWN
#BPX1SIA EQU   324                 SIGACTION
#BPX1SIN EQU   1004                SERVER_INIT
#BPX1SIP EQU   340                 SIGPENDING
#BPX1SLK EQU   1068                __SHM_LOCK
#BPX1SLP EQU   344                 SLEEP
#BPX1SMF EQU   1036                __SMF_RECORD
#BPX1SMS EQU   560                 SENDMSG
#BPX1SND EQU   556                 SEND
#BPX1SOC EQU   576                 SOCKET_PAIR
#BPX1SOP EQU   716                 SEMOP
#BPX1SPB EQU   416                 SIGPUTBACK
#BPX1SPE EQU   784                 SETPWENT
#BPX1SPG EQU   348                 SETPGID
#BPX1SPM EQU   352                 SIGPROCMASK
#BPX1SPN EQU   760                 SPAWN
#BPX1SPR EQU   568                 SETPEER
#BPX1SPW EQU   1008                SERVER_PWU
#BPX1SPY EQU   740                 SETPRIORITY
#BPX1SRG EQU   896                 SETREGID
#BPX1SRL EQU   816                 SETRLIMIT
#BPX1SRU EQU   892                 SETREUID
#BPX1SRX EQU   1080                SRX_NP
#BPX1SSI EQU   356                 SETSID
#BPX1SSU EQU   360                 SIGSUSPEND
#BPX1STA EQU   192                 STAT
#BPX1STE EQU   1076                SET_TIMER_EVENT
#BPX1STF EQU   80                  W_STATFS
#BPX1STL EQU   684                 SET_LIMITS
#BPX1STO EQU   564                 SENDTO
#BPX1STR EQU   756                 SETITIMER
#BPX1STV EQU   844                 STATVFS
#BPX1STW EQU   1096                SIGTIMEDWAIT
#BPX1SUI EQU   364                 SETUID
#BPX1SWT EQU   468                 SIGWAIT
#BPX1SYC EQU   368                 SYSCONF
#BPX1SYM EQU   196                 SYMLINK
#BPX1SYN EQU   868                 SYNC
#BPX1TAK EQU   1032                TAKESOCKET
#BPX1TDR EQU   24                  TCDRAIN
#BPX1TFH EQU   20                  TCFLUSH
#BPX1TFW EQU   28                  TCFLOW
#BPX1TGA EQU   32                  TCGETATTR
#BPX1TGC EQU   900                 TCGETCP
#BPX1TGP EQU   36                  TCGETPGRP
#BPX1TGS EQU   912                 TCGETSID
#BPX1TIM EQU   372                 TIMES
#BPX1TLS EQU   964                 TSK_LVL_SEC_NP
#BPX1TRU EQU   828                 TRUNCATE
#BPX1TSA EQU   40                  TCSETATTR
#BPX1TSB EQU   44                  TCSENDBREAK
#BPX1TSC EQU   904                 TCSETCP
         EJECT
         PRINT NOGEN
         SPACE
         IEZBITS
         SPACE
         IHAPSA
         SPACE
         CSVAPFAA
         SPACE
         CSVEXAA DSECT=YES,LIST=NO,TITLE=NO,EXAAHDR=YES,               +
               EXAAE=YES,EXAAM=NO,EXAAM1=YES
         SPACE
         CSVDLCB
         SPACE
         CVT   DSECT=YES
         SPACE
         IHAECVT DSECT=YES
         SPACE
         ISGRIB
         SPACE
         IHASDWA VRAMAP=NO
         SPACE
         IHAARL PREFIX=ARL,DSECT=YES,DESCR=NO
         SPACE
         IHAACEE
         SPACE
         IHAASCB
         SPACE
         IHAASSB
         SPACE
         IHAASXB
         SPACE
         IHAASVT
         SPACE
         IHACDE
         SPACE
         IHACDX DSECT=YES
         SPACE
         IHACSD
         SPACE
         IHADECB
         SPACE
         IHADFA
         SPACE
         IHADQE
         SPACE
         IHAFBQE
         SPACE
         IHAFQE
         SPACE
         IHAGDA
         SPACE
         IHAIHSA
         SPACE
         IHALCCA
         SPACE
         IHALDA
         SPACE
         IHALLE
         SPACE
         IHALPDE
         SPACE
         IHAORE
         SPACE
         IHAOUXB
         SPACE
         IHAPCCA
         SPACE
         IHAPVT
         SPACE
         IHARB
         SPACE
         IHASCCB
         SPACE
         IHASCVT
         SPACE
         IHASPQE
         SPACE
         IHASPQA
         SPACE
         IHASPT
         SPACE
         IHASTCB
         SPACE
         IHASVC UPDATE=YES
         SPACE
         IHASVT
         SPACE
         IHAWQE
         SPACE
         IHAXTLST
         SPACE
         IOSDUPI
UCBBASIC EQU   *
         SPACE
DASDDCE  IECDDCE
         SPACE
         IECDIOCM
         SPACE
         IECDIOQ IOSIOQM=YES
         SPACE
         IECDIOSB
         SPACE
         IECUCBCX
         SPACE
         IEEBASEA
         SPACE
CSCB     DSECT
         IEECHAIN
         SPACE
         IEECUCM
         SPACE
         IEESMCA
         SPACE
         IEESMCX
         SPACE
         IEEZB806
         SPACE
         IEFJESCT
         SPACE
         IEFJSCVT
         SPACE
TIOT     DSECT
         IEFTIOT1
         SPACE
         IEFZB4UV
         SPACE
         IEFZB610
         SPACE
         IEFJSSIB
         SPACE
         IEFJSSOB
         SPACE
         IEFSSSA
         SPACE
         IEFTCT
         SPACE
         IEFUCBOB PREFIX=YES
         SPACE
DEB      DSECT
         IEZDEB
         SPACE
         IEZIOB
         SPACE
         IEZJSCB
         SPACE
         IGDVLD
         SPACE
         IKJPSCB
         SPACE
         IKJTCB
         SPACE
         IKJTSB EXT=YES WHICH WILL INCLUDE IKTTSBX.
         SPACE
         IKTTCAST
         SPACE
         IKTTVWA
         SPACE
         ILRASMVT
         SPACE
         ILRIORB
         SPACE
         IRACMCT
         SPACE
         IRAOUCB
         SPACE
         IRARASD
         SPACE
         IRARMCA
         SPACE
         IRARMCT
         SPACE
         IRARMCTZ
         SPACE
         IRACCT
         SPACE
         IRAMCT
         SPACE
         IRARCT
         SPACE
         IAZJSAB
         SPACE
         IWMSVPOL
         SPACE
         IWMWRCAA
         SPACE
         IWMYCON
         SPACE
         IEANTASM
         SPACE
         ICHPRCVT
         SPACE
         IARRAX
         SPACE
         IARRCE
         SPACE
         IGVGQAT
         SPACE
         IGVGQE
         SPACE
         IGVCAUB
         SPACE
         CSRSIIDF SIV1=YES
         SPACE
         DCBD  DSORG=PS,DEVD=DA
         SPACE
         IFGACB
         SPACE
         PRINT GEN
         TITLE 'PREPARE DYNAMIC TABLES AND INITIALIZE VARIABLES'
IMPXA    CSECT
IMPXA    AMODE 24
IMPXA    RMODE 24
IM       DS    0D                ENTRY POINT.
         USING IMPXA,R15
         B     IMPSTART          BRANCH OVER ID AND AUTH TABLE.
         DROP  R15               IMPXA.
         DC    AL1(28),CL28'IMON - 390 AND Z  - &IMPDATE'
         DC    CL31' (C) 1986-2020 PRYCROFT SIX P/L'
         DC    X'FAF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'     _________Â¢.<(+|
         DC    X'F0F0F0F0F0F0F0F0F0F0F0F8F0F0F0F0'    &_________!$*);Â¬
         DC    X'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'    -/________Â¦,%_>?
         DC    X'F0F0F0F0F0F0F0F0F0F0F0F0F8F0F0F0'    _________`:#@'="
         DC    X'F0F078F0F0F0F0F0F0F0F0F0F0F0F0F0'    X'80'------X'8F'
         DC    X'F0F0F058F0F0F0F0F058F0F0F0F0F0F0'    X'90'------X'9F'
         DC    X'F0F058F0F058F0F8F0F0F0F0F0F0F0F0'    X'A0'------X'AF'
         DC    X'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'    X'B0'------X'BF'
         DC    X'F0F8F8F8F8F8F8F8F0F0F0F0F0F0F0F0'    {ABCDEFGHI______
         DC    X'F0F8F8F8F8F8F8F8F8F8F0F0F0F0F0F0'    }JKLMNOPQR______
         DC    X'F0F0F8F8F8F8F0F0F0F8F0F0F0F0F0F0'    \_STUVWXYZ______
         DC    X'F0F1F2F3F4F5F6F7F0F0F0F0F0F0F0C5'    0123456789______
         DC    CL8'???QNAME'     CUSTOMIZABLE QNAME FOR OPTION "E".
         SPACE
ASID     EQU   ASCBASID-ASCB     OFFSET OF ASCBASID.
EJST     EQU   ASCBEJST-ASCB     OFFSET OF ASCBEJST.
JBNI     EQU   ASCBJBNI-ASCB     OFFSET OF ASCBJBNI.
JBNS     EQU   ASCBJBNS-ASCB     OFFSET OF ASCBJBNS.
ASOUCB   EQU   ASCBOUCB-ASCB     OFFSET OF ASCBOUCB.
UTILP    EQU   CCVUTILP-CCT      OFFSET OF CCVUTILP.
         SPACE
         USING PSA,0
IMPSTART STM   R14,R12,12(R13)   SAVE THE CALLERS REGISTERS.
         LR    R12,R15           ESTABLISH
         LA    R11,2048(,R12)    ADDRESSABILITY.
         LA    R11,2048(,R11)
         USING IMPXA,R12,R11
         LR    R2,R1             SAVE PARAMETER POINTER.
         L     R1,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R1
         MVC   OSBITS,CVTDCB     COPY OPERATING SYSTEM FLAGS.
         CLI   OSBITS,X'9B'      MVS/ESA OR LATER?
         BE    MVSESAOK          YES.
         UNPK  OSCODE,OSBITS(2)  NO, REPORT OS BITS.
         TR    OSCODE(2),HEX-C'0'
         MVI   OSCODE+2,C'"'
         LA    R1,NOTXAMSG       DISPLAY AN APPROPRIATE MESSAGE
         LA    R0,NOTXALEN       ON THE TERMINAL...
WRONGOSX TPUT  (1),(0),R
         RETURN (14,12),RC=12    AND EXIT WITH A RETURN CODE OF 12.
MVSESAOK MVC   OSLEVEL,CVTOSLVL  COPY MVS/ESA FEATURE FLAGS.
         DROP  R1                CVT.
         EXTRACT MF=(E,EXTRTSO)  GET ADDRESS OF TSO FLAG.
         L     R1,TSOFIELD       POINT TO THE TSO FLAG.
         TM    0(R1),X'80'       TIME SHARING USER?
         BZ    SCREENOK          NO, SHOULD BE A STARTED TASK.
         OI    MODESW3,TSU       YES, FLAG THIS FOR LATER.
         GTSIZE
         LTR   R15,R15           ANY PROBLEMS WITH GTSIZE?
         BNZ   ISNOTVDU          YES, THAT'S VERY UNUSUAL.
         LTR   R0,R0             IS THIS A VDU?
         BNZ   FSMODEON          YES.
ISNOTVDU LA    R1,NTVDUMSG       NO, DISPLAY AN APPROPRIATE MESSAGE
         LA    R0,L'NTVDUMSG     ON THE TERMINAL...
         TPUT  (1),(0),R
         RETURN (14,12),RC=8     AND EXIT WITH A RETURN CODE OF 8.
FSMODEON STM   R0,R1,LINES       SAVE THE CURRENT SCREEN SIZE.
*                                TURN ON VTAM FULL SCREEN MODE.
         STFSMODE ON,INITIAL=YES,NOEDIT=YES
******** STTMPMD ON              TURN OFF SESSION MANAGER.
         LARL  R3,TRMNETID       POINT TO DATA RETURN AREA.
         GTTERM TERMID=(R3),MF=(E,GETTERM)    GET TERMINAL ATTRS.
         LTR   R15,R15           ANY PROBLEMS WITH GTTERM?
         BNZ   SCREENOK          YES, THAT'S UNUSUAL, BUT PERSEVERE.
         CLC   LINES+3(1),TRMALTSZ
         BNE   SCREENOK          NOT IN ALTERNATE SIZE CURRENTLY.
         CLC   COLUMNS+3(1),TRMALTSZ+1
         BNE   SCREENOK          NOT IN ALTERNATE SIZE CURRENTLY.
         MVI   CLR+1,X'7E'       USE ERASE WRITE ALTERNATE.
SCREENOK TM    0(R2),X'80'       INVOKED AS PROGRAM OR TSO COMMAND?
         BO    PGMPARM           PROGRAM.
         L     R2,0(0,R2)        POINT TO THE COMMAND BUFFER.
         LH    R3,2(0,R2)        GET LENGTH OF PARSING DONE.
         LA    R3,4(0,R3)        GET OFFSET INTO COMMAND BUFFER.
         LA    R6,0(R3,R2)       POINT TO FIRST NON-PARSED CHARACTER.
         SH    R3,0(0,R2)        SUBTRACT COMMAND BUFFER LENGTH TO GET
         BZ    MONODFLT          OPERAND LENGTH.  IF ZERO, FORGET IT.
         LPR   R3,R3             GET ABSOLUTE (POSITIVE) VALUE.
         B     INITCMD           OPERAND SPECIFIED SO USE IT.
LOADPARM MVC   INCHARS(0),0(R6)                 <<< EXECUTED >>>
PGMPARM  L     R2,0(0,R2)        POINT TO PROGRAM PARAMETER.
         CLI   1(R2),0           ZERO PROGRAM PARAMETER LENGTH?
         BE    MONODFLT          YES, SO NO INITIAL COMMAND.
         LA    R6,2(,R2)         NO, POINT TO START OF PARAMETER TEXT.
         LH    R3,0(,R2)         LOAD PARAMETER TEXT LENGTH.
INITCMD  LA    R2,L'INCHARS      GET MAXIMUM USABLE OPERAND LENGTH.
         CR    R3,R2             IS TRUNCATION REQUIRED?
         BNH   LOADCMD           NO, LOAD UNPARSED PART OF PARM AS IS.
         LR    R3,R2             YES, GET MAXIMUM PROCESSABLE LENGTH.
LOADCMD  BCTR  R3,0              GET LENGTH CODE FOR EXECUTE.
         EX    R3,LOADPARM       MOVE FIRST COMMAND TO INPUT AREA.
         OC    INCHARS,BLANKS    FOLD TO UPPER CASE.
MONODFLT OI    MODESW2,COL2+COL4 USE MONOCHROME UNLESS COLOUR PROVEN.
         LA    R0,1
         SLL   R0,31             GET AMODE BIT READY.
         LA    R15,FINDCVT       GET TARGET OF BRANCH.
         OR    R15,R0            SET AMODE BIT.
         BSM   0,R15             GET INTO 31-BIT ADDRESSING MODE.
         DROP  R12,R11           IMPXA.
         SPACE 2
TSOFIELD DC    F'0'              ADDRESS OF TSO FLAG.
EXTRTSO  EXTRACT TSOFIELD,'S',FIELDS=(TSO),MF=L
GETTERM  GTTERM PRMSZE=TERMSIZE,ALTSZE=TRMALTSZ,ATTRIB=TERMATTR,       +
               TERMID=3,MF=L
         SPACE 2
NOTXAMSG DC    C'I-MON REQUIRES MVS/ESA - QUOTE OS CODE "'
OSCODE   DC    C'??"'
         DC    C' TO SUPPLIER FOR CORRECT VERSION'
NOTXALEN EQU   *-NOTXAMSG
NTVDUMSG DC    C'I-MON IS A FULL-SCREEN MONITOR REQUIRING A 3270-TYPE T+
               SO TERMINAL'
         LTORG
         DS    0H
         SPACE
         USING FINDCVT,R15       INCREASE MAINLINE BASE REGISTER RANGE.
FINDCVT  L     R2,CVTPTR(,0)          --> CVT
         L     R9,CVTJESCT-CVT(,R2)   --> JESCT
         L     R9,JESEDT-JESCT(,R9)   --> EDT
         L     R11,64(,R13)           --> TGA
         L     R8,CVTRCEP-CVT(,R2)    --> RCE
         L     R7,CVTASMVT-CVT(,R2)   --> ASMVT
         L     R10,4(,R7)             --> SART (PRE-Z/OS - WAS ASMSART)
         L     R7,ASMPART-ASMVT(,R7)  --> PART
*        L     R3,CVTABEND-CVT(,R2)   --> SCVT
         L     R6,CVTOPCTP-CVT(,R2)   --> RMCT
         L     R3,RMCTCMCT-RMCT(,R6)  --> CMCT
*        L     R1,RMCTMCT-RMCT(,R6)   --> MCT
         L     R1,RMCTRCT-RMCT(,R6)   --> RCT
         L     R4,RMCTCCT-RMCT(,R6)   --> CCT
         L     R5,CVTSMCA-CVT(,R2)    --> SMCA
         L     R2,CVTASVT-CVT(,R2)    --> ASVT
         STM   R1,R12,RCTADDR    SAVE ADDRESSES.
         L     R10,INITADDR      LOAD INITIALIZATION PHASE ENTRY POINT.
         LA    R12,EXAMINEC      ESTABLISH MAINLINE BASE REGISTER.
         BR    R10               CALL INITIALIZATION PHASE.
         SPACE
         DROP  R15               FINDCVT.
         SPACE
         COPY  IMPCM1            ADDRESSABLE COMMON ROUTINES.
         TITLE 'TERMINATION AND EXIT'
EODAD    DS    0H
         L     R5,MSTRALET       LOAD ALET TO *MASTER* IF USED.
         BAS   R3,FREEALET       DELETE IT.
         L     R5,COMMALET       LOAD ALET TO CONSOLE IF USED.
         BAS   R3,FREEALET       DELETE IT.
         ICM   R1,15,MCFLPREV    IMCFLIST AREA TO FREE?
         BZ    CLOSEXCP          NO.
         L     R0,0(,R1)         YES, GET SIZE OF RETURNED AREA.
         FREEMAIN RU,LV=(0),A=(1),SP=130
         ST    R15,MCFLPREV      RESET AREA POINTER.
CLOSEXCP LA    R15,12            SET THE ENTRY CODE OF TWELVE.
         L     R11,EXCPIOAD      GET EXCP I/O ROUTINE ENTRY POINT.
         BASSM R14,R11           CLOSE THE EXCP FILE AND SET AMODE=24.
         LNR   R1,R12            MAKE REGISTER 1 NEGATIVE.
         L     R9,PRNTADDR       GET PRINT SUBROUTINE ADDRESS.
         BASR  R14,R9            CLOSE IMPLOG.
         TM    MODESW,OPNR       WAS IMREPORT USED?
         BZ    ENDEXIT           NO.
         L     R9,WINMANAD       GET WINDOW MANAGER ADDRESS.
         USING WNDWMNGR,R9
         CLOSE (IMREPORT)
         DROP  R9                WNDWMNGR.
ENDEXIT  LM    R0,R1,GMREGS      RESTORE REGISTERS FOR FREEMAIN.
         L     R13,SAVE+4        LOAD CALLER'S SAVE AREA POINTER.
         FREEMAIN RU,LV=(0),A=(1),SP=SUBPOOL
         TM    MODESW3,TSU       TIME SHARING USER?
         BZ    TERMTASK          NO.
         STAX  ,                 CANCEL THE ATTENTION EXIT.
******** STTMPMD OFF               ALLOW SESSION MANAGER.
         STLINENO LINE=1,MODE=OFF  TURN OFF VTAM FULL SCREEN MODE.
         TCLEARQ INPUT           CLEAR UNWANTED INPUT.
TERMTASK RETURN (14,12),RC=0     AND AWAY WE GO....
         SPACE 2
FREEALET DS    0H                DELETE ALET FROM DU-AL ROUTINE.
         LTR   R5,R5             ANY ALET TO FREE?
         BZR   R3                NO, SO JUST RETURN WITHOUT ACTION.
         ALESERV DELETE,ALET=(5),CHKEAX=NO,MF=(E,ALESERVL)
         BR    R3                ALL DONE SO RETURN.
         TITLE 'SYSTEM SUMMARY LINE SUBROUTINE'
SYSUMMRY STM   R14,R12,SAVE+12   SAVE GENERAL REGISTER VALUES.
         L     R8,CRNTOPTN
         LH    R6,12(,R8)        GET THE WINDOW LINE LENGTH.
         LTR   R6,R6             WINDOWING USED FOR THIS OPTION?
         BNZ   SUMMLLOK          YES, LINE LENGTH NOW KNOWN.
         LA    R6,LL             NO, GET THE STANDARD LINE LENGTH.
SUMMLLOK CLI   0(R8),C'A'        CURRENTLY IN OPTION "A"?
         BE    SUMONONE          YES, LET OPTION "A" HANDLE THIS.
         LA    R7,BUFFER         NO, POINT TO USUAL DETAIL BUFFER.
         CR    R7,R2             SYSTEM SUMMARY ON FIRST LINE?
         BE    SUMONONE          YES, JUST FORMAT IT.
         LR    R7,R2             NO, POINT TO THE CURRENT LINE.
         SR    R7,R6             POINT TO THE PREVIOUS LINE.
         CLI   2(R7),0           ANY HIGHLIGHTING THERE ALREADY?
         BNE   SUMONONE          YES, DO NOT ALTER IT.
         MVI   2(R7),X'F4'       NO, USE UNDERSCORE ON PREVIOUS LINE.
         MVI   5(R7),X'C4'       SUPPLY UNDERLINE ALSO.         (F9526)
SUMONONE L     R7,RCTADDR        POINT TO THE RCT.
         USING RCT,R7
         TM    OSLEVEL+5,CVTH7720 Z/OS 1.7 OR LATER?
         BO    SUM17AFC          YES, SKIP PDT.
         SLR   R9,R9
         ICM   R9,3,60(R7)       AVAILABLE FRAME COUNT AVERAGE.
         CVD   R9,WORK           RCVAFQA H/W --> F/W IN Z/OS 1.7.
         OI    WORK+7,15
         UNPK  SUMMVARS+16(5),WORK
         B     SUMAFCOK
SUM17AFC L     R9,RCVAFQA
         CVD   R9,WORK           AVAILABLE FRAME COUNT AVERAGE.
         OI    WORK+7,15
         UNPK  SUMMVARS+12(9),WORK
         MVC   SUMMVARS+7(5),=C'AFCA='
         SR    R9,R9
SUMAFCOK ICM   R9,3,RCVUICA      UNREFERENCED INTERVAL COUNT AVERAGE.
         CVD   R9,WORK
         OI    WORK+7,15
         UNPK  SUMMVARS+28(5),WORK
         ICM   R9,3,RCVCPUA      CPU AVERAGE.
         LA    R9,8(,R9)         ROUND TO NEAREST WHOLE PERCENT.
         SRL   R9,4              THROW AWAY FRACTIONAL PART.
         CVD   R9,WORK
         OI    WORK+7,15
         UNPK  SUMMVARS+39(3),WORK
         ICM   R9,3,62(R7)       ASM QUEUE LENGTH AVERAGE.
         TM    OSLEVEL+1,CVTH5510 SP5 OR LATER?
         BZ    *+8               NO.
         ICM   R9,3,RCVNSQLA     ASM QUEUE LENGTH AVERAGE.
         CVD   R9,WORK
         OI    WORK+7,15
         UNPK  SUMMVARS+51(5),WORK
         ICM   R9,3,68(R7)       TOTAL PAGING RATE.
         TM    OSLEVEL+3,CVTH7708 Z/OS 1.5 OR LATER?
         BO    *+8               YES, SKIP PDT.
         L     R9,RCVPAGRT       TOTAL PAGING RATE.
         CVD   R9,WORK
         OI    WORK+7,15
         UNPK  SUMMVARS+63(5),WORK
SUMDPROK MVI   LL-80(R2),C' '    CLEAR LINE FOR WIDE SCREEN.
         EX    R6,SYSUMCLR
         MVC   0(LL,R2),SYSLINE  SHOW SYSTEM VALUE LINE.
         TR    LL-79(79,R2),XLATETBL    ENSURE NO UNPRINTABLES.
         LA    R0,LL             GET THE "STANDARD" LINE LENGTH.
         CH    R0,12(,R8)        LEFT/RIGHT WINDOW SCROLLING ACTIVE?
         BNL   SUMMSCRL          NO.
         MVI   0(R2),X'FF'       SET FIXED FLAG - NON-SCROLLABLE LINE.
SUMMSCRL ALR   R2,R6             ADJUST BUFFER POINTER.
         ST    R2,SAVE+28        UPDATE R2 SAVE SLOT.
         LM    R14,R12,SAVE+12   RESTORE REGISTERS.
         BR    R1                RETURN TO CALLER.
         DROP  R7                RCT.
SYSUMCLR MVC   LL-79(0,R2),LL-80(R2)            <<< EXECUTED >>>
         TITLE 'MAINLINE - VARIABLES AND CONSTANTS'
CRNTOPTN DC    A(0)             CURRENT OPTION ENTRY POINTER.
CRNTGLOS DC    A(0)             CURRENT GLOSSARY VECTOR ORIGIN.
RCTADDR  DC    A(0)
ASVTADDR DC    A(0)
CMCTADDR DC    A(0)
CCTADDR  DC    A(0)
SMCAADDR DC    A(0)
RMCTADDR DC    A(0)
PARTADDR DC    A(0)
RCEADDR  DC    A(0)
EDTADDR  DC    A(0)
SARTADDR DC    A(0)
SPARADDR DC    A(0)
ATHTBADR DC    A(0)             OPTION AUTHORIZATION TABLE ADDRESS.
TERMSIZE DC    H'0'
TRMALTSZ DC    H'0'
TERMATTR DC    F'0'
OSLEVEL  DC    XL16'00'         MVS/ESA FEATURE FLAGS FROM CVTOSLVL.
HEX      DC    C'0123456789ABCDEF'
STARTING DC    C'STARTING'
UNKNOWN  DC    C'?UNKNOWN'
ENDED    DC    C' *ENDED*'
TGETLEN  DC    H'0'
GLOSSPG# DC    H'0'
ONE      DC    H'1'
EIGHTY   DC    H'80'
TEN      DC    F'10'
AHUNDRED DC    0F'100'
         DC    H'0'
HUNDRED  DC    H'100'
ONEGRAND DC    F'1000'
TENGRAND DC    F'10000'
FFFF     DC    F'65535'
FRAME#   DC    F'0'             TOTAL NUMBER OF REAL PAGES (FRAMES).
GMREGS   EQU   *,8              GETMAIN REGISTERS SAVE AREA.
GMREG0   DC    F'0'             SIZE OF GOTAREA.
GMREG1   DC    A(0)             ADDRESS OF GOTAREA.
UDXTREGS EQU   *,8              DATA SET EXTENT TABLE FREEMAIN VALUES.
UDXTBSIZ DC    F'0'             SIZE OF DATA SET EXTENT TABLE.
UDXTABLE DC    A(0)             ADDRESS OF DATA SET EXTENT TABLE.
IMCOMADR DC    V(IMPXACOM)      ADDRESS OF IMP/XA COMMON AREA.
IMGLSADR DC    A(0)             ADDRESS OF IMP/XA GLOSSARY MODULE.
VTCRDADR DC    V(IMVTOCRD)      ADDRESS OF VTOC READING ROUTINE.
SAVRETAD DC    A(0)             SAVE AREA FOR RETURN ADDRESS.
DEVTBL   DC    A(0)             ADDRESS OF I/O DEVICE TABLE.
JOBTBL   DC    A(0)             ADDRESS OF ADDRESS SPACE TABLE.
PRNTADDR DC    A(SCRNPRNT)      ADDRESS OF SCREEN PRINT SUBROUTINE.
OPLKUPAD DC    A(OPLOOKUP)      ADDRESS OF OPTION LOOK-UP TABLE.
INITADDR DC    A(INITIAL)       ADDRESS OF INITIALIZATION SUBROUTINE.
PRFCHKAD DC    A(PREFCHEK)      ADDRESS OF PREFIX CHECK SUBROUTINE.
STGCHKAD DC    A(STORCHEK)      ADDRESS OF STORAGE CHECK SUBROUTINE.
DTCONVAD DC    A(DATECONV)      ADDRESS OF DATE CONVERSION SUBROUTINE.
EXCPIOAD DC    A(EXCP3270)      ADDRESS OF EXCP I/O SUBROUTINE.
GETVLDAD DC    A(GETVLD)        ADDRESS OF SMS VLD SUBROUTINE.
WINMANAD DC    A(WNDWMNGR)      ADDRESS OF WINDOW MANAGER SUBROUTINE.
SCRNIOAD DC    A(SCRNIO)        ADDRESS OF SCREEN I/O SUBROUTINE.
PAGEND   DC    A(0)             ADDRESS OF END OF SCREEN BUFFER.
CREIOTAD DC    A(CREIOTBL)      ADDRESS OF I/O TABLE CREATION ROUTINE.
IOSECMB@ DC    A(IOSECMB$)      ADDRESS OF IOSCMB ROUTINE.
CNFGTKAD DC    A(CNFGTOKN)      ADDRESS OF I/O CONFIGURATION TOKEN.
MCFLPREV DC    A(0)             ADDRESS OF PREVIOUS IMCFLIST AREA.
WORKSIZE DC    A(WORKLEN)       SIZE OF FIXED DYNAMIC AREA.
SMSWKLEN EQU   256              SIZE OF SMS SUBSYS INTERFACE WORK AREA.
DELAY    DC    F'100'           CENTISEC DELAY BETWEEN STACKED ENTERS.
STCKCNVL STCKCONV MF=L          PARAMETER LIST FOR STCKCONV.
         ORG   STCKCNVL
         UCBLOOK MF=(L,UCBLKLS) PARAMETER LIST FOR UCBLOOK.
         ORG   STCKCNVL
         IOSCMB MF=(L,IOSCMBL)  PARAMETER LIST FOR IOSCMB.
         ORG
         DC    0F
OLDSIZE  EQU   *,8              OLD SCREEN SIZE IF NOT 80-COLUMN MODE.
OLDLINES DC    F'0'             ZERO OR NUMBER OF LINES UPON ENTRY.
OLDCOLS  DC    F'0'             ZERO OR NUMBER OF COLUMNS UPON ENTRY.
LINES    DC    F'0'             NUMBER OF LINES ON SCREEN.
COLUMNS  DC    F'0'             NUMBER OF COLUMNS ON SCREEN.
MSTRALET DC    F'0'             ALET FOR AR ACCESS TO *MASTER*.
COMMALET DC    F'0'             ALET FOR AR ACCESS TO CONSOLE.
SCRLAMT  DC    F'0'             VALUE OF NUMERIC PRIMARY INPUT.
JBTARGI# DC    F'0'             TARGET ASID INSTANCE NUMBER.
JPRFXLEN DC    H'0'             COMPARE LENGTH FOR JOB NAME PREFIX.
REFRESH# DC    H'0'             NUMBER OF STACKED ENTERS REMAINING.
ENDDEPTH DC    H'0'             ENDS REQUIRED TO END OPTION.
CLR      DC    X'27F5C113'      ESCAPE, VTAM ERASE/WRITE, NULL WCC, IC.
SBLST    DC    X'7D40C11140C1'  READ HEADER FOR SUBCOMMAND LIST.
         DC    C'?"'            CHARACTER STRING FOR SUBCOMMAND LIST.
SUBPOOL  EQU   23               SUBPOOL ID FOR IMPXA GETMAINS.
PARTELEN DC    H'96'            SIZE OF PARTE: 64 FOR R1; 96 FOR R2.
JBTARGAS DC    H'0'             TARGET ASID.
OSBITS   DC    X'00'            OS FLAGS FROM CVTDCB.
TPUTFLG  DC    X'03'            FLAG BYTE FOR FULL SCREEN TPUTS.
TGETFLG  DC    X'81'            FLAG BYTE FOR TGETS BY SCREENIO.
TGETFLGE EQU   X'80'            FLAG BYTE FOR EDIT TGETS.
TGETFLGA EQU   X'81'            FLAG BYTE FOR ASIS TGETS.
TGETFLGN EQU   X'91'            FLAG BYTE FOR ASIS NOWAIT TGETS.
COPYATR1 DC    X'00'            COPIED FROM PSCBATR1.
OPTNATR  DC    X'00'            OPTION AUTHORIZATION CHECK WORK AREA.
MODESW   DC    X'00'            DISPLAY MODE STATUS FLAGS.
OPNR     EQU   X'80'            IMREPORT FILE OPENED.
INMD     EQU   X'40'            SUPPRESS DISPLAY OF DRY INITIATORS.
ALTS     EQU   X'20'            ALTERNATE SCREEN SIZE REQUIRED.
ADR14    EQU   X'10'            14-BIT SCREEN ADDRESSING.
TRIP     EQU   X'08'            LOGO IS IN TRIPLE-PLANE SYMBOL SET.
VCTR     EQU   X'04'            NATIVE 3270 VECTOR GRAPHICS AVAILABLE.
OPNF     EQU   X'02'            IMPLOG FILE OPENED.
BTMP     EQU   X'01'            NEED TO CLEAR BITMAP FOR NEXT SCREEN.
MODESW2  DC    X'00'            MORE STATUS FLAGS.
ATTN     EQU   X'80'            ATTENTION INTERRUPT FLAG.
AUTH     EQU   X'40'            APF AUTHORIZATION FLAG.
LFLG     EQU   X'20'            GOOD-LOCAL-PAGE-DATA-SET FLAG.
CLNF     EQU   X'10'            CLEANUP-REQ'D-BEFORE-OPTION-EXIT FLAG.
XFLG     EQU   X'08'            REQUEST-OPTION-EXIT FLAG.
COL4     EQU   X'04'            FOUR-COLOUR-MODE FLAG.
COL2     EQU   X'02'            TWO-COLOUR-MODE (MONOCHROME) FLAG.
COL1     EQU   X'01'            SILLINESS FLAG.
KEY0     EQU   X'01'            CURRENTLY IN KEY ZERO.
MODESW3  DC    X'00'            STILL MORE STATUS FLAGS.
TSU      EQU   X'80'            TIME SHARING USER FLAG.
XCPO     EQU   X'40'            EXCP DCB OPEN FLAG.
AID      EQU   X'20'            ATTENTION-IDENTIFIER-SET FLAG.
EWA      EQU   X'10'            ERASE/WRITE-ALTERNATE-TO-BE-USED FLAG.
*NOWT    EQU   X'08'            DO NOT WAIT FOR TERMINAL INPUT.
*IPND    EQU   X'04'            INPUT FROM TERMINAL IS PENDING.
*FAIL    EQU   X'02'            IMP MAIN TASK ESTAE ENTERED.
*MAGIC   EQU   X'01'            APF AUTHORITY OBTAINED VIA "MAGIC" SVC.
MODESW4  DC    X'00'            FURTHER DIFFERENT OTHER STATUS FLAGS.
ECMB     EQU   X'80'            ECMB CONTROL BLOCKS BEING USED.
ALTO     EQU   X'40'            ALTS WAS SET FOR PREVIOUS SCREEN.
*        EQU   X'20'            SPARE.
*        EQU   X'10'            SPARE.
*        EQU   X'08'            SPARE.
*        EQU   X'04'            SPARE.
*        EQU   X'02'            SPARE.
*        EQU   X'01'            SPARE.
GRAFLAGS DC    X'00'            EXTENDED DATA STREAM SUPPORT FLAGS.
DIDQRY   EQU   X'80'            QUERY WAS ISSUED; CORRECT AID RETURNED.
COLR     EQU   X'40'            SEVEN-COLOUR SUPPORT VERIFIED BY QUERY.
HLIT     EQU   X'20'            HIGHLIGHTING SUPPORT VERIFIED BY QUERY.
GE       EQU   X'10'            GE SUPPORT VERIFIED BY QUERY.
LOGO     EQU   X'08'            EXTENDED LOGO CHARACTERS ARE LOADED.
GEOK     EQU   X'04'            USE GRAPHIC ESCAPES IN DATA STREAM.
CMP      EQU   X'02'            NON-FUJITSU SUB-FIELD RETURNED.
PA2RTN   EQU   X'01'            RETURN PA2 TO CURRENT OPTION.
SACODE   DC    XL1'28'          IBM/FUJITSU TERMINAL TYPE FLAG.
CHARSIZE DC    X'0000'          CHARACTER MATRIX WIDTH AND DEPTH.
VIPMODE  DC    CL1'*'           OPERATOR COMMAND AUTHORITY FLAG.
STARS    DC    C'********'      CAN BE EXTENDED IF NECESSARY.
BLANKS   DC    CL80' '          CAN BE EXTENDED IF NECESSARY.
INBUFF   DC    XL6'7D4040110000' TGET DATA HEADER.
INCHARS  DC    CL80' '          MAXIMUM INPUT IS 80 BYTES OF TEXT.
INBUFLEN EQU   *-INBUFF
VTOCALOC DYNALC SUFFIX=VA,RETDS=YES,RETDD=YES,                         +
               VOLSER=VOLSER,UNIT=SYSALLDA,STATUS=OLD
VTOCFREE DYNALC SUFFIX=VF,DEALLOC=YES,DDNAME=VTOCFILE
USAGEHEX DC    X'0D031D0003161728190907082300171928031916062300'
         DC    X'220927001723280B001323040B003139383620323032300000'
SYSLINE  DC    X'2841001BF4C82842F2'
SUMMVARS DC    CL79'           AFCA=00000  UICA=0000  CPUA=000%  ASMQA=+
               00000  PGRT=00000           '
         COPY  IMPCM2            ADDRESSABLE COMMON DATA.
         TITLE 'DONTSWAP/OKSWAP SYSEVENT ROUTINES'
DONTSWAP DS    0H                BECOME TEMPORARILY NON-SWAPPABLE.
         TM    MODESW3,TSU       TIME SHARING USER?
         BZR   R14               NO, DO NOTHING.
         L     R1,PSAAOLD        POINT TO THE CURRENT ASCB.
         L     R1,ASOUCB(,R1)    POINT TO THE CURRENT OUCB.
         USING OUCB,R1
         TM    OUCBSFL,OUCBNSW   ALREADY NON-SWAPPABLE?
         BOR   R14               YES, SO DON'T ISSUE NEEDLESS SYSEVENT.
         DROP  R1                OUCB.
         SYSEVENT DONTSWAP       NO, BECOME NON-SWAPPABLE.
         BR    R14               NOW NON-SWAPPABLE.
         SPACE 2
OKAYSWAP DS    0H                REVERT TO BEING SWAPPABLE.
         TM    MODESW3,TSU       TIME SHARING USER?
         BZR   R14               NO, DO NOTHING.
         L     R1,RMCTADDR       POINT TO THE RMCT.
         USING RMCT,R1
         L     R1,RMCTMCT        POINT TO THE MCT.
         DROP  R1                RMCT.
         USING MCT,R1
*                                SQA SHORTAGE?
         TM    MCTSFLGS,MCTSQA1+MCTSQA2
         BNZR  R14               YES, STAY NON-SWAPPABLE.
*                                AUXILIARY STORAGE SHORTAGE?
         TM    MCTOFLGS,MCTASM1+MCTASM2
         BNZR  R14               YES, STAY NON-SWAPPABLE.
*                                REAL/PAGEABLE STORAGE SHORTAGE?
         TM    MCTCFLGS,MCTRLSHT+MCTB16SH+MCTDRSHT+MCTB2GSH
         BNZR  R14               YES, STAY NON-SWAPPABLE.
         DROP  R1                MCT.
         SYSEVENT OKSWAP         NO, BECOME SWAPPABLE.
         BR    R14               NOW NON-SWAPPABLE.
         SPACE 2
*                                MAINLINE BASE REGISTER DOES NOT
*                                HAVE TO REACH PAST LABEL STRM3270.
         COPY  IMPCM3            3270 DATA STREAM GENERATOR.
TRMNETID DC    0D                GTTERM TERMID DATA.
GTTRMID  DC    CL8'DOMIP6'       REQUEST 310-BYTE RETURN DATA.
GTNETID  DC    CL8' '            NETWORK ID.
GTIPADDR DC    XL16'00'          IP ADDRESS.
GTIPPORT DC    XL2'00'           PORT NUMBER.
GTFLAG1  DC    X'00'             FLAGS.
*        EQU   X'80'             TRUNCATED DOMAIN NAME.
GTIPV6   EQU   X'40'             IPV6 ADDRESS IN GTIPADDR.
GTIPV4   EQU   X'20'             IPV4 ADDRESS IN GTIPADDR.
*        EQU   X'10'             TRUNCATED ZONE ID.
GTFLAG2  DC    X'00'             FLAGS.
GTDOMNL  DC    H'0'              DOMAIN NAME LENGTH.
GTDOMN   DC    XL255'00'         DOMAIN NAME.
GTZONEL  DC    XL1'00'           ZONE ID LENGTH.
GTZONE   DC    XL16'00'          ZONE ID.
         TITLE 'SCREEN I/O MANAGER'
         USING SCRNIO,R8
SCRNIO   LTR   R0,R0             CHECK IF I/O OR PARSING REQUESTED.
         BM    TRYPFKEY          DO NO I/O, JUST PARSE SUPPLIED INPUT.
         BZ    SCRNTGET          ZERO DISPLAY DATA SO JUST GET INPUT.
SCRNSHOW STM   R0,R1,SCRNPA2A    YES, SAVE VALUES IN CASE OF PA2.
         LA    R9,HOME           POINT TO DETAIL SCREEN BUFFER.
         CR    R1,R9             IS THIS A DETAIL SCREEN DISPLAY?
         BNE   SHOWSCRN          NO, SHOW IT.
         STM   R0,R1,SCRNPA3A    YES, SAVE VALUES IN CASE OF PA3.
SHOWSCRN BAS   R2,STRM3270       CALL I/O DATA STREAM GENERATOR.
         L     R8,SCRNIOAD       RESTORE BASE REGISTER.
DONETPUT ST    R15,SAVE+16       SAVE TPUT RETURN CODE IN CASE NO TGET.
         CLI   DOWNCNTR,C'0'     ARE WE IN AUTO REFRESH MODE?
         BL    SCRNTGET          NO, GET A COMMAND FROM THE USER.
         BAS   R9,WAITER         PERFORM DELAY AND DECREMENT COUNTER.
         MVC   INCHARS,BLANKS    REQUEST DISPLAY CONTINUE.
SCRNEXIT LM    R14,R12,SAVE+12   RESTORE REGISTERS.
         BR    R14               CONTINUE WITH DISPLAYS.
SCRNTGET NI    MODESW2,255-ATTN  RESET ATTENTION FLAG.
         XC    INBUFF,INBUFF     CLEAR PREVIOUS READ HEADER.
         MVC   INCHARS,BLANKS    CLEAR PREVIOUS INPUT TEXT.
         XC    SCRLAMT,SCRLAMT   RESET PRIMARY NUMERIC INPUT VALUE.
         TM    MODESW3,TSU       TIME SHARING USER?
         BO    TGTTSOOK          YES, USE TGET FOR INPUT.
         LA    R15,8             NO, SET ENTRY CODE OF EIGHT.
         L     R11,EXCPIOAD      GET EXCP I/O ROUTINE ENTRY POINT.
         BASSM R14,R11           GET THE EXCP USER'S REQUEST.
         L     R8,SCRNIOAD       RESTORE BASE REGISTER.
         B     TREADCMN          BRANCH TO COMMON CODE.
TGTTSOOK LA    R1,INBUFF         LOAD ADDRESS OF INPUT BUFFER.
         LA    R0,INBUFLEN       LOAD LENGTH OF BUFFER.
         ICM   R1,8,TGETFLG      LOAD TGET TYPE FLAG BYTE.
         L     R15,CRNTOPTN      POINT TO THE CURRENT LOOK-UP ENTRY.
         CLI   0(R15),C'D'       OPTION "D"?
         BE    TGTFLGOK          YES, LET UCB SAMPLING CONTINUE.
         CLI   0(R15),C'G'       OPTION "G"?
         BE    TGTFLGOK          YES, LET ASID SAMPLING CONTINUE.
         ICM   R15,3,GLOSSPG#    SHOWING A GLOSSARY SCREEN?
         BZ    TGTFLGOK          NO, PROCEED WITH TGET.
         LA    R15,TGETFLGA      YES, GET TGET ASIS WAIT FLAG BYTE.
         SLL   R15,24            PROMOTE IT.
         SLL   R1,8              CLEAR OUT THE EXISTING FLAGS.
         SRL   R1,8
         OR    R1,R15            GATE NEW FLAGS INTO CORRECT REGISTER.
TGTFLGOK TGET  (1),(0),R         READ THE INPUT DATA FROM USER.
TREADCMN ST    R15,SAVE+16       SAVE TGET RETURN CODE.
         STH   R1,TGETLEN        SAVE LENGTH OF INPUT STREAM.
         TM    SAVE+19,X'03'     UNEXPECTED RETURN CODE?
         BNZ   EODAD             YES, NOT A MULTIPLE OF FOUR.
         CHI   R15,28            KNOWN RETURN CODE VALUE?
         BH    EODAD             NO, TERMINATE IMP.
         B     TGETBTAB(R15)     YES, PROCESS IT.
TGETBTAB DS    0H                TGET BRANCH TABLE.
         B     TINQOKAY     0 00 PROCESS DATA - SHOULD NOT HAPPEN.
         B     SCRNEXIT     4 04 RETURN TO CALLER - NO DATA.
         B     EODAD        8 08 TERMINATE IMP - ATTENTION INTERRUPT.
         B     DOCLEARQ    12 0C FLUSH EXTRA DATA - SHOULD NOT HAPPEN.
         B     EODAD       16 10 TERMINATE IMP - INVALID PARAMETERS.
         B     EODAD       20 14 TERMINATE IMP - TERMINAL LOGGED OFF.
         B     TINQOKAY    24 18 PROCESS DATA - NOEDIT MODE.
DOCLEARQ DS    0H          28 1C FLUSH EXTRA DATA - NOEDIT MODE.
         TCLEARQ INPUT           FLUSH EXCESS INPUT DATA.
TINQOKAY TM    MODESW2,ATTN      ATTENTION INTERRUPT?
         BO    EODAD             YES, EXIT AS REQUESTED.
         CLI   INBUFF,X'88'      QUERY RESPONSE?  (I HOPE NOT.)
         BE    SCRNTGET          YES, GET ANOTHER INPUT REQUEST.
         CLI   INBUFF,X'6D'      CLEAR?  (SHOULD NEVER GET ONE HERE.)
         BE    SCRNEXIT          YES, LET CURRENT OPTION HANDLE IT.
         CLI   INBUFF,X'6C'      PA1?  (SHOULD NEVER GET ONE HERE.)
         BE    SCRNEXIT          YES, LET CURRENT OPTION HANDLE IT.
         CLI   INBUFF,X'6B'      PA3?
         BNE   TRYRESHO          NO, CHECK FOR RESHOW LATEST SCREEN.
         LM    R0,R1,SCRNPA3A    YES, RESHOW LATEST DETAIL SCREEN.
         LTR   R0,R0             HAVE WE HAD A PREVIOUS DETAIL SCREEN?
         BZ    ISRESHOW          NO, EQUIVALENT TO ORDINARY RESHOW.
         B     ALTOCHEK          YES, RESHOW LAST DETAIL SCREEN IMAGE.
TRYRESHO CLI   INBUFF,X'6E'      PA2?
         BNE   TRYPFKEY          NO, CHECK FOR A PROGRAM FUNCTION KEY.
         TM    GRAFLAGS,PA2RTN   YES, RETURN PA2 TO CURRENT OPTION?
         BO    SCRNEXIT          YES, SO DO IT.
         OI    MODESW,BTMP       ENSURE SCREEN SIZE IS PUT IN SYNC.
ISRESHOW LM    R0,R1,SCRNPA2A    RESTORE TPUT REGISTERS.
ALTOCHEK TM    MODESW4,ALTO      WAS ALTS SET FOR THIS SCREEN?
         BNO   *+8               NO.
         OI    MODESW,ALTS       YES, SET IT AGAIN.
         LTR   R0,R0             ANY DATA TO SHOW?
         BP    SHOWSCRN          YES, REDRIVE TERMINAL PUT.
         B     SCRNEXIT          NO, EXIT TO CALLER FOR MENU DISPLAY.
TRYPFKEY L     R15,=A(SCNINPUT)  GET DATA STREAM EDIT ROUTINE EP.
         NI    HOME,255-X'04'    RESET BELL IN WCC.
         BASR  R14,R15           INVOKE IT.
         NI    INBUFF,X'0F'      GET PFK VALUE IN 1 TO 12 RANGE.
         CLI   INBUFF,6          PF6/18?
         BE    EXAMRTNK          YES, RETURN TO MAINLINE.
         CLI   INBUFF,9          PF9/21?
         BE    EXAMRTNK          YES, RETURN TO MAINLINE.
         CLI   INBUFF,12         PF12/24?
         BE    EXAMRTNX          YES, RETURN TO MAINLINE.
         CLI   INBUFF,4          PF4/16?
         BNE   GLOBLSCN          NO, CHECK FOR GLOBAL SUBCOMMANDS.
DOPRINTX SLR   R1,R1             YES, PRINT SCREEN IMAGE.
         L     R9,PRNTADDR       LOAD SUBROUTINE ENTRY POINT ADDRESS.
         BASR  R14,R9            CALL HARDCOPY SUBROUTINE.
         B     SHOWSCRN          SHOW VERIFICATION AND GET NEXT INPUT.
GLOBLSCN CLI   INCHARS,C'\'      COLOUR MODE CHANGE?
         BE    BAKSLASH          YES.
         CLI   INCHARS,C'='      REQUESTING MAINLINE OPTION?
         BE    ISEQUALS          YES, PROCESS IT.
         ICM   R0,3,GLOSSPG#     CURRENTLY IN TUTORIAL?
         BNZ   CALLTUTE          YES, INVOKE TUTORIAL HANDLER.
         CLI   INBUFF,1          PF1/13?
         BNE   NOTTUTOR          NO, CHECK FOR OTHER PF KEYS.
         L     R15,ATHTBADR      POINT TO CONFIGURATION FLAGS.
         TM    255(R15),X'10'    JAPANESE DISPLAY?
         BO    CALLTUTE          YES, NEVER PERFORM FLAG BYTE DISPLAY.
         CLC   INCHARS(2),XLATETBL+1 YES, BUT WITH TWO PERIODS?
         BNE   CALLTUTE          NO, NOT A FLAG BYTE DISPLAY REQUEST.
         L     R9,INITADDR       YES, GET ADDRESSABILITY TO SCRNHDR.
         USING INITIAL,R9
         MVC   INCHARS,SCRNHDR
         DROP  R9
         MVC   INCHARS+19(20),=CL20'OPTION ? FLAGS=X''??'''
         L     R9,CRNTOPTN       POINT TO CURRENT OPTION ENTRY.
         MVC   INCHARS+26(1),0(R9)   LOAD OPTION NAME.
         UNPK  INCHARS+36(3),1(2,R9)
         TR    INCHARS+36(2),HEX-C'0'
         MVI   INCHARS+38,C''''
         LA    R1,INCHARS
         LA    R0,L'INCHARS      DISPLAY OPTION FLAG BYTE.
         B     SHOWSCRN
CALLTUTE L     R9,=A(TUTORIAL)   GET TUTORIAL HANDLER ENTRY POINT.
         BR    R9
EXAMRTNX TM    MODESW2,CLNF      NEED TO RETURN FOR RESOURCE CLEAN-UP?
         BZ    RETURNX           NO, GO TO MAINLINE OPTION SELECTION.
         OI    MODESW2,XFLG      YES, INDICATE SUBROUTINE EXIT NEEDED.
         LM    R14,R12,SAVE+12   RESTORE REGISTERS.
         BASR  R9,R14            MAKE SUBROUTINE CLEANUP ITS OWN MESS.
         NI    MODESW2,255-CLNF-XFLG  SUBRTN RESOURCES NOW CLEANED UP.
RETURNX  B     EXAMINEC          PROCESS COMMAND IN MAINLINE.
BAKSLASH XI    MODESW2,COL2      TOGGLE BY DEFAULT.
         CLI   INCHARS+1,C'0'    NUMBER OF COLOURS SPECIFIED?
         BL    DOORSHOW          NO.
         BH    GEON              YES, TRY TO TURN ON GE DATA.
         NI    GRAFLAGS,255-GEOK      SUPPRESS APL DATA.
         B     GEDONE
GEON     TM    GRAFLAGS,GE       GE SUPPORT VERIFIED?
         BZ    GEDONE            NO.
         OI    GRAFLAGS,GEOK     YES, ENABLE APL DATA.
GEDONE   CLI   INCHARS+1,C'4'    YES, FOUR-COLOUR MODE?
         BL    SUMCOLOR          NO, 0, 1, 2 OR 3 (F9526 MODE).
         BH    FULCOLOR          NO, 5, 6, 7, 8 OR 9 (FAT CHANCE).
         OI    MODESW2,COL4      YES, TURN ON 4-COLOUR MODE.
         NI    MODESW2,255-COL2  TURN OFF MONOCHROME.
         OI    MODESW,BTMP       REQUEST SCREEN ERASE/RESET.
         B     DOORSHOW    @@@@
         LA    R1,CLR            PREPARE FOR THE
         LA    R0,L'CLR             FULL SCREEN
         ICM   R1,B'1000',TPUTFLG      TPUT TO CLEAR
         TPUT  (1),(0),R                  THE SCREEN.
         B     DOORSHOW          4-COLOUR MODE NOW ENABLED.
SUMCOLOR OI    MODESW2,COL2      TURN ON DUAL INTENSITY MODE.
         NI    MODESW2,255-COL4  TURN OFF 4-COLOUR MODE.
         B     DOORSHOW
FULCOLOR TM    GRAFLAGS,DIDQRY+HLIT
         BM    DOORSHOW          AVOID CERTAIN DATA STREAM ERRORS.
         NI    MODESW2,255-COL2-COL4
         CLI   INCHARS+1,C'9'    EXPLICIT REQUEST TO FORCE APL DATA?
         BNE   DOORSHOW          NO.
         TM    GRAFLAGS,DIDQRY+GE
         BM    DOORSHOW          AVOID CERTAIN DATA STREAM ERRORS.
         OI    GRAFLAGS,GEOK     ERRORS ARE THE USER'S FAULT.
DOORSHOW ICM   R15,3,GLOSSPG#    CURRENTLY IN GLOSSARY?
         BNZ   CALLTUTE          YES, CALL ROUTINE FOR SCREEN RESHOW.
         MVC   INCHARS,BLANKS    CLEAR REQUEST FROM THE INPUT BUFFER.
         CLI   INBUFF,13         PF KEY SELECTED AS WELL?
         BNL   ISRESHOW          NO, RESHOW PREVIOUS SCREEN IMAGE.
NOTTUTOR CLI   INBUFF,3          PF3/15?
         BE    DEPTHTST          YES, END.
         CLI   INCHARS,X'11'     NULL INPUT FOLLOWED BY SBA?
         BNE   PRIMCHEK          NO, CHECK THAT INPUT IS PRIMARY.
NOTPRIME MVC   INBUFF+4(L'INCHARS-1),INCHARS+1
         MVC   INCHARS+L'INCHARS-3(3),BLANKS
PRIMCHEK CLI   INCHARS,C'='      REQUESTING MAINLINE OPTION?
         BNE   PRIMTEST          NO, TEST INPUT FIELD ADDRESS.
ISEQUALS CLC   =X'1104267E40',INBUFF+3 OPTION "J" ON SELF?
         BE    SCRNEXIT          YES, RETURN TO OPTION "J".
         MVC   INCHARS(L'INCHARS-1),INCHARS+1
         MVI   INCHARS+L'INCHARS-1,C' ' LEFT JUSTIFY OPTION REQUEST.
         B     EXAMRTNX          PROCESS OPTION REQUEST.
PRIMTEST CLC   ONE,INBUFF+4      IS DATA FROM PRIMARY INPUT AREA?
         BL    SCRNEXIT          NO, RETURN REPLY TO SUBROUTINE PROMPT.
         CLI   INCHARS,C' '      IS FIRST CHARACTER BLANK?
         BNE   UPDATCHK          NO, LOOK AT IT.
         LH    R0,TGETLEN        GET INPUT DATA STREAM LENGTH.
         AHI   R0,-6             GET INPUT TYPED DATA LENGTH.
         BNP   SCRNEXIT          HANDLE BAD LENGTH.
PRIMBLNK MVC   INCHARS(L'INCHARS-1),INCHARS+1
         MVI   INCHARS+L'INCHARS-1,C' ' YES, PROMOTE SECOND CHARACTER.
         CLI   INCHARS,X'11'     NULL INPUT FOLLOWED BY SBA?
         BE    NOTPRIME          YES, CAN'T BE PRIMARY INPUT.
         CLI   INCHARS,C' '      IS (NEW) FIRST CHARACTER BLANK?
         BNE   UPDATCHK          NO, LOOK AT IT.
         BCT   R0,PRIMBLNK       YES, SUPPRESS IT.
         B     SCRNEXIT          NULL INPUT, START WRITING THE DISPLAY.
UPDATCHK CLI   INCHARS,C'0'      NUMERIC FOR AUTOMATIC UPDATE?
         BL    CMNDSCAN          NO, CONTINUE.
         BAS   R9,STACKER        YES, PROCESS STACK REQUEST.
         B     SCRNEXIT          START WRITING THE DISPLAYS.
DEPTHTST MVC   INBUFF+1(2),ONE   INDICATE CURSOR IS AT HOME.
         SLR   R0,R0             CLEAR FOR INSERT.
         ICM   R0,3,ENDDEPTH     GET ENDS REQUIRED TO LEAVE OPTION.
         BZ    EXAMRTNK          NONE, SO RETURN TO MAINLINE.
         BCTR  R0,R0             DECREMENT.
         STH   R0,ENDDEPTH       UPDATE THE DEPTH COUNTER.
         B     SCRNEXIT          RETURN PF3/15 TO LOCAL OPTION.
EXAMRTNK TM    MODESW2,CLNF      NEED TO RETURN FOR RESOURCE CLEAN-UP?
         BZ    RETURNK           NO, GO AND PROCESS PFK IN MAINLINE.
         OI    MODESW2,XFLG      YES, INDICATE SUBROUTINE EXIT NEEDED.
         LM    R14,R12,SAVE+12   RESTORE REGISTERS.
         BASR  R9,R14            MAKE SUBROUTINE CLEANUP ITS OWN MESS.
         NI    MODESW2,255-CLNF-XFLG  SUBRTN RESOURCES NOW CLEANED UP.
RETURNK  B     EXAMINEK          PROCESS PFK IN MAINLINE.
CMNDSCAN CLI   INBUFF,6          SCROLLING KEY?
         BL    CMNDENTR          NO, PROCESS COMMAND.
         CLI   INBUFF,11         SCROLLING KEY?
         BH    CMNDENTR          NO, PROCESS COMMAND.
         CLI   INCHARS,C'M'      M FOR MAXIMUM REQUESTED?
         BE    CMNDMAX           YES.
         CLI   INCHARS,C'H'      H FOR HALF REQUESTED?
         BE    CMNDHALF          YES.
         B     SCRNEXIT          NO, JUST EXIT.
CMNDMAX  MVI   SCRLAMT,X'7F'     LOAD LARGE NUMBER FOR MAXIMUM.
         B     SCRNEXIT          RETURN TO LOCAL OPTION.
CMNDHALF L     R0,COLUMNS        GET SCREEN WIDTH.
         CLI   INBUFF,9          HORIZONTAL SCROLLING?
         BH    HALFSIZE          YES.
         L     R0,LINES          NO, VERTICAL SCROLLING.
HALFSIZE SRL   R0,1              HALVE THE SCREEN SIZE.
         BCTR  R0,0
         ST    R0,SCRLAMT        REMEMBER THIS AMOUNT.
         B     SCRNEXIT          RETURN TO LOCAL OPTION.
CMNDENTR CLI   INCHARS,C'H'      CHECK IF HARDCOPY REQUESTED.
         BE    DOPRINTX          OUTPUT THE SCREEN IMAGE.
         CLI   INCHARS,C'Z'      CHECK IF TERMINATION REQUESTED.
         BE    EXAMRTNX          RETURN TO MAINLINE FOR TERMINATION.
         CLI   INCHARS,C'Â¢'      CLOSE IMPLOG REQUEST?  (EBCDIC K/B.)
         BE    CLOSELOG          YES, CLOSE IT.
         CLI   INCHARS,C'`'      CLOSE IMPLOG REQUEST?  (ASCII K/B.)
         BE    CLOSELOG          YES, CLOSE IT.
         CLI   INCHARS,C'?'      WAS TUTORIAL REQUESTED?
         BNE   WAITTEST          NO, CHECK FOR WAIT INTERVAL UPDATE.
         MVC   INCHARS(L'INCHARS-1),INCHARS+1  YES, HANDLE SPECIFIC
         MVI   INCHARS+L'INCHARS-1,C' '        PAGE REQUEST.
         B     CALLTUTE          OUTPUT THE SCREEN IMAGE.
WAITTEST CLI   INCHARS,C'W'      REQUESTING WAIT INTERVAL UPDATE?
         BNE   SCRNEXIT          NO, RETURN TO CALLER.
         CLI   INCHARS+1,C'0'    SECOND CHARACTER NUMERIC?
         BL    SCRNEXIT          NO, COULD BE VALID SUBOPTION.
         NI    INCHARS+1,X'0F'   GET NUMERIC PART.
         SLR   R1,R1             CLEAR REGISTER.
         IC    R1,INCHARS+1      GET NUMBER OF SECONDS DELAY REQUESTED.
         CLI   INCHARS+2,C'0'    THIRD CHARACTER NUMERIC?
         BL    GOTDELAY          NO, ALREADY HAVE SPECIFIED SECONDS.
         NI    INCHARS+2,X'0F'   GET NUMERIC PART.
         SLR   R15,R15           CLEAR REGISTER.
         IC    R15,INCHARS+2     GET NUMBER OF SECONDS DELAY REQUESTED.
         MHI   R1,10             CONVERT FIRST DIGIT TO TENS.
         AR    R1,R15            ADD UNITS.
GOTDELAY MHI   R1,100            GET CENTISECONDS.
         ST    R1,DELAY          SAVE NEW DELAY TIME.
         B     ISRESHOW          RESET SCREEN IMAGE.
CLOSELOG LNR   R1,R12            MAKE REGISTER 1 NEGATIVE.
         L     R9,PRNTADDR       GET PRINT SUBROUTINE ADDRESS.
         BASR  R14,R9            CLOSE IMPLOG.
         B     SHOWSCRN          DONE, GET NEXT INPUT.
         DROP  R8                SCRNIO.
         SPACE
         LTORG
         TITLE 'SUBROUTINE LOOK-UP TABLE'
OPLOOKUP DS    0F
         SPACE
         DC    C' '                      SELECTION CODE.
         DC    X'FA'                     AUTH/FEATURE SUPPORT FLAGS.
         DC    H'0'                      RIGHT COLUMNS TO PRESERVE.
         DC    A(MAINMENU)               SUBROUTINE ADDRESS.
         DC    H'0'                      HEADING LINE COUNT.
         DC    H'0'                      SCROLL RIGHT OFFSET.
         DC    H'0'                      TOTAL LINE LENGTH.
         DC    H'0'                      LEFT COLUMNS TO PRESERVE.
OPTBLEN  EQU   *-OPLOOKUP                LENGTH OF AN OPTION ENTRY.
         SPACE
         DC    C'$'                      SELECTION CODE.
         DC    X'05'                     AUTH/FEATURE SUPPORT FLAGS.
         DC    H'0'                      RIGHT COLUMNS TO PRESERVE.
         DC    A(DSK$PACE)               SUBROUTINE ADDRESS.
         DC    H'0'                      HEADING LINE COUNT.
         DC    H'0'                      SCROLL RIGHT OFFSET.
         DC    H'0'                      TOTAL LINE LENGTH.
         DC    H'0'                      LEFT COLUMNS TO PRESERVE.
         SPACE
         DC    C'@'                      SELECTION CODE.
         DC    X'07'                     AUTH/FEATURE SUPPORT FLAGS.
         DC    H'0'                      RIGHT COLUMNS TO PRESERVE.
         DC    A(UNIXUSER)               SUBROUTINE ADDRESS.
         DC    H'2'                      HEADING LINE COUNT.
         DC    H'0'                      SCROLL RIGHT OFFSET.
         DC    AL2(LL)                   TOTAL LINE LENGTH.
         DC    H'0'                      LEFT COLUMNS TO PRESERVE.
         SPACE
ADDRMON  DC    C'A'                      SELECTION CODE.
         DC    X'07'                     AUTH/FEATURE SUPPORT FLAGS.
         DC    H'5'                      RIGHT COLUMNS TO PRESERVE.
         DC    A(ADDRSPCS)               SUBROUTINE ADDRESS.
         DC    H'2'                      HEADING LINE COUNT.
         DC    H'25'                     SCROLL RIGHT OFFSET.
         DC    AL2(ASLL)                 TOTAL LINE LENGTH.
         DC    H'9'                      LEFT COLUMNS TO PRESERVE.
         SPACE
         DC    C'B'                      SELECTION CODE.
         DC    X'07'                     AUTH/FEATURE SUPPORT FLAGS.
         DC    H'0'                      RIGHT COLUMNS TO PRESERVE.
         DC    A(BILDLIST)               SUBROUTINE ADDRESS.
         DC    H'4'                      HEADING LINE COUNT.
         DC    H'0'                      SCROLL RIGHT OFFSET.
         DC    AL2(LL)                   TOTAL LINE LENGTH.
         DC    H'9'                      LEFT COLUMNS TO PRESERVE.
         SPACE
         DC    C'C'                      SELECTION CODE.
         DC    X'07'                     AUTH/FEATURE SUPPORT FLAGS.
         DC    H'0'                      RIGHT COLUMNS TO PRESERVE.
         DC    A(CHANNELS)               SUBROUTINE ADDRESS.
         DC    H'2'                      HEADING LINE COUNT.
         DC    H'0'                      SCROLL RIGHT OFFSET.
         DC    AL2(LL)                   TOTAL LINE LENGTH.
         DC    H'0'                      LEFT COLUMNS TO PRESERVE.
         SPACE
DEVMON   DC    C'D'                      SELECTION CODE.
         DC    X'07'                     AUTH/FEATURE SUPPORT FLAGS.
         DC    H'0'                      RIGHT COLUMNS TO PRESERVE.
         DC    A(DEVICES)                SUBROUTINE ADDRESS.
         DC    H'2'                      HEADING LINE COUNT.
         DC    H'0'                      SCROLL RIGHT OFFSET.
         DC    AL2(DVLL)                 TOTAL LINE LENGTH.
         DC    H'15'                     LEFT COLUMNS TO PRESERVE.
         SPACE
         DC    C'E'                      SELECTION CODE.
         DC    X'07'                     AUTH/FEATURE SUPPORT FLAGS.
         DC    H'11'                     RIGHT COLUMNS TO PRESERVE.
         DC    A(ENQUEUES)               SUBROUTINE ADDRESS.
         DC    H'2'                      HEADING LINE COUNT.
         DC    H'0'                      SCROLL RIGHT OFFSET.
         DC    AL2(NQLL)                 TOTAL LINE LENGTH.
         DC    H'9'                      LEFT COLUMNS TO PRESERVE.
         SPACE
FRAMEMON DC    C'F'                      SELECTION CODE.
         DC    X'07'                     AUTH/FEATURE SUPPORT FLAGS.
         DC    H'0'                      RIGHT COLUMNS TO PRESERVE.
         DC    A(FRAMES)                 SUBROUTINE ADDRESS.
         DC    H'0'                      HEADING LINE COUNT.
         DC    H'0'                      SCROLL RIGHT OFFSET.
         DC    H'0'                      TOTAL LINE LENGTH.
         DC    H'0'                      LEFT COLUMNS TO PRESERVE.
         SPACE
         DC    C'G'                      SELECTION CODE.
         DC    X'03'                     AUTH/FEATURE SUPPORT FLAGS.
         DC    H'0'                      RIGHT COLUMNS TO PRESERVE.
         DC    A(GRAFSTAT)               SUBROUTINE ADDRESS.
         DC    H'0'                      HEADING LINE COUNT.
         DC    H'0'                      SCROLL RIGHT OFFSET.
         DC    H'0'                      TOTAL LINE LENGTH.
         DC    H'0'                      LEFT COLUMNS TO PRESERVE.
         SPACE
         DC    C'J'                      SELECTION CODE.
         DC    X'07'                     AUTH/FEATURE SUPPORT FLAGS.
         DC    H'0'                      RIGHT COLUMNS TO PRESERVE.
         DC    A(JOBSTATS)               SUBROUTINE ADDRESS.
         DC    H'2'                      HEADING LINE COUNT.
         DC    H'0'                      SCROLL RIGHT OFFSET.
         DC    AL2(LL)                   TOTAL LINE LENGTH.
         DC    H'0'                      LEFT COLUMNS TO PRESERVE.
         SPACE
         DC    C'K'                      SELECTION CODE.
         DC    X'07'                     AUTH/FEATURE SUPPORT FLAGS.
         DC    H'0'                      RIGHT COLUMNS TO PRESERVE.
         DC    A(KNOWSHOW)               SUBROUTINE ADDRESS.
         DC    H'0'                      HEADING LINE COUNT.
         DC    H'0'                      SCROLL RIGHT OFFSET.
         DC    H'0'                      TOTAL LINE LENGTH.
         DC    H'0'                      LEFT COLUMNS TO PRESERVE.
         SPACE
LISTLSTR DC    C'L'                      SELECTION CODE.
         DC    X'07'                     AUTH/FEATURE SUPPORT FLAGS.
         DC    H'0'                      RIGHT COLUMNS TO PRESERVE.
         DC    A(LISTLIBS)               SUBROUTINE ADDRESS.
         DC    H'1'                      HEADING LINE COUNT.
         DC    H'0'                      SCROLL RIGHT OFFSET.
         DC    AL2(LL)                   TOTAL LINE LENGTH.
         DC    H'0'                      LEFT COLUMNS TO PRESERVE.
         SPACE
         DC    C'M'                      SELECTION CODE.
         DC    X'07'                     AUTH/FEATURE SUPPORT FLAGS.
         DC    H'0'                      RIGHT COLUMNS TO PRESERVE.
         DC    A(MANSTATS)               SUBROUTINE ADDRESS.
         DC    H'1'                      HEADING LINE COUNT.
         DC    H'0'                      SCROLL RIGHT OFFSET.
         DC    AL2(LL)                   TOTAL LINE LENGTH.
         DC    H'0'                      LEFT COLUMNS TO PRESERVE.
         SPACE
         DC    C'N'                      SELECTION CODE.
         DC    X'07'                     AUTH/FEATURE SUPPORT FLAGS.
         DC    H'0'                      RIGHT COLUMNS TO PRESERVE.
         DC    A(NUCLKMAP)               SUBROUTINE ADDRESS.
         DC    H'2'                      HEADING LINE COUNT.
         DC    H'0'                      SCROLL RIGHT OFFSET.
         DC    AL2(LL)                   TOTAL LINE LENGTH.
         DC    H'0'                      LEFT COLUMNS TO PRESERVE.
         SPACE
         DC    C'O'                      SELECTION CODE.
         DC    X'00'                     AUTH/FEATURE SUPPORT FLAGS.
         DC    H'0'                      RIGHT COLUMNS TO PRESERVE.
         DC    A(OSCONSOL)               SUBROUTINE ADDRESS.
         DC    H'0'                      HEADING LINE COUNT.
         DC    H'0'                      SCROLL RIGHT OFFSET.
         DC    H'0'                      TOTAL LINE LENGTH.
         DC    H'0'                      LEFT COLUMNS TO PRESERVE.
         SPACE
PAGDSMON DC    C'P'                      SELECTION CODE.
         DC    X'07'                     AUTH/FEATURE SUPPORT FLAGS.
         DC    X'8000'                   RIGHT COLUMNS TO PRESERVE.
         DC    A(PAGEDS)                 SUBROUTINE ADDRESS.
         DC    H'1'                      HEADING LINE COUNT.
         DC    H'0'                      SCROLL RIGHT OFFSET.
         DC    AL2(LL)                   TOTAL LINE LENGTH.
         DC    H'0'                      LEFT COLUMNS TO PRESERVE.
         SPACE
         DC    C'Q'                      SELECTION CODE.
         DC    X'07'                     AUTH/FEATURE SUPPORT FLAGS.
         DC    H'11'                     RIGHT COLUMNS TO PRESERVE.
         DC    A(ENQUEUES)               SUBROUTINE ADDRESS.
         DC    H'2'                      HEADING LINE COUNT.
         DC    H'0'                      SCROLL RIGHT OFFSET.
         DC    AL2(NQLL)                 TOTAL LINE LENGTH.
         DC    H'9'                      LEFT COLUMNS TO PRESERVE.
         SPACE
         DC    C'R'                      SELECTION CODE.
         DC    X'07'                     AUTH/FEATURE SUPPORT FLAGS.
         DC    H'0'                      RIGHT COLUMNS TO PRESERVE.
         DC    A(RATEMIPS)               SUBROUTINE ADDRESS.
         DC    H'1'                      HEADING LINE COUNT.
         DC    H'0'                      SCROLL RIGHT OFFSET.
         DC    AL2(LL)                   TOTAL LINE LENGTH.
         DC    H'0'                      LEFT COLUMNS TO PRESERVE.
         SPACE
DMNMON   DC    C'S'                      SELECTION CODE.
         DC    X'07'                     AUTH/FEATURE SUPPORT FLAGS.
         DC    H'0'                      RIGHT COLUMNS TO PRESERVE.
         DC    A(DOMAINS)                SUBROUTINE ADDRESS.
         DC    H'3'                      HEADING LINE COUNT.
         DC    H'0'                      SCROLL RIGHT OFFSET.
         DC    AL2(DMLL)                 TOTAL LINE LENGTH.
         DC    H'13'                     LEFT COLUMNS TO PRESERVE.
         SPACE
         DC    C'T'                      SELECTION CODE.
         DC    X'07'                     AUTH/FEATURE SUPPORT FLAGS.
         DC    H'0'                      RIGHT COLUMNS TO PRESERVE.
         DC    A(SVCLIST)                SUBROUTINE ADDRESS.
         DC    H'2'                      HEADING LINE COUNT.
         DC    H'0'                      SCROLL RIGHT OFFSET.
         DC    AL2(SVLL)                 TOTAL LINE LENGTH.
         DC    H'8'                      LEFT COLUMNS TO PRESERVE.
         SPACE
         DC    C'U'                      SELECTION CODE.
         DC    X'07'                     AUTH/FEATURE SUPPORT FLAGS.
         DC    H'0'                      RIGHT COLUMNS TO PRESERVE.
         DC    A(UNITSAMP)               SUBROUTINE ADDRESS.
         DC    H'0'                      HEADING LINE COUNT.
         DC    H'0'                      SCROLL RIGHT OFFSET.
         DC    H'0'                      TOTAL LINE LENGTH.
         DC    H'0'                      LEFT COLUMNS TO PRESERVE.
         SPACE
         DC    C'V'                      SELECTION CODE.
         DC    X'07'                     AUTH/FEATURE SUPPORT FLAGS.
         DC    H'0'                      RIGHT COLUMNS TO PRESERVE.
         DC    A(VIRTSTOR)               SUBROUTINE ADDRESS.
         DC    H'1'                      HEADING LINE COUNT.
         DC    H'0'                      SCROLL RIGHT OFFSET.
         DC    AL2(LL)                   TOTAL LINE LENGTH.
         DC    H'0'                      LEFT COLUMNS TO PRESERVE.
         SPACE
         DC    AL1(255)                  END OF LOOK-UP TABLE.
         SPACE
         DC    X'FF'
*        EQU   X'80'                     TSO OPER AUTHORITY NOT NEEDED.
*        EQU   X'40'                     TSO ACCT AUTHORITY NOT NEEDED.
*        EQU   X'20'                     TSO FIB AUTHORITY NOT NEEDED.
*        EQU   X'10'                     TSO MOUNT AUTH NOT NEEDED.
*        EQU   X'08'                     THE OPTION IS ENABLED.
*        EQU   X'04'                     NUMERIC COMMAND IS SUPPORTED.
*        EQU   X'02'                     APF AUTHORITY NOT NEEDED.
*        EQU   X'01'                     SCREEN PRINT IS SUPPORTED.
         DC    H'0'                      RIGHT COLUMNS TO PRESERVE.
         SPACE
         COPY  IMPCM4            UNADDRESSABLE COMMON ROUTINES.
         TITLE 'MAIN MENU SCREEN'
MENU     DC    X'C1'             WCC - RESET MDT.
         DCS   SBA,(1,1),SF,UNPLO,IC,SA,HILITE,USCORE
         DC    X'00000000'       SELECTION INPUT AREA.
         DCS   SF,PROHIS,SA,COLOUR,WHITE
**       DC    C'       INTERACTIVE MONITORING PROGRAM FOR OS/390 AND Z
**             /OS         &IMPDATE'
         DC    C'       INTERACTIVE MONITORING PROGRAM FOR OS/390 AND '
         DC    X'A9',C'/OS         &IMPDATE'
         DCS   SA,HILITE,NORMAL
         SPACE
         DCS   RA,(3,56),C' ',SF,PROHIS,SA,HILITE,REVERSE
         DCS   SA,COLOUR,WHITE
         DCS   RA,(3,68),C' ',SA,HILITE,NORMAL
         DCS   RA,(4,56),C' ',SF,PROHIS,SA,HILITE,REVERSE
         DCS   SA,COLOUR,WHITE,C'  ',SA,COLOUR,RED,C' I-MON '
         DCS   SA,COLOUR,WHITE,C'  '
         DCS   SA,HILITE,NORMAL
         DCS   RA,(5,56),C' ',SF,PROHIS,SA,HILITE,REVERSE
         DCS   SA,COLOUR,WHITE,C'  ',SA,COLOUR,YELLOW,C'PRIMARY'
         DCS   SA,COLOUR,WHITE,C'  '
         DCS   SA,HILITE,NORMAL
         DCS   RA,(6,56),C' ',SF,PROHIS,SA,HILITE,REVERSE
         DCS   SA,COLOUR,WHITE,C'  ',SA,COLOUR,BLUE,C'OPTIONS'
         DCS   SA,COLOUR,WHITE,C'  '
         DCS   SA,HILITE,NORMAL
         DCS   RA,(7,56),C' ',SF,PROHIS,SA,HILITE,REVERSE
         DCS   SA,COLOUR,WHITE
         DCS   RA,(7,68),C' ',SA,HILITE,NORMAL,RA,(1,1),C' '
         SPACE
         DCS   SBA,(2,5),X'&HIGH',C'?',X'&LOW',C'- INVOKE THE I-MON'
         DC    X'&MED',C'TUTORIAL'
         DCS   SBA,(2,45),X'&HIGH',C'(PF1/13)'
OPT$     DCS   SBA,(3,5),X'&HIGH',C'$',X'&LOW',C'-'
         DC    X'&MED',C'DISK SPACE',X'&LOW',C'DISPLAY'
OPT@     DCS   SBA,(4,5),X'&HIGH',C'@',X'&LOW',C'-'
         DC    X'&MED',C'UNIX USER',X'&LOW',C'DATA BASE DISPLAY'
OPTA     DCS   SBA,(5,5),X'&HIGH',C'A',X'&LOW',C'-'
         DC    X'&MED',C'ADDRESS SPACE',X'&LOW',C'MONITOR'
         DC    CL14' ',X'&HIGH',C'(PF6/18)'
OPTB     DCS   SBA,(6,5),X'&HIGH',C'B',X'&LOW'
         DC    C'- DISPLAY',X'&MED',C'BLDL',X'&LOW',C'AND'
         DC    X'&MED',C'CSVQUERY',X'&LOW',C'RESULTS'
OPTC     DCS   SBA,(7,5),X'&HIGH',C'C',X'&LOW',C'-'
         DC    X'&MED',C'CHANNEL PATH',X'&LOW',C'MONITOR'
OPTD     DCS   SBA,(8,5),X'&HIGH',C'D',X'&LOW'
         DC    C'- INPUT/OUTPUT',X'&MED',C'DEVICE',X'&LOW',C'MONITOR'
         DC    CL8' ',X'&HIGH',C'(PF9/21)'
OPTE     DCS   SBA,(9,5),X'&HIGH',C'E',X'&LOW'
         DC    C'- RESERVE AND',X'&MED',C'ENQUEUE',X'&LOW',C'MONITOR'
OPTF     DCS   SBA,(10,5),X'&HIGH',C'F',X'&LOW'
         DC    C'- REAL MEMORY',X'&MED',C'FRAME',X'&LOW',C'MONITOR'
OPTG     DCS   SBA,(11,5),X'&HIGH',C'G',X'&LOW',C'-'
         DC    X'&MED',C'GRAPHIC',X'&LOW',C'ACTIVITY MONITOR'
OPTJ     DCS   SBA,(12,5),X'&HIGH',C'J',X'&LOW',C'-'
         DC    X'&MED',C'JOB STATUS',X'&LOW',C'MONITOR'
OPTK     DCS   SBA,(13,5),X'&HIGH',C'K',X'&LOW',C'- HISTORICAL'
         DC    X'&MED',C'KNOWLEDGE',X'&LOW',C'DISPLAY'
OPTL     DCS   SBA,(14,5),X'&HIGH',C'L',X'&LOW'
         DC    C'- SYSTEM',X'&MED',C'LIBRARY',X'&LOW',C'DISPLAY'
OPTM     DCS   SBA,(15,5),X'&HIGH',C'M',X'&LOW',C'- SYSTEM/SYSPLEX'
         DC    X'&MED',C'MANAGEMENT',X'&LOW',C'MONITOR'
OPTN     DCS   SBA,(16,5),X'&HIGH',C'N',X'&LOW',C'-'
         DC    X'&MED',C'NUCLEUS MAP',X'&LOW',C'DISPLAY AND LOOKUP'
OPTO     DCS   SBA,(17,5),X'&HIGH',C'O',X'&LOW',C'-'
         DC    X'&MED',C'OS CONSOLE',X'&LOW',C'AND MTT MONITOR'
OPTP     DCS   SBA,(18,5),X'&HIGH',C'P',X'&LOW',C'-'
         DC    X'&MED',C'PAGE DATA SET',X'&LOW',C'MONITOR'
OPTR     DCS   SBA,(19,5),X'&HIGH',C'R',X'&LOW',C'-'
         DC    X'&MED',C'RATE CPU',X'&LOW'
         DC    C'INSTRUCTION SPEED'
OPTS     DCS   SBA,(20,5),X'&HIGH',C'S',X'&LOW',C'-'
         DC    X'&MED',C'SWAP DOMAIN',X'&LOW',C'OR'
         DC    X'&MED',C'SERVICE CLASS',X'&LOW',C'MONITOR'
OPTT     DCS   SBA,(21,5),X'&HIGH',C'T',X'&LOW',C'-'
         DC    X'&MED',C'SVC TABLE',X'&LOW',C'DISPLAY'
OPTU     DCS   SBA,(22,5),X'&HIGH',C'U',X'&LOW',C'- PERFORM'
         DC    X'&MED',C'UNIT I/O',X'&LOW',C'SAMPLING'
OPTV     DCS   SBA,(23,5),X'&HIGH',C'V',X'&LOW',C'-'
         DC    X'&MED',C'VIRTUAL STORAGE',X'&LOW',C'MONITOR'
OPTX     DCS   SBA,(24,5),X'&HIGH',C'X',X'&LOW',C'-'
         DC    X'&MED',C'EXIT',X'&LOW',C'I-MON'
         DC    CL25' ',X'&HIGH',C'(PF3/15)'
         SPACE
         DCS   SBA,(24,6)
USAGEADR EQU   *-2,2
USAGEMSG DC    X'4DC35D40C3D6D7E8D9C9C7C8E340D7D9E8C3D9D6C6E340'
         DC    X'E2C9E740D7E3E84B40D3E3C44B40F1F9F8F660F2F0F2F04040'
USAGELEN EQU   *-USAGEMSG
         SPACE
         DCS   SBA,(9,56),SF,PROLOS,SA,COLOUR,GREEN
         DC    C'USERID-----:'
         DCS   SF,PROHIS,SA,COLOUR,WHITE
MENUUID  DC    CL8' '
         SPACE
         DCS   SBA,(10,56),SF,PROLOS,SA,COLOUR,GREEN
         DC    C'TERMINAL---:'
         DCS   SF,PROHIS,SA,COLOUR,WHITE
MENUTRM  DC    CL8' '
         SPACE
         DCS   SBA,(11,56),SF,PROLOS,SA,COLOUR,GREEN
         DC    C'NETWORK----:'
         DCS   SF,PROHIS,SA,COLOUR,WHITE
MENUNET  DC    CL8' '
         SPACE
         DCS   SBA,(12,56),SF,PROLOS,SA,COLOUR,GREEN
         DC    C'DATE-(NOW)-:'
         DCS   SF,PROHIS,SA,COLOUR,WHITE
MENUNOW  DC    CL10' '
         SPACE
         DCS   SBA,(13,56),SF,PROLOS,SA,COLOUR,GREEN
         DC    C'DATE-(IPL)-:'
         DCS   SF,PROHIS,SA,COLOUR,WHITE
MENUIPL  DC    CL10' '
         SPACE
         DCS   SBA,(14,56),SF,PROLOS,SA,COLOUR,GREEN
         DC    C'SYSTEM-ID--:'
         DCS   SF,PROHIS,SA,COLOUR,WHITE
MENUSID  DC    C'????'
         SPACE
         DCS   SBA,(15,56),SF,PROLOS,SA,COLOUR,GREEN
         DC    C'SYSTEM-NAME:'
         DCS   SF,PROHIS,SA,COLOUR,WHITE
MENUSNM  DC    CL8' '
         SPACE
         DCS   SBA,(16,56),SF,PROLOS,SA,COLOUR,GREEN
         DC    C'SYSPLEX----:'
         DCS   SF,PROHIS,SA,COLOUR,WHITE
MENUSPX  DC    CL8' '
         SPACE
         DCS   SBA,(17,56),SF,PROLOS,SA,COLOUR,GREEN
         DC    C'LPAR-NAME--:'
         DCS   SF,PROHIS,SA,COLOUR,WHITE
MENULPR  DC    CL8' '
         SPACE
         DCS   SBA,(18,56),SF,PROLOS,SA,COLOUR,GREEN
         DC    C'CLONE-NAME-:'
         DCS   SF,PROHIS,SA,COLOUR,WHITE
MENUCLN  DC    CL2' '
         SPACE
         DCS   SBA,(19,56),SF,PROLOS,SA,COLOUR,GREEN
         DC    C'VM-GUEST-ID:'
         DCS   SF,PROHIS,SA,COLOUR,WHITE
MENUVMG  DC    CL8' '
         SPACE
         DCS   SBA,(20,56),SF,PROLOS,SA,COLOUR,GREEN
         DC    C'CONFIG-NAME:'
         DCS   SF,PROHIS,SA,COLOUR,WHITE
MENUHDW  DC    CL8' '
         SPACE
         DCS   SBA,(21,56),SF,PROLOS,SA,COLOUR,GREEN
         DC    C'CPU-SERIAL-:'
         DCS   SF,PROHIS,SA,COLOUR,WHITE
MENUSER  DC    C'XXXXXX'
         SPACE
         DCS   SBA,(22,56),SF,PROLOS,SA,COLOUR,GREEN
         DC    C'CPU-MODEL--:'
         DCS   SF,PROHIS,SA,COLOUR,WHITE
MENUTYP  DC    C'XXXX'
MENUDSH  DC    C' '
MENUMDL  DC    C'   '
         SPACE
MENUEND  EQU   *
MENULEN  EQU   MENUEND-MENU
         SPACE
         DCS   SA,PGMSYM,X'CB',SA,COLOUR,RED,SBA,(3,72)
         DC    X'4142434445'
         DCS   SBA,(4,73)
ROOROW2  DC    X'4A4B4C4D4E'
         DCS   SBA,(5,73)
ROOROW3  DC    X'4F'
         DCS   SBA,(6,69),SA,COLOUR,GREEN
         DC    X'5051525354555640575859'
         SPACE
         DCS   SBA,(7,69),SA,COLOUR,BLUE
         DC    X'5A405B5C5D5E405F606162'
         DCS   SA,PGMSYM,NORMAL
         SPACE
MENULENX EQU   *-MENUEND
         SPACE
GLOBE    DCS   SA,PGMSYM,X'CB',SA,COLOUR,WHITE,SBA,(3,71)
         DC    X'41424344454647'
         DCS   SBA,(4,70)
         DC    X'48494A4B4C4D4E4F50'
         DCS   SBA,(5,70)
         DC    X'515253545556575859'
         DCS   SBA,(6,70)
         DC    X'5A5B5C5D5E5F606162'
         DCS   SBA,(7,71)
         DC    X'63646566676869'
         DCS   SA,PGMSYM,NORMAL
         SPACE
GLOBELEN EQU   *-GLOBE
         SPACE
GLBVECTR DC    X'F3'                 WRITE STRUCTURED FIELD
         DC    X'0004'               LENGTH OF FIRST STRUCTURED FIELD
         DC    X'03'                 ERASE/RESET
GLBCLRSZ DC    X'00'                 IMPLICIT PARTITION SIZE - DEFAULT
GLBVECSF DC    AL2(GLBVCSFL)         LENGTH OF STRUCTURED FIELD
         DC    X'0F10'               GRAPHIC PICTURE
         DC    X'00'                 PID
         DC    B'11000000'           FLAGS - SPAN : FIRST AND LAST
*                                          - MODE : INTERMEDIATE MODE
         DC    X'00'                 RESERVED
*
         DC    X'70'                 BEGIN SEGMENT
         DC    X'0C'                 LENGTH OF FOLLOWING PARAMETERS
         DC    CL4'IMON'             NAME OF PROCEDURE TO BE CREATED
         DC    B'01110100'           VISIBLE   NOHILITE
         DC    B'01101000'           NOPROL NEW SEG DATA
         DC    AL2(SEGLEN)           LENGTH OF PROCEDURE TO BE CREATED
         DC    X'00000000'           P/S NAME
SEGDATA  EQU   *
         DC    X'0C04'               SET MIX (XOR)
         DC    X'2104'               SET CURRENT POSITION
SEGXPOS  DC    X'0000'               X
SEGYPOS  DC    X'0000'               Y
         DC    X'0A01'               SET COLOR
         DC    X'9106000000500050'   IMAGE BEGIN
*  BLUE PLANE
         DC    X'920A000000001FE000000000'
         DC    X'920A00000000AFFF80000000'
         DC    X'920A00000003FFFE80000000'
         DC    X'920A0000007FFFFF58000000'
         DC    X'920A000000EB6A4148800000'
         DC    X'920A00000754144014800000'
         DC    X'920A00000CB22AC3D2A00000'
         DC    X'920A0000108280037B900000'
         DC    X'920A0000000040007DE80000'
         DC    X'920A000000000004FF560000'
         DC    X'920A000200200000BFDA0000'
         DC    X'920A000000000001FDFB8000'
         DC    X'920A000200000005AFEEA000'
         DC    X'920A00100000000FDFFB6000'
         DC    X'920A00000000015FBFF6D000'
         DC    X'920A00400000079FBFBF6800'
         DC    X'920A0000000001CF3FFFD400'
         DC    X'920A0000000003D87FEF5E00'
         DC    X'920A0000008001F7FFFDF000'
         DC    X'920A0100007002F7FFFFFF00'
         DC    X'920A01003D8800FFFFFFAA80'
         DC    X'920A00001E0001FFFFFFFF00'
         DC    X'920A0100000003FFFFFFB680'
         DC    X'920A0140000002FFFFFFFD40'
         DC    X'920A014000000DFFFFFFF740'
         DC    X'920A015008003FFFFFFFFF60'
         DC    X'920A02E03803FFFFFFFFFAD0'
         DC    X'920A01607806FFFFFFFFFF40'
         DC    X'920A03E1AC03FEFFFFFFF7D0'
         DC    X'920A25E1FF43FDFFFFFFFFB0'
         DC    X'920A0FE3FF01FFFFFFFFFEE8'
         DC    X'920A2BA3F711FFFFFFFFFDA0'
         DC    X'920A16E6FF63FFFFFFFFFB78'
         DC    X'920A0FF3FFF7FF7FFFFFFFC4'
         DC    X'920A15F9BF7FFF1FFFFFF6E8'
         DC    X'920A05FBFF7FFEBFFFFFFFF8'
         DC    X'920A17FFFF9FE3FFFFFFFED0'
         DC    X'920A6FFFFC9FCFFFFFFFFB74'
         DC    X'920A5EFFFE1F07FFFFFFFED8'
         DC    X'920A77FFFF3C06AFFFFFFFE8'
         DC    X'920A4BFFFE0C0FE7FFFFFD78'
         DC    X'920A0FFFFF960D1C9FFFFFD0'
         DC    X'920A3BFFFFC31AC203FFFFB4'
         DC    X'920A0BFFFFCFFEFF80EFEFE8'
         DC    X'920A57BFFFF3FDFFE53FFFB0'
         DC    X'920A0DFFFFF83FFFC27FFBA8'
         DC    X'920A1BFFFFFFFFBFF33FFDC8'
         DC    X'920A07FFFFFFFEFFFFFF7EB0'
         DC    X'920A1DFFFFFFFFFE7BFFFDE0'
         DC    X'920A33FFFFFFFFF873FFFBA8'
         DC    X'920A1EFFFFFFFF8871FFDED0'
         DC    X'920A13BFFFFFFF0031FFFB40'
         DC    X'920A07DFFFFFFF0003FFFEA0'
         DC    X'920A02FFFFFFFE0000FFD6C0'
         DC    X'920A03FFFFFFE000007FFF00'
         DC    X'920A02BFFFFFC000007FFA40'
         DC    X'920A057FFFFFC000003FF6A0'
         DC    X'920A015FFFFFC000003EDD00'
         DC    X'920A00BAFFFFE000003F7280'
         DC    X'920A006FFFFFE000003FDA00'
         DC    X'920A00B7FFFFE000007EB400'
         DC    X'920A004FFFFFF03C00FF6A00'
         DC    X'920A0015FFFFF3FE01FEA000'
         DC    X'920A002BFFFFFFFF83EB5400'
         DC    X'920A000EDFFFFFFF87FEE000'
         DC    X'920A00057FFFFFFFFFB78000'
         DC    X'920A000377FFFFFFE5D76000'
         DC    X'920A0002DFFFFFFFFF378000'
         DC    X'920A00006BFFFFFFFED44000'
         DC    X'920A00002F5FFFFFEFF50000'
         DC    X'920A000055FFFFFFFD5A0000'
         DC    X'920A00000AADFFFFF7D00000'
         DC    X'920A0000055B6BFBEE400000'
         DC    X'920A00000176FEAF59000000'
         DC    X'920A00000096B5FAC2000000'
         DC    X'920A00000029DAAB68000000'
         DC    X'920A0000001BFFFC00000000'
         DC    X'920A00000003FFFF00000000'
         DC    X'920A000000001FF800000000'
         DC    X'920A00000000000000000000'
*              800 BYTES IN PLANE BITMAP
         DC    X'93020000'           IMAGE END
         DC    X'0A02'               SET COLOR
         DC    X'9106000000500050'   IMAGE BEGIN
*   RED PLANE
         DC    X'920A00000000078000000000'
         DC    X'920A00000000203B00000000'
         DC    X'920A0000000004C800000000'
         DC    X'920A00000003525E00000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000C00000000000'
         DC    X'920A0000001F000000000000'
         DC    X'920A00000010000000000000'
         DC    X'920A00000080000000000000'
         DC    X'920A00100070000000000000'
         DC    X'920A00103D80000000000000'
         DC    X'920A00101E00000000000000'
         DC    X'920A00200000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A04000000000000000000'
         DC    X'920A02000000000000000000'
         DC    X'920A0C000000000000000000'
         DC    X'920A04000000000000000000'
         DC    X'920A18000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000100000000000'
         DC    X'920A00000000380000000000'
         DC    X'920A00000000080000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000010000000'
         DC    X'920A00000000000018000000'
         DC    X'920A0000000000000C000000'
         DC    X'920A0000000000000C000000'
         DC    X'920A00000000000078000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000019FFFC00000000'
         DC    X'920A00000003FFFE00000000'
         DC    X'920A000000000FE000000000'
         DC    X'920A00000000000000000000'
*              800 BYTES IN PLANE BITMAP
         DC    X'93020000'           IMAGE END
         DC    X'0A04'               SET COLOR
         DC    X'9106000000500050'   IMAGE BEGIN
* GREEN PLANE
         DC    X'920A00000000078000000000'
         DC    X'920A00000000203B00000000'
         DC    X'920A0000000004C800000000'
         DC    X'920A00000003525EA0000000'
         DC    X'920A0000001495BEB4000000'
         DC    X'920A000000ABEBBFE2000000'
         DC    X'920A0000034DD53C0C000000'
         DC    X'920A00000F7D7FF804000000'
         DC    X'920A00007FFFBFFF80000000'
         DC    X'920A0000FFFFFFFB00000000'
         DC    X'920A0001FFDFFFFF00000000'
         DC    X'920A0007FFFFFFFE00000000'
         DC    X'920A000DFFFFFFFA50000000'
         DC    X'920A000FFFFFFFF020000000'
         DC    X'920A002FFFFFFEA040000000'
         DC    X'920A001FFFFFF86040000000'
         DC    X'920A007FFFFFFE30C0000000'
         DC    X'920A00FFFFFFFC2780000000'
         DC    X'920A01FFFFFFFE0800000000'
         DC    X'920A00FFFFFFFD0800000000'
         DC    X'920A02FFFFF7FF0000000000'
         DC    X'920A03FFFFFFFE0000000000'
         DC    X'920A04FFFFFFFC0000000000'
         DC    X'920A043FFFFFFD0000000000'
         DC    X'920A0E3FFFFFF20000000000'
         DC    X'920A0E2FF7FFC00000000000'
         DC    X'920A0C1FC7FC000000000000'
         DC    X'920A1C1F87F9000000000000'
         DC    X'920A181E53FC010000000000'
         DC    X'920A101E00BC020000000000'
         DC    X'920A001C00FE000000000000'
         DC    X'920A001C08EE000000000000'
         DC    X'920A0019009C000000000000'
         DC    X'920A200C0008008000000000'
         DC    X'920A2006408000E000000000'
         DC    X'920A60040080014000000000'
         DC    X'920A400000601C0000000000'
         DC    X'920A00000360300000000000'
         DC    X'920A000001E0F80000000000'
         DC    X'920A000000C3F95000000000'
         DC    X'920A000001F3F01800000000'
         DC    X'920A00000069F2E360000000'
         DC    X'920A0000003CE53DFC000000'
         DC    X'920A0000003001007F100000'
         DC    X'920A0000000C02001AC00000'
         DC    X'920A00000007C0003D800000'
         DC    X'920A0000000000400CC00000'
         DC    X'920A00000000010000008000'
         DC    X'920A00000000000184000000'
         DC    X'920A0000000000078C000000'
         DC    X'920A0000000000778E002000'
         DC    X'920A0000000000FFCE000000'
         DC    X'920A0000000000FFFC000000'
         DC    X'920A0800000001FFFF000000'
         DC    X'920A000000001FFFFF800000'
         DC    X'920A000000003FFFFF800000'
         DC    X'920A000000003FFFFFC00000'
         DC    X'920A000000003FFFFFC00000'
         DC    X'920A000000001FFFFFC00000'
         DC    X'920A000000001FFFFFC00000'
         DC    X'920A000000001FFFFF800000'
         DC    X'920A000000000FC3FF000000'
         DC    X'920A000000000C01FE000000'
         DC    X'920A0000000000007C008000'
         DC    X'920A00000000000078000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000018000000'
         DC    X'920A00000000000000080000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000000000000000000'
         DC    X'920A00000019FFFC00000000'
         DC    X'920A00000003FFFE00000000'
         DC    X'920A000000000FE000000000'
         DC    X'920A00000000000000000000'
*              800 BYTES IN PLANE BITMAP
         DC    X'93020000'           IMAGE END
SEGLEN   EQU   *-SEGDATA
GLBVCSFL EQU   *-GLBVECSF
GLBVECLN EQU   *-GLBVECTR
         SPACE 2
         DS    0H
         TITLE 'GLOBAL 31-BIT AMODE INITIALIZATION PHASE'
         USING INITIAL,R10
INITIAL  L     R15,OPLKUPAD      POINT TO PRIMARY OPTION LOOKUP TABLE.
OPTNINIT LA    R15,OPTBLEN(,R15) POINT TO NEXT TABLE ENTRY.
         CLI   0(R15),255        END OF TABLE REACHED?
         BE    OPTINITD          YES, OPLOOKUP TABLE NOW INITIALIZED.
         SLR   R1,R1
         IC    R1,0(,R15)        LOAD OPTION NAME.
         AL    R1,ATHTBADR       POINT TO BYTE WITHIN AUTH TABLE.
         NI    0(R1),X'F8'       RESET NON-CONFIGURABLE BITS.
         OC    1(1,R15),0(R1)    SET CONFIGURABLE BITS IN OPLOOKUP.
         CLI   0(R15),C'F'       ENTRY FOR OPTION "F"?
         BNE   OPTNINIT          NO, GO PROCESS NEXT OPTION.
         TM    FLCFACL,FLCFZARA  OPERATING IN 64-BIT MODE?
         BNO   OPTNINIT          NO, GO PROCESS NEXT OPTION.
         NI    1(R15),X'F7'      DISABLE OPTION "F" - NO PFTE ACCESS.
         B     OPTNINIT          GO PROCESS NEXT OPTION.
OPTINITD L     R15,ATHTBADR      POINT TO CONFIGURATION FLAGS.
         TM    255(R15),X'10'    JAPANESE DISPLAY?
         BZ    XLTINITD          NO, ALLOW LOWER CASE LETTERS.
         OC    XLATETBL+C'A'-C' '(9),BLANKS
         OC    XLATETBL+C'J'-C' '(9),BLANKS
         OC    XLATETBL+C'S'-C' '(8),BLANKS
XLTINITD L     R4,CVTPTR(,0)     POINT TO THE CVT.
         USING ASVT,R2
         L     R0,ASVTMAXU       GET MAXUSER -
         MHI   R0,ASENTLEN           TIMES ASENTLEN.
         DROP  R2                ASVT.
         L     R1,WORKSIZE       SIZE OF SAVE AREA + WORK AREA + BUFFR.
         LA    R1,SMSWKLEN(,R1)  ADD SMS INTERFACE WORK AREA SIZE.
         AR    R1,R0             GET TOTAL GETMAIN REQUIREMENTS.
         LA    R1,7(,R1)
         SRL   R1,3
         SLL   R1,3              ROUND SIZE TO DOUBLEWORD MULTIPLE.
         LR    R0,R1             LOAD INTO CORRECT REGISTER.
         ST    R0,GMREG0         SAVE STORAGE SIZE AND SUBPOOL.
         GETMAIN RU,LV=(0),SP=SUBPOOL,LOC=(24,64)
         ST    R1,GMREG1         SAVE STORAGE ADDRESS.
         XC    0(72,R1),0(R1)    CLEAR NEW SAVE AREA.
         ST    R13,4(,R1)        COMPLETE CHAINS BETWEEN CALLER'S
         ST    R1,8(,R13)                 AND IMPXA'S SAVE AREAS.
         LR    R13,R1            ADDRESSABILITY
         USING GOTAREA,R13            FOR GETMAINED STORAGE.
         A     R1,WORKSIZE
         LA    R1,SMSWKLEN(,R1)  ADD SMS INTERFACE WORK AREA SIZE.
         ST    R1,JOBTBL         SAVE ADDRESS SPACE TABLE ADDRESS.
         TIME  BIN               GET TIME-OF-DAY.
         L     R1,OPLKUPAD
         L     R5,4(,R1)
         LA    R8,USAGEMSG-MAINMENU(,R5)
         MVC   HOME(HDRLEN),SCRNHDR  INITIALIZE SCREEN HEADING LINE.
         MVC   BUFFER(USAGELEN),USAGEHEX
         TR    BUFFER(USAGELEN),TABLE
         CLC   BUFFER(USAGELEN),0(R8)
         BE    MSGOK
         MVI   16(R1),X'FF'
MSGOK    MVI   BUFFER,X'3C'      INDICATE EMPTY SCREEN TO SCRNPRNT.
         L     R4,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R4
         L     R5,CVTEORM        GET END-OF-REAL-MEMORY.
         L     R11,CVTECVT       POINT TO THE ECVT.
         DROP  R4                CVT.
         SR    R4,R4
         TM    OSLEVEL+2,CVTH7703  OS/390 R10 OR LATER?
         BNO   EORMGOOD          NO.
         USING ECVT,R11
         LM    R4,R5,ECVTEORM    GET END-OF-REAL-MEMORY.
         DROP  R11               ECVT.
EORMGOOD LA    R11,1             ENSURE IT IS SIZE,
         ALR   R5,R11               NOT HIGH ADDRESS.
         BC    12,REALGOOD       NO CARRY.
         ALR   R4,R11
REALGOOD SRDL  R4,12             CONVERT TO 4K FRAME COUNT.
         ST    R5,FRAME#         NUMBER OF FRAMES FOR CPU.
         SRDL  R4,8              CONVERT TO MEGABYTES.
         L     R11,OPLKUPAD
         L     R11,ADDRMON+4-OPLOOKUP(,R11)
         USING ADDRSPCS,R11
         CVD   R5,WORK
         OC    WORK(5),WORK      SCALED ENOUGH?
         BZ    MEGAGIGS          YES
         SRDL  R4,10             CONVERT TO GIGABYTES.
         CVD   R5,WORK
         MVI   REALVARS+73,C'G'  UPDATE SCALE INDICATOR.
MEGAGIGS MVC   REALVARS+67(6),ED5
         ED    REALVARS+67(6),WORK+5
         DROP  R11               ADDRSPCS.
         L     R11,OPLKUPAD
         L     R11,FRAMEMON+4-OPLOOKUP(,R11)
         USING FRAMES,R11
         L     R3,RCEADDR        POINT TO RSM CNTRL & ENUMERATION AREA.
         USING RCE,R3
         L     R5,RCETOTPI       GET NUMBER OF PAGES PAGED IN.
         AL    R5,RCETOTPO       ADD NUMBER OF PAGES PAGED OUT.
         AL    R5,RCEVIOPI       ADD NUMBER OF VIO PAGES PAGED IN.
         AL    R5,RCEVIOPO       ADD NUMBER OF VIO PAGES PAGED OUT.
         AL    R5,RCESWPPI       ADD NUMBER OF PAGES SWAPPED IN.
         AL    R5,RCESWPPO       ADD NUMBER OF PAGES SWAPPED OUT.
         ST    R5,PAGIOCNT       SAVE CURRENT TOTAL.
*        MVC   RECLMCNT,52(R3)   SAVE CURRENT TOTAL OF PAGES RECLAIMED.
         L     R5,RCEESWRT       GET NUMBER OF PAGE WRITES TO E-STORE.
         A     R5,RCEESREA       ADD NUMBER OF PAGE READ FROM E-STORE.
         ST    R5,ESTOREIO       SAVE CURRENT TOTAL.
         ST    R0,PAGETIME       STORE CURRENT CENTISECONDS.
         DROP  R11               FRAMES.
         L     R11,OPLKUPAD
         L     R11,PAGDSMON+4-OPLOOKUP(,R11)
         USING PAGEDS,R11
*        L     R3,RCEADDR        POINT TO RSM CNTRL & ENUMERATION AREA.
         MVC   NPIN,RCETOTPI     GET CURRENT NON-VIO PAGE-IN COUNT.
         MVC   NPOUT,RCETOTPO    GET CURRENT NON-VIO PAGE-OUT COUNT.
         MVC   VAMI,RCEVIOPI     GET CURRENT VIO PAGE-IN COUNT.
         MVC   VAMO,RCEVIOPO     GET CURRENT VIO PAGE-OUT COUNT.
         MVC   SPIN,RCESWPPI     GET CURRENT SWAP-IN PAGE COUNT.
         MVC   SPOUT,RCESWPPO    GET CURRENT SWAP-OUT PAGE COUNT.
         MVC   NPMOV,RCEPAGMV    GET CURRENT PAGE MOVEMENT COUNT.
         MVC   NPREC,RCETOTRC    GET CURRENT RECLAIMED PAGE COUNT.
         ST    R0,PGPRVTIM       STORE CURRENT CENTISECONDS.
         DROP  R3                RCE.
         SLR   R4,R4             ZERO DATA SET COUNTER.
         L     R5,PARTADDR       POINT TO PAGING ACTIVITY REF. TABLE.
         LA    R8,80(,R5)        POINT TO THE FIRST PARTE.
         L     R3,IMCOMADR       POINT TO THE IMP/XA COMMON AREA.
         USING IMPXACOM,R3
         LA    R3,PGDSTABL       POINT TO FIRST IMPXA TABLE ENTRY.
         DROP  R3                IMPXACOM.
         MVC   WORK2(4),8(R5)    COPY USED PARTE COUNT.
         LH    R1,WORK2          USED PARTE COUNT IS A HALFWORD FIELD.
         ST    R1,WORK2          CONVERT IT TO A FULLWORD.
         B     FSTPARTI
NXTPARTI AH    R8,PARTELEN       POINT TO NEXT PART ENTRY.
         LA    R3,12(,R3)        POINT TO NEXT COUNTER SAVE AREA ENTRY.
FSTPARTI LA    R4,1(,R4)         INCREMENT USED PARTE COUNTER.
         C     R4,WORK2          END OF USED PART ENTRIES?
         BH    ASIDINIT          YES.
         TM    9(R8),X'80'       IS THIS PARTE IN USE?
         BO    NXTPARTI          NO, GET THE NEXT ONE.
         L     R7,28(,R8)        POINT TO FIRST IORB.
         USING IORB,R7
         MVC   0(8,R3),IORTREQ   SAVE CURRENT FIGURES (INCL. IORSION).
         ST    R0,8(,R3)         SAVE CURRENT TIME FOR NEXT TIME.
         B     NXTPARTI          PROCESS IT.
         DROP  R11,R7            PAGESDS, IORB.
         SPACE
         USING ASENTRY,R11
ASIDINIT L     R11,JOBTBL        ADDRESS TABLE ENTRY FOR THIS ASID.
         L     R2,ASVTADDR       GET ASVT ADDRESS.
         USING ASVT,R2
         L     R3,ASVTMAXU       MAXIMUM NUMBER OF ENTRIES.
         LA    R4,ASVTENTY       FIRST ASVT ENTRY.
         B     FRSTASID          PROCESS FIRST ADDRESS SPACE.
NEXTASID LA    R4,4(,R4)         BUMP BY FOUR.
         LA    R11,ASENTLEN(,R11) POINT TO NEXT TABLE ENTRY.
FRSTASID ST    R0,TOD            STORE TIME-OF-DAY.
         XC    CPUSOFAR(12),CPUSOFAR ZERO COUNTS FOR NON-EXISTENT ASID.
         ICM   R5,15,0(R4)       LOAD THE PTR.
         BM    ASIDEND           FINISHED WITH NON-EXISTENT MEMORY.
         USING ASCB,R5
         MVC   XCPSOFAR,ASCBIOSC SAVE THE I/O SERVICE COUNT.
         MVC   IOCSOFAR,ASCBDCTI SAVE THE I/O CONNECT TIME.
         LM    R8,R9,ASCBEJST    LOAD UP EJST (CPU TIME - TASK TYPE).
         SRDL  R8,12             GET MICROSECONDS.
         LM    R14,R15,ASCBSRBT  LOAD UP SRB TIME.
         SRDL  R14,12            GET MICROSECONDS.
         ALR   R9,R15            ADD TOGETHER (LOW ORDER).
         ST    R9,CPUSOFAR       STORE CPU TIME THIS STEP USED SO FAR.
         ICM   R7,15,ASCBOUXB    POINT TO OUXB.
         BZ    ASIDEND           NO OUXB TO CHECK.
         USING OUXB,R7
         L     R8,OUXBPIN        GET PRIVATE PAGE-IN COUNT.
         A     R8,OUXBPOUT       ADD PRIVATE PAGE-OUT COUNT.
         A     R8,OUXBVAMI       ADD VIO PAGE-IN COUNT.
         A     R8,OUXBVAMO       ADD VIO PAGE-OUT COUNT.
         A     R8,OUXBSPIN       ADD SWAP PAGE-IN COUNT.
*        A     R8,OUXBSPOT       ADD SWAP PAGE-OUT COUNT.
         A     R8,OUXBCAPI       ADD COMMON PAGE-IN COUNT.
         C     R7,ASCBOUXB       STILL THE RIGHT OUXB?
         BNE   DMYPGCNT          NO, A SWAP JUST HAPPENED.
         ST    R8,ASPAGECT       YES, SAVE TOTAL PAGE TRANSFER COUNT.
         LTR   R8,R8             ZERO FROM DUMMY OUXB?
         BNZ   ASIDEND           NO, NON-ZERO COUNT SHOULD BE ACCURATE.
DMYPGCNT MVI   ASPAGECT,X'7F'    FLAG SWAPPED-OUT STATUS.
ASIDEND  BCT   R3,NEXTASID       BRANCH BACK TO LOOK AT NEXT MEMORY.
         DROP  R11,R7,R5,R2      ASENTRY, OUXB, ASCB, ASVT.
         SPACE
         L     R11,OPLKUPAD
         L     R11,DMNMON+4-OPLOOKUP(,R11)
         USING DOMAINS,R11
         LA    R11,COLLINIT
         DROP  R11               DOMAINS.
         USING COLLINIT,R11
         ST    R0,SWAPTIME       SAVE TIME-OF-DAY FOR SWAP RATE CALC.
         L     R2,RMCTADDR       POINT TO RESOURCE MNGR CONTROL TABLE.
         USING RMCT,R2
         L     R2,RMCTRMCA       POINT TO RESOURCE MNGR CONTROL AREA.
         DROP  R2                RMCT.
         USING RMCA,R2
         LA    R3,RMCASRC        POINT TO FIRST SWAP REASON COUNTER.
         LA    R4,17             NUMBER OF SWAP REASONS.
         SLR   R5,R5             CLEAR FOR ACCUMULATION.
SWAPLOOP A     R5,0(,R3)         ADD COUNT FOR THIS SWAP REASON.
         LA    R3,4(,R3)         POINT TO NEXT COUNTER.
         BCT   R4,SWAPLOOP
         ST    R5,TOTLSWAP       SAVE TOTAL SWAP COUNT.
         MVC   LOGSWAP,288(R2)   SAVE TOTAL LOGICAL SWAP COUNT.
         MVC   TPUTSWAP,RMCATOSC SAVE TPUT SWAP COUNT.
         MVC   TGETSWAP,RMCATISC SAVE TGET SWAP COUNT.
         DROP  R11,R2            COLLINIT, RMCA.
         SPACE
         L     R1,PSATOLD        POINT TO THE CURRENT TCB.
         USING TCB,R1
         ICM   R1,15,TCBJSCB     POINT TO THE CURRENT JSCB.
         BZ    NOPSCB            WHAT HAPPENED THERE?
         DROP  R1                TCB.
         USING IEZJSCB,R1
         ICM   R1,15,JSCBPSCB    POINT TO THE TSO USER'S PSCB.
         BZ    NOPSCB            THERE IS NO PSCB.
         DROP  R1                IEZJSCB.
         USING PSCB,R1
         MVC   COPYATR1,PSCBATR1 COPY FIRST BYTE OF USER ATTRIBUTES.
         DROP  R1                PSCB.
         TM    COPYATR1,PSCBCTRL+PSCBACCT   OPER AND ACCT?
         BNO   NOPSCB            NO.
         MVI   VIPMODE,C'*'      YES, AUTOMATIC COMMAND AUTHORITY.
NOPSCB   NI    COPYATR1,X'F0'    RESET UNWANTED BITS.
         TM    HEX,X'80'         EXPIRED?
         BZ    HEXOKAY           YES.
         CLC   SECTCT(7),SECJSCB EXPIRED?
         BL    TSTDAUTH          YES.
HEXOKAY  DS    0H
         TESTAUTH FCTN=1         TEST FOR APF AUTHORIZATION.
         LTR   R15,R15           AUTHORIZED?
         BNZ   TSTDAUTH          NO.
         OI    MODESW2,AUTH      YES, FLAG SAME.
         OI    COPYATR1,X'02'    ENABLE APF DEPENDENT OPTIONS.
TSTDAUTH DS    0H
         L     R4,CREIOTAD       GET DEVICE TABLE CREATION ROUTINE EP.
         BASR  R14,R4            CREATE DEVICE MEASUREMENT TABLE.
         SPACE
         L     R11,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R11
         GETMAIN VRU,LV=(1024*1024,256*1024),SP=SUBPOOL,LOC=(31,64)
         STM   R0,R1,WINBUFFL    SAVE WINDOW BUFFER SIZE AND ADDRESS.
         AR    R1,R0             POINT PAST WINDOW BUFFER.
         AHI   R1,-512           BACK UP A BIT.
         ST    R1,WINEND         SAVE "SAFETY STOPPER" ADDRESS.
         DROP  R11               WNDWMNGR.
         TM    MODESW3,TSU       TIME SHARING USER?
         BZ    INITEXCP          NO, PERFORM EXCP INITIALIZATION.
         STAX  MF=(E,STAXLIST)   SET AN ATTENTION EXIT.
         SPACE
         TM    TERMATTR+3,X'01'  IS THE QUERY BIT ON?
         BZ    INITDONE          NO, CAN'T DO A QUERY, ALL READY TO GO.
         SPACE
         LA    R1,RESETAID       YES, RESET THE TERMINAL AID AND
         LA    R0,L'RESETAID          WAIT TILL THIS IS DONE
         ICM   R1,8,=X'03'            BEFORE PROCEEDING.
         TPUT  (1),(0),R         TPUT FULLSCR,WAIT,NOHOLD.
         TPG   QUERY,L'QUERY,NOEDIT,WAIT
         LA    R3,2              SET A LOOP LIMIT.
QRYREGET LA    R1,BUFFER         TEMPORARY TGET BUFFER FOR RESPONSE
         LA    R0,1024                     FROM READ PARTITION.
         ICM   R1,8,=X'81'       FLAGS FOR TGET ASIS,WAIT.
         TGET  (1),(0),R         TGET ASIS,WAIT.
         CLI   BUFFER,X'88'      QUERY RESPONSE AID?
         BE    QUERYGOT          YES, GO PROCESS IT.
         BCT   R3,QRYREGET       NO, ASSUME A TIMING GLITCH SO RETRY.
         B     INITDONE          ASSUME QUERY NOT FUNCTIONAL.
QUERYGOT OI    GRAFLAGS,DIDQRY   REMEMBER THAT QUERY WAS PERFORMED.
         LR    R3,R1             YES, COPY TGET DATA LENGTH.
         SLR   R4,R4             CLEAR FOR INSERTS.
         LA    R5,BUFFER+1       POINT PAST THE AID.
         BCT   R3,QUERYPRS       DECREMENT FOR AID.
         B     INITDONE          JUST IN CASE.
QUERYPRS CLI   2(R5),X'81'       QUERY REPLY ID?
         BE    QVFYCONT          YES, LOOKS LIKE IT.
QBADSUBF LA    R5,1(,R5)         NO, POINT TO NEXT BYTE.
         BCT   R3,QUERYPRS       DECREMENT LENGTH AND TRY AGAIN.
         B     INITDONE          JUST IN CASE.
QVFYCONT TM    3(R5),X'80'       QCODE IN X'80' TO X'FF' RANGE?
         BZ    QBADSUBF          NO, PROBABLY INVALID.
*        CLI   0(R5),0           SUB-FIELD LENGTH LESS THAN 256?
*        BNE   QBADSUBF          NO, PROBABLY INVALID.
         CLI   3(R5),X'86'       QUERY REPLY COLOUR ID?
         BE    QUERYCLR          YES, PROCESS COLOUR SUPPORT DATA.
         CLI   3(R5),X'87'       QUERY REPLY HIGHLIGHTING ID?
         BE    QUERYHLT          YES, PROCESS HIGHLIGHT SUPPORT DATA.
         CLI   3(R5),X'85'       QUERY REPLY SYMBOL SETS ID?
         BE    QUERYSYM          YES, PROCESS SYMBOL SETS SUPPORT DATA.
         CLI   3(R5),X'93'       QUERY REPLY PC ATTACHMENT FACILITY ID?
         BE    QUERYCMP          YES, PROCESS PC/PS2 3270 EMULATION.
         CLI   3(R5),X'A6'       QUERY REPLY IMPLICIT PARTITION ID?
         BE    QUERYIMP          YES, PROCESS IT.
         CLI   3(R5),X'81'       QUERY REPLY USABLE AREA ID?
         BE    QUERYUSE          YES, PROCESS IT.
         CLI   3(R5),X'80'       QUERY REPLY SUMMARY ID?
         BE    QUERYSUM          YES, PROCESS IT.
         CLI   3(R5),X'B4'       QUERY REPLY GRAPHIC COLOUR?
         BE    QUERYVEC          YES, PROCESS IT.
NXTSBFLD ICM   R4,3,0(R5)        NO, LOAD SUB-FIELD LENGTH.
         SR    R3,R4             SUBTRACT IT FROM TGET DATA LENGTH.
         BZ    INITDONE          END OF QUERY, INITIALIZATION NOW DONE.
         BM    QRYREGET          ASSUME REST OF DATA IN NEXT TGET.
         AR    R5,R4             POINT TO NEXT SUB-FIELD.
         B     QUERYPRS          EXAMINE IT.
QUERYCLR CLI   5(R5),8           AT LEAST EIGHT COLOUR PAIRS?
         BL    NXTSBFLD          NO, NO 7-COLOUR SUPPORT.
         CLC   8(14,R5),=CL14'11223344556677' YES, ALL 7 SUPPORTED?
         BNE   NXTSBFLD          NO, PROBABLY A MONOCHROME TERMINAL.
         OI    GRAFLAGS,COLR     YES, FLAG COLOUR SUPPORT CERTAINTY.
         B     NXTSBFLD          EXTENDED CAPABILITY NOW FLAGGED.
QUERYHLT CLI   4(R5),4           AT LEAST FOUR HIGHLIGHTING PAIRS?
         BL    NXTSBFLD          NO, SO DO NOT FLAG IT.
         CLC   7(6,R5),=CL6'112244' YES, BLINK, REVERSE, UNDERSCORE OK?
         BNE   NXTSBFLD          NO.
         OI    GRAFLAGS,HLIT     YES, FLAG HILIGHTING SUPPORT VERACITY.
         NI    MODESW2,255-COL2-COL4 ALSO RESTORE 7-COLOUR MODE.
         B     NXTSBFLD          EXTENDED CAPABILITY NOW FLAGGED.
QUERYSYM OI    GRAFLAGS,CMP      FLAG IBM COMPATIBILITY.
         TM    4(R5),X'80'       IS GRAPHICS ESCAPE SUPPORTED?
         BZ    GOTGEBIT          NO, SO DO NOT FLAG IT.
         OI    GRAFLAGS,GE+GEOK  YES, FLAG GE SUPPORT CERTAINTY.
GOTGEBIT MVC   CHARSIZE,6(R5)    SAVE CHARACTER MATRIX SIZE.
         TM    4(R5),X'20'       IS LOAD PROGRAMMED SYMBOLS SUPPORTED?
         BNO   NXTSBFLD          NO, CAN'T DO THE SNAZZY LOGO.
         TM    8(R5),X'40'       FORMAT TYPE 1 SUPPORTED BY TERMINAL?
         BNO   NXTSBFLD          NO, CAN'T DO THE SNAZZY LOGO.
         SLR   R0,R0
         SLR   R1,R1
         IC    R0,12(,R5)        GET SYMBOL SET DESCRIPTOR LENGTH.
         LA    R15,13(,R5)       POINT TO FIRST DESCRIPTOR.
         ICM   R1,3,0(R5)        GET LENGTH OF WHOLE SUBFIELD.
         AHI   R1,-13            GET LENGTH OF ALL DESCRIPTORS.
         BNP   NXTSBFLD          IN CASE NO DESCRIPTORS.
SYMSTGID CR    R0,R1             FOUND LAST RWS?
         BE    GOTRWSTG          YES, LOOK AT IT.
         SR    R1,R0             NO, SUBTRACT LENGTH.
         BNP   NXTSBFLD          HANDLE END OF SUB-FIELD.
         AR    R15,R0            POINT TO NEXT DESCRIPTOR.
         B     SYMSTGID          LOOK AT IT.
GOTRWSTG TM    1(R15),X'80'      LOADABLE TERMINAL STORAGE?
         BZ    NXTSBFLD          NO, FORGET ALL THIS.
         OI    GRAFLAGS,LOGO     YES, LOOKS GOOD.
         MVC   STGID1,0(R15)     SET RWS ID.
         TM    1(R15),X'40'      TRIPLE-PLANE?
         BZ    LOGOMONO          NO, SINGLE-PLANE.
         TM    4(R5),X'10'       IS LPS EXTENSION SUPPORTED?
         BNO   LOGOMONO          NO, CAN'T LOAD COLOUR PLANES.
         OI    MODESW,TRIP       CAN USE MULTI-COLOUR SYMBOLS.
LOGOMONO CLI   2(R15),X'CB'      GOT IMP/XA LOGO SYMBOLS?
         BE    NXTSBFLD          PROBABLY, SO DON'T RE-LOAD THEM.
         TM    MODESW3,TSU       TIME SHARING USER?
         BZ    LOGOEXCP          NO, USE EXCP.
         TM    MODESW,TRIP       TRIPLE-PLANE SYMBOLS AVAILABLE?
         BO    LOGOCOLR          YES, GO LOAD THEM.
         TPUT  PSBWSF,PSBLEN,NOEDIT,WAIT
         B     LOGOTEST
LOGOCOLR LA    R1,STGID3         SET RWS ID INTO STRUCTURED FIELDS.
         MVC   0(1,R1),STGID1
         MVC   ADDPLNLN(1,R1),0(R1)
         MVC   ADDPLNLN+ADDPLNLN(1,R1),0(R1)
         TPUT  PSFWSF,PSFLEN,NOEDIT,WAIT
LOGOTEST LTR   R15,R15           HOW DID IT GO?
         BZ    NXTSBFLD          NO WORRIES, PSB NOW LOADED.
         NI    GRAFLAGS,255-LOGO NOT SO GOOD, BETTER NOT USE PSB.
         B     NXTSBFLD          PROGRAM SYMBOLS SUB-FIELD NOW DONE.
LOGOEXCP NI    MODESW,255-TRIP   NO TRIPLE-PLANE LOGO WITH EXCP.
         LA    R15,16            SET ENTRY CODE OF SIXTEEN.
         L     R11,EXCPIOAD      GET EXCP I/O ROUTINE ENTRY POINT.
         BASSM R14,R11           USE EXCP TO LOAD PROGRAM SYMBOLS.
         B     LOGOTEST
QUERYIMP TM    MODESW3,TSU       TIME SHARING USER?
         BO    QUERYCMP          YES, USE GTSIZE FOR SCREEN SIZE.
         CLI   1(R5),17          LENGTH LESS THAN SEVENTEEN?
         BL    QUERYCMP          YES, IGNORE.
         CLI   6(R5),11          PARAMETER LENGTH LESS THAN ELEVEN?
         BL    QUERYCMP          YES, IGNORE.
         CLI   7(R5),1           IMPLICIT PARTITION SIZES?
         BNE   QUERYCMP          NO, IGNORE.
*        CLC   EIGHTY,9(R5)      PRIMARY SIZE EIGHTY COLUMNS?
*        BNE   QUERYCMP          NO, IGNORE.
         MVC   TERMSIZE(1),12(R5)          COPY PRIMARY LINES.
         MVC   TERMSIZE+1(1),10(R5)        COPY PRIMARY COLUMNS.
         MVC   TRMALTSZ(1),16(R5)          COPY ALTERNATE LINES.
         MVC   TRMALTSZ+1(1),14(R5)        COPY ALTERNATE COLUMNS.
QUERYUSE TM    4(R5),X'01'       14-BIT SCREEN ADDRESSING SUPPORTED?
         BZ    NXTSBFLD          NO.
         OI    MODESW,ADR14      YES, REMEMBER THIS.
         B     NXTSBFLD          EXTENDED CAPABILITY NOW FLAGGED.
QUERYSUM SLR   R14,R14
         LA    R2,4(,R5)         POINT TO FIRST QCODE IN LIST.
         ICM   R14,3,0(R5)       GET LENGTH OF WHOLE SUBFIELD.
         LA    R0,4
         SR    R14,R0            GET NUMBER OF QCODES IN LIST.
QRYSUMLP CLI   0(R2),X'B2'       LINE TYPE?
         BE    QUERYVEC          YES, SEEMS VECTOR GRAPHICS SUPPORTED.
         LA    R2,1(,R2)         POINT TO NEXT QCODE.
         BCT   R14,QRYSUMLP      CHECK IT.
         B     NXTSBFLD          LOOK FOR NEXT QUERY REPLY SUB-FIELD.
QUERYVEC OI    MODESW,VCTR       FLAG NATIVE 3270 VECTOR GRAPHICS.
         B     NXTSBFLD          EXTENDED CAPABILITY NOW FLAGGED.
QUERYCMP OI    GRAFLAGS,CMP      FLAG IBM COMPATIBILITY.
         B     NXTSBFLD          EXTENDED CAPABILITY NOW FLAGGED.
INITEXCP SLR   R15,R15           SET THE ENTRY CODE OF ZERO.
         L     R11,EXCPIOAD      GET EXCP I/O ROUTINE ENTRY POINT.
         BASSM R14,R11           OPEN THE EXCP FILE.
INITDONE MVI   BUFFER,X'3C'      INDICATE EMPTY SCREEN TO SCRNPRNT.
         CLC   EIGHTY,COLUMNS+2  IN EIGHTY COLUMN MODE?
         BE    INITSIZE          YES, USE CURRENT SCREEN DIMENSIONS.
         MVC   OLDSIZE,LINES     NO, SAVE CURRENT SCREEN DIMENSIONS.
         LA    R0,24             GET NEW NUMBER OF LINES.
         LA    R1,80             GET NEW NUMBER OF COLUMNS.
         STM   R0,R1,LINES       SAVE FOR FUTURE REFERENCE.
         CLI   TERMSIZE+1,80     IS PRIMARY WIDTH 80 COLUMNS?
         BE    PRIM80OK          YES, GOOD.
         TPUT  WARNMSG,L'WARNMSG NO, ISSUE WARNING.
         B     INITSIZE
PRIM80OK CLI   TERMSIZE,24       IS PRIMARY DEPTH MORE THAN 24 LINES?
         BNH   *+10              NO.
         MVC   LINES+3(1),TERMSIZE
         CLI   TRMALTSZ+1,80     IS ALTERNATE WIDTH 80 COLUMNS?
         BNE   INITSIZE          NO, MIGHT PROVE TO BE A PROBLEM.
         CLI   TRMALTSZ,24       IS ALTERNATE DEPTH MORE THAN 24 LINES?
         BNH   INITSIZE          NO.
         MVC   LINES+3(1),TRMALTSZ
         OI    MODESW3,EWA       FLAG NEED OF ERASE/WRITE ALTERNATE.
         MVI   CLR+1,X'7E'       USE ERASE WRITE ALTERNATE.
INITSIZE LA    R5,124            GET MAXIMUM SUPPORTED LINES.
         C     R5,LINES          IS SCREEN TOO BIG FOR THIS?
         BL    LINECTOK          YES, USE MAXIMUM.
         L     R5,LINES          NO, USE SCREEN LINE COUNT.
LINECTOK BCTR  R5,0              ALLOW FOR HEADING LINE BEFORE BUFFER.
         LA    R1,LL             GET THE LINE LENGTH.
         MR    R4,R1             GET THE DETAIL LINE BUFFER SIZE.
         LA    R1,BUFFER(R5)     POINT PAST "STANDARD" SCREEN BUFFER.
         ST    R1,PAGEND         SAVE FOR LATER TESTS.
         CLI   INCHARS,C' '      ANY INITIAL COMMAND SPECIFIED?
         BNH   FINDOPTN          NO, GO STRAIGHT TO OPTION LOOK-UP.
         STIMER WAIT,BINTVL=TEN  YES, WAIT A TICK TO AVOID S0C9.
         B     EXAMINEC          PROCESS INITIAL REQUEST.
         DROP  R10               INITIAL.
         TITLE 'GLOBAL INITIALIZATION - VARIABLES AND CONSTANTS'
CNFGTOKN DC    XL48'00'         IOC TOKEN AREA.
WARNMSG  DC    C'WARNING: PRIMARY SCREEN WIDTH IS NOT 80 COLUMNS'
SCRNHDR  DC    X'C11140401B404E132841F42842F400001BF8C62842F7'
         DC    CL71' ',X'2841F42842F2',C' ZZ9%'
HDRLEN   EQU   *-SCRNHDR
RESETAID DC    X'27F1C3'        ESCAPE, WRITE, WCC.
QUERY    DC    X'F3000501FF02'  WRITE STRUCTURED FIELD, QUERY.
*UERY    DC    X'F300064000F1C3000501FF02' WSF, 3270DS, WRT+WCC, QUERY.
PSBWSF   DC    X'F3'            WSF TO LOAD SYMBOLS INTO PSB.
SYMFIELD DC    AL2(ADDSYMLN)    STRUCTURED FIELD LENGTH. (SINGLE-PLANE)
         DC    X'0641CB41'      LPS-ID,BASIC+CLR+TYP1,LCID,FIRST-SYM.
STGID1   DC    X'03'            READ/WRITE STORAGE ID.
         DC    XL18'00000003061E37FFFF010000000000000000'  X'41'
         DC    XL18'07800000000F1F3FFFFFFFFF7F3F1B0C0402'  X'42'
         DC    XL18'1FF80000FFFFFFFFFFFFFFFFFFFFFF3E3030'  X'43' "ROO"
         DC    XL18'3FF8000000C0F0F8FEFEFFFFFDF080000000'  X'44'
         DC    XL18'00700000000000000000000080C0E070381C'  X'45'
         SPACE
         DC    XL18'000000000000000001070E38C00000000000'  X'46'
         DC    XL18'03003030303070E0C0000000000000000000'  X'47' ROO24
         DC    XL18'000007010000000000000000000000000000'  X'48'
         DC    XL18'40000080FC00000000000000000000000000'  X'49'
         SPACE
         DC    XL18'00001B0C0402000000000000010700000000'  X'4A'
         DC    XL18'8030FF3E30303030303070E0C00000000000'  X'4B'
         DC    XL18'800000000000000000000000000000000000'  X'4C' ROO32
         DC    XL18'0000E070381C070100000000000000000000'  X'4D'
         DC    XL18'0400000000000080FC000000000000000000'  X'4E'
         DC    XL18'00000E38C000000000000000000000000000'  X'4F'
         SPACE
         DC    XL18'000000000000000000000000000000000000'  X'50'
         DC    XL18'000000000000000000000000000000000000'  X'51'
         DC    XL18'000000000000000000000000000000000000'  X'52'
         DC    XL18'000000000000000000000000000000000000'  X'53' AUST.
         DC    XL18'000000000000000000000000000000000000'  X'54'
         DC    XL18'000000000000000000000000000000000000'  X'55'
         DC    XL18'000000000000000000000000000000000000'  X'56'
         SPACE
         DC    XL18'FF8011B2B252531212121200000000000000'  X'57'
         DC    XL18'88008F484848C84848484F00000000000000'  X'58' MADE
         DC    XL18'7F003E2020203C2020203E00000000000000'  X'59'
         SPACE
         DC    XL18'F00000002929C70101060000000000000000'  X'5A'  BY
         SPACE
         DC    XL18'1C003C428100000081836519000000000000'  X'5B'
         DC    XL18'000000000000002E31202020000000000000'  X'5C' GREG
         DC    XL18'010000000000003C42FE403F000000000000'  X'5D'
         DC    XL18'008000000000003A46C23E02463800000000'  X'5E'
         SPACE
         DC    XL18'FFC0F008040408F203020202000000000000'  X'5F'
         DC    XL18'04000000000800C8390A0C08000000000000'  X'60' PRICE
         DC    XL18'04000000000000F089838578000000000000'  X'61'
         DC    XL18'05400000000000E010F000E0000000000000'  X'62'
ADDSYMLN EQU   *-SYMFIELD
PSBLEN   EQU   *-PSBWSF
         SPACE
         LTORG
         SPACE
PSFWSF   DC    X'F3'            WSF TO LOAD SYMBOLS INTO PSF.
*  BLUE PLANE
PLNFIELD DC    AL2(ADDPLNLN)    STRUCTURED FIELD LENGTH. (TRIPLE-PLANE)
         DC    X'06C1CB41'      LPS-ID,EXT+CLR+TYP1,LCID,FIRST-SYM.
STGID3   DC    X'03'            READ/WRITE STORAGE ID.
         DC    X'060009100001'  LENE,FLAGS,WIDTH,DEPTH,SUBSN,PLANE.
         DC    X'000100000000000000000000080008400000'   X'41'
         DC    X'000000000003073A65840000010000000000'   X'42'
         DC    X'1600010A3FFFB64122280400000000000000'   X'43'
         DC    X'FA00FCFFFFFF488858000000000000012BF3'   X'44'
         DC    X'704F00E0A0D65205F4DE1F3F2F7F6BF7EFEF'   X'45'
         DC    X'036F00000000404050C8F4ABEDFDF7FDFBDF'   X'46'
         DC    X'0015000000000000000000000080A060D068'   X'47'
         DC    X'0000000000020200020202020502074B1F57'   X'48'
         DC    X'01FE00000000000000000040808186878F8F'   X'49'
         DC    X'083F00000403ECF000000040C0C060FAF8B8'   X'4A'
         DC    X'1001000000008000000000033F6F3F3F1F1F'   X'4B'
         DC    X'00FF397B3E5E1F3F7F5FBFFFFFFFDFBFFFFF'   X'4C'
         DC    X'BFFFCF1FFFFFFFFFFFFFFFFFFFFFFFFFFFFF'   X'4D'
         DC    X'FFFFFFF7FEFFFFFFFFFFFFFFFFFFFFFFFFFF'   X'4E'
         DC    X'FFFFD45EF0FFAAFFB6FDF7FFFAFFF7FFFEFD'   X'4F'
         DC    X'0A2F000000000000008080C0A080A060D040'   X'50'
         DC    X'00002D1F2B0B2FDFBDEF971F7717AF1B370F'   X'51'
         DC    X'FFF79BCFE6EFFFFFFFFFFFFFFFFFFFFFFFFF'   X'52'
         DC    X'FFFFFBFFFBFBFCE4F0F9F0FCFEFEFFFFFFFF'   X'53'
         DC    X'7F4F3F7FFFFFFEFCF0C0C06031FF3F83FFFF'   X'54'
         DC    X'F4FFFFEFE3D77FFFFFD5FCA358DFBFFFF7DF'   X'55'
         DC    X'FFDFFFFFFFFFFFFFFFFFFF2780E0F9F0FCFF'   X'56'
         DC    X'FFE7FFFFFFFFFFFFFFFFFFFFFF779F3F9FFF'   X'57'
         DC    X'FFFFFBFFF6FFFEFBFEFFFDFFFFEFFFFBFD7E'   X'58'
         DC    X'7B7FF088D0F0A0E8B0D0F0A068D060509060'   X'59'
         DC    X'00003B673D270F0507050A02010001000000'   X'5A'
         DC    X'EED4FFFFFFFF7FFFFFFFFF7FEBBFDF3F57AF'   X'5B'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'   X'5C'
         DC    X'FFFFFFFFFFFFFFFFFEFCFCFCFEFEFEFFFFFF'   X'5D'
         DC    X'FC01FFFFF1E0E0C000000000000000077FFF'   X'5E'
         DC    X'80079E1C1C0C0000000000000000000080E0'   X'5F'
         DC    X'C801FFFFFFFFFF7F3F3F1F1F1F1F3F7FFFF5'   X'60'
         DC    X'FFB5FDFBDEFBFED6FFFAF6DD72DAB46AA054'   X'61'
         DC    X'ECA0C050A080408000804000000000000000'   X'62'
         DC    X'00003B150D0B010001000000000000000000'   X'63'
         DC    X'6C00FFFFBFFF5F7AAF552A0B040100000000'   X'64'
         DC    X'FEE8FFFFFFFFFFFFFFDFB66F6B9DBF3F0100'   X'65'
         DC    X'FFDEFFFFFFFFFFFFFFFF7FD5BF55FFFFFF00'   X'66'
         DC    X'FF4CE1FFF9FFFFFBFFFDFBD6B0DA00C00000'   X'67'
         DC    X'DDA0FFDBEB9B6AFAADE82080000000000000'   X'68'
         DC    X'7400E0806080400000000000000000000000'   X'69'
ADDPLNLN EQU   *-PLNFIELD
*   RED PLANE
         DC    AL2(ADDPLNLN)    STRUCTURED FIELD LENGTH. (TRIPLE-PLANE)
         DC    X'06C1CB41'      LPS-ID,EXT+CLR+TYP1,LCID,FIRST-SYM.
         DC    X'03'            READ/WRITE STORAGE ID.
         DC    X'060009100002'  LENE,FLAGS,WIDTH,DEPTH,SUBSN,PLANE.
         DC    X'000000000000000000000000000000000000'   X'41'
         DC    X'000000000000000000000000000000000000'   X'42'
         DC    X'00000002003500000000000000000000000C'   X'43'
         DC    X'0000F007994B000000000000000000000000'   X'44'
         DC    X'100000C00080000000000000000000000000'   X'45'
         DC    X'000000000000000000000000000000000000'   X'46'
         DC    X'000000000000000000000000000000000000'   X'47'
         DC    X'000000000000000000000804180830000000'   X'48'
         DC    X'000000000040404080000000000000000000'   X'49'
         DC    X'080000000403ECF000000000000000000000'   X'4A'
         DC    X'D000F0000000000000000000000000000000'   X'4B'
         DC    X'000000000000000000000000000000000000'   X'4C'
         DC    X'000000000000000000000000000000000000'   X'4D'
         DC    X'000000000000000000000000000000000000'   X'4E'
         DC    X'000000000000000000000000000000000000'   X'4F'
         DC    X'000000000000000000000000000000000000'   X'50'
         DC    X'000000000000000000000000000000000000'   X'51'
         DC    X'000000000000000000000000000000000000'   X'52'
         DC    X'000000000000000000000000000000000000'   X'53'
         DC    X'000000000000000000000000000000000000'   X'54'
         DC    X'000000000000000000000000000000000000'   X'55'
         DC    X'000000000000000000000000000000000000'   X'56'
         DC    X'000000000000000000000000000000000000'   X'57'
         DC    X'000000000000000000000000000000000000'   X'58'
         DC    X'000000000000000000000000000000000000'   X'59'
         DC    X'000000000000000000000000000000000000'   X'5A'
         DC    X'000000000000000000000000000000000000'   X'5B'
         DC    X'000000000000000000000000000000000000'   X'5C'
         DC    X'000000000000000001030000000000000000'   X'5D'
         DC    X'018000000000000000000000000000000000'   X'5E'
         DC    X'000000000000000000000000040603031E00'   X'5F'
         DC    X'000000000000000000000000000000000000'   X'60'
         DC    X'000000000000000000000000000000000000'   X'61'
         DC    X'000000000000000000000000000000000000'   X'62'
         DC    X'000000000000000000000000000000000000'   X'63'
         DC    X'000000000000000000000000000000000000'   X'64'
         DC    X'00080000000000000000000000009F3F0000'   X'65'
         DC    X'000E000000000000000000000000FFFFFC00'   X'66'
         DC    X'000C00000000000000000000000000800000'   X'67'
         DC    X'000000000000000000000000000000000000'   X'68'
         DC    X'000000000000000000000000000000000000'   X'69'
* GREEN PLANE
         DC    AL2(ADDPLNLN)    STRUCTURED FIELD LENGTH. (TRIPLE-PLANE)
         DC    X'06C1CB41'      LPS-ID,EXT+CLR+TYP1,LCID,FIRST-SYM.
         DC    X'03'            READ/WRITE STORAGE ID.
         DC    X'060009100004'  LENE,FLAGS,WIDTH,DEPTH,SUBSN,PLANE.
         DC    X'000000000000000000000103071F373FBF7F'   X'41'
         DC    X'00FF0000000000051A7BFFFFFEFFFFFFFFFF'   X'42'
         DC    X'09FF0002003549BEDDD7FBFFFFFFFFFFFFFF'   X'43'
         DC    X'05FFF007994BB777A7FFFFFFFFFFFFFED40C'   X'44'
         DC    X'1EB000C000A8ADF80301E0C0C08094081010'   X'45'
         DC    X'040000000000000000000000000000000000'   X'46'
         DC    X'000000000000000000000000000000000000'   X'47'
         DC    X'000000010301050709081C1C183830200000'   X'48'
         DC    X'FE00FFFFFFFFFFFFFFFFFFBF7F7E79787070'   X'49'
         DC    X'FFC0FFFFFFFFFFFFFFFFFFBF3F3F9F050747'   X'4A'
         DC    X'FFFEFFFFFFFF7FFFFFFFFFFCC090C0C0E0E0'   X'4B'
         DC    X'FF00C684C1A1E0C080A04000000020400000'   X'4C'
         DC    X'400030E00000000000000000000000000000'   X'4D'
         DC    X'000000000000000000000000000000000000'   X'4E'
         DC    X'000000000000000000000000000000000000'   X'4F'
         DC    X'000000000000000000000000000000000000'   X'50'
         DC    X'0000004040C0800000000000000000000000'   X'51'
         DC    X'000064301910000000000000000000000000'   X'52'
         DC    X'000004000404031B0F060F03010100000000'   X'53'
         DC    X'80B0C080000001030F3F3F9FCE00C07C0000'   X'54'
         DC    X'0B0000101C288000002A035CA72040000820'   X'55'
         DC    X'0020000000000000000000D87F1F060F0300'   X'56'
         DC    X'001800000000000000000000008860C06000'   X'57'
         DC    X'000000000000000000000000000000000080'   X'58'
         DC    X'000000000000000000000000000000000000'   X'59'
         DC    X'000000000000001000000000000000000000'   X'5A'
         DC    X'000000000000000000000000000000000000'   X'5B'
         DC    X'000000000000000000000000000000000000'   X'5C'
         DC    X'000000000000000001030303010101000000'   X'5D'
         DC    X'03FE00000E1F1F3FFFFFFFFFFFFFFFF88000'   X'5E'
         DC    X'7FF861E3E3F3FFFFFFFFFFFFFFFFFFFF7F1F'   X'5F'
         DC    X'37FE000000000080C0C0E0E0E0E0C0800000'   X'60'
         DC    X'000000002000000000000000000000000080'   X'61'
         DC    X'000000000000000000000000000000000000'   X'62'
         DC    X'000000000000000000000000000000000000'   X'63'
         DC    X'000000000000000000000000000000000000'   X'64'
         DC    X'00080000000000000000000000009F3F0000'   X'65'
         DC    X'000E000000000000000000000000FFFFFC00'   X'66'
         DC    X'000C1E000600000000000000000000800000'   X'67'
         DC    X'000000000004000000000000000000000000'   X'68'
         DC    X'000000000000000000000000000000000000'   X'69'
PSFLEN   EQU   *-PSFWSF
         SPACE
         DC    XL18'7F80E2121212F21212121100000000000000'  X'50'
         DC    XL18'008047484848474040488700000000000000'  X'51'
         DC    XL18'47003E080808080808080800000000000000'  X'52'
         DC    XL18'0000F0898989F1C1A1918900000000000000'  X'53' AUST.
         DC    XL18'8800C4242424E42424242700000000000000'  X'54'
         DC    XL18'008043444444474444444400000000000000'  X'55'
         DC    XL18'880011999995959593939100000000000000'  X'56'
         SPACE
         DS    0H
         TITLE 'STORAGE AVAILABILITY EXCEPTION DETECTION ROUTINE'
         USING STORCHEK,R11
STORCHEK L     R3,RMCTADDR       POINT TO THE RMCT.
         USING RMCT,R3
         L     R3,RMCTMCT        POINT TO THE MCT.
         DROP  R3                RMCT.
         USING MCT,R3
*                                SQA SHORTAGE?
         TM    MCTSFLGS,MCTSQA1+MCTSQA2
         BNZ   STGSHORT          YES.
*                                AUXILIARY STORAGE SHORTAGE?
         TM    MCTOFLGS,MCTASM1+MCTASM2
         BNZ   STGSHORT          YES.
*                                REAL/PAGEABLE STORAGE SHORTAGE?
         TM    MCTCFLGS,MCTRLSHT+MCTB16SH+MCTDRSHT+MCTB2GSH
         BNZ   STGSHORT          YES.
         DROP  R3                MCT.
         SPACE
         MVI   BUSYATTR+2,X'F4'  NO, PUT CPU BUSY BACK TO UNDERSCORE.
         TM    MODESW2,AUTH      APF AUTHORIZED?
         BZR   R14               NO, RETURN.
         TM    MODESW3,TSU       TIME SHARING USER?
         BZR   R14               NO, RETURN.
         L     R3,PSAAOLD        POINT TO THE CURRENT ASCB.
         L     R3,ASOUCB(,R3)    POINT TO THE CURRENT OUCB.
         USING OUCB,R3
         TM    OUCBSFL,OUCBNSW   NON-SWAPPABLE?
         BZR   R14               NO, RETURN.
         DROP  R3                OUCB.
         MODESET MF=(E,MDSTSUP0) GET AUTHORIZED FOR SYSEVENT.
         SYSEVENT OKSWAP         YES, BECOME SWAPPABLE.
         MODESET MF=(E,MDSTPROB) BACK TO PROBLEM STATE AND KEY.
         BR    R14               RETURN.
         SPACE
STGSHORT MVI   BUSYATTR+2,X'F2'  MAKE CPU UTILIZATION REVERSE VIDEO.
         TM    MODESW2,AUTH      APF AUTHORIZED?
         BZR   R14               NO, RETURN.
         TM    MODESW3,TSU       TIME SHARING USER?
         BZR   R14               NO, RETURN.
         L     R3,PSAAOLD        POINT TO THE CURRENT ASCB.
         L     R3,ASOUCB(,R3)    POINT TO THE CURRENT OUCB.
         USING OUCB,R3
         TM    OUCBSFL,OUCBNSW   NON-SWAPPABLE?
         BOR   R14               YES, RETURN.
         DROP  R3                OUCB.
         MODESET MF=(E,MDSTSUP0) GET AUTHORIZED FOR SYSEVENT.
         SYSEVENT DONTSWAP       NO, BECOME NON-SWAPPABLE.
         MODESET MF=(E,MDSTPROB) BACK TO PROBLEM STATE AND KEY.
         BR    R14               RETURN.
         SPACE
         DROP  R11               STORCHEK.
         TITLE 'EXTRACT SMS VLD (VOLUME DESCRIPTION) ROUTINE'
*              INPUT - ADDRESS OF VOLUME SERIAL NUMBER IN REGISTER 1.
*              OUTPUT- ADDRESS OF VLD IN WORD 0 OF SAVE AREA
*                      CHAINED FORWARD FROM CALLER'S SAVE AREA.
         SPACE
         USING GETVLD,R11
GETVLD   DS    0H                 DETERMINE STORAGE GROUP OF DISK.
         STM   R14,R12,12(R13)    SAVE CALLER'S REGISTERS.
         LR    R11,R15            SET NEW BASE REGISTER.
         LR    R3,R13             POINT TO SUPPLIED SAVE AREA.
         A     R13,WORKSIZE       POINT TO THIS ROUTINE'S WORK AREA.
         ST    R13,8(,R3)         CHAIN FORWARD.
         ST    R3,4(,R13)         CHAIN BACKWARD.
         MVC   72(6,R13),0(R1)    COPY INPUT VOLUME SERIAL NUMBER.
         LA    R1,80(,R13)        POINT TO SSOB AREA.
         USING SSOB,R1
         MVC   SSOBID,=C'SSOB'    LOAD SSOB IDENTIFIER.
         LA    R0,SSOBHSIZ        LOAD SSOB LENGTH.
         STH   R0,SSOBLEN
         LA    R0,SSOBSSMS        LOAD SSOB FUNCTION CODE TO 55.
         STH   R0,SSOBFUNC
         L     R2,CVTPTR(,0)      POINT TO THE CVT.
         USING CVT,R2
         L     R2,CVTJESCT        POINT TO THE JESCT.
         DROP  R2                 CVT.
         USING JESCT,R2
         L     R2,JESCTEXT        POINT TO PAGEABLE JESCT ENTENSION.
         DROP  R2                 JESCT.
         USING JESPEXT,R2
         LA    R15,12             PREPARE FOR NO SMS SUBSYSTEM.
         ICM   R2,15,JESSMSIB     POINT TO THE SMS SSIB.
         BZ    SKIPVLD            NO SSIB SO SKIP SMS CALL.
         DROP  R2                 JESPEXT.
         ST    R2,SSOBSSIB        SAVE THE SSIB ADDRESS.
         XC    SSOBRETN,SSOBRETN  RESET SUBSYSTEM RETURN CODE.
         LA    R2,SSOB+SSOBHSIZ   POINT PAST SSOB HEADER.
         ST    R2,SSOBINDV        LOAD FUNCTION-DEPENDENT AREA PTR.
         USING IEFSSSA,R2
         LA    R0,SSSALN+SSSA1LN  LOAD SSOB SMS EXTENTION LENGTH.
         STH   R0,SSSALEN
         MVC   SSSAID,=C'SSSA'    SUPPLY IDENTIFIER.
         MVI   SSSAVER+1,SSOBSSVR SUPPLY VERSION INDICATOR.
         MVI   SSSASFN+1,SSSAACTV SUPPLY SUB-FUNCTION CODE.
         TM    MODESW2,AUTH       APF AUTHORIZED?
         BO    *+8                YES.
         MVI   SSSAIFLG,SSSANAUT  NO, INDICATE NON-AUTHORIZED CALLER.
         MVI   SSSA1TYP,SSSA1VOL  FLAG VOLSER IS SUPPLIED.
         MVI   SSSA1CNT+3,1       FLAG ONE CONSTRUCT PASSED.
         MVI   SSSA1NML+1,6       SET VOLUME SERIAL NUMBER LENGTH.
         MVC   SSSA1NAM(6),72(R13)    LOAD VOLUME SERIAL NUMBER.
         DROP  R1                 SSOB.
         ST    R1,0(,R13)         SAVE PARAMETER LIST ITEM.
         OI    0(R13),X'80'       INDICATE ONLY ITEM IN LIST.
         TM    MODESW2,AUTH       APF AUTHORIZED?
         BZ    SSAUTHOK           NO.
         MODESET MF=(E,MDSTSUP0)  YES, ENHANCE PRIVILEGES.
SSAUTHOK LA    R1,0(,R13)         POINT TO PARAMETER LIST.
         IEFSSREQ ,               PASS REQUEST TO SUB-SYSTEM INTERFACE.
         ICM   R0,15,SSSA1PTR     AREA RETURNED?
         BZ    *+8                NO, RETURNED SIZE IRRELEVANT.
         L     R0,SSSA1ALN        YES, GET SIZE OF RETURNED DATA.
         ST    R0,SSSA1LEN        REUSE SAME RETURN AREA.
         DROP  R2                 SSSA.
         LR    R2,R15             COPY SSI RETURN CODE.
         TM    MODESW2,AUTH       APF AUTHORIZED?
         BZ    SKIPVLD            NO.
         MODESET MF=(E,MDSTPROB)  YES, FORFEIT PRIVILEGES.
SKIPVLD  L     R13,4(,R13)        POINT BACK TO CALLER'S SAVE AREA.
         ST    R2,16(,R13)        SAVE SSI RETURN CODE.
         LM    R14,R12,12(R13)    RESTORE CALLER'S REGISTERS.
         BR    R14                RETURN TO CALLER.
         SPACE
         DROP  R11                GETVLD.
         SPACE 2
         LTORG
         DC    0H
         TITLE 'FETCH ECMB FOR UCB ROUTINE'
*              INPUT - UCB ADDRESS IN REGISTER 1.
*              OUTPUT- 32-BYTE ECMB AT SECWORKA+48
*                      RETURN CODE IN REGISTER 15.
         SPACE
         DROP  R13                GOTAREA.
         USING GOTAREA,R10
         USING IOSECMB$,R11
IOSECMB$ BAKR  R14,0
         LR    R11,R15
         LR    R10,R13
         LA    R13,SECWORKA+112   POINT TO 36-WORD SAVE AREA.
         ST    R1,SECWORKA+32     SET UCB ADDRESS.
         LR    R3,R1
         XC    0(144,R13),0(R13)  SIMPLY DEBUGGING.
         USING UCBOB,R3
         MODESET MF=(E,MDSTSUP0)  ACQUIRE REQUIRED AUTHORIZATION.
         CLI   UCBID,UCBSTND      REAL UCB OR JUST A COPY?
         BE    IOSEREAL           REAL UCB.
         UCBLOOK DEVN=UCBCHAN,    NOMINATE DEVICE NUMBER LOCATION.     +
               UCBPTR=SECWORKA+32, NOMINATE UCB ADDRESS SAVE AREA.     +
               LOC=ANY,           SEARCH ALL UCB LOCATIONS.            +
               NOPIN,             DO NOT PIN ANY UCB.                  +
               DYNAMIC=YES,       INCLUDE ALL UCB TYPES.               +
               RANGE=ALL,         INCLUDE ALL UCB NUMBERS.             +
               MF=(E,UCBLKLS,COMPLETE)
         LTR   R15,R15            SUCCESS?
         BZ    IOSEREAL           YES, CONTINUE.
         PR    ,                  RETURN TO CALLER.
         DROP  R3                 UCBOB.
IOSEREAL LA    R0,SECWORKA+48     GET ECMB ADDRESS.
         ST    R0,SECWORKA+36     SET ECMB ADDRESS.
         IOSCMB GET,                                                   +
               UCBPTR=SECWORKA+32,                                     +
               CMBAREA=SECWORKA+36,                                    +
               CMBLEN=32,                                              +
               MF=(E,IOSCMBL,COMPLETE)
         PR    ,                  RETURN TO CALLER.
         DROP  R11,R10            IOSECMB$, GOTAREA.
         USING GOTAREA,R13
         LTORG
         DC    0H
         SPACE
         COPY  IMPCMW            "WINDOW" SCREEN MANAGER.
         SPACE
         COPY  IMPXAA            OPTION "A".
         SPACE
         COPY  IMPXAD            OPTION "D".
         SPACE
         COPY  IMPXAC            OPTION "C".
         SPACE
         COPY  IMPXAS            OPTION "S".
         SPACE
         COPY  IMPCME            OPTION "E".
         SPACE
         COPY  IMPXAP            OPTION "P".
         SPACE
         COPY  IMPXAF            OPTION "F".
         SPACE
         COPY  IMPXAJ            OPTION "J".
         SPACE
         COPY  IMPXAL            OPTION "L".
         SPACE
         COPY  IMPXAV            OPTION "V".
         SPACE
         COPY  IMPXAB            OPTION "B".
         SPACE
         COPY  IMPXAT            OPTION "T".
         SPACE
         COPY  IMPXAR            OPTION "R".
         SPACE
         COPY  IMPXAO            OPTION "O".
         SPACE
         COPY  IMPXAM            OPTION "M".
         SPACE
         COPY  IMPXAU            OPTION "U".
         SPACE
         COPY  IMPXAN            OPTION "N".
         SPACE
         COPY  IMPCM$            OPTION "$".
         SPACE
         COPY  IMPXAG            OPTION "G".
         SPACE
         COPY  IMPCMK            OPTION "K".
         SPACE
         COPY  IMPXA@            OPTION "@".
         SPACE 2
         DS    0D                END OF CSECT.
         TITLE 'COMMON AREA - UNINITIALIZED FIXED LENGTH WORK AREA'
IMPXACOM COM
PGDSTABL DC    64XL12'00'       TWELVE BYTE ENTRY PER D/SET:
*                    WD1=XFER CNT, WD2=I/O CNT, WD3=T-O-D FOR COUNTERS.
*                               (MVS/XA MAXIMUM = 256 PAGE + 256 SWAP.)
UDXLARGE DS    10A              ADDRESS OF LARGEST EXTENT ENTRIES.
UNITOCYL DS    F                CYLINDER NUMBER OF PREVIOUS I/O.
UCYLHI   DS    H                HIGHEST CYLINDER ACCESSED IN SAMPLE.
UCYLOW   DS    H                LOWEST CYLINDER ACCESSED IN SAMPLE.
UNITSCYL DS    73H              CYLINDER RANGE SAMPLES.
UNITJCYL DS    73H              CYLINDER RANGES NOT FOR JOB PREFIX.
UNITHDMV DS    73H              HEAD MOVEMENT RANGE SAMPLES.
UNITHDJB DS    73H              HEAD MOVEMENTS NOT FOR JOB PREFIX.
         DS    0F               ALIGNMENT AID.
         DS    H
ULOGREC  DS    0H               UNIT ACTIVITY LOGGING RECORD.
ULOGFLG  DS    XL1              RECORD FLAG BYTE.
ULOGRTY  DS    XL1              RECORD TYPE.
ULOGTIME DS    XL4              CENTISECOND TIMESTAMP.
ULOGDATE DS    XL4              DATESTAMP.
ULOGSID  DS    CL4              SYSTEM IDENTIFIER.
ULOGCOMP DS    CL4              COMPONENT IDENTIFIER.
ULOGSBTY DS    H                RECORD SUB-TYPE.
UNITHHMM DS    H                UNIT SAMPLE TIMESTAMP.
HDGUCODE DS    X                HEADING GUFF CODE.
ULOGUNIT DS    CL3              UNIT UCB NAME.
UNITTYPE DS    XL4              UCB TYPE FIELD.
UTIMEB4  DS    F                BINARY TIME-OF-DAY BEFORE SAMPLING.
UTIMEAFT DS    F                BINARY TIME-OF-DAY AFTER SAMPLING.
UIOCNTB4 DS    F                DASD I/O COUNTS BEFORE SAMPLING.
UIOCNTAF DS    F                DASD I/O COUNTS AFTER SAMPLING.
UIOTIMB4 DS    F                DASD I/O ELAPSED TIME BEFORE SAMPLING.
UIOTIMAF DS    F                DASD I/O ELAPSED TIME AFTER SAMPLING.
ULOGZERO DS    0XL18            COUNTERS TO BE RESET BEFORE SAMPLING.
UNITQLEN DS    F                TOTAL OF SAMPLED QUEUE LENGTHS.
UNITRCNT DS    F                TOTAL OF SAMPLED RESERVE COUNTS.
UNITQUED DS    H                SAMPLE COUNT OF I/O QUEUING.
UNITRSVD DS    H                SAMPLE COUNT OF H/W RESERVE ACTIVE.
UNITBUSY DS    H                SAMPLE COUNT OF UNIT BUSY.
UNITDEFR DS    H                SAMPLE COUNT OF CONTROL UNIT BUSY.
UNITNRDY DS    H                SAMPLE COUNT OF UNIT NOT READY.
UNITCPU  DS    H                CCVUTILP AT SAMPLING TIME.
DASDALOC DS    H                DASD ALLOCATION COUNT AFTER SAMPLING.
DASDOPEN DS    H                DASD OPEN COUNT AFTER SAMPLING.
THEVOLUM DS    CL6              VOLUME SERIAL AT TIME OF SAMPLING.
DASDLSPC DS    CL40             LSPACE MESSAGE BUFFER.
UNITSCHR DS    100CL14          UNIT ACTIVITY SAMPLE ENTRIES.
* JOB/ASID 0-7  FSN/CYL 8-9  HEAD 10  REC 11  FLAGS 12  CHN# 13
*              FLAG BYTE BIT SETTINGS:
ULNOTRDY EQU   X'80'            DEVICE NOT READY.
ULIOADDR EQU   X'40'            FSN OR DISK I/O ADDRESS LOADED.
ULOFFLIN EQU   X'20'            DEVICE OFFLINE.
ULREWIND EQU   X'10'            TAPE UNIT REWINDING.
ULBOXED  EQU   X'08'            DEVICE BOXED OFFLINE.
*        EQU   X'04'            UNUSED.
*        EQU   X'02'            UNUSED.
*        EQU   X'01'            UNUSED.
UNITSUMM DS    CL79             SYSTEM SUMMARY AT SAMPLING TIME.
         ORG   ULOGREC+2048     RESERVE SPACE FOR FUTURE EXPANSION.
UNITJBSY DS    H                UNIT BUSY COUNT FOR JOB PREFIX.
         DS    0H               ENSURE HALFWORD ALIGNMENT FOR UNITSJOB.
UNITSJOB DS    101CL10          UNIT ACTIVITY JOB PROFILE.
* JOB/ASID@ 0-3  LO-CYL 4-5  HI-CYL 6-7  COUNT 8-9
IMCOMEND DS    0D               END OF COMMON AREA.
IMCOMSIZ EQU   IMCOMEND-IMPXACOM
         SPACE 2
         END   IMPXA
