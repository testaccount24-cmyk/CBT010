*        COPYRIGHT (C) 1986,1994,1998,2011  PRYCROFT SIX PTY LTD
         TITLE 'WINDOW MANAGER'
         USING WNDWMNGR,R15
WNDWMNGR ST    R11,WINSVR11      SAVE CALLING OPTION'S BASE ADDRESS.
         ST    R14,WINSVR14      SAVE CALLING OPTION'S RETURN ADDRESS.
         DROP  R15               WNDWMNGR.
         LR    R11,R15           INITIALIZE BASE REGISTER.
         USING WNDWMNGR,R11
         STM   R14,R12,SAVE+12   SAVE GENERAL REGISTER VALUES.
         LTR   R0,R0             ANY DATA TO DISPLAY?
         BNP   WINPARSE          NO, GET REQUEST AND/OR PERFORM PARSE.
         TM    MODESW2,COL1
         BO    WINDSPOK
         MVI   HEADATTR+1,X'60'  SHOW WINDOW HEADING IN LOW INTENSITY.
         MVI   HEADATTR+5,X'F6'  YELLOW.                        (I3279)
         ICM   R0,3,WINHDGCT     ANY FIXED HEADINGS?
         BNZ   WINCLROK          YES, LEAVE FIRST LINE YELLOW.
         MVI   HEADATTR+5,X'F7'  NO, WHITE FOR FIRST LINE.      (I3279)
WINCLROK MVC   HEADING,BLANKS
         MVC   HEADING+2(6),=C'System'
         L     R1,SMCAADDR       POINT TO THE SMCA.
         MVC   HEADING+9(4),16(R1)   SHOW THE SYSTEM IDENTIFIER.
         TIME  DEC               GET THE DISPLAY TIMESTAMP.
         STM   R0,R1,WORK
         UNPK  HEADING+27(3),WORK(2)
         MVI   HEADING+29,C':'
         UNPK  HEADING+30(3),WORK+1(2)
         MVI   HEADING+32,C':'
         UNPK  HEADING+33(3),WORK+2(2)
         MVI   HEADING+35,C'.'
         UNPK  HEADING+36(3),WORK+3(2)
         MVI   HEADING+38,C' '
         AP    WORK,=P'1900000'  SHOW THE FOUR-DIGIT YEAR.
         UNPK  HEADING+15(5),WORK+4(3)
         L     R7,DTCONVAD       GET DATE CONVERSION ENTRY POINT.
         BASR  R14,R7            CONVERT THE JULIAN DATE.
         MVC   HEADING+17(8),WORK   SHOW THE CURRENT DATE.
         L     R9,CCTADDR        GET CCT ADDRESS.
         LH    R9,UTILP(,R9)     LOAD CCVUTILP (CPU BUSY %).
         CVD   R9,WORK           CONVERT IT TO DECIMAL.
         MVC   BUSY,ED3          MOVE IN THE EDIT MASK.
         ED    BUSY,WORK+6       EDIT THE OUTPUT FIELD.
         LA    R9,LINES          POINT TO SCREEN DIMENSIONS.
         ST    R9,WINSIZE        UPDATE THE SIZE VALUES POINTER.
         CLI   OLDCOLS+3,80      USING A WIDE SCREEN?
         BNH   WINDOWIT          NO.
         L     R15,CRNTOPTN      YES, POINT TO THE CURRENT OPTION.
         TM    2(R15),X'80'      FORCE 80-COLUMN SCREEN FOR THIS ONE?
         BO    WINDOWIT          YES, DO NOT USE WIDE SCREEN.
         LA    R9,OLDSIZE        POINT TO SCREEN SIZE TO USE.
         ST    R9,WINSIZE        UPDATE THE SIZE VALUES POINTER.
         L     R1,4(,R9)         GET SCREEN WIDTH.
         LA    R1,WINLINOH(,R1)  GET DATA STREAM LINE LENGTH.
         LNR   R1,R1             MAKE THIS NEGATIVE.
         AH    R1,WINLNLEN       GET LARGEST SCROLL OFFSET.
         BNM   *+4+2             NON-NEGATIVE IS GOOD.
         SR    R1,R1             ZERO IS MINIUMUM AMOUNT.
         CH    R1,WINOFFST       SCROLLED RIGHT MORE THAN MAXIMUM?
         BNL   WINDOWIT          NO, PROCEED.
         STH   R1,WINOFFST       YES, REDUCE TO MAXIMUM.
         STH   R1,10(,R15)       SAVE IN LOOK-UP ENTRY.
WINDOWIT MVC   HEADING+38(L'HEADING-38),BLANKS
         LA    R15,HEADING+L'HEADING
         LA    R0,WINLINOH       GET 3270 LINE OVERHEAD.
         L     R9,WINSIZE        POINT TO SCREEN DIMENSIONS.
         A     R0,4(,R9)         GET ACCOMMODATABLE LINE LENGTH.
         CH    R0,WINLNLEN       SCREEN WIDE ENOUGH FOR DISPLAY?
         BNL   WINLINDO          YES, DON'T DISPLAY SHOWN COLUMN RANGE.
         LNR   R1,R0             NO, GET NEGATIVE DATA STREAM LENGTH.
         SLR   R0,R0
         ICM   R0,3,WINOFFST     GET SCROLL RIGHT OFFSET.
         BZ    WINCOLOK          BRANCH IF AT LEFT MAX.
         AH    R0,WINLEFT        GET LEFT COLUMN PRESERVE COUNT.
WINCOLOK LR    R2,R0             REMEMBER START COLUMN OFFSET.
         A     R0,4(,R9)         GET FIRST COLUMN PAST SCREEN.
         BCTR  R0,0              ALLOW FOR ATTRIBUTES - GET LAST COL.
         ICM   R14,3,WINOFFST    AT LEFT MAX?
         BZ    WINCOLND          YES, HAVE LAST VISIBLE COLUMN NUMBER.
         SH    R0,WINLEFT        NO, DON'T COUNT PRESERVED COLUMNS.
WINCOLND AH    R1,WINLNLEN       GET LARGEST SCROLL OFFSET.
         CH    R1,WINOFFST       AT RIGHT MAX?
         BZ    WINCOLST          YES, HAVE LAST VISIBLE COLUMN NUMBER.
         SH    R0,WINRIGHT       NO, DON'T COUNT PRESERVED COLUMNS.
WINCOLST BAS   R14,WINHDNUM      SHOW RIGHT-MOST COLUMN NUMBER.
         BCTR  R15,0             POINT BEFORE THIS NUMBER.
         MVI   0(R15),C'-'
         LA    R0,1(,R2)
         BAS   R14,WINHDNUM      SHOW LEFT-MOST COLUMN NUMBER.
         AHI   R15,-6
         MVC   1(4,R15),=C'Cols'
WINLINDO BCTR  R15,0
         L     R0,WINLINES       GET TOTAL LINE COUNT.
         SH    R0,WINHDGCT       SUBTRACT HEADING LINE COUNT.
         BAS   R14,WINHDNUM      SHOW HIGHEST EXTANT LINE NUMBER.
         LR    R2,R0             COPY THIS NUMBER.
         L     R0,WINTOP         GET TOP-OF-SCREEN LINE NUMBER.
         CLR   R0,R2             IS TOP-OF-SCREEN PAST END?
         BNH   WINTOPOK          NO, MAINTAIN CURRENT TOP-OF-SCREEN.
         LA    R0,2              YES, DO A "DOWN MAX".
         AR    R0,R2
         S     R0,0(,R9)         GET FIRST DETAIL LINE NUMBER.
         AH    R0,WINHDGCT       ADJUST FOR OPTION'S HEADING LINES.
         BP    WINADJTP          GO ADJUST THE TOP-OF-SCREEN.
         LA    R0,1              LESS THAN A SCREENFUL - SHOW IT ALL.
WINADJTP ST    R0,WINTOP         ADJUST TOP-OF-SCREEN LINE NUMBER.
WINTOPOK AHI   R15,-4
         MVC   1(2,R15),=C'of'
         BAS   R14,WINHDNUM      SHOW TOP-OF-SCREEN LINE NUMBER.
         AHI   R15,-6
         MVC   1(4,R15),=C'Line'
         LA    R2,BUFFER         INITIALIZE SCREEN BUFFER POINTER.
         MVC   0(80,R2),BLANKS   PREPARE FOR WIDE SCREEN.
         A     R2,4(,R9)         ADD SCREEN WIDTH.
         AHI   R2,-80            POINT TO FIRST DETAIL LINE.
         LH    R0,WINHDGCT       GET THE OPTION'S HEADING LINE COUNT.
         LTR   R0,R0             ARE THE ANY HEADING LINES?
         BZ    WINHDGOK          NO, PROCEED WITH DETAILS LINES.
         L     R1,WINBUFF        YES, POINT TO THE HEADING LINES.
WINLDHDG BAS   R14,WINLDLIN      LOAD A HEADING LINE.
         BCT   R0,WINLDHDG       LOAD THE RIGHT NUMBER OF HEADINGS.
WINHDGOK L     R1,WINTOP         GET TOP-OF-SCREEN LINE NUMBER.
         BCTR  R1,0              MAKE RELATIVE FOR INDEX.
         AH    R1,WINHDGCT       SKIP HEADING LINE DATA.
         MH    R1,WINLNLEN       GET OFFSET INTO BUFFER.
         A     R1,WINBUFF        POINT TO FIRST DETAIL LINE TO SHOW.
         L     R0,0(,R9)         GET NUMBER OF LINES ON SCREEN.
         BCTR  R0,0              ALLOW FOR WINDOW HEADER.
         SH    R0,WINHDGCT       ALLOW FOR OPTION'S HEADING LINES.
WINLDDTL BAS   R14,WINLDLIN      LOAD A DETAIL LINE.
         BCT   R0,WINLDDTL       FILL THE SCREEN UP, IF POSSIBLE.
         ICM   R15,15,WINSUFLN   ANY DATA STREAM SUFFIX TO ADD?
         BM    WINSUFOK          NO, LENGTH CODE IS NEGATIVE.
         L     R1,WINSUFIX       YES, POINT TO IT.
         EX    R15,WINSUFMV      APPEND THE DATA STREAM SUFFIX.
         LA    R2,1(R15,R2)      POINT PAST THE DATA STREAM SUFFIX.
WINSUFOK LA    R1,HOME           POINT TO START OF SCREEN BUFFER.
         LR    R0,R2             POINT TO END OF SCREEN BUFFER.
         SR    R0,R1             GET SCREEN BUFFER LENGTH.
         LM    R2,R12,SAVE+28    RESTORE NON-COMMUNICATION REGISTERS.
WINDSPOK LA    R14,OLDSIZE       POINT TO WIDE SCREEN DIMENSIONS.
         C     R14,WINSIZE       USING A WIDE SCREEN?
         BNE   WINPARSE          NO.
         OI    MODESW,ALTS       YES, NEED ALTERNATE SCREEN SIZE.
WINPARSE BAS   R14,SCREENIO      CALL SCREEN I/O HANDLER.
         CHI   R15,4             ANY DATA READ FROM TERMINAL?
         BE    WINLEAVE          NO.
         TM    MODESW2,XFLG      OPTION EXIT REQUESTED?
         BO    WINLEAVE          YES.
         CLI   INBUFF,2          WRITE ENTIRE REPORT?
         BE    WINWRITE          YES.
         CLI   INBUFF,7          SCROLL UP REQUESTED VIA PFK?
         BE    WINUPKEY          YES.
         CLI   INBUFF,8          SCROLL DOWN REQUESTED VIA PFK?
         BE    WINDNKEY          YES.
         CLI   INBUFF,10         SCROLL LEFT REQUESTED VIA PFK?
         BE    WINLFKEY          YES.
         CLI   INBUFF,11         SCROLL RIGHT REQUESTED VIA PFK?
         BE    WINRTKEY          YES.
         CLI   INBUFF,13         ANY OTHER PROGRAM FUNCTION KEY?
         BL    WINLEAVE          YES, SKIP ANY WINDOWING PROCESSING.
         CLI   INCHARS,C'!'      WRITE ENTIRE REPORT?
         BE    WINWRITE          YES.
         CLI   INCHARS,C'-'      SCROLL UP REQUESTED VIA COMMAND?
         BE    WINUPCMD          YES.
         CLI   INCHARS,C'+'      SCROLL DOWN REQUESTED VIA COMMAND?
         BE    WINDNCMD          YES.
         CLI   INCHARS,C'<'      SCROLL LEFT REQUESTED VIA COMMAND?
         BE    WINLFCMD          YES.
         CLI   INCHARS,C'>'      SCROLL RIGHT REQUESTED VIA COMMAND?
         BE    WINRTCMD          YES.
         CLI   INCHARS,C' '      LOCAL SUBCOMMAND SPECIFIED?
         BNE   WINLEAVE          YES.
         L     R14,CRNTOPTN      POINT TO OPTION'S LOOK-UP ENTRY.
         CLI   0(R14),C'V'       HANDLING ZOOM HERE?
         BNE   WINLEAVE          NO.
         SLR   R1,R1             CLEAR FOR INSERT.
         IC    R1,INBUFF+1       GET RELATIVE LINE NUMBER OF CURSOR.
         CH    R1,WINHDGCT       CURSOR ON A HEADING LINE?
         BNH   WINLEAVE          YES, NOT A ZOOM REQUEST.
         BCTR  R1,0              DISCOUNT WINDOW HEADING.
         BCTR  R1,0              MAKE LINE NUMBER RELATIVE TO ZERO.
         A     R1,WINTOP         CONVERT TO WINDOW LINE NUMBER.
         C     R1,WINLINES       CURSOR BEFORE SUMMARY LINE?
         BNL   WINLEAVE          NO, NOT A ZOOM REQUEST.
         MH    R1,WINLNLEN       YES, GET AN INDEX INTO WINDOW AREA.
         A     R1,WINBUFF        POINT TO DETAIL LINE CONTENTS.
         SLR   R14,R14
         IC    R14,INBUFF+2      GET RELATIVE COLUMN NUMBER.
         LA    R1,LL-80(R14,R1)  POINT TO DATA UNDER CURSOR.
         LA    R0,8              GET MAXIMUM ADDRESS DIGIT LENGTH.
WINZMSCN BCTR  R1,0              BACK UP A BYTE.
         CLI   0(R1),X'24'       FOUND START OF TAB SELECTABLE FIELD?
         BE    WINZMFLD          YES.
         BCT   R0,WINZMSCN       NO.
         B     WINLEAVE          NOT A ZOOM REQUEST.
WINZMFLD MVI   INCHARS,C'B'
         MVC   INCHARS+1(8),1(R1)
         L     R14,PSAAOLD       ENSURE ADDRESS SPACE BROWSE.
         MVC   JBTARGAS,ASID(R14)
         CLI   INCHARS+1,C'0'    DECIMAL FIRST DIGIT?
         BNL   WINLEAVE          YES, LOCAL SUBCOMMAND.
         TR    INCHARS+1(1),W32TO31T-C'A'
WINLEAVE L     R14,WINSVR14      LOAD CALLING OPTION'S RETURN ADDRESS.
         L     R11,WINSVR11      LOAD CALLING OPTION'S BASE ADDRESS.
         BR    R14               RETURN TO CALLING OPTION.
         SPACE
WINUPKEY ICM   R0,15,SCRLAMT     SCROLL AMOUNT ALREADY DETERMINED?
         BNZ   WINUPAMT          YES, USE IT.
WINUPPAG L     R14,WINSIZE       NO, POINT TO NUMBER OF SCREEN LINES.
         L     R0,0(,R14)        GET THE SCREEN LINE COUNT.
         BCTR  R0,0              DISCOUNT WINDOW HEADER.
         SH    R0,WINHDGCT       DISCOUNT OPTION HEADING LINES.
         CLI   INCHARS+1,C'H'    HALF-PAGE SCROLL REQUEST?
         BNE   WINUPAMT          NO, WHOLE PAGE BY DEFAULT.
         SRA   R0,1              YES, HALVE IT.
WINUPAMT LNR   R0,R0             MAKE NEGATIVE FOR UP.
WINEWTOP A     R0,WINTOP         ADJUST TOP-OF-SCREEN LINE NUMBER.
         ST    R0,WINTOP         SAVE THE NEW VALUE.
         BP    WINDOWIT          GO ADJUST DISPLAY WINDOW.
WINUPMAX LA    R0,1              SCROLLED ABOVE TOP - DO A "UP MAX".
         ST    R0,WINTOP         SAVE THE NEW VALUE.
         B     WINDOWIT
WINDNKEY ICM   R0,15,SCRLAMT     SCROLL AMOUNT ALREADY DETERMINED?
         BNZ   WINEWTOP          YES, USE IT.
WINDNPAG L     R14,WINSIZE       NO, POINT TO NUMBER OF SCREEN LINES.
         L     R0,0(,R14)        GET THE SCREEN LINE COUNT.
         BCTR  R0,0              DISCOUNT WINDOW HEADER.
         SH    R0,WINHDGCT       DISCOUNT OPTION HEADING LINES.
         CLI   INCHARS+1,C'H'    HALF-PAGE SCROLL REQUEST?
         BNE   WINEWTOP          NO, WHOLE PAGE BY DEFAULT.
         SRA   R0,1              YES, HALVE IT.
         B     WINEWTOP
WINUPCMD CLI   INCHARS+1,C'M'    MAXIMUM SCROLL REQUESTED?
         BE    WINUPMAX          YES.
         CLI   INCHARS+1,C'0'    SCROLL AMOUNT SPECIFIED?
         BL    WINUPPAG          NO, DEFAULT TO A PAGE.
         IC    R0,INCHARS+1      YES, LOAD THE DIGIT.
         SLL   R0,28             CONVERT IT TO BINARY.
         SRL   R0,28
         B     WINUPAMT
WINDNCMD LH    R0,TABLE+62       LOAD A LARGE NUMBER.
         CLI   INCHARS+1,C'M'    MAXIMUM SCROLL REQUESTED?
         BE    WINEWTOP          YES.
         CLI   INCHARS+1,C'0'    SCROLL AMOUNT SPECIFIED?
         BL    WINDNPAG          NO, DEFAULT TO A PAGE.
         IC    R0,INCHARS+1      YES, LOAD THE DIGIT.
         SLL   R0,28             CONVERT IT TO BINARY.
         SRL   R0,28
         B     WINEWTOP
         SPACE
WINLFKEY ICM   R0,15,SCRLAMT     SCROLL AMOUNT ALREADY DETERMINED?
         BNZ   WINLFAMT          YES, USE IT.
WINLFPAG L     R1,WINSIZE        NO, POINT TO SCREEN DIMENSIONS.
         L     R0,4(,R1)         GET THE SCREEN COLUMN COUNT.
         BCTR  R0,0              DISCOUNT ATTRIBUTE BYTE.
         SH    R0,WINLEFT        DISCOUNT PRESERVED COLUMNS.
         SH    R0,WINRIGHT
         CLI   INCHARS+1,C'H'    HALF-PAGE SCROLL REQUEST?
         BNE   WINLFAMT          NO, WHOLE PAGE BY DEFAULT.
         SRA   R0,1              YES, HALVE IT.
WINLFAMT LNR   R0,R0             MAKE NEGATIVE FOR LEFT.
WINEWOFF L     R15,CRNTOPTN      POINT TO OPTION'S LOOK-UP ENTRY.
         AH    R0,WINOFFST       ADJUST SCROLL-RIGHT OFFSET.
         STH   R0,WINOFFST       SAVE THE NEW VALUE.
         BM    WINLFMAX          GO ADJUST DISPLAY WINDOW.
         STH   R0,10(,R15)       SAVE THE NEW VALUE IN LOOK-UP ENTRY.
         L     R1,WINSIZE        POINT TO SCREEN DIMENSIONS.
         L     R1,4(,R1)         GET SCREEN WIDTH.
         LA    R1,WINLINOH(,R1)  GET DATA STREAM LINE LENGTH.
         LNR   R1,R1             MAKE THIS NEGATIVE.
         AH    R1,WINLNLEN       GET LARGEST SCROLL OFFSET.
         CR    R0,R1             SCROLLED RIGHT MORE THAN MAXIMUM?
         BNH   WINDOWIT          NO, PROCEED.
         STH   R1,WINOFFST       YES, REDUCE TO MAXIMUM.
         STH   R1,10(,R15)       SAVE IN LOOK-UP ENTRY.
         B     WINDOWIT
WINLFMAX SLR   R0,R0             FORCE A "LEFT MAX".
         STH   R0,WINOFFST       SAVE THE NEW VALUE.
         STH   R0,10(,R15)       SAVE IN LOOK-UP ENTRY.
         B     WINDOWIT
WINRTKEY ICM   R0,15,SCRLAMT     SCROLL AMOUNT ALREADY DETERMINED?
         BNZ   WINEWOFF          YES, USE IT.
WINRTPAG L     R1,WINSIZE        NO, POINT TO SCREEN DIMENSIONS.
         L     R0,4(,R1)         GET THE SCREEN COLUMN COUNT.
         BCTR  R0,0              DISCOUNT ATTRIBUTE BYTE.
         SH    R0,WINLEFT        DISCOUNT PRESERVED COLUMNS.
         SH    R0,WINRIGHT
         CLI   INCHARS+1,C'H'    HALF-PAGE SCROLL REQUEST?
         BNE   WINEWOFF          NO, WHOLE PAGE BY DEFAULT.
         SRA   R0,1              YES, HALVE IT.
         B     WINEWOFF
WINLFCMD CLI   INCHARS+1,C'M'    MAXIMUM SCROLL REQUESTED?
         BE    WINLFMAX          YES.
         CLI   INCHARS+1,C'0'    SCROLL AMOUNT SPECIFIED?
         BL    WINLFPAG          NO, DEFAULT TO A PAGE.
         IC    R0,INCHARS+1      YES, LOAD THE DIGIT.
         SLL   R0,28             CONVERT IT TO BINARY.
         SRL   R0,28
         B     WINLFAMT
WINRTCMD ICM   R0,14,FFFF+1      LOAD A LARGE NUMBER.
         CLI   INCHARS+1,C'M'    MAXIMUM SCROLL REQUESTED?
         BE    WINEWOFF          YES.
         CLI   INCHARS+1,C'0'    SCROLL AMOUNT SPECIFIED?
         BL    WINRTPAG          NO, DEFAULT TO A PAGE.
         IC    R0,INCHARS+1      YES, LOAD THE DIGIT.
         SLL   R0,28             CONVERT IT TO BINARY.
         SRL   R0,28
         B     WINEWOFF
         SPACE
WINHDNUM DS    0H                FORMAT A NUMBER ON THE WINDOW HEADER.
         CVD   R0,WORK           GET DECIMAL NUMBER TO FORMAT.
         AHI   R15,-6            POINT TO BEFORE EDIT MASK.
         MVC   0(6,R15),ED5      LOAD EDIT MASK.
         LA    R1,5(,R15)        POINT TO LAST DIGIT IN CASE OF ZERO.
         EDMK  0(6,R15),WORK+5   FORMAT DECIMAL NUMBER.
         LR    R15,R1            POINT TO FIRST DIGIT ON SHOW.
         BR    R14               RETURN.
         SPACE
WINLDLIN DS    0H                LOAD A LINE INTO THE SCREEN BUFFER.
         CLC   0(2,R1),FFFF+2    END OF DATA IN WINDOW?
         BE    WINTRLER          YES, SUPPLY TRAILER.
         CLC   0(2,R1),WINFULL   END OF WINDOW?
         BE    WINFILLD          YES, SUPPLY TRAILER.
         L     R15,4(,R9)        GET SCREEN WIDTH.
         LA    R15,WINLINOH(,R15)    GET LINE DATA STREAM LENGTH.
         CH    R15,WINLNLEN      COMPARE SCREEN WIDTH WITH DATA WIDTH.
         BNH   WINPADOK          SCREEN IS NOT WIDER THAN DATA.
         MVI   WINLINOH(R2),C' ' SCREEN IS WIDER SO BLANK WHOLE LINE.
         BCTR  R15,0             DECREMENT FOR EXECUTE.
         EX    R15,WINCLRMV      BLANK WHOLE LINE.
         LH    R15,WINLNLEN      GET DATA STREAM LENGTH OF DATA.
WINPADOK BCTR  R15,0             DECREMENT FOR EXECUTE.
         EX    R15,WINSUFMV      COPY A LINE WITH ITS ATTRIBUTES.
         BNL   WINFIXLN          WHOLE DATA LINE FITS ON SCREEN.
         CLI   0(R2),X'FF'       NON-SCROLLABLE LINE?
         BE    WINFIXLN          YES.
         SLR   R15,R15
         STM   R1,R2,WORK        SAVE LINE POINTERS.
         ICM   R15,3,WINOFFST    SCROLLED RIGHT ANY?
         BZ    WINLFTLN          NO, LINE ALREADY LOADED PROPERLY.
         AR    R1,R15            YES, OFFSET SOURCE ADDRESS.
         AH    R1,WINLEFT        ALLOW FOR PRESERVED COLUMNS.
         AH    R2,WINLEFT        ALLOW FOR PRESERVED COLUMNS.
         L     R15,4(,R9)        GET SCREEN WIDTH.
         BCTR  R15,0             ALLOW FOR ATTRIBUTE BYTE.
         SH    R15,WINLEFT       ALLOW FOR PRESERVED COLUMNS.
         BCTR  R15,0             DECREMENT FOR EXECUTE.
         EX    R15,WINLINMV      MOVE THE SCROLLABLE LINE SEGMENT.
         LM    R1,R2,WORK        RESTORE LINE POINTERS.
WINLFTLN SLR   R15,R15
         ICM   R15,3,WINRIGHT    ANY RIGHT COLUMNS TO PRESERVE?
         BZ    WINFIXLN          NO, LINE ALREADY LOADED PROPERLY.
         A     R2,4(,R9)
         LA    R2,WINLINOH(,R2)  POINT PAST SCREEN LINE.
         AH    R1,WINLNLEN       POINT PAST WINDOW LINE.
         SR    R2,R15            POINT TO PRESERVED DATA TARGET.
         SR    R1,R15            POINT TO PRESERVED DATA SOURCE.
         BCTR  R15,0             DECREMENT FOR EXECUTE.
         EX    R15,WINSUFMV      MOVE THE PRESERVED RIGHT COLUMNS.
         LM    R1,R2,WORK        RESTORE LINE POINTERS.
WINFIXLN MVI   0(R2),X'28'       OVERLAY "FIXED FLAG" WITH SA ORDER.
         AH    R1,WINLNLEN       POINT TO THE NEXT WINDOW LINE.
         L     R15,WINSIZE       POINT TO SCREEN DIMENSIONS.
         A     R2,4(,R15)
         LA    R2,WINLINOH(,R2)  POINT TO THE NEXT SCREEN LINE.
         BR    R14               RETURN.
WINCLRMV MVC   WINLINOH+1(0,R2),WINLINOH(R2)    <<< EXECUTED >>>
WINLINMV MVC   LL-79(0,R2),LL-79(R1)            <<< EXECUTED >>>
WINSUFMV MVC   0(0,R2),0(R1)                    <<< EXECUTED >>>
WINTRLER MVC   0(4,R2),BLNKREST  CLEAR THE REMAINDER OF THE SCREEN.
         LA    R2,4(,R2)         POINT TO END OF LOADED DATA.
         LA    R0,1              INDICATE LAST LINE HAS BEEN LOADED.
         BR    R14               RETURN.
WINFILLD MVC   0(LL,R2),WINFLMSG SUPPLY WARNING MESSAGE.
         AH    R1,WINLNLEN       POINT TO THE NEXT WINDOW LINE.
         MVC   0(2,R1),FFFF+2    ENSURE NO MORE LINES FETCHED.
         LA    R2,LL(,R2)        POINT TO THE NEXT SCREEN LINE.
         BR    R14               RETURN.
         TITLE 'WINDOW MANAGER - VARIABLES AND CONSTANTS'
WINSVR11 DC    F'0'              SAVE CALLING OPTION'S GPR11 VALUES.
WINSVR14 DC    F'0'              SAVE CALLING OPTION'S GPR14 VALUES.
WINLINES DC    F'0'              FORMATTED DISPLAY LINE COUNT.
WINBUFFL DC    F'0'              SIZE OF THE WINDOW BUFFER.
WINBUFF  DC    A(0)              ADDRESS OF THE WINDOW BUFFER.
WINEND   DC    A(0)              SAFETY STOPPER FOR LINE LOADING.
WINTOP   DC    F'1'              TOP-OF-SCREEN DISPLAY LINE NUMBER.
WINSUFIX DC    A(0)              ADDRESS OF DATA STREAM SUFFIX.
WINSUFLN DC    F'-1'             LENGTH CODE OF DATA STREAM SUFFIX.
WINSIZE  DC    A(LINES)          POINTER SCREEN LINES AND COLUMNS.
WINHDGCT DC    H'0'              NUMBER OF HEADING LINES TO PRESERVE.
WINOFFST DC    H'0'              SCROLL RIGHT OFFSET.
WINLNLEN DC    H'0'              LENGTH OF OPTION'S LINE.
WINLEFT  DC    H'0'              LENGTH OF LEFT END TO PRESERVE.
WINRIGHT DC    H'0'              LENGTH OF RIGHT END TO PRESERVE.
WINLINOH EQU   8                 DATA STREAM LENGTH LESS COLUMN COUNT.
WINFULL  DC    X'FFFE'           FLAG FOR FULL WINDOW - NO MORE LINES.
WINFLMSG DC    X'2841F11BF8502842F2'
         DC    CL79'   Display buffer full - data discarded   '
         LTORG
W32TO31T DC    C'234567'         MAP A->F TO 2->7.
         SPACE
         DS    0H
         TITLE 'WINDOW MANAGER - WRITE ENTIRE REPORT SUBROUTINE'
WINWRITE STM   R14,R12,SAVE+12   SAVE REGISTERS.
         TM    MODESW,OPNR       REPORT FILE OPEN?
         BO    WINDOWRT          YES, IMREPORT MUST EXIST.
         L     R4,WINSIZE        NO, POINT TO SCREEN DIMENSIONS.
         L     R5,0(,R4)         GET NUMBER OF LINES.
         BCTR  R5,0
         MH    R5,6(,R4)         GET BUFFER ADDR OF LAST LINE 1ST COL.
         STCM  R5,3,WINDDMSG+2   SET IT INTO MESSAGE DATA STREAM.
         STCM  R5,3,WINOKMSG+2   SET IT INTO MESSAGE DATA STREAM.
         TM    WINDDMSG+2,X'F0'  BUFFER ADDRESS OVER 4095?
         BNZ   WINGETDD          YES, 14-BIT ADDRESSING REQUIRED.
         SRL   R5,6              NO, USE 12-BIT ADDRESSING.
         STC   R5,WINDDMSG+2
         NI    WINDDMSG+3,X'3F'
         TR    WINDDMSG+2(2),TABLE
         STC   R5,WINOKMSG+2
         NI    WINOKMSG+3,X'3F'
         TR    WINOKMSG+2(2),TABLE
WINGETDD L     R4,PSATOLD        GET POINTER TO CURRENT TCB.
         SLR   R5,R5             CLEAR WORK REGISTER.
         L     R4,12(0,R4)       POINT TO TIOT.
         LA    R4,24(0,R4)       POINT TO TIOELNGH.
WINCHKDD CLC   4(8,R4),IMREPORT+DCBDDNAM-IHADCB
         BE    WINUSEDD          FILE EXISTS SO GO AND OPEN IT.
         IC    R5,0(0,R4)        GET TIOT ENTRY LENGTH.
         AR    R4,R5             POINT TO NEXT TIOT ENTRY.
         CLI   0(R4),0           ZERO LENGTH ENTRY?
         BNE   WINCHKDD          NO, CHECK OUT THIS ENTRY.
         LM    R14,R12,SAVE+12   YES, NOT THERE, RESTORE REGISTERS.
         LA    R1,WINDDMSG       POINT TO THE MESSAGE.
         LA    R0,WINDDMLN       GET THE MESSAGE LENGTH.
         B     WINDSPOK          ISSUE THE MESSAGE AND GET NEXT INPUT.
WINUSEDD OPEN  (IMREPORT,OUTPUT) OPEN THE REPORT FILE.
         OI    MODESW,OPNR       FLAG REPORT FILE OPEN.
WINDOWRT LA    R0,84             GET FIRST RECORD LENGTH.
         STH   R0,WINVAREC       SET LENGTH IN RDW.
         MVC   WINVAREC+4(80),BLANKS
         MVI   WINVAREC+4,C'1'   NEW PAGE FOR NEW REPORT.
         MVC   WINVAREC+8(40),HEADING
         MVC   WINVAREC+79(5),BUSY
         DROP  R13               GOTAREA.
         LA    R1,WINWRTSA       CHAIN SAVE AREAS.
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         PUT   IMREPORT,WINVAREC WRITE REPORT HEADING.
         MVI   WINVAREC+4,C' '   RESET CARRIAGE CONTROL.
         L     R3,WINLINES       GET FORMATTED LINES TO WRITE.
         L     R4,WINBUFF        POINT TO WINDOW BUFFER.
         L     R5,PRNTADDR       POINT TO SCREEN PRINT SUBROUTINE.
         USING SCRNPRNT,R5
         LH    R6,WINLNLEN       GET OPTION'S LINE LENGTH.
         AHI   R6,-(LL-79)       GET DATA BYTES PER LINE.
         LA    R6,5(,R6)         CATER FOR RDW AND CARRIAGE CONTROL.
WINWRTLP MVC   WINVAREC+5(252),LL-79(R4)
         TR    WINVAREC+5(252),PRTXLATE
         LR    R1,R6             COPY EXPECTED RECORD LENGTH.
         CLI   0(R4),X'FF'       NON-SCROLLABLE LINE?
         BNE   *+8               NO, CORRECT LENGTH LOADED.
         LA    R1,79+5           YES, GET APPROPRIATE LENGTH.
         LA    R15,WINVAREC      POINT TO THE RECORD.
         AR    R15,R1            POINT PAST RECORD'S DATA.
WINSPCLP BCTR  R15,0             BACK UP A BYTE.
         CLI   0(R15),C' '       TRAILING BLANK?
         BNE   WINRDWOK          NO, NOW HAVE LENGTH FOR RDW.
         BCT   R1,WINSPCLP       YES, DECREMENT RECORD LENGTH.
WINRDWOK CHI   R1,6              LENGTH LESS THAN MINIMUM?
         BNL   *+8               NO, CONTINUE.
         LHI   R1,6              YES, USE MINIMUM.
         STH   R1,WINVAREC       SET LENGTH IN RDW.
         PUT   IMREPORT,WINVAREC WRITE REPORT HEADING.
         AH    R4,WINLNLEN       POINT TO NEXT LINE IN BUFFER.
         BCT   R3,WINWRTLP       PROCESS NEXT LINE.
         DROP  R5                SCRNPRNT.
         L     R13,4(,R13)       POINT TO PREVIOUS SAVE AREA.
         USING GOTAREA,R13
         LM    R14,R12,SAVE+12   ALL DONE, RESTORE REGISTERS.
         LA    R1,WINOKMSG       POINT TO CONFIRMATION MESSAGE.
         LA    R0,WINOKMLN       GET THE MESSAGE LENGTH.
         B     WINDSPOK          ISSUE THE MESSAGE AND GET NEXT INPUT.
         DROP  R11               WNDWMNGR.
         TITLE 'WINDOW MANAGER - WRITE ENTIRE REPORT DATA ITEMS'
WINWRTSA DC    18F'0'            SAVE AREA.
WINVAREC DC    XL256'00'
         PRINT NOGEN
IMREPORT DCB   DSORG=PS,MACRF=(PM),DDNAME=IMREPORT,RECFM=VBA,LRECL=255
         PRINT GEN
WINDDMSG DCS   X'C5',SBA,(24,1)
         DC    X'1BF8502842F22841F2'
         DC    CL79'         Report request ignored   -   IMREPORT file+
                not pre-allocated          '
         DC    X'1140402842001B404E2841F4130000'
WINDDMLN EQU   *-WINDDMSG
WINOKMSG DCS   X'C1',SBA,(24,1)
         DC    X'1BF0502842F42841F2'
         DC    CL79'                    Entire report written to IMREPO+
               RT file                     '
         DC    X'1140402842001B404E2841F4130000'
WINOKMLN EQU   *-WINOKMSG
         DS    0H
