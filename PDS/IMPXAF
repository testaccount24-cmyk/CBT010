*        COPYRIGHT (C) 1986,1994  PRYCROFT SIX PTY LTD
         TITLE 'REAL MEMORY PAGE FRAME MONITOR SUBROUTINE'
         USING FRAMES,R11,R10
FRAMES   DS    0H
         LA    R10,2048(,R11)    SET UP SECOND
         LA    R10,2048(,R10)                  BASE REGISTER.
         XC    PRVFLINE(8),PRVFLINE NO DATA SAVED FROM PREVIOUS S MODE.
         L     R3,CVTPTR(,0)     ADDRESS OF COMMUNICATION VECTOR TABLE.
         USING CVT,R3
         L     R3,CVTPVTP        ADDRESS OF PAGE VECTOR TABLE (PVT).
         DROP  R3                CVT.
         USING PVT,R3
         L     R3,PVTRIT         ADDRESS OF RSM INTERNAL TABLE (RIT).
         DROP  R3                PVT.
*        ICM   R3,15,RITADDR     LOAD RIT ADDRESS.
*        BNZ   GOTRITAD
*        NUCLKUP BYNAME,NAME=RITEPNAM,ADDR=RITADDR LOOK-UP NUCLEUS.
*        LR    R3,R0             COPY RSM INTERNAL TABLE ADDRESS.
*GOTRITAD DS   0H
         CLI   FMONMODE,C'S'     IN SUMMARY MODE?
         BNE   PRECHEKF          NO.
         CLI   HEADMODE,C'R'     IN RELEASE MODE?
         BNE   PRECHEKF          NO.
         MVI   TGETFLG,TGETFLGN  YES, USE ASIS NOWAIT TGETS.
         OI    MODESW2,CLNF      FLAG CLEAN-UP REQUIRED UPON EXIT.
PRECHEKF CLI   INCHARS+1,C' '    ANY OPTION PRE-SPECIFIED?
         BNH   MOREFRMS          NO, CONTINUE FROM PREVIOUS ADDRESS.
         MVC   INCHARS(L'INCHARS-1),INCHARS+1
         MVI   INCHARS+L'INCHARS-1,C' ' YES, ADJUST ANY COMMAND INPUT.
         B     CMDSCANF          PROCESS IT.
         SPACE
REDOFRMS LA    R2,BUFFER         POINT TO FIRST DETAIL LINE.
         LA    R4,256            GET ENTRIES PER SCREEN PAGE.
         LM    R5,R6,208(R3)     GET FIRST AND LAST PFTE ADDRESSES.
         LA    R7,32(,R6)        POINT PAST LAST PFTE.
         SR    R7,R5             GET SIZE OF PAGE FRAME TABLE.
         SRL   R7,5              GET NUMBER OF PFTES (DIVIDE BY 32).
         XC    MEGCNTR,MEGCNTR   RESET REAL STORAGE DISPLAY ADDRESS.
NXTFRAME DS    0H                PROCESS NEXT 4K REAL STORAGE FRAME.
         MVC   0(2,R2),=X'2841'
HILITE24 MVI   2(R2),X'00'       HIGHLIGHTING FOR BELOW 16M VIRTUAL.
         CLI   20(R5),0          IS THE VIRTUAL ADDRESS BELOW 16 MEG?
         BE    DFLTATTR          YES, LEAVE SET ATTRIBUTE DEFAULT.
HILITE31 MVI   2(R2),X'F4'       HIGHLIGHTING FOR ABOVE 16M VIRTUAL.
DFLTATTR LA    R2,3(,R2)         POINT PAST THIS STUFF.
         MVC   0(3,R2),=X'2842F7' WHITE.
         MVC   3(5,R2),=C' PSA '
         CLI   8(R5),X'F5'       ABSOLUTE ZERO FRAME?
         BE    ATTROK            YES, THAT WAS EASY.
         MVC   4(3,R2),=C'HSA'
         CLI   8(R5),X'F4'       HARDWARE SYSTEM AREA?
         BE    ATTROK            YES, THAT WAS PRETTY EASY.
         MVC   4(3,R2),=C'IDA'
         CLI   8(R5),X'F3'       IDA FRAME?
         BE    ATTROK            YES, THAT WAS ALSO PRETTY EASY.
         MVI   2(R2),X'F2'       RED FOR ERROR.
         MVC   4(4,R2),=C'BAD!'
         TM    9(R5),X'01'       UNALLOCATABLE (NOT AVAILABLE) FRAME?
         BO    ATTROK            YES, IN RED.
         MVC   4(4,R2),=C'FLAW'
         CLI   8(R5),X'FD'       FLAWED FRAME? (PROBABLY ALSO BAD.)
         BE    ATTROK            YES, ALSO IN RED.
         MVI   2(R2),X'F1'       BLUE FOR OFFLINE.
         MVC   4(4,R2),=C'OFF '
         TM    10(R5),X'20'      OFFLINE?
         BO    ATTROK            YES.
         MVI   2(R2),X'F3'       NO, MAKE IT PINK.
         MVC   4(3,R2),=C'V=R'
         CLI   8(R5),X'F0'       DAT-OFF NUCLEUS?
         BE    ATTROK            YES.
         MVC   4(3,R2),=C'R-O'
         CLI   8(R5),X'F1'       READ-ONLY NUCLEUS?
         BE    ATTROK            YES.
         MVC   4(3,R2),=C'R/W'
         CLI   8(R5),X'F2'       READ/WRITE NUCLEUS?
         BE    ATTROK            YES.
         MVC   4(4,R2),=C'FLPA'
         CLI   8(R5),X'F6'       FIXED LPA OR BLDL?
         BE    ATTROK            YES.
         MVC   4(4,R2),=C'CMN '  ASSUME COMMON.
         TM    10(R5),X'40'      BACKING PERMANENT STORAGE ANYWAY?
         BO    ATTROK            YES, AT LEAST ITS THE RIGHT COLOUR.
         MVI   2(R2),X'F2'       RED FOR LONG TERM PAGE-FIX.
         CLI   8(R5),X'82'       PAGE-FIXED?
         BE    INTHERED          YES.
         ICM   R9,B'0011',14(R5) IS THE PAGE-FIX COUNT NON-ZERO?
         BNZ   INTHERED          YES, PAGE IS FIXED.
         MVI   2(R2),X'F6'       NO, MAKE IT YELLOW.
*        MVC   4(3,R2),=C'VIO'   CAN FIND OWNING ASID WITH MVS/XA.
         TM    11(R5),X'20'      VIO FRAME?
         BO    ATTROK            YES.
         MVI   2(R2),X'F4'       NO, MAKE IT GREEN.
         MVC   4(3,R2),=C'...'
         TM    10(R5),X'80'      AVAILABLE FRAME?
         BO    PGUSEROK          YES.
         MVI   2(R2),X'F1'       SHOW NON-SQA PAGEABLE COMMON AS BLUE.
INTHERED MVC   4(3,R2),=C'CMN'   ASSUME COMMON.
         TM    10(R5),X'10'      SQA OR LSQA FRAME?
         BZ    ATTROK            NO.
         MVI   2(R2),X'F5'       YES, MAKE IT TURQUOISE.
         MVC   4(3,R2),=C'SQA'
ATTROK   CLC   18(2,R5),FFFF+2   NON-PRIVATE AREA FRAME?
         BE    COMONTYP          YES, CHECK FOR LINK PACK AREA.
         SLR   R8,R8
         ICM   R8,B'0011',18(R5) GET ASID OR ZERO IF COMMON.
         BNZ   FNDPGUSR          FIND THE NAME OF THAT ADDRESS SPACE.
COMONTYP CLI   SELJOBNM,C' '     JOB NAME PREFIX SELECTION ACTIVE?
         BNH   GETCOMON          NO.
         MVC   3(5,R2),=C' --- ' YES, INDICATE USED BUT NOT OUR JOB.
         B     PGUSEROK          LEAVE IT AT THAT.
GETCOMON L     R6,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R6
         L     R6,CVTSMEXT       POINT TO THE CVT STORAGE MAP EXTEN.
         DROP  R6                CVT.
         ICM   R0,B'1111',8(R6)  ANY MODIFIED LINK PACK AREA?
         BZ    NOTMLPA           NO, SO IT CAN'T BE MLPA.
         CLC   20(4,R5),8(R6)    COMPARE WITH MLPA STARTING ADDRESS.
         BL    PGUSEROK
         CLC   20(4,R5),12(R6)   COMPARE WITH MLPA ENDING ADDRESS.
         BH    NOTMLPA
         MVC   4(4,R2),=C'MLPA'
         B     PGUSEROK          COMMON PAGE TYPE DONE.
NOTMLPA  ICM   R0,B'1111',16(R6) ANY FIXED LINK PACK AREA?
         BZ    NOTFLPA           NO, SO IT CAN'T BE FLPA.
         CLC   20(4,R5),16(R6)   COMPARE WITH FLPA STARTING ADDRESS.
         BL    PGUSEROK
         CLC   20(4,R5),20(R6)   COMPARE WITH FLPA ENDING ADDRESS.
         BH    NOTFLPA
         MVC   4(4,R2),=C'FLPA'
         B     PGUSEROK          COMMON PAGE TYPE DONE.
NOTFLPA  CLC   20(4,R5),24(R6)   COMPARE WITH PLPA STARTING ADDRESS.
         BL    PGUSEROK
         CLC   20(4,R5),28(R6)   COMPARE WITH PLPA ENDING ADDRESS.
         BH    NOTPLPA
         MVC   4(4,R2),=C'PLPA'
         B     PGUSEROK          COMMON PAGE TYPE DONE.
NOTPLPA  CLC   20(4,R5),56(R6)   COMPARE WITH EPLPA STARTING ADDRESS.
         BL    PGUSEROK
         CLC   20(4,R5),60(R6)   COMPARE WITH EPLPA ENDING ADDRESS.
         BH    NOTEPLPA
         MVC   4(4,R2),=C'PLPA'
         B     PGUSEROK          COMMON PAGE TYPE DONE.
NOTEPLPA ICM   R0,B'1111',64(R6) ANY EXTENDED FIXED LINK PACK AREA?
         BZ    NOTEFLPA          NO, SO IT CAN'T BE EFLPA.
         CLC   20(4,R5),64(R6)   COMPARE WITH EFLPA STARTING ADDRESS.
         BL    PGUSEROK
         CLC   20(4,R5),68(R6)   COMPARE WITH EFLPA ENDING ADDRESS.
         BH    NOTEFLPA
         MVC   4(4,R2),=C'FLPA'
         B     PGUSEROK          COMMON PAGE TYPE DONE.
NOTEFLPA ICM   R0,B'1111',72(R6) ANY EXTENDED MODIFIED LINK PACK AREA?
         BZ    PGUSEROK          NO, SO IT CAN'T BE EMLPA.
         CLC   20(4,R5),72(R6)   COMPARE WITH EMLPA STARTING ADDRESS.
         BL    PGUSEROK
         CLC   20(4,R5),76(R6)   COMPARE WITH EMLPA ENDING ADDRESS.
         BH    PGUSEROK
         MVC   4(4,R2),=C'MLPA'
         B     PGUSEROK          COMMON PAGE TYPE DONE.
FNDPGUSR CLI   2(R2),X'F1'       WAS THIS MARKED AS BLUE FOR COMMON?
         BNE   NOTBLUES          NO, LEAVE THE COLOUR AS IT IS.
         MVI   2(R2),X'F4'       YES, SHOW PAGEABLE PRIVATE AS GREEN.
NOTBLUES MVI   3(R2),C'?'        INDICATE INVALID ASCB.
         SLL   R8,2              ASID TIMES 4.
         A     R8,ASVTADDR
         LA    R8,524(,R8)       POINT TO ASVT ENTRY.
         ICM   R8,B'1111',0(R8)  POINT TO ASCB.
         BM    PGUSEROK          NO ASCB, SHOW ?CMN.
         MVC   3(5,R2),STARS     INDICATE VALID ASCB BUT NO JOBNAME.
         ICM   R9,15,JBNI(8)     GET JOBNAME POINTER.
         BNZ   JOBORTSU          BATCH JOB.
         ICM   R9,15,JBNS(8)     GET JOBNAME POINTER.
         BZ    PGUSEROK          NO POINTER, SO STAR-TING. (GET IT?)
         CLI   SELJOBNM,C' '     JOB NAME PREFIX SELECTION ACTIVE?
         BNH   TASKNAME          NO.
         MVC   3(5,R2),=C' --- ' YES, INDICATE USED BUT NOT OUR JOB.
         ST    R9,WORK2          SUPPLY SECOND PARAMETER.
         LH    R1,JPRFXLEN       GET LENGTH OF JOB NAME PREFIX.
         ST    R1,WORK2+4        SUPPLY THIRD PARAMETER.
         LA    R1,SELJOBNM       POINT TO DESIRED PREFIX.
         ST    R1,WORK+4         SUPPLY FIRST PARAMETER.
         LR    R15,R7            SAVE FRAME COUNTER.
         L     R7,PRFCHKAD       LOAD PREFCHEK ENTRY POINT.
         BASR  R1,R7             COMPARE JOB NAME WITH PREFIX.
         LR    R7,R15            RESTORE FRAME COUNTER.
         BNE   PGUSEROK          PREFIX DIDN'T MATCH SO WE'RE DONE.
TASKNAME CLI   0(R9),X'49'       IS IT UNPRINTABLE?
         BH    GOODNAME          NO, CONTINUE JOBNAME PROCESSING.
         MVC   3(5,R2),UNKNOWN   JOB NAME NOT KNOWN.
         B     PGUSEROK
GOODNAME ICM   R8,B'1111',60(R8) GET TSB ADDRESS.
         BZ    GETPGUSR          NO POINTER, SO STARTED TASK.
JOBORTSU LA    R0,3              MAXIMUM OF THREE TESTS.
         CLI   SELJOBNM,C' '     JOB NAME PREFIX SELECTION ACTIVE?
         BNH   PGUSLOOP          NO.
         MVC   3(5,R2),=C' --- ' YES, INDICATE USED BUT NOT OUR JOB.
         ST    R9,WORK2          SUPPLY SECOND PARAMETER.
         LH    R1,JPRFXLEN       GET LENGTH OF JOB NAME PREFIX.
         ST    R1,WORK2+4        SUPPLY THIRD PARAMETER.
         LA    R1,SELJOBNM       POINT TO DESIRED PREFIX.
         ST    R1,WORK+4         SUPPLY FIRST PARAMETER.
         LR    R15,R7            SAVE FRAME COUNTER.
         L     R7,PRFCHKAD       LOAD PREFCHEK ENTRY POINT.
         BASR  R1,R7             COMPARE JOB NAME WITH PREFIX.
         LR    R7,R15            RESTORE FRAME COUNTER.
         BNE   PGUSEROK          PREFIX DIDN'T MATCH SO WE'RE DONE.
PGUSLOOP CLI   5(R9),C' '        FOUND A BLANK?
         BE    GETPGUSR          YES, LOAD JOBNAME.
         LA    R9,1(,R9)         POINT TO NEXT JOBNAME CHARACTER.
         BCT   R0,PGUSLOOP       TRY NEXT CHARACTER OF JOB OR TSU NAME.
GETPGUSR MVC   3(5,R2),0(R9)     LOAD FOUR CHARACTERS OF JOBNAME.
PGUSEROK DS    0H                LABEL FOR THIS FRAME NOW COMPLETED.
         CLI   FVIRTADR,C'V'     VIRTUAL ADDRESS TO BE DISPLAYED?
         BNE   FRMDTLDN          NO, FRAME DETAIL SLOT COMPLETE.
         UNPK  3(5,R2),20(3,R5)  YES, SHOW FIRST FIVE HEX DIGITS.
         OI    7(R2),X'F0'
         TR    3(5,R2),HEX-C'0'
FRMDTLDN DS    0H                ENTRY FOR THIS FRAME NOW COMPLETED.
         LA    R2,8(,R2)         UPDATE BUFFER POINTER.
         LA    R5,32(,R5)        POINT TO NEXT PFT ENTRY.
         BCTR  R7,0              ONE LESS TO END OF TABLE.
         LTR   R7,R7             END OF PAGE FRAME TABLE REACHED?
         BZ    SHOWFRMS          YES, DISPLAY THE SCREEN.
         BCT   R4,NXTFRAME       PROCESS NEXT FRAME UNLESS SCREEN FULL.
         B     SCRNFULL          ALL 256 ENTRIES TAKEN, SKIP DECREMENT.
SHOWFRMS DS    0H
         BCTR  R4,0              ALSO DECREMENT SCREEN ENTRY COUNTER.
SCRNFULL MVC   OLDFCNTR,FRMCNTR  SAVE PREVIOUS FRAME COUNTDOWN VALUE.
         ST    R7,FRMCNTR        SAVE THIS FRAME COUNTDOWN VALUE.
         MVC   OLDPFTEP,PFTEPTR  SAVE PREVIOUS PFTE POINTER.
         ST    R5,PFTEPTR        SAVE THIS PFTE POINTER.
         LH    R8,MEGCNTR        FORMAT AND DISPLAY
         CVD   R8,WORK                  THE DISPLAY START
         MVC   HEADMEG,ED3                  REAL ADDRESS
         ED    HEADMEG,WORK+6                    FOR THIS SCREEN.
         MVC   HEADING,HEADINGF  LOAD REAL MEMORY MONITOR HEADING.
         MVC   0(3,R2),=X'284100'
         LA    R2,3(,R2)         POINT PAST THIS STUFF.
         L     R5,RCEADDR        POINT TO RSM CNTRL & ENUMERATION AREA.
         USING RCE,R5
         L     R9,RCEBELPL       GET NUMBER OF FRAMES BELOW 16 MEG.
         CVD   R9,WORK           SHOW NUMBER OF REAL STORAGE MANAGER
         MVC   MEMVARS2+10(6),ED5     MANAGED FRAMES < 16MB IN
         ED    MEMVARS2+10(6),WORK+5                 SUMMARY.
         L     R9,RCEPOOL        GET TOTAL NUMBER OF FRAMES.
         CVD   R9,WORK           SHOW NUMBER OF
         MVC   MEMVARS2+34(8),ED7           FRAMES THAT ARE
         ED    MEMVARS2+34(8),WORK+4               USEABLE BY SYSTEM.
         L     R9,RCEAFC         GET NUMBER OF AVAILABLE FRAMES.
         CVD   R9,WORK
         MVC   MEMVARS4+14(8),ED7
         ED    MEMVARS4+14(8),WORK+4
         L     R9,RCEPBAFC       GET NUMBER OF AVAILABLE FRAMES
         CVD   R9,WORK               ON THE PREFERRED BELOW QUEUE.
         MVC   MEMVARS3(6),ED5
         ED    MEMVARS3(6),WORK+5
         L     R9,RCEBELFX       GET NUMBER OF FIXED FRAMES BELOW 16MB.
         CVD   R9,WORK
         MVC   MEMVARS3+35(6),ED7
         ED    MEMVARS3+35(6),WORK+4
         L     R9,RCETOTFX       GET TOTAL NUMBER OF FIXED FRAMES.
         CVD   R9,WORK
         MVC   MEMVARS3+54(8),ED7
         ED    MEMVARS3+54(8),WORK+4
         L     R9,RCEESPL        GET NUMBER OF USEABLE EXPANDED FRAMES.
         CVD   R9,WORK
         MVC   MEMVARS1+1(8),ED7
         ED    MEMVARS1+1(8),WORK+4
         L     R9,RCEESINU       GET NUMBER OF USED EXPANDED FRAMES.
         CVD   R9,WORK
         MVC   MEMVARS1+16(8),ED7
         ED    MEMVARS1+16(8),WORK+4
         L     R8,RCECOMBI       GET COMMON PAGES IN EXPANDED FRAMES.
         L     R9,104(,R5)       GET TOTAL NUMBER OF COMMON FRAMES.
         TM    OSLEVEL,X'88'     EARLIER THAN MVS/SP4?
         BNO   FCOMONOK          YES, USE THE "OLD" FRAME COUNTERS.
         L     R9,RCERAX         YES, GET COMMON RAX POINTER.
         USING RAX,R9
         L     R8,RAXESCT        GET COMMON EXPANDED FRAMES COUNT.
         L     R9,RAXFMCT        GET COMMON CENTRAL FRAMES COUNT.
         DROP  R9                RAX.
FCOMONOK CVD   R8,WORK
         MVC   MEMVARS1+31(8),ED7
         ED    MEMVARS1+31(8),WORK+4
         CVD   R9,WORK
         MVC   MEMVARS4-1(8),ED7
         ED    MEMVARS4-1(8),WORK+4
         L     R9,RCETOTPI       GET NUMBER OF PAGES PAGED IN.
         AL    R9,RCETOTPO       ADD NUMBER OF PAGES PAGED OUT.
         AL    R9,RCEVIOPI       ADD NUMBER OF VIO PAGES PAGED IN.
         AL    R9,RCEVIOPO       ADD NUMBER OF VIO PAGES PAGED OUT.
         AL    R9,RCESWPPI       ADD NUMBER OF PAGES SWAPPED IN.
         AL    R9,RCESWPPO       ADD NUMBER OF PAGES SWAPPED OUT.
         L     R8,PAGIOCNT       GET PREVIOUS PAGING TOTAL.
         ST    R9,PAGIOCNT       SAVE CURRENT TOTAL.
         SLR   R9,R8             GET CHANGE IN TOTAL.
         TIME  BIN               GET TIME-OF-DAY.
         LR    R1,R0             CURRENT TIME.
         S     R1,PAGETIME       GET CHANGE IN TIME.
         ST    R0,PAGETIME       SAVE PRESENT TIME.
         M     R8,TENGRAND       FOR CENTISECONDS AND 2 DECIMAL PLACES.
         DR    R8,R1             GET PAGES INPUT/OUTPUT PER SECOND.
         CVD   R9,WORK
         MVC   MEMVARS4+62(9),=X'4020202021204B2020'
         ED    MEMVARS4+62(9),WORK+4
         MVI   MEMVARS4+62,C':'
*        L     R9,52(,R5)        GET NUMBER OF PAGES RECLAIMED.
*        L     R8,RECLMCNT       GET PREVIOUS RECLAIM TOTAL.
*        ST    R9,RECLMCNT       SAVE CURRENT TOTAL.
*        SLR   R9,R8             GET CHANGE IN TOTAL.
*        M     R8,TENGRAND       FOR CENTISECONDS AND 2 DECIMAL PLACES.
*        DR    R8,R1             GET PAGES RECLAIMED PER SECOND.
*        CVD   R9,WORK
*        MVC   MEMVARS4+44(7),=X'402021204B2020'
*        ED    MEMVARS4+44(7),WORK+5
         SLR   R8,R8
         SLR   R9,R9
         TM    OSLEVEL,X'80'     EARLIER THAN MVS/SP3?
         BNO   FDREFOK           YES, NO DREF COUNTS TO SHOW.
         L     R9,RCEDRIPS       GET TOTAL DREF FRAME COUNT.
         L     R8,RCEDRIRS       GET REAL (CENTRAL) DREF FRAME COUNT.
FDREFOK  CVD   R8,WORK
         MVC   MEMVARS4+39(6),ED5
         ED    MEMVARS4+39(6),WORK+5
         CVD   R9,WORK
         MVC   MEMVARS4+47(6),ED5
         ED    MEMVARS4+47(6),WORK+5
         L     R9,RCEESWRT       GET NUMBER OF PAGE WRITES TO E-STORE.
         A     R9,RCEESREA       ADD NUMBER OF PAGE READ FROM E-STORE.
         L     R8,ESTOREIO       GET PREVIOUS TOTAL.
         ST    R9,ESTOREIO       SAVE CURRENT TOTAL.
         SLR   R9,R8             GET CHANGE IN TOTAL.
         M     R8,TENGRAND       FOR CENTISECONDS AND 2 DECIMAL PLACES.
         DR    R8,R1             GET PAGE ESTORE READ/WRITE RATE.
         CVD   R9,WORK
         MVC   MEMVARS1+46(9),=X'4020202021204B2020'
         ED    MEMVARS1+46(9),WORK+4
         L     R9,RMCTADDR       RESOURCE MANAGER CONTROL TABLE ADDR.
         USING RMCT,R9
         L     R9,RMCTMCT        POINT TO MEMORY CONTROL TABLE.
         DROP  R9                RMCT.
         USING MCT,R9
         LH    R9,MCVSTCRI       LOAD HIGHEST SYSTEM UIC.
         DROP  R9                MCT.
         CVD   R9,WORK           DISPLAY UNREFERENCED INTERVAL COUNT.
         OI    WORK+7,X'0F'
         UNPK  MEMVARS2+5(3),WORK+6(2)
         LTR   R4,R4             DISPLAYING A FULL MEGABYTE?
         BZ    GETFRMSM          YES, AT CORRECT POSITION FOR SUM LINE.
         MVC   0(4,R2),RAL18C01  NO, PUT BLANKS TO CORRECT POSITION.
         LA    R2,4(,R2)         ADJUST BUFFER POINTER.
GETFRMSM MVC   0(256,R2),FRAMESUM
         MVC   256(FRAMELEN-256,R2),FRAMESUM+256
         LA    R2,FRAMELEN(,R2)  LOAD FRAME SUMMARY LINES & ADJUST PTR.
NOFRMSUM BAS   R1,SYSUMMRY       PRODUCE & SHOW SYSTEM SUMMARY LINE.
         MVC   0(4,R2),BLNKREST  ERASE REST OF SCREEN.
         MVC   4(MEGFIXLN,R2),MEGFUDGE FUDGE HDG FOR DIRECT ADDRSNG.
         LA    R2,MEGFIXLN+4(,R2) ADJUST SCREEN SIZE.
         B     SHOWCPUF          FINISH OF DETAIL SCREEN FOR DISPLAY.
         SPACE
FRAMSMRY XC    PFTECNT0(PFTELEN0),PFTECNT0     ZERO ALL FRAME COUNTERS.
         MVC   HEADING,HEADINGF     INITIALIZE HEADING AND SUB-HEADING.
         MVC   HEADING+31(19),=CL19' USAGE PERCENTAGES '
         MVC   BUFFER(LL-79),MEDX          SUPPLY A LEGEND LINE.
         MVC   BUFFER+LL-79(79),FSLEGEND
         TM    GRAFLAGS,COLR+HLIT          WILL GRAPHIC CODES BE USED?
         BNO   FSLGNDOK                    NO, STANDARD CHARACTERS.
         MVI   BUFFER+LL-79,X'07'   SUPPLY HSA CODE.
         MVI   BUFFER+LL-73,X'03'   SUPPLY PSA/NUCLEUS/FLPA CODE.
         MVI   BUFFER+LL-58,X'05'   SUPPLY SQA CODE.
         MVI   BUFFER+LL-52,X'02'   SUPPLY FIXED USER REGION CODE.
         MVI   BUFFER+LL-39,X'04'   SUPPLY PAGEABLE USER REGION CODE.
         MVI   BUFFER+LL-32,X'05'   SUPPLY LSQA CODE.
         MVI   BUFFER+LL-25,X'06'   SUPPLY PLPA/MLPA CODE.
         MVI   BUFFER+LL-13,X'01'   SUPPLY CSA CODE.
         MVI   BUFFER+LL-7,X'0C'    SUPPLY FREE CODE.
FSLGNDOK MVC   BUFFER+LL(LL-79),HIGHX
         MVC   BUFFER+LL+LL-79(79),SUBHDGFS
         LM    R5,R6,208(R3)     GET FIRST AND LAST PFTE ADDRESSES.
         LA    R7,32(,R6)        POINT PAST LAST PFTE.
         SR    R7,R5             GET SIZE OF PAGE FRAME TABLE.
         SRL   R7,5              GET NUMBER OF PFTES (DIVIDE BY 32).
PFTELOOP DS    0H                PROCESS NEXT 4K REAL STORAGE FRAME.
         CLI   8(R5),X'F5'       ABSOLUTE ZERO FRAME?
         BE    CNTPFTEN          YES, COUNT IT AS NUCLEUS.
         CLI   8(R5),X'F4'       HARDWARE SYSTEM AREA?
         BE    CNTPFTEH          YES, COUNT IT.
         CLI   8(R5),X'F3'       IDA FRAME?
         BE    PFTENEXT          YES, DON'T COUNT IT AS USEABLE.
         TM    9(R5),X'01'       UNALLOCATABLE (NOT AVAILABLE) FRAME?
         BO    PFTENEXT          YES, BAD FRAMES ARE NOT USEABLE.
         CLI   8(R5),X'FD'       FLAWED PFTE? (PROBABLY ALSO BAD.)
         BE    PFTENEXT          YES, FRAME IS PROBABLY NOT USEABLE.
         TM    10(R5),X'20'      OFFLINE?
         BO    PFTENEXT          YES, FRAME IS NOT USEABLE.
         CLI   8(R5),X'F0'       DAT-OFF NUCLEUS?
         BE    CNTPFTEN          YES, COUNT IT.
         CLI   8(R5),X'F1'       READ-ONLY NUCLEUS?
         BE    CNTPFTEN          YES, COUNT IT.
         CLI   8(R5),X'F2'       READ/WRITE NUCLEUS?
         BE    CNTPFTEN          YES, COUNT IT.
         CLI   8(R5),X'F6'       FIXED LPA OR BLDL?
         BE    CNTPFTEN          YES, COUNT IT AS NUCLEUS.
         CLI   8(R5),X'21'       SQA FRAME?
         BE    CNTPFTES          YES, COUNT IT.
         TM    10(R5),X'10'      LSQA (OR SQA) FRAME?
         BO    CNTPFTEL          YES, COUNT IT.
         TM    10(R5),X'80'      AVAILABLE FRAME?
         BO    CNTPFTEA          YES, COUNT IT.
         CLC   18(1,5),19(R5)    BOTH ASID BYTES THE SAME?
         BNE   CNTPFTER          NO, MUST BE A USER REGION FRAME.
         TM    18(R5),X'FF'      ASID IS 0000 OR FFFF?
         BM    CNTPFTER          NO, MUST BE A USER REGION FRAME.
         ICM   R0,15,20(R5)      GET PFTE VIRTUAL ADDRESS.
         BZ    PFTENEXT          ZERO SO IGNORE PFTE.
         L     R6,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R6
         L     R6,CVTSMEXT       POINT TO THE CVT STORAGE MAP EXTEN.
         DROP  R6                CVT.
         USING CVTVSTGX,R6
         CLC   20(4,R5),CVTMLPAS VIRTUAL ADDRESS BELOW MLPA?
         BL    CNTPFTEC          YES, COUNT CSA PAGE.
         CLC   20(4,R5),CVTPLPAS VIRTUAL ADDRESS BELOW PLPA?
         BL    CNTPFTEC          YES, COUNT CSA PAGE.
         ICM   R0,15,CVTEMLPE    GET TOP EMLPA ADDRESS.
         BNZ   GOTELPAT          NON-ZERO SO GOT TOP ELPA ADDRESS.
         L     R0,CVTEPLPE       GET TOP EPLPA ADDRESS.
GOTELPAT CL    R0,20(,R5)        ECSA FRAME?
         BL    CNTPFTEC          YES, COUNT IT.
         DROP  R6                CVTVSTGX.
         LA    R0,1              INCREMENT PLPA/MLPA FRAME COUNT.
         ICM   R15,3,14(R5)      PAGE-FIXED?
         BNZ   CNTPFTFP          YES.
         A     R0,PFTECNTP
         ST    R0,PFTECNTP
         B     CNTPFTET
CNTPFTFP A     R0,PFTFCNTP       INCREMENT FIXED PLPA/MLPA FRAME COUNT.
         ST    R0,PFTFCNTP
         B     CNTPFTET
CNTPFTEC LA    R0,1              INCREMENT CSA FRAME COUNT.
         ICM   R15,3,14(R5)      PAGE-FIXED?
         BNZ   CNTPFTFC          YES.
         A     R0,PFTECNTC
         ST    R0,PFTECNTC
         B     CNTPFTET
CNTPFTFC A     R0,PFTFCNTC       INCREMENT FIXED CSA FRAME COUNT.
         ST    R0,PFTFCNTC
         B     CNTPFTET
CNTPFTEL LA    R0,1              INCREMENT LSQA FRAME COUNT.
         A     R0,PFTECNTL
         ST    R0,PFTECNTL
         B     CNTPFTET
CNTPFTER LA    R0,1              INCREMENT USER REGION FRAME COUNT.
         ICM   R15,3,14(R5)      PAGE-FIXED?
         BNZ   CNTPFTFR          YES.
         A     R0,PFTECNTR       NO.
         ST    R0,PFTECNTR
         B     CNTPFTET
CNTPFTFR A     R0,PFTFCNTR       INCREMENT FIXED REGION FRAME COUNT.
         ST    R0,PFTFCNTR
         B     CNTPFTET
CNTPFTES LA    R0,1              INCREMENT SQA FRAME COUNT.
         A     R0,PFTECNTS
         ST    R0,PFTECNTS
         B     CNTPFTET
CNTPFTEN LA    R0,1              INCREMENT NUCLEUS/FLPA FRAME COUNT.
         A     R0,PFTECNTN
         ST    R0,PFTECNTN
         B     CNTPFTET
CNTPFTEH LA    R0,1              INCREMENT HSA FRAME COUNT.
         A     R0,PFTECNTH
         ST    R0,PFTECNTH
         B     CNTPFTET
CNTPFTEA LA    R0,1              INCREMENT HSA FRAME COUNT.
         A     R0,PFTECNTA
         ST    R0,PFTECNTA
CNTPFTET LA    R0,1              INCREMENT TOTAL USEABLE FRAME COUNT.
         A     R0,PFTECNTT
         ST    R0,PFTECNTT
PFTENEXT LA    R5,32(,R5)        POINT TO NEXT PFT ENTRY.
         BCT   R7,PFTELOOP       PROCESS NEXT PFTE.
         ICM   R4,15,PRVFLINE    POINT TO PREVIOUS DISPLAY LINE.
         BZ    FNULPREV          THERE WAS NONE.
         MVC   0(LL-79,R4),LOWX        MAKE IT LOW INTENSITY.
         LA    R4,LL(,R4)              POINT TO THE NEXT LINE.
         C     R4,PAGEND               PAST END OF SCREEN?
         BL    FLOWOKAY                NO.
FNULPREV LA    R4,BUFFER+LL+LL         YES, BACK TO FIRST DETAIL LINE.
FLOWOKAY MVC   0(LL-79,R4),HIGHX       MAKE THIS LINE HIGH INTENSITY.
         MVI   LL-79(R4),C' '          CLEAR THE DETAIL LINE.
         MVC   LL-78(78,R4),LL-79(R4)
         TIME  DEC               GET THE CURRENT TIME.
         ST    R0,WORK           STORE IT.
         UNPK  LL-79(5,R4),WORK(3)
         ICM   R0,3,LL-77(R4)
         STCM  R0,3,LL-76(R4)    MOVE MINUTES TO RIGHT SPOT.
         MVI   LL-77(R4),C':'    DISPLAY TIME IN HH:MM FORMAT.
         L     R7,RCTADDR        POINT TO THE RCT.
         USING RCT,R7
         LH    R9,RCVCPUA        CPU AVERAGE.
         LA    R9,8(,R9)         ROUND TO NEAREST WHOLE PERCENT.
         SRL   R9,4              THROW AWAY FRACTIONAL PART.
         CVD   R9,WORK
         MVC   LL-5(4,R4),ED3
         ED    LL-5(4,R4),WORK+6
         MVI   LL-1(R4),C'%'     INDICATE PERCENTAGE.
         LH    R9,RCVPINSC       ASM QUEUE LENGTH AVERAGE.
         CVD   R9,WORK
         MVC   LL-11(6,R4),ED5
         ED    LL-11(6,R4),WORK+5
         SLR   R9,R9
         ICM   R9,3,RCVAFQA      AVAILABLE FRAME COUNT AVERAGE.
         CVD   R9,WORK
         MVC   LL-16(6,R4),ED5
         ED    LL-16(6,R4),WORK+5
         ICM   R9,3,RCVPAGRT     TOTAL PAGING RATE.
         CVD   R9,WORK
         MVC   LL-20(6,R4),ED5
         ED    LL-20(6,R4),WORK+5
         LH    R9,RCVUICA        UNREFERENCED INTERVAL COUNT AVERAGE.
         CVD   R9,WORK
         MVC   LL-25(6,R4),ED5
         ED    LL-25(6,R4),WORK+5
         DROP  R7                RCT.
         ICM   R9,15,PFTECNTT    GET TOTAL USEABLE PFTE COUNT.
         BZ    NULPLOTF          HOW DID THAT HAPPEN? SKIP S0C9 ANYWAY.
         LR    R8,R9             COPY IT.
         LA    R14,X'0C'         LOAD GRAPHIC CHARACTER CODE.
         SLL   R14,8             PROMOTE IT.
         LA    R15,C'.'          LOAD GRAPH CHARACTER.
         OR    R15,R14           GATE IN GRAPHIC CODE.
         BAS   R14,FRAMPLOT      PLOT AVAILABLE FRAMES.
         S     R8,PFTECNTA       SUBTRACT AVAILABLE FRAME COUNT.
         LA    R15,X'100'+C'C'   LOAD GRAPH CHARACTER CODES.
         BAS   R14,FRAMPLOT      PLOT CSA FRAMES.
         S     R8,PFTECNTC       SUBTRACT PAGEABLE CSA FRAME COUNT.
         LA    R15,X'200'+C'F'   LOAD GRAPH CHARACTER CODES.
         BAS   R14,FRAMPLOT      PLOT FIXED CSA FRAMES.
         S     R8,PFTFCNTC       SUBTRACT FIXED CSA FRAME COUNT.
         LA    R15,X'600'+C'P'   LOAD GRAPH CHARACTER CODES.
         BAS   R14,FRAMPLOT      PLOT PAGEABLE PLPA/MLPA FRAMES.
         S     R8,PFTECNTP       SUBTRACT PLPA/MLPA FRAME COUNT.
         LA    R15,X'200'+C'F'   LOAD GRAPH CHARACTER CODES.
         BAS   R14,FRAMPLOT      PLOT FIXED PLPA/MLPA FRAMES.
         S     R8,PFTFCNTP       SUBTRACT FIXED PLPA/MLPA FRAME COUNT.
         LA    R15,X'500'+C'L'   LOAD GRAPH CHARACTER CODES.
         BAS   R14,FRAMPLOT      PLOT LSQA FRAMES.
         S     R8,PFTECNTL       SUBTRACT LSQA FRAME COUNT.
         LA    R15,X'400'+C'U'   LOAD GRAPH CHARACTER CODES.
         BAS   R14,FRAMPLOT      PLOT USER REGION FRAMES.
         S     R8,PFTECNTR       SUBTRACT PAGEABLE USER FRAME COUNT.
         LA    R15,X'200'+C'F'   LOAD GRAPH CHARACTER CODES.
         BAS   R14,FRAMPLOT      PLOT FIXED USER REGION FRAMES.
         S     R8,PFTFCNTR       SUBTRACT FIXED REGION FRAME COUNT.
         LA    R15,X'500'+C'S'   LOAD GRAPH CHARACTER CODES.
         BAS   R14,FRAMPLOT      PLOT SQA FRAMES.
         S     R8,PFTECNTS       SUBTRACT SQA FRAME COUNT.
         LA    R15,X'300'+C'N'   LOAD GRAPH CHARACTER CODES.
         BAS   R14,FRAMPLOT      PLOT NUCLEUS/FLPA FRAMES.
         S     R8,PFTECNTN       SUBTRACT NUCLEUS/FLPA FRAME COUNT.
         LA    R15,X'700'+C'H'   LOAD GRAPH CHARACTER CODES.
         BAS   R14,FRAMPLOT      PLOT HSA FRAMES.
NULPLOTF ST    R4,PRVFLINE       SAVE THE ADDRESS OF THIS DISPLAY LINE.
         LA    R4,LL(,R4)        POINT TO THE NEXT LINE.
         LA    R8,100            LOAD TGET COUNT BEFORE AUTO-UPDATE.
         C     R4,FSMAXPTR       REUSING SCREEN SPACE?
         BL    SHOWCPUF          YES, DISPLAY WHOLE SCREEN.
         LR    R2,R4             NO, UPDATE BUFFER POINTER.
         ST    R2,FSMAXPTR       SAVE THE NEW BIGGEST BUFFER ADDRESS.
         C     R2,PAGEND         FILLED UP THE SCREEN?
         BNL   SHOWCPUF          YES, DISPLAY WHOLE SCREEN.
         BAS   R1,SYSUMMRY       PRODUCE & SHOW SYSTEM SUMMARY LINE.
         C     R2,PAGEND         FILLED UP THE SCREEN?
         BNL   SHOWCPUF          YES, DISPLAY WHOLE SCREEN.
         MVC   0(4,R2),BLNKREST  ERASE REST OF SCREEN.
         LA    R2,4(,R2)         ADJUST BUFFER POINTER.
         SPACE
SHOWCPUF L     R9,CCTADDR        GET CCT ADDRESS.
         LH    R9,UTILP(,R9)     LOAD CCVUTILP (CPU BUSY %).
         CVD   R9,WORK           CONVERT IT TO DECIMAL.
         MVC   BUSY,ED3          MOVE IN THE EDIT MASK.
         ED    BUSY,WORK+6       EDIT THE OUTPUT FIELD.
         LA    R1,HOME           POINT TO START OF SCREEN BUFFER.
         LR    R0,R2             POINT TO END OF SCREEN BUFFER.
         SR    R0,R1             GET SCREEN BUFFER LENGTH.
PUTSCRNF BAS   R14,SCREENIO      CALL SCREEN I/O HANDLER.
         CLI   DOWNCNTR,C' '     ARE WE IN AUTO REFRESH MODE?
         BH    MOREFRMS          YES, GO TO NEW SCREEN IMAGE LOGIC.
         CHI   R15,4             ANY INPUT RECEIVED FROM TERMINAL YET?
         BE    FRMSUMWT          NO, PERFORM AN AUTO-UPDATE.
         SLR   R8,R8             YES, HOLD (ALMOST) FOREVER.
         CLI   INBUFF,10         PF10/22?
         BE    ISRELEAS          YES, RELEASE DISPLAY ADDRESS.
         CLI   INBUFF,11         PF11/23?
         BE    ISFREEZE          YES, FREEZE DISPLAY ADDRESS.
         TM    MODESW2,XFLG      SUBROUTINE EXIT REQUIRED?
         BZ    CMDSCANF          NO, TGET RESULTS.
         MVI   TGETFLG,TGETFLGA  RESTORE TGET TYPE FOR OTHER ROUTINES.
         BR    R9                RETURN TO MAINLINE VIA SCREENIO.
FRMSUMWT STIMER WAIT,BINTVL=TEN  WAIT A DECISECOND.
         SLR   R0,R0             ZERO THE TPUT LENGTH.
         BCT   R8,PUTSCRNF       GO CHECK FOR MORE INPUT.
         B     MOREFRMS          NOTHING YET SO SIMULATE AN ENTER.
CMDSCANF CLI   INCHARS,C'M'      CHECK IF DISPLAY ADDRESS REQUESTED.
         BNE   CONTINUF          NO.
         CLI   FMONMODE,C'D'     CURRENTLY IN DETAIL DISPLAY MODE?
         BNE   GIVEHLPF          NO, SHOW HELP PANEL.
FGETMEG# LA    R1,MEGPROMT       POINT TO PROMPTING MESSAGE.
         LA    R0,GETMEGLN       LOAD THE LENGTH OF THE DATA STREAM.
         BAS   R14,SCREENIO      ISSUE PROMPT AND GET MEGABYTE NUMBER.
         CLI   INBUFF+4,0        INPUT FROM THE FIRST SCREEN LINE?
         BE    FGETMEG#          YES, UNEXPECTED SO REDRIVE THE PROMPT.
DIRMADDR LA    R15,INCHARS       POINT TO START OF TEXT.
         LA    R0,3              UP TO THREE CHARACTERS IN INPUT TEXT.
         SLR   R1,R1             CLEAR MEGABYTE ADDRESS NUMBER.
JUSTMEG# CLI   0(R15),C' '       INPUT CHARACTER A BLANK?
         BNE   CHKMEG#           NO, INPUT IS LEFT JUSTIFIED.
         LA    R15,1(,R15)       YES, POINT TO NEXT TEXT BYTE.
         BCT   R0,JUSTMEG#
         B     MOREFRMS          NULL INPUT SO FORGET IT.
CHKMEG#  CLI   0(R15),C' '       BLANK CHARACTER?
         BE    GOTMEG#           YES, END OF INPUT TEXT PARSING.
         CLI   0(R15),C'0'       NUMERIC CHARACTER?
         BL    MOREFRMS          NO, INVALID SO FORGET IT.
         SLL   R1,8              GET ROOM FOR ANOTHER DIGIT.
         IC    R1,0(,R15)        LOAD UNPACKED DIGIT.
         LA    R15,1(,R15)       POINT TO NEXT TEXT BYTE.
         BCT   R0,CHKMEG#        EXAMINE NEXT DIGIT, IF ANY.
GOTMEG#  ST    R1,WORK           GET UNPACKED NUMBER.
         PACK  WORK+6(2),WORK+1(3)
         XC    WORK(6),WORK      LEAVE PACKED NUMBER IN DOUBLEWORD.
         CVB   R6,WORK           GET EQUIVALENT BINARY.
         LR    R0,R6             SAVE MEGABYTE NUMBER.
         SLL   R6,8+5            MUTIPLY BY 256 AND THEN BY 32.
         A     R6,208(,R3)       POINT TO REQUIRED PFTE.
         C     R6,212(,R3)       IS IT OUT-OF-RANGE?
         BH    MOREFRMS          YES, INVALID SO FORGET IT.
         LR    R5,R6             LOAD NEW PFTE ADDRESS.
         ST    R5,PFTEPTR        SAVE THIS PFTE POINTER.
         LR    R8,R0             LOAD NEW MEGABYTE NUMBER.
         STH   R8,MEGCNTR        SAVE IT AGAIN.
         L     R7,212(,R3)       POINT TO LAST PFTE.
         LA    R7,32(,R7)        POINT PAST LAST PFTE.
         SR    R7,R5             SUBTRACT CURRENT PFTE ADDRESS.
         SRL   R7,5              GET NUMBER OF PFT ENTRIES TO GO.
         ST    R7,FRMCNTR        SAVE NUMBER OF PFT ENTRIES TO GO.
         LA    R2,BUFFER         RESET SCREEN BUFFER POINTER.
         LA    R4,256            RESET REMAINING ENTRIES THIS SCREEN.
         B     NXTFRAME          NO, DO NEXT PAGE FRAME.
FRMDMODE MVI   FMONMODE,C'D'     INDICATE DETAIL REAL STORAGE MONITOR.
         MVI   TGETFLG,TGETFLGA  PERFORM ASIS WAIT TGETS THIS MODE.
         NI    MODESW2,255-CLNF  CLEAN-UP UPON EXIT NO LONGER REQUIRED.
         XC    PRVFLINE(8),PRVFLINE NO DATA SAVED FROM PREVIOUS S MODE.
         B     MOREFRMS          ISSUE PROMPT AND GET PREFIX.
FRMSMODE MVI   FMONMODE,C'S'     INDICATE SUMMARY REAL STORAGE MONITOR.
         LA    R2,BUFFER         RESET BUFFER POINTER.
FRMSRVFY CLI   HEADMODE,C'F'     IN MANUAL SUMMARY MODE?
         BE    MOREFRMS          YES, CONTINUE.
         MVI   TGETFLG,TGETFLGN  NO, USE ASIS NOWAIT TGETS.
         OI    MODESW2,CLNF      FLAG CLEAN-UP REQUIRED UPON EXIT.
         B     MOREFRMS          CONSTRUCT A NEW DISPLAY SCREEN IMAGE.
CONTINUF CLC   =H'48',INBUFF+4   TEXT FROM MEGABYTE INPUT AREA?
         BE    DIRMADDR          YES, DIRECT MEGABYTE ADDRESSING.
         CLI   INCHARS,C'D'      FRAME DETAIL DISPLAY MODE REQUESTED?
         BE    FRMDMODE          YES, PROCESS IT.
         CLI   INCHARS,C'S'      FRAME SUMMARY DISPLAY MODE REQUESTED?
         BE    FRMSMODE          YES, PROCESS IT.
         CLI   INCHARS,C'V'      TOGGLE VIRTUAL ADDRESS DISPLAY?
         BE    FRMSVIRT          YES, PROCESS IT.
         CLI   INCHARS,C' '      YES, CONTINUE REQUESTED?
         BNE   TRYFREEZ          NO, CHECK FOR VALID SUBCOMMANDS.
MOREFRMS CLI   FMONMODE,C'S'     YES, OPTION F IN SUMMARY MODE?
         BE    FRAMSMRY          YES, PERFORM A SUMMARY.
         LA    R2,BUFFER         NO, POINT TO FIRST DETAIL LINE.
         LA    R4,256            RESET REMAINING ENTRIES THIS SCREEN.
         LH    R8,MEGCNTR        GET CURRENT DISPLAY BASE ADDRESS.
FREEZTST B     NEXTMEG           INITIALLY PROCESS NEXT MEGABYTE.
         LTR   R8,R8             FROZEN ON FIRST MEG OF REAL?
         BZ    REDOFRMS          YES, START OVER.
         L     R7,OLDFCNTR       GET OLD FRAME COUNTDOWN.
         ST    R7,FRMCNTR        STORE IT IN CURRENT SAVE AREA.
         L     R5,OLDPFTEP       GET OLD PFTE POINTER.
         ST    R5,PFTEPTR        STORE IT IN CURRENT POINTER SAVE AREA.
         B     NXTFRAME          RE-DO SAME REAL MEGABYTE.
NEXTMEG  ICM   R7,15,FRMCNTR     GET REMAINING FRAMES TO PROCESS COUNT.
         BZ    REDOFRMS          END OF REAL MEMORY REACHED SO RESTART.
         LA    R8,1(,R8)         INCREMENT FOR NEXT MEGABYTE OF REAL.
         STH   R8,MEGCNTR        SAVE IT AGAIN.
         L     R5,PFTEPTR        GET NEXT PFTE ADDRESS.
         B     NXTFRAME          DO NEXT PAGE FRAME.
FRMSVIRT XI    FVIRTADR,C'V'     TOGGLE VIRTUAL ADDRESS DISPLAY FLAG.
         B     MOREFRMS          GO UPDATE SCREEN.
TRYFREEZ CLI   INCHARS,C'F'      DISPLAY ADDRESS FREEZE REQUESTED?
         BNE   TRYRELSE          NO, CHECK FOR RELEASE REQUEST.
ISFREEZE NI    FREEZTST+1,X'0F'  YES, ALTER LOGIC PATH.
         MVI   HEADMODE,C'F'     INDICATE DISPLAY MODE.
         MVI   TGETFLG,TGETFLGA  PERFORM ASIS WAIT TGETS FROM NOW ON.
         NI    MODESW2,255-CLNF  CLEAN-UP UPON EXIT NO LONGER REQUIRED.
         B     MOREFRMS          GO DO NEXT DISPLAY SCREEN.
TRYRELSE CLI   INCHARS,C'R'      DISPLAY ADDRESS RELEASE REQUESTED?
         BNE   JOBFRAME          NO, CHECK FOR JOB NAME PREFIX.
ISRELEAS OI    FREEZTST+1,X'F0'  YES, ALTER LOGIC PATH.
         MVI   HEADMODE,C'R'     INDICATE DISPLAY MODE.
         CLI   FMONMODE,C'D'     YES, OPTION F IN DETAIL MODE?
         BE    MOREFRMS          YES, GO DO NEXT DISPLAY SCREEN.
         MVI   TGETFLG,TGETFLGN  NO, USE ASIS NOWAIT TGETS.
         OI    MODESW2,CLNF      FLAG CLEAN-UP REQUIRED UPON EXIT.
         B     MOREFRMS          GO DO NEXT DISPLAY SCREEN.
JOBFRAME CLI   INCHARS,C'J'      CHECK FOR SPECIFIC JOB NAME PREFIX.
         BNE   TRY31HLI          NO, CHECK HIGHLIGHTING REQUESTS.
         XC    SELJOBNM,SELJOBNM ERASE PREVIOUS JOBNAME.
         SLR   R1,R1
         CLI   INCHARS+1,C'/'    ERASE PREVIOUS PREFIX REQUEST?
         BE    NOJOBPPG          YES, DO IT.
FGETJNAM LA    R1,JPRFXMSG
         LA    R0,JOBSELEN       FULL SCREEN TPUT THE PROMPT MESSAGE.
         BAS   14,SCREENIO       ISSUE PROMPT AND GET PREFIX.
         CLI   INBUFF+4,0        INPUT FROM THE FIRST SCREEN LINE?
         BE    FGETJNAM          YES, UNEXPECTED SO REDRIVE THE PROMPT.
         MVC   SELJOBNM,INCHARS  EXTRACT SPECIFIED PREFIX.
         LH    R1,TGETLEN        GET LENGTH OF INPUT STREAM.
         AHI   R1,-6             GET LENGTH OF TEXT.
NOJOBPPG STH   R1,JPRFXLEN       STORE PREFIX LENGTH.
         B     MOREFRMS          CONTINUE MEMORY SCAN.
TRY31HLI CLI   INCHARS,C'A'      CHECK FOR HIGHLIGHTING ABOVE 16M.
         BNE   TRY24HLI          NO.
         CLI   INCHARS+1,C'4'    VALID SUBCODE?
         BH    GIVEHLPF          NO, SHOW HELP SCREEN.
         CLI   INCHARS+1,C'3'    VALID SUBCODE?
         BE    GIVEHLPF          NO, SHOW HELP SCREEN.
         CLI   INCHARS+1,C'0'    NUMERIC SUBCODE?
         BL    GIVEHLPF          NO, SHOW HELP SCREEN.
         MVI   HILITE31+1,0      LOAD DEFAULT (NO HIGHLIGHTING).
         BE    MOREFRMS          DEFAULT REQUESTED SO CONTINUE.
         MVC   HILITE31+1(1),INCHARS+1
         B     MOREFRMS          LOAD HIGHLIGHTING CODE AND CONTINUE.
TRY24HLI CLI   INCHARS,C'B'      CHECK FOR HIGHLIGHTING BELOW 16M.
         BNE   GIVEHLPF          NO, SHOW HELP SCREEN.
         CLI   INCHARS+1,C'4'    VALID SUBCODE?
         BH    GIVEHLPF          NO, SHOW HELP SCREEN.
         CLI   INCHARS+1,C'3'    VALID SUBCODE?
         BE    GIVEHLPF          NO, SHOW HELP SCREEN.
         CLI   INCHARS+1,C'0'    NUMERIC SUBCODE?
         BL    GIVEHLPF          NO, SHOW HELP SCREEN.
         MVI   HILITE24+1,0      LOAD DEFAULT (NO HIGHLIGHTING).
         BE    MOREFRMS          DEFAULT REQUESTED SO CONTINUE.
         MVC   HILITE24+1(1),INCHARS+1
         B     MOREFRMS          LOAD HIGHLIGHTING CODE AND CONTINUE.
GIVEHLPF MVC   INBUFF(8),SBLST   REQUEST SUBCOMMAND LIST FROM TUTORIAL.
         MVI   TGETLEN+1,8       SUPPLY LENGTH OF INPUT TO PARSE.
         LNR   R0,R11            MAKE REGISTER 0 NEGATIVE FOR PARSE.
         B     PUTSCRNF          GO DISPLAY HELP PANEL.
         SPACE
FRAMPLOT TM    GRAFLAGS,COLR+HLIT       WILL GRAPHIC CODES BE USED?
         BNO   PFTEPLOT                 NO, USE A STANDARD CHARACTER.
         SRL   R15,8                    YES, PROMOTE GRAPHIC CODE.
PFTEPLOT LR    R1,R8             GET THE CURRENT NUMERATOR.
         M     R0,AHUNDRED       PREPARE FOR PERCENTAGE.
         DR    R0,R9             DIVIDE BY DENOMINATOR.
         LA    R1,1(,R1)         ROUND TO NEAREST FIFTIETH.
         SRA   R1,1              HALVE IT TO GET FIFTIETHS.
         BZR   R14               NO ACTION FOR ZERO PERCENT.
         STC   R15,LL-73(R4)     SUPPLY THE GRAPH CHARACTER OR CODE.
         BCTR  R1,0              SUBTRACT ONE FOR BYTE SUPPLIED.
         BCTR  R1,0              SUBTRACT ONE FOR EXECUTE.
         LTR   R1,R1             STILL NON-NEGATIVE?
         BMR   R14               NO, PLOT COMPLETE SO RETURN.
         EX    R1,PLOTPFTE       COMPLETE THE PLOTTING.
         BR    R14               RETURN.
         SPACE
PLOTPFTE MVC   LL-72(0,R4),LL-73(R4)            <<< EXECUTED >>>
         SPACE
         DROP  R11,R10           FRAMES.
         TITLE 'REAL MEMORY MONITOR - VARIABLES AND CONSTANTS'
*RITADDR DC    A(0)             POINTER TO RSM INTERNAL TABLE.
PFTEPTR  DC    A(0)             POINTER TO CURRENT BASE PFTE.
OLDPFTEP DC    A(0)             POINTER TO PREVIOUS BASE PFTE.
PRVFLINE DC    A(0)             POINTER TO PREVIOUS SUMRY DISPLAY LINE.
FSMAXPTR DC    A(0)             MAXIMUM SCREEN BUFFER POINTER VALUE.
ESTOREIO DC    F'0'             E-STORE I/O TOTAL.
*ECLMCNT DC    F'0'             PAGING RECLAIMED TOTAL.
PAGIOCNT DC    F'0'             PAGING I/O TOTAL.
PAGETIME DC    F'0'             TIME OF PAGING TOTAL.
FRMCNTR  DC    F'0'             CURRENT FRAMES STILL TO PROCESS.
OLDFCNTR DC    F'0'             PREVIOUS FRAMES STILL TO PROCESS.
PFTECNT0 DS    0F               PFTE COUNTERS TO BE RESET EACH SCAN.
PFTECNTH DS    F'0'             HSA FRAME COUNTER.
PFTECNTN DS    F'0'             NUCLEUS AND FLPA FRAME COUNTER.
PFTECNTS DS    F'0'             SQA FRAME COUNTER.
PFTFCNTP DS    F'0'             PAGE-FIXED PLPA AND MLPA FRAME COUNTER.
PFTECNTP DS    F'0'             PAGEABLE PLPA AND MLPA FRAME COUNTER.
PFTFCNTC DS    F'0'             PAGE-FIXED CSA FRAME COUNTER.
PFTECNTC DS    F'0'             PAGEABLE CSA FRAME COUNTER.
PFTFCNTR DS    F'0'             PAGE-FIXED USER REGION FRAME COUNTER.
PFTECNTR DS    F'0'             PAGEABLE USER REGION FRAME COUNTER.
PFTECNTL DS    F'0'             LSQA FRAME COUNTER.
PFTECNTA DS    F'0'             AVAILABLE FRAME COUNTER.
PFTECNTT DS    F'0'             TOTAL USEABLE FRAME COUNTER.
PFTELEN0 EQU   *-PFTECNT0       LENGTH OF COUNTERS TO BE 0'D EACH SCAN.
*RITEPNAM DC   CL8'IARMRRIT'    NAME OF RSM INTERNAL TABLE ENTRY POINT.
MEGCNTR  DC    H'0'             MEGABYTE NUMBER OF CURR DISPL BASE ADDR
FVIRTADR DC    XL1'00'          FLAG SHOWING OF VIRTUAL ADDRESS.
HEADINGF DC    C'REAL PAGE FRAME ALLOCATION  -  REAL ADDRESS'
HEADMEG  DC    C' ###'
         DC    C' MB  -  DISPLAY MODE: '
HEADMODE DC    C'R'             INITIALLY IN RELEASED DISPLAY MODE.
         DC    C' '
FMONMODE DC    C'D'             PAGE FRAME MONITOR DISPLAY OPTION FLAG.
SUBHDGFS DC    CL79' TIME ----+---2+0---+---4+0---+---6+0---+---8+0---++
               ----% UIC PGRT AFC ASMQ CPU%'
FSLEGEND DC    CL79'H=HSA N=NUCLEUS/FLPA S=SQA F=PAGE-FIXED U=USER L=LS+
               QA P=PLPA/MLPA C=CSA .=FREE '
RAL18C01 DC    X'3CD55040'      REPEAT BLANKS TO LINE 18 COLUMN 1.
FRAMESUM DC    X'2842F2',C' E-STORE FRAMES:',X'2842F3'
MEMVARS1 DC    CL24'  ####### USABLE #######'
         DC    CL40' IN-USE ####### COMMON #####.## IN+OUT/S'
         DC    X'2842F2'
         DC    CL20' REAL PAGE FRAMES:  ',X'2842F3'
MEMVARS2 DC    CL20' UIC=###   ##### RSM'
         DC    CL40' FRAMES < 16M  ####### TOTAL RSM FRAMES '
MEMVARS3 DC    CL40' ##### PREFERRED BELOW AVAILABLE    ####'
         DC    CL40'# FIXED < 16M  ####### TOTAL FIXED      '
MEMVARS4 DC    CL40'####### COMMON ####### AVAILABLE  DREF: '
         DC    CL40'#####CS #####TOT  PGRT #####.## IN+OUT/S'
FRAMELEN EQU   *-FRAMESUM
MEGFUDGE DCS   SBA,(1,48),SF,UNPHI,SBA,(1,52),SF,PROHIS
MEGFIXLN EQU   *-MEGFUDGE
MEGPROMT DC    X'C11140403C40400011C5C2&LOW'
         DC    C'ENTER DECIMAL MEGABYTE ADDRESS OF REAL STORAGE'
         DC    X'&MED',C'===>'
         DC    X'1BC94E132841F40000002841001BF8C2114BD2&LOW'
         DC    C'(NON-NUMERIC OR OUT-OF-RANGE INPUT WILL BE IGNORED)'
GETMEGLN EQU   *-MEGPROMT
         SPACE
         LTORG
         SPACE
         DS    0H
