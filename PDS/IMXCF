IMXCF CSECT
IMXCF AMODE 31
IMXCF RMODE ANY

*********************************************************************
*                                                                   *
*        Function: This module invokes XCF services to obtain       *
*                  various XCF system related information.          *
*                                                                   *
*        Entry point : IMXCF                                        *
*                                                                   *
*        Input registers:                                           *
*          R0: N/A                                                  *
*          R1: Address of caller's parameter list pointer           *
*          R2-12: N/A                                               *
*          R13: Address of register save area                       *
*          R14: Return address                                      *
*          R15: Entry point address                                 *
*                                                                   *
*        Output registers:                                          *
*          R0-14: Same as on entry                                  *
*          R15: Return code                                         *
*               0 - IMXCF completed successfully                    *
*              12 - IMXCF parameter list error                      *
*              16 - IMXCF internal error                            *
*                                                                   *
*        Register usage(internal):                                  *
*          R0-11: Work registers                                    *
*          R12: Base register                                       *
*          R13: Address of workarea                                 *
*          R14-15: Work and linkage registers                       *
*                                                                   *
*                                                                   *
*        Upon invocation of this routine, the caller must pass      *
*        the following parameter list:                              *
*                                                                   *
*        PARMLIST DS   0CL8                                         *
*        PARM1    DS   CL4  (function request indicator)            *
*        PARM2    DS   A    (return information table address)      *
*                                                                   *
*        PARM1 is an input parameter and specifies the function     *
*        request type.  PARM1 can have any of the following values: *
*        "SA" - Return XCF system activity information.             *
*        "PA" - Return XCF path activity information.               *
*        "GA" - Return XCF group activity information.              *
*        The function request indicator must be left-justified and  *
*        blank padded on the right.                                 *
*                                                                   *
*        PARM2 is an output parameter and contains the address of   *
*        the return information table that this routine acquires.   *
*        Storage for the table is acquired in E(PVT), subpool 130,  *
*        and the caller's psw key.  It is the caller's              *
*        responsibility to free storage for the table when finished *
*        with its use.  The format of the information table is      *
*        as follows:                                                *
*                                                                   *
*        INFTXD1  DS    0D   Format 1 - XCF system activity         *
*        TXD1SIZE DS    F    Total table size                       *
*        TXD1SYS# DS    F    # of system records                    *
*        TXD1SYSL DS    F    System record length                   *
*        TXD1SYSA EQU   *    System records area                    *
*                                                                   *
*        INFTXD2  DS    0D   Format 2 - XCF path activity           *
*        TXD2SIZE DS    F    Total table length                     *
*        TXD2PTH# DS    F    # of path records                      *
*        TXD2PTHL DS    F    Path record length                     *
*        TXD2PTHA EQU   *    Path records area                      *
*                                                                   *
*        INFTXD3  DS    0D   Format 3 - XCF group activity          *
*        TXD3SIZE DS    F    Total table length                     *
*        TXD3GRP# DS    F    # of group records                     *
*        TXD3GRPL DS    F    Group record length                    *
*        TXD3GRPA EQU   *    Group records area                     *
*                                                                   *
*        Note that PARM1 and PARM2 must both be provided.           *
*                                                                   *
*        Environment: Amode 31, rmode any, supervisor state,        *
*                     psw key 0.                                    *
*                                                                   *
*                                                                   *
*        Author: Bob Break                                          *
*                                                                   *
*********************************************************************
*********************************************************************

***********************************************************************
*                                                                     *
*        Initialization.                                              *
*                                                                     *
***********************************************************************

R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15

         USING PSA,0
IMXCF000 BAKR  R14,0                    Save caller's environment
         LR    R12,R15                  Set base register
         USING IMXCF000,R12               and addressability
         B     IMXCF001                 Branch around module identifier
         DC    CL8'IMXCF'               Module name
         DC    C'&SYSDATE'              Assembly date
         DC    C'VERS01'                Version
IMXCF001 DS    0H
         MODESET MODE=SUP               Set supervisor state
         IPK   0(0)                     Get caller's psw key
         SPKA  0(0)                     Set psw key 0
         LA    R0,WORKSIZE              Get workarea size
         STORAGE OBTAIN,LENGTH=(R0),LOC=ANY
         LR    R3,R1                    Save workarea pointer
         LR    R14,R3                   Get pointer into work register
         LA    R15,WORKSIZE             Set move to length
         XR    R1,R1                    Set move from length and pad
         MVCL  R14,R0                   Clear workarea
         ST    R3,8(,R13)               Chain save areas
         ST    R13,4(,R3)               *
         LR    R13,R3                   Set workarea pointer
         USING WORKAREA,R13
         EREG  R0,R1                    Restore entry registers 0-1
         L     R1,0(,R1)                Point to input parm list
         ST    R1,PARMPTR               Save parm list pointer
         STC   R2,CALLKEY               Save caller's psw key

***********************************************************************
*                                                                     *
*        Extract the input parameters.                                *
*                                                                     *
***********************************************************************

IMXCF010 OC    0(4,R1),=CL4' '           Assure function is upper case
         CLC   0(2,R1),=C'SA'            System activity request?
         BNE   IMXCF011                  No - branch, check "PA"
         L     R15,=A(IMXCF100)          Get system routine pointer
         BALR  R14,R15                   Branch - process system req.
         B     IMXCFRET                  Branch - return
IMXCF011 CLC   0(2,R1),=C'PA'            Path activity request?
         BNE   IMXCF012                  No - branch, check "GA"
         L     R15,=A(IMXCF200)          Get path routine pointer
         BALR  R14,R15                   Branch - process path req.
         B     IMXCFRET                  Branch - return
IMXCF012 CLC   0(2,R1),=C'GA'            Group activity request?
         BNE   IMXCF013                  No - branch, parm list error
         L     R15,=A(IMXCF300)          Get group routine pointer
         BALR  R14,R15                   Branch - process group req.
         B     IMXCFRET                  Branch - return
IMXCF013 MVC   RETCODE,=F'12'            Set error return code
         B     IMXCFRET                  Branch - return

***********************************************************************
*                                                                     *
*        Return to caller.                                            *
*                                                                     *
***********************************************************************

IMXCFRET L     R2,RETCODE                Get return code
         LA    R0,WORKSIZE               Get workarea size
         LR    R1,R13                    Get workarea pointer
         STORAGE RELEASE,LENGTH=(R0),ADDR=(R1)
         LR    R15,R2                    Set return code
         PR                              Return to caller

         LTORG


*********************************************************************
*********************************************************************
*                                                                   *
*        IMXCF100 - Invoke XCF services to obtain system activity   *
*                   information.                                    *
*                                                                   *
*        Register usage:                                            *
*                                                                   *
*        Input           Output           Internal                  *
*        -----           ------           --------                  *
* R0-11  N/A             Unchanged        Work                      *
* R12    N/A             Unchanged        Base register             *
* R13    Workarea        Unchanged        Workarea                  *
* R14    BALR address    Return address   Work                      *
* R15    N/A             Unchanged        Work                      *
*                                                                   *
*        Environment - Internal IMXCF routine.  Invoked by BALR.    *
*                                                                   *
*********************************************************************
*********************************************************************

IMXCF100 DS    0H
         BAKR  R14,0                Save caller's environment
         LR    R12,R15              Set up base register
         USING IMXCF100,R12           and addressability
         L     R0,=A(QUAHLENG+(32*QUASLENG))  Get answer area length
         ST    R0,ANSWERL1          Save answer area length
         STORAGE OBTAIN,LENGTH=(R0),LOC=ANY
         LR    R2,R1                Set answer area addr for IXCQUERY
         ST    R1,ANSWERA1          Save answer area address
         LR    R14,R1               Get area ptr into work reg
         L     R15,=A(QUAHLENG+(32*QUASLENG))  Set move to length
         XR    R1,R1                Set move from length and pad
         MVCL  R14,R0               Clear IXCQUERY answer area
         MVC   IXCQWRK(IXCQLL1),IXCQLST1  Set IXCQUERY parm list
         IXCQUERY REQINFO=SYSPLEX,  Request system information         X
               ANSAREA=(R2),        Answer area address                X
               ANSLEN=ANSWERL1,     Answer area length                 X
               MF=(E,IXCQWRK)
         L     R1,=F'4096'          Get data area length
IMXCF101 ST    R1,DATAL1            Set data area length
         STORAGE OBTAIN,LENGTH=(R1),BNDRY=PAGE,SP=253,LOC=ANY
         ST    R1,DATAA1            Save data area address
         LR    R2,R1                Set area pointer in work register
         USING AMDAREA,R2
         MVC   IXCMGWRK(IXCMGLL1),IXCMGLS1  Set IXCMG parm list
         IXCMG DATAAREA=(R2),       Data area                          X
               DATALEN=DATAL1,      Data area length                   X
               TYPE=SYSTEM,         Request system activity data       X
               MF=(E,IXCMGWRK)
         LTR   R15,R15              IXCMG successful?
         BZ    IMXCF110             Yes - branch, continue
         C     R15,=F'4'            IXCMG rc=4?
         BNE   IMXCF109             No - branch, internal error
         CLC   AMDATLEN,DATAL1      Data area large enough?
         BNH   IMXCF109             Yes - branch, internal error
         L     R3,AMDATLEN          Get required data area length
         L     R0,DATAL1            Get data area length
         L     R1,DATAA1            Get data area address
         STORAGE RELEASE,ADDR=(R1),LENGTH=(R0),SP=253
         LR    R1,R3                Reset required data area length
         B     IMXCF101             Loop back to issue IXCMG again
IMXCF109 MVC   RETCODE,=F'16'       Set error return code
         B     IMXCF190             Branch - return
IMXCF110 LA    R1,TXD1SYSS          Get system record size
         ICM   R15,15,AMDA#SYS      Get number of system records
         XR    R14,R14              Calculate systems area length
         MR    R14,R1               *
         LA    R0,(TXD1SYSA-INFTXD1)  Get fixed INFTXD1 length
         ALR   R0,R15               Calculate total INFTXD1 length
         LR    R3,R0                Save INFTXD1 length
         IC    R5,CALLKEY           Get caller's psw key
         STORAGE OBTAIN,LENGTH=(R0),SP=130,KEY=(R5),LOC=ANY
         ST    R1,INFTABP           Save table pointer
         LR    R11,R1               Set table pointer
         LR    R14,R1               Get pointer into work register
         LR    R15,R3               Set move to length
         XR    R1,R1                Set move from length and pad
         MVCL  R14,R0               Clear table
         USING INFTXD1,R11
         ST    R3,TXD1SIZE          Set INFTXD1 size in table
         L     R1,PARMPTR           Get input parameter list pointer
         ST    R11,4(,R1)           Set table address for caller
         MVC   TXD1SYS#,AMDA#SYS    Set # system records
         LA    R1,TXD1SYSS          Get system record size
         ST    R1,TXD1SYSL          Get system record length
         ICM   R3,15,AMDAOSYS       Get first system entry offset
         ALR   R3,R2                Point to first system entry
         USING AMDSYS,R3
         ICM   R0,15,AMDA#SYS       Get # of system entries
         BZ    IMXCF190             Branch - no system entries
         LA    R10,TXD1SYSA         Point to system records area
         USING TXD1SYS,R10
IMXCF111 MVC   TXD1SYSN,AMDSYNME    Set system name
         L     R15,ANSWERA1         Get IXCYQUAA address
         USING QUAHDR,R15
         ICM   R14,15,QUAH#REC      Get # system records
         BZ    IMXCF114             Branch - no system records
         L     R1,QUAHSGOF          Get first system record offset
         DROP  R15                  QUAHDR
         ALR   R15,R1               Point to first system record
         USING QUASYS,R15
IMXCF112 CLC   QUASNAME,AMDSYNME    System name match?
         BNE   IMXCF113             No - branch, check next record
         MVC   TXD1FLG1,QUASSTAT    Set system status flag byte
         B     IMXCF114             Branch - continue
IMXCF113 LH    R1,QUASLEN           Get system record length
         ALR   R15,R1               Point to next system record
         BCT   R14,IMXCF112         Loop back to check next system
         DROP  R15                  QUASYS
IMXCF114 MVC   TXD1FLG2,AMDSYDIR    Set direction flag byte
         MVC   TXD1TCLS,AMDSYTCN    Set transport class name
         MVC   TXD1#PTH,AMDSYPTH    Set number of classes in service
         MVC   TXD1#NOP,AMDSYNOP    Set number of no path occurences
         MVC   TXD1#BSY,AMDSYBSY    Set number of no buffer occurences
         MVC   TXD1#MXB,AMDSYMXB    Set max. 1k blocks buffer space
         MVC   TXD1#USE,AMDSYUSE    Set 1k blocks buffer space in use
         MVC   TXD1#BIG,AMDSYBIG    Set # msgs length > buffer size
         MVC   TXD1#FIT,AMDSYFIT    Set # msgs length fit buffer size
         MVC   TXD1#SML,AMDSYSML    Set # msgs length < buffer size
         MVC   TXD1#OVR,AMDSYOVR    Set # msgs length > buffer size for
*                                   optimized signalling service
         MVC   TXD1#TCL,AMDSYTCL    Set longest msg. length that fits
*                                   transport class buffer size
         MVC   TXD1#SMX,AMDSYSMX    Set default 1k blocks buffer size
         LH    R1,AMDSYLEN          Get system entry length
         ALR   R3,R1                Point to next system entry
         LA    R10,TXD1SYSS(,R10)   Bump to next table system record
         BCT   R0,IMXCF111          Loop back for next system entry
IMXCF190 L     R0,ANSWERL1          Get IXCQUERY answer area length
         L     R1,ANSWERA1          Get IXCQUERY answer area address
         STORAGE RELEASE,ADDR=(R1),LENGTH=(R0)
         L     R0,DATAL1            Get IXCMG data area length
         L     R1,DATAA1            Get IXCMG data area address
         STORAGE RELEASE,ADDR=(R1),LENGTH=(R0),SP=253
         DROP  R2,R3                AMDAREA, AMDSYS
         DROP  R10,R11              TXD1SYS, INFTXD1

IMXCF199 PR                         Restore environment & return

         DROP  R12                  IMXCF100 base

         LTORG

         IXCQUERY MF=(L,IXCQLST1)   IXCQUERY parm list
IXCQLL1  EQU   *-IXCQLST1

         IXCMG MF=(L,IXCMGLS1)      IXCMG parm list
IXCMGLL1 EQU   *-IXCMGLS1


*********************************************************************
*********************************************************************
*                                                                   *
*        IMXCF200 - Invoke XCF services to obtain path activity     *
*                   information.                                    *
*                                                                   *
*        Register usage:                                            *
*                                                                   *
*        Input           Output           Internal                  *
*        -----           ------           --------                  *
* R0-11  N/A             Unchanged        Work                      *
* R12    N/A             Unchanged        Base register             *
* R13    Workarea        Unchanged        Workarea                  *
* R14    BALR address    Return address   Work                      *
* R15    N/A             Unchanged        Work                      *
*                                                                   *
*        Environment - Internal IMXCF routine.  Invoked by BALR.    *
*                                                                   *
*********************************************************************
*********************************************************************

IMXCF200 DS    0H
         BAKR  R14,0                Save caller's environment
         LR    R12,R15              Set up base register
         USING IMXCF200,R12           and addressability
         L     R1,=F'4096'          Get data area length
IMXCF201 ST    R1,DATAL1            Set data area length
         STORAGE OBTAIN,LENGTH=(R1),BNDRY=PAGE,SP=253,LOC=ANY
         ST    R1,DATAA1            Save data area address
         LR    R2,R1                Set area pointer in work register
         USING AMDAREA,R2
         MVC   IXCMGWRK(IXCMGLL2),IXCMGLS2  Set IXCMG parm list
         IXCMG DATAAREA=(R2),       Data area                          X
               DATALEN=DATAL1,      Data area length                   X
               TYPE=PATH,           Request path activity data         X
               MF=(E,IXCMGWRK)
         LTR   R15,R15              IXCMG successful?
         BZ    IMXCF210             Yes - branch, continue
         C     R15,=F'4'            IXCMG rc=4?
         BNE   IMXCF209             No - branch, internal error
         CLC   AMDATLEN,DATAL1      Data area large enough?
         BNH   IMXCF209             Yes - branch, internal error
         L     R3,AMDATLEN          Get required data area length
         L     R0,DATAL1            Get data area length
         L     R1,DATAA1            Get data area address
         STORAGE RELEASE,ADDR=(R1),LENGTH=(R0),SP=253
         LR    R1,R3                Reset required data area length
         B     IMXCF201             Loop back to issue IXCMG again
IMXCF209 MVC   RETCODE,=F'16'       Set error return code
         B     IMXCF290             Branch - return
IMXCF210 LA    R1,TXD2PTHS          Get path record size
         ICM   R15,15,AMDA#PTH      Get number of path records
         XR    R14,R14              Calculate paths area length
         MR    R14,R1               *
         LA    R0,(TXD2PTHA-INFTXD2)  Get fixed INFTXD2 length
         ALR   R0,R15               Calculate total INFTXD2 length
         LR    R3,R0                Save INFTXD2 length
         IC    R5,CALLKEY           Get caller's psw key
         STORAGE OBTAIN,LENGTH=(R0),SP=130,KEY=(R5),LOC=ANY
         ST    R1,INFTABP           Save table pointer
         LR    R11,R1               Set table pointer
         LR    R14,R1               Get pointer into work register
         LR    R15,R3               Set move to length
         XR    R1,R1                Set move from length and pad
         MVCL  R14,R0               Clear table
         USING INFTXD2,R11
         ST    R3,TXD2SIZE          Set INFTXD2 size in table
         L     R1,PARMPTR           Get input parameter list pointer
         ST    R11,4(,R1)           Set table address for caller
         MVC   TXD2PTH#,AMDA#PTH    Set # path records
         LA    R1,TXD2PTHS          Get path record size
         ST    R1,TXD2PTHL          Get path record length
         ICM   R3,15,AMDAOPTH       Get first path entry offset
         ALR   R3,R2                Point to first path entry
         USING AMDPATH,R3
         ICM   R0,15,AMDA#PTH       Get # of path entries
         BZ    IMXCF290             Branch - no path entries
         LA    R10,TXD2PTHA         Point to path records area
         USING TXD2PTH,R10
IMXCF211 MVC   TXD2PDEV,AMDPDEV     Set CTC device number
         MVC   TXD2PSYS,AMDPNAME    Set system name
         MVC   TXD2FLG1,AMDPSTAT    Set path status flag #1
         MVC   TXD2FLG2,AMDPSTA2    Set path status flag #2
         MVC   TXD2FLG3,AMDPDIR     Set path direction flag
         MVC   TXD2TCLS,AMDPTCN     Set transport class
         MVC   TXD2TDEV,AMDPODEV    Set target device number
         MVC   TXD2TSYS,AMDPONME    Set target system name
         MVC   TXD2MRET,AMDPMRET    Set maximum path retry limit
         MVC   TXD2#RET,AMDP#RET    Set path retry count
         MVC   TXD2#RST,AMDP#RST    Set cumulative restart count
         MVC   TXD2#SIG,AMDP#SIG    Set total # signals sent/received
         MVC   TXD2#ACT,AMDP#ACT    Set signals pending transfer count
         MVC   TXD2#SUS,AMDP#SUS    Set signals while not busy count
         MVC   TXD2#APP,AMDP#APP    Set signals while busy count
         MVC   TXD2MXMS,AMDPMXMS    Set maximum message limit
         MVC   TXD2#USE,AMDP#USE    Set # 1k buffers in use by path
         MVC   TXD2#IBR,AMDP#IBR    Set # refused buffer requests
         LH    R1,AMDPLENT          Get path entry length
         ALR   R3,R1                Point to next path entry
         LA    R10,TXD2PTHS(,R10)   Bump to next table path record
         BCT   R0,IMXCF211          Loop back for next path entry
IMXCF290 L     R0,DATAL1            Get IXCMG data area length
         L     R1,DATAA1            Get IXCMG data area address
         STORAGE RELEASE,ADDR=(R1),LENGTH=(R0),SP=253
         DROP  R2,R3                AMDAREA, AMDPATH
         DROP  R10,R11              TXD2PTH, INFTXD2

IMXCF299 PR                         Restore environment & return

         DROP  R12                  IMXCF200 base

         LTORG

         IXCMG MF=(L,IXCMGLS2)      IXCMG parm list
IXCMGLL2 EQU   *-IXCMGLS2


*********************************************************************
*********************************************************************
*                                                                   *
*        IMXCF300 - Invoke XCF services to obtain group activity    *
*                   information.                                    *
*                                                                   *
*        Register usage:                                            *
*                                                                   *
*        Input           Output           Internal                  *
*        -----           ------           --------                  *
* R0-11  N/A             Unchanged        Work                      *
* R12    N/A             Unchanged        Base register             *
* R13    Workarea        Unchanged        Workarea                  *
* R14    BALR address    Return address   Work                      *
* R15    N/A             Unchanged        Work                      *
*                                                                   *
*        Environment - Internal IMXCF routine.  Invoked by BALR.    *
*                                                                   *
*********************************************************************
*********************************************************************

IMXCF300 DS    0H
         BAKR  R14,0                Save caller's environment
         LR    R12,R15              Set up base register
         USING IMXCF300,R12           and addressability
         L     R1,=F'4096'          Get data area length
IMXCF301 ST    R1,DATAL1            Set data area length
         STORAGE OBTAIN,LENGTH=(R1),BNDRY=PAGE,SP=253,LOC=ANY
         ST    R1,DATAA1            Save data area address
         LR    R2,R1                Set area pointer in work register
         USING AMDAREA,R2
         MVC   IXCMGWRK(IXCMGLL3),IXCMGLS3  Set IXCMG parm list
         IXCMG DATAAREA=(R2),       Data area                          X
               DATALEN=DATAL1,      Data area length                   X
               TYPE=SRCDST,         Request group activity data        X
               MF=(E,IXCMGWRK)
         LTR   R15,R15              IXCMG successful?
         BZ    IMXCF310             Yes - branch, continue
         C     R15,=F'4'            IXCMG rc=4?
         BNE   IMXCF309             No - branch, internal error
         CLC   AMDATLEN,DATAL1      Data area large enough?
         BNH   IMXCF309             Yes - branch, internal error
         L     R3,AMDATLEN          Get required data area length
         L     R0,DATAL1            Get data area length
         L     R1,DATAA1            Get data area address
         STORAGE RELEASE,ADDR=(R1),LENGTH=(R0),SP=253
         LR    R1,R3                Reset required data area length
         B     IMXCF301             Loop back to issue IXCMG again
IMXCF309 MVC   RETCODE,=F'16'       Set error return code
         B     IMXCF390             Branch - return
IMXCF310 LA    R1,TXD3GRPS          Get group record size
         ICM   R15,15,AMDA#SD       Get number of group records
         XR    R14,R14              Calculate group area length
         MR    R14,R1               *
         LA    R0,(TXD3GRPA-INFTXD3)  Get fixed INFTXD3 length
         ALR   R0,R15               Calculate total INFTXD3 length
         LR    R3,R0                Save INFTXD3 length
         IC    R5,CALLKEY           Get caller's psw key
         STORAGE OBTAIN,LENGTH=(R0),SP=130,KEY=(R5),LOC=ANY
         ST    R1,INFTABP           Save table pointer
         LR    R11,R1               Set table pointer
         LR    R14,R1               Get pointer into work register
         LR    R15,R3               Set move to length
         XR    R1,R1                Set move from length and pad
         MVCL  R14,R0               Clear table
         USING INFTXD3,R11
         ST    R3,TXD3SIZE          Set INFTXD3 size in table
         L     R1,PARMPTR           Get input parameter list pointer
         ST    R11,4(,R1)           Set table address for caller
         MVC   TXD3GRP#,AMDA#SD     Set # group records
         LA    R1,TXD3GRPS          Get group record size
         ST    R1,TXD3GRPL          Get group record length
         ICM   R3,15,AMDAOSD        Get first group entry offset
         ALR   R3,R2                Point to first group entry
         USING AMDSD,R3
         L     R0,=A(QUAHLENG+QUAMLENG+USTATLEN) Get answer area length
         ST    R0,ANSWERL1          Save answer area length
         STORAGE OBTAIN,LENGTH=(R0),LOC=ANY
         ST    R1,ANSWERA1          Save answer area address
         ICM   R9,15,AMDA#SD        Get # of group entries
         BZ    IMXCF390             Branch - no group entries
         LA    R10,TXD3GRPA         Point to group records area
         USING TXD3GRP,R10
IMXCF311 MVC   TXD3GRPN,AMDSGRP     Set group name
         MVC   TXD3MEMN,AMDSMEM     Set member name
         L     R14,ANSWERA1         Get IXCQUERY answer area address
         L     R15,=A(QUAHLENG+QUAMLENG+USTATLEN)  Set move to length
         XR    R1,R1                Set move from length and pad
         MVCL  R14,R0               Clear IXCQUERY answer area
         MVC   IXCQWRK(IXCQLL3),IXCQLST3  Set IXCQUERY parm list
         L     R4,ANSWERA1          Set IXCQUERY answer area address
         IXCQUERY REQINFO=GROUP,    Request group information          X
               GRPNAME=TXD3GRPN,    Group name                         X
               MEMNAME=TXD3MEMN,    Member name                        X
               ANSAREA=(R4),        Answer area address                X
               ANSLEN=ANSWERL1,     Answer area length                 X
               MF=(E,IXCQWRK)
         USING QUAHDR,R4
         L     R1,QUAHSGOF          Get first member record offset
         DROP  R4                   QUAHDR
         ALR   R4,R1                Point to first member record
         USING QUAMEM,R4
         MVC   TXD3FLG1,QUAMSTA1    Set member state flag
         MVC   TXD3TOD,QUAMTOD      Set last member status change TOD
         MVC   TXD3JJOB,QUAMJOB     Set IXCJOIN jobname
         MVC   TXD3SSLT,QUAMSNUM    Set system slot number
         DROP  R4                   QUAMEM
         MVC   TXD3SYSN,AMDSSNAM    Set system name
         MVC   TXD3SCNT,AMDSSCNT    Set total # signals sent
         MVC   TXD3RCNT,AMDSRCNT    Set total # signals received
         LH    R1,AMDSLENT          Get group entry length
         ALR   R3,R1                Point to next group entry
         LA    R10,TXD3GRPS(,R10)   Bump to next table group record
         BCT   R9,IMXCF311          Loop back for next group entry
IMXCF390 L     R0,ANSWERL1          Get IXCQUERY answer area length
         L     R1,ANSWERA1          Get IXCQUERY answer area address
         STORAGE RELEASE,ADDR=(R1),LENGTH=(R0)
         L     R0,DATAL1            Get IXCMG data area length
         L     R1,DATAA1            Get IXCMG data area address
         STORAGE RELEASE,ADDR=(R1),LENGTH=(R0),SP=253
         DROP  R2,R3                AMDAREA, AMDSD
         DROP  R10,R11              TXD3GRP, INFTXD3

IMXCF399 PR                         Restore environment & return

         DROP  R12                  IMXCF0300 base

         LTORG

         IXCQUERY MF=(L,IXCQLST3)   IXCQUERY parm list
IXCQLL3  EQU   *-IXCQLST3

         IXCMG MF=(L,IXCMGLS3)      IXCMG parm list
IXCMGLL3 EQU   *-IXCMGLS3

         DROP  R13                   WORKAREA


WORKAREA DSECT
         DS    18F
RETCODE  DS    F                IMXCF return code
PARMPTR  DS    A                Input parameter list pointer
WORKFLAG DS    XL1              Flag byte
CALLKEY  DS    XL1              Caller's psw key
         DS    XL2              Reserved
INFTABP  DS    A                Information table pointer
         DS    0D
IXCQWRK  DS    (IXCQLL1)X       IXCQUERY parm list workarea
ANSWERA1 DS    A                IXCQUERY answer area address
ANSWERL1 DS    F                IXCQUERY answer area length
USTATLEN EQU   32               XCF user state area length
         DS    0D
IXCMGWRK DS    (IXCMGLL1)X      IXCMG parm list workarea
DATAA1   DS    A                IXCMG data area address
DATAL1   DS    F                IXCMG data area length
WORKSIZE EQU   *-WORKAREA

         COPY  IMXCDATA         Transported XCF sysplex Details


         PRINT NOGEN
         CVT   DSECT=YES
         IEFJESCT
         IEFJSCVT
         IHAASCB
         IHAASVT
         IHAASXB
         IHAPSA
         IXCYQUAA
         IXCYAMDA

         END
