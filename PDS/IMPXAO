*        COPYRIGHT (C) 1986,1994,2011  PRYCROFT SIX PTY LTD
         TITLE 'OS/MVS CONSOLE MONITOR SUBROUTINE'
         USING OSCONSOL,R11,R10
OSCONSOL DS    0H
         LA    R10,2048(,R11)    SET UP SECOND
         LA    R10,2048(,R10)                  BASE REGISTER.
         MVI   INBUFF,X'7D'      SUPPLY AID FOR ENTER.
         MVC   INCHARS(L'INCHARS-1),INCHARS+1
         MVI   INCHARS+L'INCHARS-1,C' '    ADJUST ANY COMMAND INPUT.
         SLR   R0,R0
         ST    R0,OMTTMOVE       ENSURE LATEST MESSAGES ARE DISPLAYED.
         TM    MODESW3,TSU       TIME SHARING USER?
         BO    OTSOSPY           YES.
         CLI   MSGSAUCE,C'C'     NO, GOING TO LOOK AT A CONSOLE?
         BNE   OSPYOKAY          NO, PROCEED.
         MVI   MSGSAUCE,C'T'     YES, WELL DON'T.
         B     OSPYOKAY          PROCEED.
OTSOSPY  STTMPMD ON,KEYS=ALL     TRAP PA1 AND CLEAR KEYS.
OSPYOKAY OI    GRAFLAGS,PA2RTN   TRAP PA2 KEY.
         OI    MODESW2,CLNF      FLAG CLEAN-UP REQUIRED UPON EXIT.
         CLI   INCHARS,C'T'      MASTER TRACE TABLE DISPLAY REQUEST?
         BE    TTSWITCH          YES, SHOW IT.
         CLI   INCHARS,C'L'      SYSTEM LOG BUFFER DISPLAY REQUEST?
         BE    LGSWITCH          YES, SHOW IT.
         CLI   MSGSAUCE,C'C'     SPYING ON SYSTEM CONSOLE?
         BH    CMDSCANO          NO, PROCESS ANY REQUEST.
         SPACE
REDOCNSL ICM   R15,15,OSPYADDR   LOAD ENTRY POINT IN CSA.
         BNZ   CALLCSA           EXISTS SO PROCEED.
         SLR   R1,R1             ZERO THE DCB POINTER.
         LA    R0,OBILDLST       POINT TO BLDL PARAMETER LIST.
*        BLDL  (1),(0)           PERFORM DIRECTORY SEARCH.
         SVC   18                ISSUE BLDL SVC (MACRO HAS MORE CODE).
         LTR   R15,R15           WAS THE MODULE FOUND?
         BNZ   SPYCROOK          NO, DISPLAY AN ERROR MESSAGE.
         CLI   XLATETBL,64
         BNE   SPYCROOK
         TM    OSUSRDAT+8,X'C0'  RENT, REUS?
         BNO   SPYCROOK          NO, DISPLAY AN ERROR MESSAGE.
         LOAD  DE=SPYDELOC,GLOBAL=(YES,P),EOM=NO
         MVI   MSGSAUCE,C'C'     CONSOLE IS NOW THE MESSAGE SOURCE.
         ST    R0,OSPYADDR       SAVE THE ENTRY POINT ADDRESS.
         LR    R15,R0            COPY IT.
CALLCSA  LA    R1,INBUFF         POINT TO COMMAND PARAMETER.
         OI    INBUFF,X'70'      RESTORE AID.
         TM    MODESW2,COL2+COL4 7-COLOUR MODE?
         BNZ   SPYPRMOK          NO, LEAVE "SNAZZY" FLAG OFF.
         LA    R0,1              YES, GET A BIT.
         SLL   R0,31             PROMOTE TO SIGN BIT.
         OR    R1,R0             TELL IMPXASPY TO USE FULL "SNAZZIES".
SPYPRMOK IC    R0,HEADINGO+69    TELL IMPXASPY WHETHER FROZEN OR NOT.
         ICM   R0,2,VIPMODE      TELL IMPXASPY OF COMMAND AUTHORITY.
         BASR  R14,R15           CALL IMPXASPY.
         LTR   R15,R15           WAS INITIALIZATION SUCCESSFUL?
         BNZ   OSPYFAIL          NO, PREPARE MESSAGE FOR DISPLAY.
         STC   R0,HEADINGO+69    SAVE LATEST DISPLAY MODE.
         STCM  R0,2,VIPMODE      SAVE LATEST COMMAND AUTHORITY.
OREQPARS LNR   R0,R11            YES, MAKE REGISTER 0 NEGATIVE.
         MVC   INBUFF+4(2),ONE   SIMULATE PRIMARY INPUT AREA INPUT.
         OI    MODESW,BTMP       FORCE SCREEN SIZE RESYNC.
         B     PUTSCRNO          LET MAINLINE PARSE RETURNED INPUT.
         SPACE
OSPYFAIL MVC   OSBADTXT,=CL23'YOU DON''T HAVE TSO OPER'
         TM    COPYATR1,PSCBCTRL TSO OPER PRIVILEGE?
         BNO   SPYCROOK          NO, THINGS ARE CROOK IN TALLAROOK.
         MVC   OSBADTXT,=CL23'NO CONSOLE IN MVS IMAGE'
SPYCROOK CLI   MSGSAUCE,C'C'     CONSOLE IMAGE EXPLICITLY REQUESTED?
         BE    SPYDEAD           YES, THE SPY IS WORSE THAN JUST CROOK.
         B     TTSWITCH          NO, SHOW THE MASTER TRACE TABLE.
SPYDEAD  LA    R1,OSBADMSG       DISPLAY THE "NOT INSTALLED"
         LA    R0,OSBADLEN               MESSAGE.
PUTSCRNO BAS   R14,SCREENIO      CALL SCREEN I/O HANDLER.
         STC   R15,OTGETRC       SAVE THE RETURN CODE FOR LATER.
         CLI   DOWNCNTR,C' '     ARE WE IN AUTO REFRESH MODE?
         BH    OLOGINIT          YES, CONTINUE WITH DISPLAYS.
         TM    MODESW2,XFLG      SUBROUTINE EXIT REQUIRED?
         BZ    NOTEXITO          NO, PROCESS SUBCOMMAND.
         L     R15,INITADDR
         USING INITIAL,R15
         MVC   HOME,SCRNHDR      RESTORE SCREEN HEADER.
         DROP  R15               INITIAL.
         MVI   TPUTFLG,X'03'     RESTORE TPUT TYPE FOR OTHER ROUTINES.
         MVI   TGETFLG,TGETFLGA  RESTORE TGET TYPE FOR OTHER ROUTINES.
         TM    MODESW3,TSU       TIME SHARING USER?
         BZ    OTMPMDOK          NO, SKIP TSO MACRO.
         STTMPMD OFF             DO NOT TRAP PA1, CLEAR,
OTMPMDOK NI    GRAFLAGS,255-PA2RTN      NOR PA2.
         SLR   R0,R0
         SAR   A4,R0             AR4 WILL POINT TO PRIMARY.
         SAR   A5,R0             AR5 WILL POINT TO PRIMARY.
         SAR   A15,R0            AR15 WILL POINT TO PRIMARY.
         BR    R9                RETURN TO MAINLINE VIA SCREENIO.
         SPACE
NOTEXITO CHI   R15,4             ANY INPUT RECEIVED FROM TERMINAL YET?
         BE    MTTWAIT           NO, WAIT A BIT.
         CLI   INCHARS,C'T'      MASTER TRACE TABLE DISPLAY REQUEST?
         BE    TTSWITCH          YES, SHOW IT.
         CLI   INCHARS,C'L'      SYSTEM LOG BUFFER DISPLAY REQUEST?
         BE    LGSWITCH          YES, SHOW IT.
         CLI   MSGSAUCE,C'C'     SPYING ON A CONSOLE?
         BNE   CMDSCANO          NO, PROCESS COMMANDS HERE.
         CLI   INBUFF,10         PF10/22?
         BE    REDOCNSL          YES, PASS IT ON TO SPY.
         CLI   INBUFF,11         PF11/23?
         BE    REDOCNSL          YES, PASS IT ON TO SPY.
         MVI   INBUFF,X'7D'      SUPPLY AID FOR ENTER.
         CLI   INCHARS,C'?'      HELP PANEL REQUEST?
         BNE   REDOCNSL          NO, LET SPY DEAL WITH IT.
GIVEHLPO MVC   INBUFF(8),SBLST   REQUEST SUBCOMMAND LIST FROM TUTORIAL.
         MVI   TGETLEN+1,8       SUPPLY LENGTH OF INPUT TO PARSE.
         LNR   R0,R11            MAKE REGISTER 0 NEGATIVE FOR PARSE.
         CLI   MSGSAUCE,C'C'     SPYING ON A CONSOLE?
         BNE   PUTSCRNO          NO, GO DISPLAY HELP PANEL.
         MVI   INCHARS+1,C'2'    YES, SPECIFY MORE RELEVANT PAGE NMBR.
         B     PUTSCRNO          GO DISPLAY HELP PANEL.
         SPACE
CMDSCANO CLI   INBUFF,X'6C'      PA1?
         BE    OPRECALL          YES, RECALL LAST COMMAND.
         CLI   INBUFF,X'6E'      PA2?
         BE    OLOGINIT          YES, REFRESH SCREEN.
         CLI   INBUFF,X'6D'      CLEAR?
         BE    OCLEAR            YES, UPDATE SCREEN IMAGE.
         CLI   INBUFF+1,0        CURSOR ON FIRST LINE?
         BE    CSROKAYO          YES, CAN'T BE JOB ID SELECTION.
         CLI   INBUFF+2,0        CURSOR IN LEFT-MOST COLUMM OF SCREEN?
         BE    CSROKAYO          YES, DON'T DO JOB ID SELECTION.
         L     R0,LINES          GET THE NUMBER OF LINES.
         AHI   R0,-3             GET LAST MESSAGE RELATIVE LINE NUMBER.
         CLM   R0,1,INBUFF+1     CURSOR ON MESSAGE LINE?
         BL    CSROKAYO          NO.
         SLR   R1,R1
         IC    R1,INBUFF+1       YES, GET MESSAGE LINE NUMBER.
         SR    R0,R1             GET TABLE ENTRY TO GET JOB ID FROM.
         ST    R0,OJOBIDID       SAVE IT FOR LATER.
         OI    OJOBIDID,X'80'    ENSURE NON-ZERO WORD.
CSROKAYO CLI   INBUFF,7          PF7/19?
         BE    OMTTUP            YES, SCROLL UP.
         CLI   INBUFF,8          PF8/20?
         BE    OMTTDOWN          YES, SCROLL DOWN.
         CLI   INBUFF,10         PF10/22?
         BE    OGOLEFT           YES, SCROLL LEFT.
         CLI   INBUFF,11         PF11/23?
         BE    OGORIGHT          YES, SCROLL RIGHT.
CHRSCANO CLI   INCHARS,C'C'      REQUEST FOR CONSOLE SPYING?
         BE    OSSWITCH          YES.
         CLI   INCHARS,C'L'      REQUEST SYSTEM LOG BUFFER DISPLAY?
         BE    LGSWITCH          YES.
         CLI   INCHARS,C'T'      REQUEST MASTER TRACE TABLE DISPLAY?
         BE    TTSWITCH          YES.
         CLI   INCHARS,C'F'      REQUEST TO FREEZE DISPLAY?
         BE    OFREEZE           YES.
         CLI   INCHARS,C'R'      REQUEST TO RELEASE DISPLAY?
         BE    ORELEASE          YES.
         CLI   INCHARS,C'-'      SCROLL UP REQUEST?
         BE    OMTTUP            YES.
         CLI   INCHARS,C'+'      SCROLL DOWN REQUEST?
         BE    OMTTDOWN          YES.
         CLI   INCHARS,C'<'      SCROLL LEFT REQUEST?
         BE    OGOLEFT           YES.
         CLI   INCHARS,C'>'      SCROLL RIGHT REQUEST?
         BE    OGORIGHT          YES.
         CLI   INCHARS,C' '      UPDATE REQUEST?
         BE    OLOGINIT          YES.
         CLI   INCHARS,C'Z'      GLOBAL SUBCOMMAND?
         BE    OREQPARS          YES, REQUEST PARSING BY I/O HANDLER.
         CLI   INCHARS,C'H'      GLOBAL SUBCOMMAND?
         BE    OREQPARS          YES, REQUEST PARSING BY I/O HANDLER.
         CLI   INCHARS,C'!'      GLOBAL SUBCOMMAND?
         BE    OREQPARS          YES, REQUEST PARSING BY I/O HANDLER.
         CLI   INCHARS,C'\'      GLOBAL SUBCOMMAND?
         BE    OREQPARS          YES, REQUEST PARSING BY I/O HANDLER.
         CLI   INCHARS,C'='      GLOBAL SUBCOMMAND?
         BE    OREQPARS          YES, REQUEST PARSING BY I/O HANDLER.
         CLI   INCHARS,C'Â¢'      GLOBAL SUBCOMMAND?
         BE    OREQPARS          YES, REQUEST PARSING BY I/O HANDLER.
         CLC   OPERPSWD,INCHARS  TOGGLE COMMAND AUTHORITY FLAG REQUEST?
         BE    VIPTOGLE          YES.
         CLI   INCHARS,C'J'      JOB IDENTIFIER REQUEST?
         BNE   OCMDSAVE          NO.
         CLI   INCHARS+1,C' '    CANCEL SELECTION REQUEST?
         BE    OCLRJBID          YES.
         CLI   INCHARS+1,C'/'    CANCEL SELECTION REQUEST?
         BNE   OCMDSAVE          NO.
OCLRJBID MVC   OMSGJBID,BLANKS   CLEAR MESSAGE JOB IDENTIFIER.
         B     OLOGINIT          CONTINUE.
         MVC   OMSGJBID,INCHARS+1     LOAD NEW MESSAGE JOB IDENTIFIER.
OCMDSAVE XC    OLDOPCMD,OLDOPCMD
         LA    R15,INCHARS       POINT TO THE COMMAND TEXT.
         LH    R1,TGETLEN        GET LENGTH OF INPUT STREAM.
         AHI   R1,-6             GET THE COMMAND TEXT LENGTH.
         LA    R0,79             GET MAXIMUM SUPPORTED LENGTH.
         CR    R1,R0             IS TRUNCATION NECESSARY?
         BNH   OSAVLNOK          NO.
         LR    R1,R0             YES, DO IT.
OSAVLNOK BCTR  R1,0              LESS ONE FOR EXECUTE.
         EX    R1,OSAVECMD       SAVE THE COMMAND FOR A LATER RECALL.
         CLI   INCHARS,C'J'      JOB IDENTIFIER REQUEST?
         BE    ONEWJBID          YES.
         CLI   INCHARS,C'B'      REQUEST TO BROADCAST A MESSAGE?
         BE    OPERBMSG          YES.
         CLI   INCHARS,C'Â¬'      REQUEST TO NOTIFY CONSOLES?
         BE    OPERNMSG          YES.
         CLI   INCHARS,C'"'      REQUEST TO LOG A MESSAGE?
         BE    OPERWMSG          YES.
         CLI   INCHARS,C'$'      REQUEST TO ISSUE JES2 COMMAND?
         BE    OPERCMND          YES.
         CLI   INCHARS,C'/'      REQUEST TO ISSUE OS COMMAND?
         BE    OPERCMND          YES.
OMTTHELP MVI   TPUTFLG,X'03'     DON'T USE HOLD TPUT FOR HELP PANEL.
         MVI   TGETFLG,TGETFLGA  USE SYNCHRONOUS I/O FOR HELP PANEL.
         B     GIVEHLPO          DISPLAY HELP PANEL.
OSAVECMD MVC   OLDOPCMD(0),0(R15)               <<< EXECUTED >>>
         SPACE
VIPTOGLE XI    VIPMODE,C'*'-C' '
         B     OLOGINIT          YES, NOW UPDATE THE SCREEN.
         SPACE
ONEWJBID MVC   OMSGJBID,INCHARS+1    LOAD NEW MESSAGE JOB IDENTIFIER.
         B     OLOGINIT          NOW UPDATE THE SCREEN.
         SPACE
OGOLEFT  CLI   INCHARS+1,C'<'    SCROLL LEFT MAXIMUM REQUEST?
         BE    OMXLEFT           YES, SO DO IT.
         CLI   OLDCOLS+3,100     NEED A CENTRE SCROLL DISPLAY?
         BNL   OMXLEFT           NO, GO LEFT MAX FOR WIDE SCREEN.
         CLI   OSCROLL,C'R'      CURRENTLY SCROLLED RIGHT?
         BE    OGOCENTR          YES, SO BACK TO CENTRE.
OMXLEFT  MVI   OSCROLL,C'L'      NO, SO NOW SCROLLED LEFT.
         B     OLOGINIT          NOW UPDATE THE SCREEN.
OGORIGHT CLI   INCHARS+1,C'>'    SCROLL RIGHT MAXIMUM REQUEST?
         BE    OMXRIGHT          YES, SO DO IT.
         CLI   OLDCOLS+3,100     NEED A CENTRE SCROLL DISPLAY?
         BNL   OMXRIGHT          NO, GO RIGHT MAX FOR WIDE SCREEN.
         CLI   OSCROLL,C'L'      CURRENTLY SCROLLED LEFT?
         BE    OGOCENTR          YES, SO BACK TO CENTRE.
OMXRIGHT MVI   OSCROLL,C'R'      NO, SO NOW SCROLLED RIGHT.
         B     OLOGINIT          NOW UPDATE THE SCREEN.
OGOCENTR MVI   OSCROLL,C' '      NOW SCROLLED IN THE CENTRE.
         B     OLOGINIT          NOW UPDATE THE SCREEN.
         SPACE
OPERCMND CLC   ONE,INBUFF+4      TEXT FROM PRIMARY INPUT AREA?
         BNL   GIVEHLPO          YES, INVALID FOR OPERATOR COMMAND.
         CLI   VIPMODE,C'*'      ALLOWED TO ISSUE A COMMAND?
         BNE   OPRNOCMD          NO.
         LA    R15,INCHARS       POINT TO THE COMMAND TEXT.
         LH    R1,TGETLEN        GET LENGTH OF INPUT STREAM.
         AHI   R1,-6             GET THE COMMAND TEXT LENGTH.
         BCTR  R1,0              LESS ONE FOR EXECUTE.
         CLI   INCHARS,C'$'      JES2 COMMAND?
         BE    OPRCMDOK          YES, READY FOR THE MOVE.
         BCTR  R1,0              NO, DON'T COUNT THE SLASH.
         LA    R15,INCHARS+1     POINT TO THE REAL COMMAND TEXT.
OPRCMDOK EX    R1,OCMDLOAD       MOVE THE COMMAND INTO THE BUFFER.
         LA    R1,5(,R1)         GET THE LENGTH OF THE COMMAND BUFFER.
         STH   R1,OPCMDBUF       SAVE IT INTO THE COMMAND BUFFER.
         MODESET MF=(E,MDSTSUP0)
         SLR   R0,R0             USE MASTER CONSOLE AUTHORITY.
         LA    R1,OPCMDBUF       POINT TO THE COMMAND BUFFER.
         SVC   34                ISSUE THE COMMAND.
         B     OCMDTIDY          UPDATE THE SCREEN.
OPRNOCMD LA    R0,OCMSGLEN
         LA    R1,OCMSG          FULL SCREEN TPUT THE ERROR MESSAGE
         B     PUTSCRNO               AND GET NEXT REQUEST.
OCMDLOAD MVC   OPCMDBUF+4(0),0(R15)             <<< EXECUTED >>>
         SPACE
OPRECALL MVI   TPUTFLG,X'03'     USE NOHOLD TPUTS FOR MANUAL UPDATE.
         MVI   TGETFLG,TGETFLGA  USE SYNCHRONOUS I/O FOR MANUAL UPDATE.
         LA    R0,OPA1LEN
         LA    R1,OPA1MSG        FULL SCREEN TPUT THE ERROR MESSAGE
         B     PUTSCRNO               AND GET NEXT REQUEST.
         SPACE
OPERWMSG MVI   OPERWTO+2,X'02'   SET HRDCPY MCS FLAG ON.
         MVI   OPERWTO+3,X'00'   RESET OTHER MCS FLAGS.
         B     OPERAMSG          BRANCH TO COMMON MESSAGE CODE.
OPERNMSG MVI   OPERWTO+2,X'04'   SET BRDCST MCS FLAG ON.
         MVI   OPERWTO+3,X'04'   SET NOCPY MCS FLAG ON.
         B     OPERAMSG          BRANCH TO COMMON MESSAGE CODE.
OPERBMSG MVI   OPERWTO+2,X'04'   SET BRDCST MCS FLAG ON.
         MVI   OPERWTO+3,X'00'   RESET OTHER MCS FLAGS.
OPERAMSG CLC   ONE,INBUFF+4      TEXT FROM PRIMARY INPUT AREA?
         BNL   GIVEHLPO          YES, INVALID FOR OPERATOR COMMAND.
         LA    R15,INCHARS       POINT TO THE COMMAND TEXT.
         LH    R1,TGETLEN        GET LENGTH OF INPUT STREAM.
         MVI   OPERMESG,C' '     CLEAR MESSAGE BUFFER.
         MVC   OPERMESG+1(L'OPERMESG-1),OPERMESG
         AHI   R1,-8             GET THE MESSAGE TEXT LENGTH CODE.
         BM    OPRMSGOK          MESSAGE IS A BLANK LINE.
         EX    R1,OMSGLOAD       MOVE THE MESSAGE INTO THE BUFFER.
OPRMSGOK DS    0H                THE MESSAGE IS NOW LOADED.
         MODESET MF=(E,MDSTSUP0)
         WTO   MF=(E,OPERWTO)    ISSUE THE MESSAGE.
OCMDTIDY DS    0H
         MODESET MF=(E,MDSTPROB)
         B     OLOGINIT          UPDATE THE SCREEN.
OMSGLOAD MVC   OPERMESG(0),INCHARS+1            <<< EXECUTED >>>
         SPACE
OSSWITCH TM    MODESW3,TSU       TIME SHARING USER?
         BZ    OMTTHELP          NO, DO NOT ALLOW CONSOLE SPY.
         MVI   MSGSAUCE,C'C'     YES, FLAG THE NEW SOURCE OF MESSAGES.
         MVI   TPUTFLG,X'03'     DON'T USE HOLD TPUTS HERE ANYMORE.
         MVI   TGETFLG,TGETFLGA  USE SYNCHRONOUS I/O FROM THIS MODULE.
         L     R1,CRNTOPTN       POINT TO OPTION "O" IN LOOK-UP TABLE.
         NI    1(R1),X'FE'       SCREEN PRINT NOW NOT SUPPORTED.
         B     REDOCNSL          PASS COMMAND TO SPY.
OMTTDOWN ICM   R1,15,OLDLINES    GET THE NUMBER OF SCREEN LINES.
         BP    *+8               USE VALUE IF PRESENT.
         L     R1,LINES          GET THE NUMBER OF SCREEN LINES.
         AHI   R1,-3             GET THE DETAIL MESSAGE LINE COUNT.
         SH    R1,OWTORCNT       EXCLUDE COUNTING WTOR DISPLAY LINES.
         LA    R15,INCHARS       POINT TO ANY INPUT TEXT.
         CLI   INCHARS,C'+'      PLUS COMMAND?
         BNE   OMTTPLUS          NO.
         LA    R15,INCHARS+1     YES, POINT PAST IT.
OMTTPLUS CLI   0(R15),C'M'       SCROLL DOWN MAXIMUM REQUESTED?
         BE    OMAXDOWN          YES, SHOW THE LATEST MESSAGES.
         CLI   0(R15),C'0'       NUMERIC OPERAND?
         BL    OGOTDOWN          NO, SCROLL UP A PAGE.
         SLR   R1,R1             YES, ZERO ACCUMULATOR.
         LA    R0,3              ALLOW A MAXIMUM OF THREE DIGITS.
ODWNLOOP CLI   0(R15),C'0'       NUMERIC DIGIT?
         BL    OGOTDOWN          NO, END OF NUMBER.
         ICM   R14,8,0(R15)      YES, LOAD THE DIGIT.
         SLL   R14,4             SHIFT OUT THE ZONE.
         SRL   R14,28            CONVERT THE DIGIT TO BINARY.
         MH    R1,TEN+2          PROMOTE PREVIOUS DIGITS.
         AR    R1,R14            ADD NEW DIGIT.
         LA    R15,1(,R15)       POINT TO NEXT POTENTIAL DIGIT.
         BCT   R0,ODWNLOOP       PROCESS NEXT DIGIT IF ANY.
OGOTDOWN LCR   R1,R1             MAKE THE NUMBER NEGATIVE.
         B     OGOTMOVE          SCROLL DOWN EQUALS NEGATIVE SCROLL UP.
OMTTUP   ICM   R1,15,OLDLINES    GET THE NUMBER OF SCREEN LINES.
         BP    *+8               USE VALUE IF PRESENT.
         L     R1,LINES          GET THE NUMBER OF SCREEN LINES.
         AHI   R1,-3             GET THE DETAIL MESSAGE LINE COUNT.
         SH    R1,OWTORCNT       EXCLUDE COUNTING WTOR DISPLAY LINES.
         LA    R15,INCHARS       POINT TO ANY INPUT TEXT.
         CLI   INCHARS,C'-'      MINUS COMMAND?
         BNE   OMTTMNUS          NO.
         LA    R15,INCHARS+1     YES, POINT PAST IT.
OMTTMNUS CLI   0(R15),C'M'       SCROLL UP MAXIMUM REQUESTED?
         BE    OMAXUP            YES, SHOW THE OLDEST MESSAGES.
         CLI   0(R15),C'0'       NUMERIC OPERAND?
         BL    OGOTMOVE          NO, SCROLL UP A PAGE.
         SLR   R1,R1             YES, ZERO ACCUMULATOR.
         LA    R0,3              ALLOW A MAXIMUM OF THREE DIGITS.
OUPLOOP  CLI   0(R15),C'0'       NUMERIC DIGIT?
         BL    OGOTMOVE          NO, END OF NUMBER.
         ICM   R14,8,0(R15)      YES, LOAD THE DIGIT.
         SLL   R14,4             SHIFT OUT THE ZONE.
         SRL   R14,28            CONVERT THE DIGIT TO BINARY.
         MH    R1,TEN+2          PROMOTE PREVIOUS DIGITS.
         AR    R1,R14            ADD NEW DIGIT.
         LA    R15,1(,R15)       POINT TO NEXT POTENTIAL DIGIT.
         BCT   R0,OUPLOOP        PROCESS NEXT DIGIT IF ANY.
OGOTMOVE A     R1,OMTTMOVE       ADD PREVIOUS SCROLL OFFSET.
         ST    R1,OMTTMOVE       SAVE THE NEW VALUE.
OFREEZE  MVI   HEADINGO+69,C'F'  FLAG MANUAL DISPLAY UPDATE.
         L     R1,INITADDR
         USING INITIAL,R1
         MVC   HOME,SCRNHDR      RESTORE SCREEN HEADER.
         DROP  R1                INITIAL.
         MVI   TPUTFLG,X'03'     USE NOHOLD TPUTS FOR MANUAL UPDATE.
         MVI   TGETFLG,TGETFLGA  USE SYNCHRONOUS I/O FOR MANUAL UPDATE.
         CLI   INBUFF,11         GOT HERE VIA PF11/23?
         BE    CHRSCANO          YES, PROCESS ANY COMMAND TEXT.
         B     OINITRDY          NO, UPDATE THE SCREEN.
OMAXUP   MVC   OMTTMOVE,TENGRAND
         B     OFREEZE           SHOW THE "TOP" OF THE TRACE TABLE.
LGSWITCH MVI   MSGSAUCE,C'L'     SYSLOG IS NOW THE SOURCE OF MESSAGES.
         L     R1,CRNTOPTN       POINT TO OPTION "O" IN LOOK-UP TABLE.
         OI    1(R1),X'01'       SCREEN PRINT NOW SUPPORTED.
         CLI   INCHARS+1,C'F'    FREEZE FOR MANUAL REQUESTED?
         BE    OFREEZE           YES, OVERLAY CURRENT SETTING.
         CLI   INCHARS+1,C'R'    RELEASE FOR AUTO-UPDATE REQUESTED?
         BE    ORELEASE          YES, OVERLAY CURRENT SETTING.
         CLI   HEADINGO+69,C'F'  IN MANUAL INPUT MODE?
         BE    OLOGINIT          YES, ALL IS READY TO GO.
         B     ORELEASE
TTSWITCH MVI   MSGSAUCE,C'T'     MTT IS NOW THE SOURCE OF MESSAGES.
         L     R1,CRNTOPTN       POINT TO OPTION "O" IN LOOK-UP TABLE.
         OI    1(R1),X'01'       SCREEN PRINT NOW SUPPORTED.
         CLC   OPERPSWD,INCHARS+1 PASSWORD SUPPLIED?
         BNE   OMAXDOWN          NO.
         XI    VIPMODE,C'*'-C' ' YES.
OMAXDOWN SLR   R0,R0
         ST    R0,OMTTMOVE       ENSURE LATEST MESSAGES ARE DISPLAYED.
         CLI   INCHARS+1,C'F'    FREEZE FOR MANUAL REQUESTED?
         BE    OFREEZE           YES, OVERLAY CURRENT SETTING.
         CLI   INCHARS+1,C'R'    RELEASE FOR AUTO-UPDATE REQUESTED?
         BE    ORELEASE          YES, OVERLAY CURRENT SETTING.
         CLI   HEADINGO+69,C'F'  IN MANUAL INPUT MODE?
         BE    OLOGINIT          YES, ALL IS READY TO GO.
ORELEASE MVI   HEADINGO+69,C'R'  FLAG AUTOMATIC DISPLAY UPDATE.
         MVI   TPUTFLG,X'0B'     USE HOLD TPUTS (REDUCE VDU LOCKOUT).
         MVI   TGETFLG,TGETFLGN  USE ASIS NOWAIT TGETS.
         SLR   R0,R0
         ST    R0,OMTTMOVE       ENSURE LATEST MESSAGES ARE DISPLAYED.
         B     OINITRDY          UPDATE THE SCREEN.
         SPACE
MTTWAIT  LA    R1,HOME           POINT TO START OF SCREEN BUFFER.
         L     R0,OPAGEND        POINT PAST END OF SCREEN BUFFER.
         SR    R0,R1             GET THE LENGTH OF SCREEN BUFFER.
         STM   R0,R1,SCRNPA2A    CORRECT VALUES FOR PA2 HANDLING.
         STM   R0,R1,SCRNPA3A    CORRECT VALUES FOR PA3 HANDLING.
         STIMER WAIT,BINTVL=TTWAITIM
         MODESET MF=(E,MDSTSUP0)
         L     R3,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R3
         L     R3,CVTMSER        POINT TO THE MSRDA.
         DROP  R3                CVT.
         USING BASE,R3
         CLI   MSGSAUCE,C'L'     LOOKING AT THE SYSLOG BUFFER?
         BE    CHKLOGBF          YES, CHECK IT OUT.
         ICM   R4,15,BAMTTBL     NO, POINT TO THE MASTER TRACE TABLE.
         BZ    NEWLOGBF          IT HAS VANISHED!
         USING MTTABLE,R4
         LA    R15,1             LOAD THE ASID OF THE MASTER SCHEDULER.
         BAS   R14,OSETSAS       SET ASID 1 AS THE SECONDARY ASID.
*                                HAS THE MASTER TRACE TABLE CHANGED?
         CLC   TTSTATUS(36),MTTABLE
         BNE   MTTUPDAT          YES, GO GENERATE NEW SCREEN DATA.
         BAS   R14,OPRIMAS3      NO, TERMINATE CROSS MEMORY MODE.
         B     OLDLOGBF          GO CHECK FOR TSO USER INPUT.
         DROP  R4                MTTABLE.
CHKLOGBF L     R4,BALOG          POINT TO THE LOG CONTROL TABLE.
         CLC   TTSTATUS,0(R4)    HAS THE BUFFER STATUS CHANGED?
         BNE   NEWLOGBF          YES, UPDATE THE SCREEN.
         DROP  R3                BASE.
OLDLOGBF DS    0H
         MODESET MF=(E,MDSTPROB) NO.
         SLR   R0,R0             DON'T WRITE ANYTHING TO THE SCREEN.
         B     PUTSCRNO          CALL SCREEN HANDLER FOR ASYNC COMMAND.
         SPACE
MTTUPDAT BAS   R14,OPRIMAS3      TERMINATE CROSS MEMORY MODE.
         B     OINITRDY          NEW MTT SCREEN WITHOUT TERMINAL INPUT.
         SPACE
OCLEAR   CLI   CLR+1,X'7E'       USING PRIMARY SCREEN SIZE?
         BNE   OLOGINIT          YES, JUST UPDATE SCREEN DATA.
         LA    R1,CLR            NO, RESET SCREEN TO ALTERNATE
         LA    R0,L'CLR          SIZE BEFORE SCREEN DATA UPDATE.
         ICM   R1,B'1000',TPUTFLG
         TPUT  (1),(0),R
OLOGINIT MVI   INBUFF,0          ERASE PREVIOUS ATTENTION IDENTIFIER.
         CLI   HEADINGO+69,C'R'  TRACKING LATEST MESSAGES?
         BE    ORELEASE          YES, ENSURE SET-UP IS CORRECT.
OINITRDY DS    0H
         MODESET MF=(E,MDSTSUP0)
         SPACE
NEWLOGBF MVC   HEADING,HEADINGO  LOAD HEADING FOR MASTER TRACE TABLE.
         TR    HEADING,XLATETBL  HANDLE BAD SYSTEM DETAILS.
         L     R1,SMCAADDR       POINT TO THE SMCA.
         USING SMCABASE,R1
         MVC   HEADING+36(4),SMCASID  COPY SYSTEM ID.
         DROP  R1                     SMCABASE.
         MVC   HEADING+67(1),VIPMODE  COPY COMMAND AUTHORITY FLAG.
         LA    R2,BUFFER         RESET BUFFER POINTER.
         LA    R1,LINES          POINT TO SCREEN DIMENSIONS.
         CLI   OLDCOLS+3,80      USING A WIDE SCREEN?
         BNH   OTOPOKAY          NO.
         MVI   0(R2),C' '        YES.
         MVC   1(220,R2),0(R2)   BLANK REST OF TOP LINE.
         A     R2,OLDCOLS        ADD SCREEN WIDTH.
         LA    R1,OLDSIZE        POINT TO WIDE SCREEN DIMENSIONS.
         AHI   R2,-80            POINT TO FIRST DETAIL LINE.
         OI    MODESW,ALTS       NEED ALTERNATE SCREEN SIZE.
         CLI   OLDCOLS+3,100     AT LEAST 100 COLUMNS?
         BL    OTOPOKAY          NO.
         CLI   OSCROLL,C' '      ALREADY SCROLLED?
         BNE   OTOPOKAY          YES.
         MVI   OSCROLL,C'L'      NO, START OFF SCROLLED LEFT MAX.
OTOPOKAY ST    R2,OTOPLINE       SAVE TOP LINE ADDRESS.
         ST    R1,OSCRDIMS       SAVE SCREEN DIMENSIONS ADDRESS.
         LA    R14,WINLINOH      GET LINE OVERHEAD.
         L     R3,CRNTOPTN       POINT TO CURRENT OPTION DETAILS.
         A     R14,4(,R1)        GET SCREEN LINE OUTPUT BYTE COUNT.
         L     R0,0(,R1)         GET SCREEN LINE COUNT.
         LA    R15,C' '          GET PAD CHARACTER.
         STH   R14,12(,R3)       SET CURRENT LINE LENGTH.
         AHI   R0,-3             DISCOUNT SPECIAL LINES.
         SLL   R15,24            PROMOTE PAD AND ZERO SOURCE LENGTH.
         C     R14,OLINLNTH      ALREADY SET CURRENT LINE LENGTH?
         BE    MTTCLRLP          YES, SKIP A BIT OF WORK.
         L     R3,0(,R1)         GET SCREEN LINE COUNT.
         AHI   R3,-2             DISCOUNT 2 LINES.
         MH    R3,6(,R1)         GET SECOND LAST LINE SCREEN OFFSET.
         ST    R14,OLINLNTH      SET CURRENT LINE LENGTH.
         STCM  R3,3,OPA1ADR1     SET INTO DATA STREAM.
         AH    R3,6(,R1)         GET LAST LINE SCREEN OFFSET.
         STCM  R3,3,OPA1ADR2     SET INTO DATA STREAM.
         CHI   R3,4096           14-BIT ADDRESSING REQUIRED?
         BNL   MTTCLRLP          YES, DO NOT USE 12-BIT ADDRESSING.
         SLL   R3,2              NO, CONVERT TO 12-BIT ADDRESSING.
         STCM  R3,2,OPA1ADR2
         ICM   R3,3,OPA1ADR1
         SLL   R3,2
         STCM  R3,2,OPA1ADR1
         NI    OPA1ADR1+1,X'3F'
         NI    OPA1ADR2+1,X'3F'
         LARL  R3,TABLE
         TR    OPA1ADR1(2),0(R3)
         TR    OPA1ADR2(2),0(R3)
MTTCLRLP MVC   0(LL-79,R2),LOWX
         L     R3,4(,R1)         GET SCREEN WIDTH.
         LA    R2,LL-79(,R2)     POINT PAST DEFAULT LINE ATTRIBUTES.
         BCTR  R3,0              DISCOUNT ATTRIBUTE BYTE.
         MVCL  R2,R14            BLANK THE LINE.
         BCT   R0,MTTCLRLP
         LR    R9,R2             COPY SUMMARY LINE ADDRESS.
         BAS   R1,SYSUMMRY       PRODUCE & SHOW SYSTEM SUMMARY LINE.
         MVI   0(R9),X'28'       CLEAR NON-SCROLLABLE LINE FLAG.
         L     R1,OSCRDIMS       LOAD SCREEN DIMENSIONS ADDRESS.
         MVC   0(LL-79,R2),LOWX  LOAD LINE ATTRIBUTES.
         MVI   4(R2),X'40'       THE INPUT AREA IS LOW INTENSITY.
         MVI   6(R2),X'13'       INSERT CURSOR AT INPUT LINE START.
         MVC   7(2,R2),6(R2)     OVERLAY COLOUR BYTES.
         L     R3,4(,R1)         GET SCREEN WIDTH.
         LA    R2,LL-79(,R2)     POINT PAST INPUT LINE ATTRIBUTES.
         BCTR  R3,0              DISCOUNT ATTRIBUTE BYTE.
         SR    R15,R15           ZERO PAD AND SOURCE LENGTH.
         MVCL  R2,R14            RESET INPUT LINE.
         ST    R2,OPAGEND        SAVE END OF SCREEN DATA ADDRESS.
         STH   R15,OWTORCNT      ZERO DISPLAYED WTOR COUNT.
         LR    R2,R9             POINT TO SYSTEM SUMMARY LINE.
         SR    R2,R14            POINT TO LAST MESSAGE DISPLAY LINE.
         L     R15,OSCRDIMS      POINT TO SCREEN DIMENSIONS.
         L     R15,0(,R15)       GET THE SCREEN LINE COUNT.
         SRA   R15,2             GET A QUARTER OF IT.
         MR    R14,R14           GET THEIR DATA STREAM SIZE.
         SR    R9,R15            GUARD THIS MANY LINES BEFORE SUMMARY.
         ST    R9,ORVRSLIM       SAVE AS LIMIT FOR REVERSE VIDEO LINES.
         L     R9,OTOPLINE       REMEMBER THE START OF DETAIL LINES.
         CLI   MSGSAUCE,C'L'     LOOKING AT THE SYSLOG BUFFER?
         BE    OPUTWTOR          YES, ALWAYS SHOW OUTSTANDING WTORS.
         ICM   R0,15,OMTTMOVE    TRACKING LATEST MESSAGES?
         BNZ   OWTORSOK          NO, SKIP WTOR TEXT DISPLAY.
         SPACE
OPUTWTOR L     R6,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R6
         TM    CVTOSLV0,CVTUCBSV UCB SERVICES AVAILABLE?
         BO    @PUTWTOR          YES, DON'T USE STATIC UCB CHAIN.
         L     R3,CVTUCBA        POINT TO FIRST UCB.
         L     R6,CVTCUCB        POINT TO THE UNIT CONTROL MODULE.
         DROP  R6                CVT.
         SLR   R14,R14           ZERO LISTED MOUNT PENDING COUNT.
         LA    R15,LL-70(,R9)    POINT TO FIRST DISPLAY SLOT IN LINE.
         B     OFRSTUCB          FIRST TIME THROUGH THE LOOP.
         USING UCBOB,R3
ONEXTUCB ICM   R3,15,UCBNXUCB    GET NEXT UCB ADDRESS.
         BZ    OLASTUCB          NO MORE UCB ENTRIES.
OFRSTUCB CLI   UCBID,UCBSTND     STANDARD UCB?
         BNE   ONEXTUCB          NO, TRY NEXT UCB.
         TM    UCBTBYT3,X'A0'    TAPE OR DASD?
         BZ    ONEXTUCB          NO, CAN'T HAVE A MOUNT PENDING.
         TM    UCBDMCT,UCBMOUNT  YES, MOUNT PENDING?
         BZ    ONEXTUCB          NO.
         TM    UCBFLA,UCBNRY     YES, IS THE DEVICE NOT READY?
         BZ    ONEXTUCB          NO, NOTHING FOR OPERATOR TO DO.
OMNTLINE MVC   3(LL-82,R9),HIGHX+3 HIGH INTENSITY FOR MOUNT MESSAGES.
         MVI   LL-80(R9),X'F3'   PINK FOR MOUNT MESSAGES.       (I3279)
         MVI   2(R9),X'F2'       REVERSE VIDEO FOR MOUNT MESSAGES.
         MVI   5(R9),X'50'       REVERSE VIDEO.                 (F9526)
         MVC   LL-79(8,R9),=CL8'MNT-PND:'
         LA    R14,1(,R14)       INCREMENT UNIT COUNT.
         CHI   R14,6             WILL IT FIT ON THIS LINE?
         BNH   OMNTHERE          YES, DO IT.
         TR    LL-79(79,R9),XLATETBL
         A     R9,OLINLNTH       NO, POINT TO THE NEXT LINE.
         C     R9,ORVRSLIM       REACHED GUARDED LINES?
         BNL   EOLOGBUF          YES, LEAVE ROOM FOR LATEST MESSAGES.
         SLR   R14,R14           RESET COUNT TO BE FOR THIS LINE ONLY.
         LA    R15,LL-70(,R9)    POINT TO FIRST DISPLAY SLOT IN LINE.
         B     OMNTLINE          PREPARE THE NEW LINE.
OMNTHERE MVC   0(6,R15),UCBVOLI  COPY VOLUME SERIAL NUMBER.
         TM    UCBVOLI,X'FF'     SCRATCH TAPE REQUEST?
         BM    OVOLOKAY          NO.
         MVC   0(6,R15),=C'SCRTCH'
OVOLOKAY MVI   6(R15),C'/'
         MVC   7(3,R15),UCBNAME  COPY UCB NAME.
         LA    R15,11(,R15)      POINT TO NEXT DISPLAY SLOT.
         B     ONEXTUCB          CONTINUE THE UNIT SCAN.
         USING CVT,R6
@PUTWTOR L     R5,CVTIXAVL       POINT TO THE IOCM.
         USING IOCOM,R5
         L     R6,CVTCUCB        POINT TO THE UNIT CONTROL MODULE.
         DROP  R6                CVT.
         L     R5,IOCIOVTP       POINT TO THE IOVT.
         DROP  R5                IOCOM.
         TM    OSLEVEL+5,CVTH7740 Z/OS 1.9 OR LATER?
         BO    OMOUNTDN          YES, SKIP MOUNT PENDING LIST.
         L     R1,8(,R5)         POINT TO THE UCB LOOK-UP TABLE.
         L     R0,16(,R1)        GET THE TOTAL UCB COUNT.
         LA    R5,132(,R1)       POINT TO FIRST ENTRY.
         SLR   R14,R14           ZERO LISTED MOUNT PENDING COUNT.
         LA    R15,LL-71(,R9)    POINT TO FIRST DISPLAY SLOT IN LINE.
         TM    OSLEVEL+5,CVTH7720 Z/OS 1.7 OR LATER?
         BNO   @UCBLOOP          NO, PROCEED.
         L     R0,24(,R1)        GET THE TOTAL UCB COUNT.
         LA    R5,264(,R1)       POINT TO FIRST ENTRY.
@UCBLOOP L     R3,8(,R5)         GET NEXT UCB ADDRESS.
         CLI   UCBID,UCBSTND     STANDARD UCB?
         BNE   @NEXTUCB          NO, TRY NEXT UCB.
         TM    UCBTBYT3,X'A0'    TAPE OR DASD?
         BZ    @NEXTUCB          NO, CAN'T HAVE A MOUNT PENDING.
         TM    UCBDMCT,UCBMOUNT  YES, MOUNT PENDING?
         BZ    @NEXTUCB          NO.
         TM    UCBFLA,UCBNRY     YES, IS THE DEVICE NOT READY?
         BZ    @NEXTUCB          NO, NOTHING FOR OPERATOR TO DO.
@MNTLINE MVC   3(LL-82,R9),HIGHX+3 HIGH INTENSITY FOR MOUNT MESSAGES.
         MVI   LL-80(R9),X'F3'   PINK FOR MOUNT MESSAGES.       (I3279)
         MVI   2(R9),X'F2'       REVERSE VIDEO FOR MOUNT MESSAGES.
         MVI   5(R9),X'50'       REVERSE VIDEO.                 (F9526)
         MVC   LL-79(8,R9),=CL8'MNT-PND:'
         LA    R14,1(,R14)       INCREMENT UNIT COUNT.
         CHI   R14,6             WILL IT FIT ON THIS LINE?
         BNH   @MNTHERE          YES, DO IT.
         TR    LL-79(79,R9),XLATETBL
         A     R9,OLINLNTH       NO, POINT TO THE NEXT LINE.
         C     R9,ORVRSLIM       REACHED GUARDED LINES?
         BNL   EOLOGBUF          YES, LEAVE ROOM FOR LATEST MESSAGES.
         SLR   R14,R14           RESET COUNT TO BE FOR THIS LINE ONLY.
         LA    R15,LL-70(,R9)    POINT TO FIRST DISPLAY SLOT IN LINE.
         B     @MNTLINE          PREPARE THE NEW LINE.
@MNTHERE MVC   0(6,R15),UCBVOLI  COPY VOLUME SERIAL NUMBER.
         TM    28(R3),X'FF'      SCRATCH TAPE REQUEST?
         BM    @VOLOKAY          NO.
         MVC   0(6,R15),=C'SCRTCH'
@VOLOKAY MVI   6(R15),C'/'
         UNPK  WORK(5),0(3,R5)   SHOW DEVICE NUMBER.
         TR    WORK(4),HEX-C'0'
         MVC   7(4,R15),WORK
         LA    R15,12(,R15)      POINT TO NEXT DISPLAY SLOT.
@NEXTUCB LA    R5,12(,R5)        POINT TO NEXT UCB LOOK-UP ENTRY.
         BCT   R0,@UCBLOOP       CONTINUE THE UNIT SCAN.
         DROP  R3                UCBOB.
         USING UCM,R6
OLASTUCB LTR   R14,R14           ANY MOUNTS PENDING?
         BZ    OMOUNTDN          NO, PROCESS ANY WTORS.
*        MVI   2(R9),X'F4'       YES, UNDERSCORE LAST LINE.     (I3279)
*        LR    R15,R9            REMEMBER THE ADDRESS OF THIS LINE.
         TR    LL-79(79,R9),XLATETBL
         A     R9,OLINLNTH       POINT TO FIRST LINE FOR WTORS.
OMOUNTDN ICM   R0,15,UCMRPYQ     IS ANY WTOR OUTSTANDING?
         BZ    OWTORSOK          NO, THE IS NO ORE ON THE CHAIN.
*        LTR   R14,R14           YES, WERE THERE ANY MOUNTS?
*        BZ    OMOUNTOK          NO, SCREEN IS STILL EMPTY.
*        MVI   2(R15),X'00'      YES, SO REMOVE UNDERSCORE.     (I3279)
OMOUNTOK LH    R15,UCMCTID       YES, LOAD THE ASID OF COMMTASK.
         ICM   R7,15,UCMRPYQ     ANY OPERATOR REPLY ELEMENTS?
         BZ    EOWTORSX          NO, NO WTOR MESSAGES TO SHOW.
         BAS   R14,OSETSAS       MAKE IT THE SECONDARY ADDRESS SPACE.
         LR    R3,R7             POINT TO FIRST OPERATOR REPLY ELEMENT.
         USING OREF,R3
NXTWTOR3 L     R4,ORERWQE        POINT TO THE WRITE QUEUE ELEMENT.
         USING WQE,R4
         LA    R15,WQEPAD        POINT TO THE START OF THE MESSAGE.
         BAS   R14,WTORSHOW      DISPLAY IT.
         C     R9,ORVRSLIM       REACHED GUARDED LINES?
         BNL   EOWTORS3          YES, LEAVE ROOM FOR LATEST MESSAGES.
         ICM   R3,15,ORELKP      POINT TO THE NEXT ORE.
         BNZ   NXTWTOR3          PROCESS IT.
EOWTORS3 LA    R14,EOWTORSX      SPECIFY THE RETURN ADDRESS.
         B     OPRIMAS3          REVERT TO PRIMARY ADDRESS SPACE MODE.
NXTWTOR2 L     R4,ORERWQE        POINT TO THE WRITE QUEUE ELEMENT.
         SLR   R14,R14           USE KEY ZERO.
         LA    R5,147            GET THE LENGTH OF THE TEXT TO FETCH.
*                                COPY WTOR TEXT.
         MVCP  SECWORKA(R5),WQEPAD-WQE(R4),R14
         LA    R15,SECWORKA      POINT TO THE START OF THE MESSAGE.
         BAS   R14,WTORSHOW      DISPLAY IT.
         C     R9,ORVRSLIM       REACHED GUARDED LINES?
         BNL   EOWTORS2          YES, LEAVE ROOM FOR LATEST MESSAGES.
         ICM   R3,15,ORELKP      POINT TO THE NEXT ORE.
         BNZ   NXTWTOR2          PROCESS IT.
EOWTORS2 BAS   R14,OPRIMAS2      REVERT TO PRIMARY ADDRESS SPACE MODE.
EOWTORSX EQU   *                 GUARDED LINES NOT YET LOADED.
         DROP  R3,R4,R6          OREF, WQE, UCM.
         SPACE
OWTORSOK CLI   MSGSAUCE,C'L'     LOOKING AT THE SYSLOG BUFFER?
         BE    SYSLOGBF          YES, GO DO IT.
         LA    R15,1             LOAD THE ASID OF THE MASTER SCHEDULER.
         BAS   R14,OSETSAS       SET ASID 1 AS THE SECONDARY ASID.
         L     R3,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R3
         L     R3,CVTMSER        POINT TO THE MSRDA.
         DROP  R3                CVT.
         USING BASE,R3
         ICM   R4,15,BAMTTBL     POINT TO THE MASTER TRACE TABLE.
         BNZ   MTTUPDTE          IT EXISTS SO USE IT.
         MVC   LL-61(L'NOMTTMSG,R9),NOMTTMSG
         B     EOMTTMSG          INDICATE IT DOES NOT EXIST.
         DROP  R3                BASE.
*                                SAVE THE CURRENT BUFFER STATUS.
         USING MTTABLE,R4
MTTUPDTE MVC   TTSTATUS(36),MTTABLE
         L     R6,OMTTLOCN       REMEMBER THE PREVIOUS LOCATION.
         L     R5,MTTCURPT       POINT TO THE LATEST MESSAGE.
         USING MTENTRY,R5
         ST    R5,OMTTLOCN       REMEMBER THE CURRENT LOCATION.
         ICM   R0,15,OMTTMOVE    TRACKING THE LATEST MESSAGES?
         BZ    CHKJOBID          YES, GO DO IT.
         LTR   R6,R6             FIRST TIME HERE?
         BZ    MTTCHAIN          YES, SKIP ORIENTATION PHASE.
         SLR   R15,R15           CLEAR FOR INSERT.
         SLR   R1,R1             CLEAR A COUNTER.
TTMOVING CR    R5,R6             ORIENTATION NOW UP-TO-DATE?
         BE    MTTCHAIN          YES, FOLLOW THE CHAIN.
         ICM   R15,3,MTENTLEN    GET THE MTT MESSAGE TEXT LENGTH.
         LA    R1,1(,R1)         INCREMENT THE COUNTER.
         C     R1,FFFF           RIDICULOUSLY HIGH VALUE?
         BH    TTRESYNC          YES, LOST TRACK SO RESYNCHRONIZE.
         LA    R5,MTENTDAT(R15)  POINT TO THE NEXT MESSAGE.
         C     R5,MTTENDPT       GONE PAST END OF TRACE TABLE?
         BL    TTMOVING          NO, THE ADDRESS IS VALID.
         L     R5,MTTWRPPT       YES, POINT TO LAST ENTRY BEFORE WRAP.
         B     TTMOVING          PROCESS THIS MESSAGE.
TTRESYNC SLR   R1,R1             WRAP-AROUND BETWEEN TERMINAL INPUT.
         ST    R1,OMTTMOVE       HAVE TO SHOW LATEST MESSAGES NOW.
         B     MTTUPDTE          GO GET SOME MESSAGES TO SHOW.
MTTCHAIN LR    R15,R0            GET THE OLD MOVING VALUE.
         AR    R15,R1            GET THE NEW INCREASE IN MESSAGES.
         ST    R15,OMTTMOVE      SAVE THE NEW VALUE FOR NEXT TIME.
         LTR   R15,R15           IS THE NEW VALUE NEGATIVE?
         BNP   ONEGMOVE          YES, SO SHOW THE LATEST.
         LTR   R0,R0             NO, BUT WAS THE OLD VALUE NEGATIVE?
         BM    MTTUPDTE          YES, SO THE CHAINING WENT TOO FAR.
         BZ    CHKJOBID          SHOULDN'T HAPPEN.
         SLR   R15,R15           CLEAR FOR INSERT.
OMTTSCAN ICM   R15,3,MTENTLEN    GET THE MTT MESSAGE TEXT LENGTH.
         C     R5,MTTCURPT       MESSAGE FROM PREVIOUS CYCLE?
         BNL   ONOWRAP1          NO.
         LA    R6,MTENTDAT       YES, GET ADDRESS OF MESSAGE TEXT.
         C     R6,MTTCURPT       HAS THE ENTRY HEADER BEEN OVERLAID?
         BNL   MTTOOFAR          YES.
         LA    R6,MTENTDAT(R15)  POINT PAST THIS ENTIRE ENTRY.
         C     R6,MTTCURPT       HAS THE MESSAGE TEXT BEEN OVERLAID?
         BNH   ONOWRAP1          NO, THE ENTRY IS COMPLETELY VALID.
MTTOOFAR L     R6,OMTTMOVE       GET THE OLD DISCARD VALUE.
         SR    R6,R0             SUBTRACT VANISHED MESSAGE COUNT.
         L     R14,OSCRDIMS      POINT TO SCREEN DIMENSIONS.
         S     R6,0(,R14)        LEAVE A SCREEN-FULL OF LINES TO SHOW.
         LA    R6,4(,R6)         ALLOW FOR HEADING, SUMMARY, INPUT, ETC
         ST    R6,OMTTMOVE       SAVE THE NEW DISCARD MESSAGE VALUE.
         B     MTTUPDTE          START COUNTING ALL OVER AGAIN.
ONOWRAP1 LA    R5,MTENTDAT(R15)  POINT TO THE NEXT MESSAGE.
         C     R5,MTTENDPT       GONE PAST END OF TRACE TABLE?
         BL    TTSCANOK          NO, THE ADDRESS IS VALID.
         CLI   MTTWRPTM,C'W'     YES, ANY WRAP-AROUND YET?
         BNE   MTTOOFAR          NO, NO MORE MESSAGES TO DISPLAY.
         L     R5,MTTWRPPT       YES, POINT TO LAST ENTRY BEFORE WRAP.
         C     R5,MTTCURPT       MESSAGE FROM PREVIOUS CYCLE?
         BNL   MTTOOFAR          NO, NO MORE MESSAGES TO FETCH.
TTSCANOK BCT   R0,OMTTSCAN       SCAN DOWN TO DESIRED MESSAGE.
         B     CHKJOBID          NOW AT CORRECT STARTING MESSAGE.
ONEGMOVE SLR   R0,R0
         ST    R0,OMTTMOVE       TRACK THE LATEST MESSAGES.
         L     R5,OMTTLOCN       POINT TO THE LATEST MESSAGE.
CHKJOBID ICM   R15,15,OJOBIDID   ANY JOBID TO FIND?
         BZ    LDMTTMSG          NO, LOAD MESSAGES.
         LA    R0,0(,R15)        GET MESSAGES TO GO.
         LR    R14,R5            SAVE MESSAGE ADDRESS.
         SLR   R6,R6             PREPARE FOR INSERT.
         LTR   R0,R0             ANY CHAINING TO BE DONE?
         BZ    GETJOBID          NO.
OJOBIDLP ICM   R6,3,MTENTLEN     GET THE MTT MESSAGE TEXT LENGTH.
         C     R5,MTTCURPT       MESSAGE FROM PREVIOUS CYCLE?
         BNL   OJNORAP2          NO.
         C     R15,MTTCURPT      HAS THE ENTRY HEADER BEEN OVERLAID?
         BNL   OJMLOKAY          YES, DO NOT UPDATE JOBID SELECTION.
         LA    R14,MTENTDAT(R6)  NO, POINT PAST THIS ENTIRE ENTRY.
         C     R14,MTTCURPT      HAS THE MESSAGE TEXT BEEN OVERLAID?
         BNL   OJMLOKAY          YES, DO NOT UPDATE JOBID SELECTION.
OJNORAP2 LA    R5,MTENTDAT(R6)   POINT TO THE NEXT MESSAGE.
         LTR   R0,R0             SCANNING MLWTO?
         BP    OJOBIDCT          NO.
         CLI   MTENTDAT,C'D'     NON-FIRST LINE OF MULTI-LINE WTO?
         BL    GETJOBID          NO, USE THIS JOB IDENTIFIER.
         CLI   MTENTDAT,C'E'     NON-FIRST LINE OF MULTI-LINE WTO?
         BH    GETJOBID          NO, USE THIS JOB IDENTIFIER.
OJOBIDCT BCT   R0,OJOBIDLP
GETJOBID MVC   OMSGJBID,BLANKS   CLEAR PREVIOUS JOB IDENTIFIER.
         CLI   MTENTDAT,C'D'     NON-FIRST LINE OF MULTI-LINE WTO?
         BE    OJOBIDLP          YES.
         CLI   MTENTDAT,C'E'     NON-FIRST LINE OF MULTI-LINE WTO?
         BE    OJOBIDLP          YES.
*                                SAVE JOBID TO USE.
         MVC   OMSGJBID,MTENTDAT+37
OJMLOKAY LR    R5,R14            RESTORE MESSAGE ADDRESS.
         SLR   R0,R0
         ST    R0,OJOBIDID       FLAG JOB ID SELECTION NOW COMPLETE.
LDMTTMSG LA    R15,MTENTDAT      POINT TO THE ACTUAL MESSAGE TEXT.
         SLR   R6,R6
         ICM   R6,3,MTENTLEN     GET THE MTT MESSAGE TEXT LENGTH.
         C     R5,MTTCURPT       MESSAGE FROM PREVIOUS CYCLE?
         BNL   ONOWRAP2          NO.
         C     R15,MTTCURPT      HAS THE ENTRY HEADER BEEN OVERLAID?
         BNL   MTTBLTOP          YES.
         LA    R14,MTENTDAT(R6)  NO, POINT PAST THIS ENTIRE ENTRY.
         C     R14,MTTCURPT      HAS THE MESSAGE TEXT BEEN OVERLAID?
         BNL   MTTBLTOP          YES, THE "TOP" HAS BEEN REACHED.
ONOWRAP2 LA    R5,MTENTDAT(R6)   POINT TO THE NEXT MESSAGE.
         BAS   R14,OSLOGMSG      EDIT AND DISPLAY THE MESSAGE.
         CR    R2,R9             BEHIND START OF SCREEN?
         BL    EOMTTMSG          YES, DO NOT LOAD ANY MORE MESSAGES.
         C     R5,MTTENDPT       GONE PAST END OF TRACE TABLE?
         BL    LDMTTMSG          NO, PROCESS THIS MESSAGE.
         CLI   MTTWRPTM,C'W'     YES, ANY WRAP-AROUND YET?
         BNE   MTTBLTOP          NO, NO MORE MESSAGES TO DISPLAY.
         L     R5,MTTWRPPT       YES, POINT TO LAST ENTRY BEFORE WRAP.
         B     LDMTTMSG          PROCESS THIS MESSAGE.
MTTBLTOP MVC   3(LL-82,R2),HIGHX+3
         L     R14,OSCRDIMS      POINT TO SCREEN DIMENSIONS.
         LA    R15,X'3A'         SET PAD TO HORIZONTAL LINE.
         SLL   R15,24            PROMOTE PAD AND ZERO SOURCE LENGTH.
         L     R1,4(,R14)        GET SCREEN WIDTH.
         BCTR  R1,0              DISCOUNT ATTRIBUTE BYTE.
         LA    R0,LL-79(,R2)     POINT TO FIRST TEXT COLUMN.
         MVCL  R0,R14            DRAW A LINE ACROSS THE SCREEN.
         L     R1,4(,R14)        GET SCREEN WIDTH.
         SRA   R1,1              HALVE IT.
         LA    R0,L'MTTOPMSG/2
         SR    R1,R0
         LAE   R1,LL-80(R1,R2)   POINT TO MESSAGE AREA.
         MVC   0(L'MTTOPMSG,R1),MTTOPMSG
EOMTTMSG BAS   R14,OPRIMAS3      REVERT TO PRIMARY SPACE MODE.
         B     EOLOGBUF          TIDY UP AND DISPLAY SCREEN.
         DROP  R4,R5             MTTABLE, MTENTRY.
         SPACE
SYSLOGBF MVC   HEADING(18),=CL18' SYSTEM LOG BUFFER'
         L     R3,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R3
         L     R3,CVTMSER        POINT TO THE MSRDA.
         DROP  R3                CVT.
         USING BASE,R3
         L     R4,BALOG          POINT TO THE LOG CONTROL TABLE.
         DROP  R3                BASE.
         MVC   TTSTATUS,0(R4)    SAVE THE CURRENT BUFFER STATUS.
         SLR   R5,R5
         ICM   R5,7,5(R4)        POINT TO THE LATEST MESSAGE.
         BZ    EOLOGBUF          NO MESSAGE SO LOG BUFFER IS EMPTY.
LDLOGMSG LA    R15,12(,R5)       POINT TO THE ACTUAL MESSAGE TEXT.
         LH    R6,8(,R5)         GET THE LOG MESSAGE TEXT LENGTH.
         AHI   R6,-4             GET THE LOG MESSAGE TEXT LENGTH.
         BAS   R14,OSLOGMSG      EDIT AND DISPLAY THE MESSAGE.
         CR    R2,R9             BEHIND START OF SCREEN?
         BL    EOLOGBUF          YES, DO NOT LOAD ANY MORE MESSAGES.
         ICM   R5,15,0(R5)       POINT TO PREVIOUS LOG MESSAGE.
         BNZ   LDLOGMSG          GO LOAD IT.
EOLOGBUF MODESET MF=(E,MDSTPROB)
         L     R9,CCTADDR        GET CCT ADDRESS.
         LH    R9,UTILP(,R9)     LOAD CCVUTILP (CPU BUSY %).
         CVD   R9,WORK           CONVERT IT TO DECIMAL.
         MVC   BUSY,ED3          MOVE IN THE EDIT MASK.
         ED    BUSY,WORK+6       EDIT THE OUTPUT FIELD.
         L     R1,INITADDR
         USING INITIAL,R1
         MVC   HOME,SCRNHDR      RESTORE SCREEN HEADER.
         DROP  R1                INITIAL.
         LA    R1,HOME           POINT TO START OF SCREEN BUFFER.
         L     R0,OPAGEND        POINT TO END OF SCREEN BUFFER.
         SR    R0,R1             GET SCREEN BUFFER LENGTH.
         CLI   OTGETRC,4         ANY DATA FROM MOST RECENT TGET?
         BNE   PUTSCRNO          YES, UPDATE ENTIRE SCREEN.
         MVC   HOME+1(L'HOME-1),=X'401140401B404E'  UPDATE SCREEN HDR.
         LA    R1,HOME+1         POINT TO NEW NULL WCC.
         BCTR  R0,0              ADJUST LENGTH.
         S     R0,OLINLNTH       REDUCE LENGTH TO LEAVE LAST LINE ASIS.
         B     PUTSCRNO          DISPLAY THE SCREEN.
         SPACE
OSETSAS  DS    0H                SET SECONDARY ADDRESS SPACE ROUTINE.
         LR    R3,R14            SAVE THE RETURN ADDRESS.
         XC    WORK,WORK         CLEAR ADDRESS SPACE PARAMETERS.
         STH   R15,WORK+2        SPECIFY THE SECONDARY ASID.
         L     R14,PSAAOLD       POINT TO THE CURRENT ASCB.
         MVC   WORK+6(2),ASID(R14) SPECIFY HOME AS THE PRIMARY ASID.
         BAS   R14,DONTSWAP      BECOME NON-SWAPPABLE.
***      TM    OSBITS,X'9B'      MVS/XA?
***      BNO   OSETSAS2          YES, CANNOT USE ACCESS REGISTERS.
         L     R15,WORK          RELOAD THE TARGET ASID.
         LA    R1,1              LOAD ASID OF *MASTER*.
         LA    R5,MSTRALET       POINT TO REQUIRED ALET.
         CR    R1,R15            CORRECT ALET?
         BE    OTGTOKAY          YES.
         LA    R5,COMMALET       NO, MUST BE THAT OF COMMTASK.
OTGTOKAY ST    R5,WORK+4         SAVE ALET HOLDING AREA ADDRESS.
         ICM   R5,15,0(R5)       LOAD PREVIOUS ALET VALUE.
         BNZ   OSALETOK          NON-ZERO SO ALREADY HAVE IT.
         SLL   R15,2             MULTIPLY TARGET ASID BY 4 FOR INDEX.
         A     R15,ASVTADDR
*                                POINT TO TARGET ASCB.
         L     R15,ASVTENTY-ASVT-4(,R15)
         USING ASCB,R15
         L     R15,ASCBASSB      POINT TO TARGET ASSB.
         DROP  R15               ASCB.
         USING ASSB,R15
         MVC   WORK2,ASSBSTKN    COPY TARGET SPACE TOKEN.
         DROP  R15               ASSB.
         ALESERV ADD,STOKEN=WORK2,ALET=(R5),CHKEAX=NO,                 +
               MF=(E,ALESERVL)   ADD ALET TO DU-AL LIST.
         LTR   R15,R15           WAS THE ADD SUCCESSFUL?
         BNZ   OALERROR
         L     R15,WORK+4        POINT TO ALET HOLDING AREA.
         ST    R5,0(,R15)        SAVE THE RETURNED ALET VALUE.
OSALETOK DS    0H                NOW HAVE DESIRED ALET VALUE.
         SAR   A4,R5             AR4 WILL POINT TO THE TARGET ASID.
         SAR   A5,R5             AR5 WILL POINT TO THE TARGET ASID.
         SAR   A15,R5            AR15 WILL POINT TO THE TARGET ASID.
         SAC   X'200'            GET INTO ACCESS REGISTER MODE.
OSLASPOK DS    0H                CROSS MEMORY SETUP WAS SUCCESSFUL.
         LR    R14,R3            RESTORE THE RETURN ADDRESS.
         BR    R14               RETURN TO CALLER.
OALERROR STC   R15,WORK          SAVE THE ALESERV RETURN CODE.
         UNPK  AEMSGTXT+30(3),WORK(2)
         TR    AEMSGTXT+30(2),HEX-C'0'
         MVI   AEMSGTXT+32,C''''
         LA    R1,AEMSG          DISPLAY THIS ERROR CODE ON THE SCREEN.
         LA    R0,AEMSGLEN
         B     PUTSCRNO
OSETSAS2 DS    0H                XA CROSS MEMORY PROCESSING.
         STATUS SET,MC,STEP      STOP ALL OTHER TASKS.
         LA    R1,1              ADDRESS ALL AX NUMBER.
         AXSET AX=(1)            SET AX = 1.
         ST    R0,AXVALUE        SAVE ORIGINAL AX VALUE.
         LASP  WORK,1            ACTIVATE SECONDARY ASID TRANSLATION.
         BZ    OSLASPOK          LASP WAS SUCCESSFUL.
         LH    R15,WORK+2        LASP FAILED - LOAD SECONDARY ASID.
         DC    H'0'              CAUSE AN S0C1 ABEND.
         SPACE
OPRIMAS3 DS    0H                ESA END CROSS MEMORY MODE ROUTINE.
         LR    R3,R14            SAVE THE RETURN ADDRESS.
         SAC   X'000'            REVERT TO PRIMARY SPACE MODE.
         B     OPRIMSWP          MAYBE BECOME SWAPPABLE AGAIN.
OPRIMAS2 DS    0H                XA END CROSS MEMORY MODE ROUTINE.
         XC    WORK,WORK         CLEAR ADDRESS SPACE PARAMETERS.
         LR    R3,R14            SAVE THE RETURN ADDRESS.
         L     R14,PSAAOLD       POINT TO THE CURRENT ASCB.
         MVC   WORK+2(2),ASID(R14) GET SECONDARY ASID - HOME.
         MVC   WORK+6(2),ASID(R14) GET PRIMARY ASID - HOME.
         LASP  WORK,1            CANCEL SECONDARY ASID TRANSLATION.
         L     R1,AXVALUE        GET SAVED AX NUMBER.
         AXSET AX=(1)            SET AX = 0.
         STATUS RESET,MC,STEP    RESTART ALL OTHER TASKS.
OPRIMSWP BAS   R14,OKAYSWAP      BECOME SWAPPABLE.
         LR    R14,R3            RESTORE THE RETURN ADDRESS.
         BR    R14               RETURN TO CALLER.
         SPACE
OSLOGMSG DS    0H                FORMAT MESSAGE LINE ROUTINE.
         LAE   R1,0(,R15)        COPY MESSAGE TEXT ADDRESS.
         CLI   54(R15),C' '      TWO-DIGIT YEAR FORMAT?
         BE    *+8               YES.
         LA    R15,2(,R15)       NO, FOUR-DIGIT YEAR FORMAT.
         L     R7,OSCRDIMS       POINT TO SCREEN DIMENSIONS.
         L     R7,4(,R7)         GET SCREEN WIDTH.
         CLI   OMSGJBID,C' '     ANY JOB IDENTIFIER SELECTION?
         BNH   OSJOBMSG          NO, PROCEED TO FORMAT THE MESSAGE.
         CLC   OMSGJBID,37(R15)  CORRECT JOB IDENTIFIER IN MESSAGE?
         BNER  R14               NO, DO NOT DISPLAY MESSAGE.
OSJOBMSG CLI   OSCROLL,C'L'      SCROLLED LEFT?
         BE    OLEFTMSG          YES.
         CLI   OSCROLL,C'R'      SCROLLED RIGHT?
         BE    ORITEMSG          YES.
         AHI   R7,-25
         AR    R7,R15
         SR    R7,R1
         CR    R7,R6             WTO WITH MESSAGE PART?
         BNL   MSGCLROK          NO, TOO SHORT SO MUST BE A WTL MSG.
         MVC   LL-79(8,R2),37(R15) LOAD MESSAGE SOURCE (JOB NUMBER).
         SR    R6,R7             GET VARIABLE MESSAGE PART LENGTH.
         LA    R7,71             GET MAXIMUM SUPPORTED LENGTH.
         CR    R6,R7             IS TRUNCATION NECESSARY?
         BNH   LGMSGLEN          NO.
         LR    R6,R7             YES, DO IT.
LGMSGLEN BCTR  R6,0              DECREMENT FOR EXECUTE.
         EX    R6,LDVARMSG       LOAD MESSAGE TEXT.
         B     OMSGLDED          MESSAGE NOW LOADED.
OLEFTMSG BCTR  R7,0              GET MAXIMUM SUPPORTED LENGTH.
         CR    R6,R7             IS TRUNCATION NECESSARY?
         BNH   LGLFTLEN          NO.
         LR    R6,R7             YES, DO IT.
LGLFTLEN BCTR  R6,0              DECREMENT FOR EXECUTE.
         EX    R6,LDLFTMSG       LOAD MESSAGE TEXT.
         B     OMSGLDED          MESSAGE NOW LOADED.
ORITEMSG LNR   R0,R7             GET NEGATIVE SCREEN WIDTH.
         AHI   R0,102+80         GET MESSAGE DISPLAY OFFSET.
         BNM   *+8
         LA    R0,0              KEEP OFFSET NON-NEGATIVE.
         AR    R0,R15
         SR    R0,R1
         SR    R6,R0             GET LENGTH OF TEXT TO BE SHOWN.
         BNP   MSGCLROK          MESSAGE IS TOO SHORT SO EXIT.
         BCTR  R7,0              GET MAXIMUM SUPPORTED LENGTH.
         CR    R6,R7             IS TRUNCATION NECESSARY?
         BNH   LGRITLEN          NO.
         LR    R6,R7             YES, DO IT.
LGRITLEN BCTR  R6,0              DECREMENT FOR EXECUTE.
         LR    R7,R0             COPY DISPLAY OFFSET. .
         LAE   R7,0(R7,R15)      POINT TO START OF DISPLAY TEXT.
         EX    R6,LDRITMSG       LOAD MESSAGE TEXT.
         LAE   R7,0
OMSGLDED TR    LL-79(79,R2),XLATETBL
         CLI   0(R1),C'O'        LOG ENTRY FROM OPERATOR?
         BE    OMSGCLR4          YES.
         CLI   0(R1),C'X'        LOG ENTRY FROM WTL?
         BE    OMSGCLR4          YES.
         CLI   55(R15),C' '      WTOR OR IMMEDIATE ACTION MESSAGE?
         BNE   OMSGCLR7          YES.
         CLI   0(R1),C'W'        WTOR?
         BE    OMSGCLR7          YES.
         CLI   1(R1),C'C'        COMMAND INPUT?
         BE    OMSGCLR3          YES.
         CLI   1(R1),C'I'        COMMAND ISSUED INTERNALLY?
         BE    OMSGCLR3          YES.
         CLI   1(R1),C'R'        COMMAND RESPONSE?
         BE    OMSGCLR6          YES.
         CLI   0(R1),C'M'        MULTI-LINE MESSAGE?
         BE    OMSGCLR4          YES.
         CLI   0(R1),C'D'        MULTI-LINE MESSAGE?
         BE    OMSGCLR4          YES.
         CLI   0(R1),C'E'        MULTI-LINE MESSAGE?
         BE    OMSGCLR4          YES.
         CLI   56(R15),C'+'      PROBLEM PROGRAM MESSAGE?
         BE    OMSGCLR1          YES.
         CLI   4(R1),C'A'        SECURITY MESSAGE?
         BL    OMSGCLR5          NO.
         CLI   4(R1),C'F'
         BNH   OMSGCLR2          YES.
         CLI   4(R1),C'8'
         BL    OMSGCLR5          NO.
         B     OMSGCLR2          YES.
OMSGCLR1 MVI   LL-80(R2),X'F1'   SHOW IT IN BLUE.               (I3279)
         B     MSGCLROK
OMSGCLR2 MVC   3(LL-82,R2),HIGHX+3
         MVI   LL-80(R2),X'F2'   SHOW IT IN RED.                (I3279)
         B     MSGCLROK
OMSGCLR3 MVC   3(LL-82,R2),HIGHX+3
         MVI   LL-80(R2),X'F3'   SHOW IT IN PINK.               (I3279)
         B     MSGCLROK          YES, IT IS NOW IN "MEDIUM" INTENSITY.
OMSGCLR4 MVI   LL-80(R2),X'F4'   SHOW IT IN GREEN.              (I3279)
         B     MSGCLROK
OMSGCLR5 MVI   LL-80(R2),X'F5'   SHOW IT IN TURQUOISE.          (I3279)
         B     MSGCLROK
OMSGCLR6 MVI   LL-80(R2),X'F6'   SHOW IT IN YELLOW.             (I3279)
         B     MSGCLROK
OMSGCLR7 MVC   3(LL-82,R2),HIGHX+3
         MVI   LL-80(R2),X'F7'   SHOW IT IN WHITE.              (I3279)
MSGCLROK CLI   HEADING+55,C'0'   LATEST MESSAGE TIME ALREADY IN HDG?
         BNL   HDGOTMOK          YES, DO NOT USE THIS MESSAGE'S TIME.
         CLI   27(R15),C':'      SYSTEM CONSOLE MESSAGE WITH TIMESTAMP?
         BNE   HDGOTMOK          NO, NO TIMESTAMP TO COPY.
         MVC   HEADING+55(11),25(R15)   YES, COPY ITS TIMESTAMP.
         MVC   HEADING+43(11),=C'LAST MSG AT'
HDGOTMOK CLI   OMSGJBID,C' '     LOOKING FOR SPECIFIC JOB IDENTIFIER?
         BNH   HDGOTJOK          NO.
         MVC   HEADING+42(3),=C'ID='
         MVC   HEADING+45(8),OMSGJBID
         MVI   HEADING+53,C' '   YES, SHOW JOB ID IN HEADING.
HDGOTJOK S     R2,OLINLNTH       POINT TO PREVIOUS MESSAGE LINE.
         BR    R14               RETURN TO CALLER.
LDVARMSG MVC   LL-71(0,R2),55(R15)              <<< EXECUTED >>>
LDLFTMSG MVC   LL-79(0,R2),0(R1)                <<< EXECUTED >>>
LDRITMSG MVC   LL-79(0,R2),0(R7)                <<< EXECUTED >>>
         SPACE
         USING WQEPAD,R15
WTORSHOW DS    0H                FORMAT WTOR MESSAGE LINE ROUTINE.
         CLI   OMSGJBID,C' '     ANY JOB IDENTIFIER SELECTION?
         BNH   WTORIDOK          NO, PROCEED TO FORMAT THE MESSAGE.
         CLC   OMSGJBID,WQEJOBNM CORRECT JOB IDENTIFIER IN MESSAGE?
         BNER  R14               NO, DO NOT DISPLAY MESSAGE.
WTORIDOK MVC   3(LL-82,R9),HIGHX+3 HIGH INTENSITY FOR WTORS.
         MVI   2(R9),X'F2'       REVERSE VIDEO FOR MOUNT WTORS.
         MVI   5(R9),X'50'       REVERSE VIDEO.                 (F9526)
         CLI   OSCROLL,C'L'      SCROLLED LEFT?
         BE    WTORLEFT          YES.
         CLI   OSCROLL,C'R'      SCROLLED RIGHT?
         BE    WTORIGHT          YES.
         MVC   LL-79(8,R9),WQEJOBNM   SUPPLY THE SUBSYSTEM JOB NUMBER.
         MVC   LL-71(71,R9),WQETXT    SUPPLY THE MESSAGE TEXT.
         B     WTOREXIT
WTORLEFT MVC   LL-79(79,R9),WQEPAD    SUPPLY THE MESSAGE TEXT.
         B     WTOREXIT
WTORIGHT MVC   LL-79(79,R9),WQETXT+49 SUPPLY THE MESSAGE TEXT.
WTOREXIT TR    LL-79(79,R9),XLATETBL
*        ICM   R0,B'1111',0(R3)  LAST OPERATOR REPLY ELEMENT?
*        BNZ   WTOROKAY          NO.
*        MVI   2(R9),X'F4'       YES, UNDERSCORE THE LAST ONE.
WTOROKAY A     R9,OLINLNTH       ADJUST BUFFER POINTER.
         LA    R0,1
         AH    R0,OWTORCNT       INCREMENT DISPLAYED WTOR COUNT.
         STH   R0,OWTORCNT
         BR    R14               RETURN TO CALLER.
         DROP  R15               WQEPAD.
         SPACE
         DROP  R11,R10           OSCONSOL.
         TITLE 'OS/MVS CONSOLE MONITOR - VARIABLES AND CONSTANTS'
TTWAITIM DC    F'50'             WAIT HALF A SECOND FOR INPUT.
OMTTLOCN DC    F'0'              ADDRESS OF LATEST MESSAGE SHOWN.
OMTTMOVE DC    F'0'              NUMBER OF MESSAGES TO SCROLL.
OJOBIDID DC    F'0'              MESSAGE NUMBER TO GET JOBID FROM.
OSPYADDR DC    F'0'              ENTRY POINT OF IMPXASPY IN CSA.
OMSGJBID DC    CL8' '            JOB IDENTIFIER IN MESSAGES TO SHOW.
OTOPLINE DC    A(0)              TOP SCREEN DETAIL LINE ADDRESS.
OSCRDIMS DC    A(0)              SCREEN DIMENSIONS POINTER.
OLINLNTH DC    A(LL)             LINE DATA BYTE COUNT.
ORVRSLIM DC    A(0)              ADDRESS OF GUARDED DETAIL LINES.
OPAGEND  DC    A(0)              FIRST ADDRESS PAST SCREEN DATA.
OBILDLST DC    H'1'              ONE ENTRY IN BUILD LIST.
         DC    H'76'             CATER FOR MAXIMUM USER DATA LENGTH.
SPYDELOC DC    CL8'IMPXASPY'     OS CONSOLE SPY LOAD MODULE NAME.
         DC    XL2'0000'         RELATIVE TRACK OF MEMBER START.
         DC    XL1'00'           FIRST RECORD NUMBER (0 FOR NOT FOUND).
         DC    XL1'00'           CONCATENATION CODE.
         DC    XL1'00'           LOCATION CODE.
         DC    XL1'00'           ALIAS FLAG AND USERDATA HW COUNT.
OSUSRDAT DC    XL62'00'          USERDATA AREA.
         SPACE
OPCMDBUF DC    H'0',H'0',CL80' '
         SPACE
OPERWTO  WTO   '123456789.123456789.123456789.123456789.123456789.12345+
               6789.123456789.1234567890',MF=L
OPERMESG EQU   OPERWTO+4,80
         SPACE
OWTORCNT DC    H'0'              NUMBER OF WTORS ON SHOW.
MSGSAUCE DC    C'T'              OPERATOR MESSAGE SOURCE FLAG.
OPERPSWD DC    C'GAK'            OPERATOR COMMAND AUTHORITY PASSWORD.
OSCROLL  DC    C' '              LEFT/RIGHT SCROLLING VALUE.
OTGETRC  DC    X'00'             RETURN CODE FROM MOST RECENT TGET.
HEADINGO DC    CL71'MASTER TRACE TABLE DISPLAY   SYSTEM XXXX           +
                                <R>'
NOMTTMSG DC    CL43'***  MASTER TRACE TABLE DOES NOT EXIST  ***'
MTTOPMSG DC    CL34' MASTER TRACE TABLE - TOP OF DATA '
OCMSG    DC    X'C5115DD81DF82842F22841F2'
         DC    CL39'      ERROR - NOT IN COMMAND MODE      '
         DC    X'1140402842001D402841F40000'
OCMSGLEN EQU   *-OCMSG                    "OPERATOR COMMAND" MESSAGE.
OPA1MSG  DCS   X'C5',SBA
OPA1ADR1 DCS   (23,1),SF,PROHIS,SA,COLOUR,WHITE
         DC    CL79'IEE150I CHANGE OPTIONS IF DESIRED: (ENTER TO ISSUE +
               COMMAND; PA2 TO CANCEL IT.) '
         DCS   SBA
OPA1ADR2 DCS   (24,1),SA,COLOUR,GREEN,SF,X'C1',IC
OLDOPCMD DC    CL79' '
OPA1LEN  EQU   *-OPA1MSG
AEMSG    DC    X'4011C1F81DF82842F22841F2'
AEMSGTXT DC    CL39'       ALESERV FAILURE - RC=X''??''      '
AEMSGLEN EQU   *-AEMSG                    "ALESERV ERROR" MESSAGE.
         LTORG
         TITLE 'OS/MVS CONSOLE MONITOR - ERROR SCREEN'
OSBADMSG DC    X'C51140401D40132841F400001DF82842F7'
         DC    C'           INTERACTIVE MONITORING PROGRAM FOR MVS/XA+E+
               SA            &IMPDATE',X'284100'
         SPACE
         DC    X'3CC35C401DF42841F2',C'           ',X'284100'
         DC    X'3CC46C401DF42841F2',C'    MVS    ',X'284100'
         DC    X'3CC57C401DF42841F2',C'  CONSOLE  ',X'284100'
         DC    X'3CC74C401DF42841F2',C'  MONITOR  ',X'284100'
         DC    X'3CC85C401DF42841F2',C'           '
         DC    X'2841003C404040'
         SPACE
         DCS   SBA,(9,4)
         DC    X'&HIGH',C'IMPXA CONSOLE SPY FUNCTION MODULE'
         SPACE
         DCS   SBA,(11,10)
         DC    X'2841F1'
OSBADTXT DC    CL23'NOT INSTALLED CORRECTLY',X'284100'
         SPACE
         DCS   SBA,(15,6)
         DC    X'&LOW',C'HIT',X'&MED',C'PF12/24',X'&LOW'
         DC    C'FOR THE MAIN MENU'
         SPACE 2
OSBADLEN EQU   *-OSBADMSG
         SPACE 3
         DS    0H
