GLSPARSE TITLE 'IMON GLOSSARY SCREEN CONVERSION ROUTINE'
*
*        COPYRIGHT (C) 1993  PRYCROFT SIX PTY LTD
*
*        WRITTEN BY GREG PRICE        23 JUNE 1993
*
GLSPARSE CSECT
         USING GLSPARSE,R15
         B     START                  BRANCH AROUND LITERAL.
         DC    AL1(53)
         DC    C'GLSPARSE &SYSDATE COPYRIGHT (C) 1993 PRYCROFT SIX P/L'
         DROP  R15                    GLSPARSE.
START    DS    0H
         STM   R14,R12,12(R13)        SAVE REGISTERS.
         LR    R12,R15                COPY BASE REGISTER.
         USING GLSPARSE,R12
         LA    R3,SAVE                POINT TO NEW SAVE AREA.
         ST    R3,8(,R13)             CHAIN FORWARD.
         ST    R13,4(,R3)             CHAIN BACKWARD.
         LR    R13,R3                 POINT TO NEW SAVE AREA.
         OPEN  (SYSUT1,INPUT,SYSUT2,OUTPUT,SYSPUNCH,OUTPUT)
         SPACE
GETLOOP  GET   SYSUT1,INREC           GET AN INPUT RECORD.
         CLI   INREC,C'*'             COPY COMMENT CARD.
         BE    COPYREC
         CLC   =C' TITLE ',INREC+8    COPY TITLE CARD.
         BE    COPYREC
         CLC   =C' EJECT ',INREC+8    COPY EJECT CARD.
         BE    COPYREC
         CLC   =C' SPACE ',INREC+8    COPY SPACE CARD.
         BE    COPYREC
         CLC   =C' START ',INREC+8    COPY START CARD.
         BE    COPYREC
         CLC   =C' CSECT ',INREC+8    COPY CSECT CARD.
         BE    COPYREC
         CLC   =C' DSECT ',INREC+8    COPY DSECT CARD.
         BE    COPYREC
         CLC   =C' AMODE ',INREC+8    COPY AMODE CARD.
         BE    COPYREC
         CLC   =C' RMODE ',INREC+8    COPY RMODE CARD.
         BE    COPYREC
         CLC   =C' USING ',INREC+8    COPY USING CARD.
         BE    COPYREC
         CLC   =C' DROP  ',INREC+8    COPY DROP CARD.
         BE    COPYREC
         CLC   =C' COPY  ',INREC+8    COPY COPY CARD.
         BE    COPYREC
         CLC   =C' ANOP  ',INREC+8    COPY ASSEMBLER NO-OPERATION CARD.
         BE    COPYREC
         CLC   =C' AIF   ',INREC+8    COPY ASSEMBLER IF CARD.
         BE    COPYREC
         CLC   =C' AGO   ',INREC+8    COPY ASSEMBLER BRANCH CARD.
         BE    COPYREC
         CLC   =C' END   ',INREC+8    COPY END CARD.
         BE    COPYREC
         CLC   =C' EQU   ',INREC+8    COPY EQUATE CARD.
         BE    COPYREC
         CLC   =C' DCS ',INREC+8      COPY "DC FOR SCREEN" CARD.
         BE    COPYREC
         CLC   =C' DC ',INREC+8       COPY DEFINE CONSTANT CARD.
         BE    COPYREC
         CLC   =C' DS ',INREC+8       COPY DEFINE STORAGE CARD.
         BE    COPYREC
         CLC   =C' GLB',INREC+8       COPY GLOBAL VARIABLE DEFINITION.
         BE    COPYREC
         CLC   =C' LCL',INREC+8       COPY LOCAL VARIABLE DEFINITION.
         BE    COPYREC
         CLC   =C' SET',INREC+8       COPY VARIABLE ASSIGNMENT.
         BE    COPYREC
         SPACE
         MVC   OUTREC,INREC           COPY DOCUMENTATION TEXT.
TRTPUNCH TRT   OUTREC,GETAB           ANY GRAPHICS ESCAPES?
         BZ    PUTPUNCH               NO, RECORD READY FOR OUTPUT.
         MVI   0(R1),C' '             YES, CONVERT IT TO A BLANK.
         TR    1(1,R1),GRAFTABL-C' '  CONVERT APL BYTE TO BEST FIT.
         B     TRTPUNCH               CHECK FOR ANY MORE GE BYTES.
PUTPUNCH TR    OUTREC,PUNCHTAB        REMOVE UNPRINTABLES.
         PUT   SYSPUNCH,OUTREC        WRITE IT OUT FOR REFERENCE.
         LA    R4,INREC               POINT TO THE INPUT RECORD.
         LA    R5,INREC+L'INREC       POINT PAST THE INPUT RECORD.
EDITLOOP LR    R3,R5                  POINT PAST THE INPUT RECORD.
         SR    R3,R4                  GET THE COUNT OF BYTES TO EDIT.
         BNP   GETLOOP                ALL DONE, GET NEXT RECORD.
         BCTR  R3,0                   DECREMENT FOR EXECUTE.
         EX    R3,TRTCHARS            ANY SPECIAL FLAG BYTES?
         LA    R3,1(,R3)              RESTORE BYTE COUNT.
         BZ    DECLAREC               NO, OUTPUT CHARACTERS.
         LR    R3,R1                  COPY FLAG BYTE ADDRESS.
         SR    R3,R4                  GET OFFSET INTO INPUT RECORD.
         BZ    CHRBITOK               FIRST BYTE HAS FLAG BYTE.
DECLAREC CH    R3,=H'50'              MORE THAN FIFTY BYTES BEFORE IT?
         BNH   CHRBIGOK               NO.
         MVC   OUTREC,TEMPLATE        YES, OUTPUT THE FIRST FORTY.
         MVC   OUTREC+17(40),0(R4)
         MVI   OUTREC+57,QUOTE
         PUT   SYSUT2,OUTREC
         LA    R4,40(,R4)
         SH    R3,=H'40'
CHRBIGOK MVC   OUTREC,TEMPLATE
         BCTR  R3,0                   DECREMENT FOR EXECUTE.
         EX    R3,MVCCHARS            COPY DATA UP TO FLAG BYTE.
         LA    R3,1(,R3)              RESTORE BYTE COUNT.
         LA    R6,OUTREC+17(R3)       POINT PAST COPIED DATA.
         MVI   0(R6),QUOTE            SUPPLY TRAILING QUOTE.
         PUT   SYSUT2,OUTREC
         ALR   R4,R3                  POINT PAST PROCESSED INPUT DATA.
         CR    R4,R5                  END OF INPUT RECORD?
         BNL   GETLOOP                YES, GET NEXT INPUT RECORD.
CHRBITOK MVC   OUTREC,TEMPLATE
         MVI   OUTREC+15,C'X'         DEFINE HEXADECIMAL.
         CLI   0(R4),X'28'            FUJITSU SHIFT IN?
         BE    SHIFTIN                YES, DEFINE IT IN HEX.
         CLI   0(R4),X'29'            FUJITSU SHIFT OUT?
         BE    SHIFTOUT               YES, DEFINE IT IN HEX.
         CLI   0(R4),C' '             DISPLAYABLE CHARACTER?
         BL    GETATTRS               NO, GO MAKE 3270 ORDERS.
         UNPK  OUTREC+17(3),0(2,R4)   YES, UNPACK THE CHARACTER.
         TR    OUTREC+17(2),HEX-C'0'
         MVI   OUTREC+19,QUOTE
         B     PUTHEX
SHIFTIN  MVC   OUTREC+17(5),=C'400F'''
         B     PUTHEX
SHIFTOUT MVC   OUTREC+17(5),=C'0E40'''
         B     PUTHEX
TRTCHARS TRT   0(0,R4),SPECIALT       <<< EXECUTED >>>
MVCCHARS MVC   OUTREC+17(0),0(4)      <<< EXECUTED >>>
         SPACE
GETATTRS CLI   0(R4),X'08'            GRAPHICS ESCAPE?
         BE    MAKEAPL                YES.
         MVC   OUTREC+17(9),=C'2841004B'''
         CLI   0(R4),X'18'            NORMAL-HIGHLIGHTING,PERIOD?
         BE    PUTHEX                 YES, NOW READY FOR OUTPUT.
         MVI   OUTREC+24,C'0'
         CLI   0(R4),X'10'            NORMAL-HIGHLIGHTING,BLANK?
         BE    PUTHEX                 YES, NOW READY FOR OUTPUT.
         LA    R6,OUTREC+17           POINT TO OUTPUT AREA.
         TM    0(R4),X'08'            UNDERSCORE REQUIRED?
         BZ    SETATTRS               NO.
         MVC   OUTREC+21(2),=C'F4'    YES.
         LA    R6,OUTREC+23           ADJUST POINTER.
SETATTRS MVC   0(11,R6),=C'1DF02842F0'''     LOAD TEMPLATE.
         SLR   R0,R0
         IC    R0,0(,R4)              LOAD THE FLAG BYTE.
         STC   R0,9(,R6)              OVERLAY LAST (COLOR) HEX DIGIT.
         NI    9(R6),X'F7'            FOLD BACK TO VALID RANGE.
         OI    9(R6),X'F0'            MAKE DECIMAL NUMERIC CHARACTER.
         SRL   R0,4                   GET TOP NIBBLE.
         BCTR  R0,0                   MAP 1->3 TO 0->2.
         SLL   R0,2                   MULTIPLY BY FOUR.
         STC   R0,3(,R6)              SUPPLY INTENSITY FLAGS.
         OI    3(R6),X'F0'            MAKE DECIMAL NUMERIC CHARACTER.
PUTHEX   LA    R4,1(,R4)              POINT PAST THE FLAG BYTE.
         PUT   SYSUT2,OUTREC
         B     EDITLOOP
MAKEAPL  MVC   OUTREC+17(4),=C'4008'  INSERT A BLANK.
         UNPK  OUTREC+21(3),1(2,R4)   SUPPLY THE ACTUAL CHARACTER.
         TR    OUTREC+21(2),HEX-C'0'
         MVI   OUTREC+23,QUOTE
         LA    R4,1(,R4)              POINT PAST THE GRAPHIC ESCAPE.
         B     PUTHEX                 NOW READY FOR OUTPUT.
         SPACE
COPYREC  PUT   SYSUT2,INREC           TRANSMIT RECORD WITHOUT CHANGE.
         CLI   INREC+71,C' '          IS THIS CARD CONTINUED?
         BE    GETLOOP                NO.
         GET   SYSUT1,INREC           YES, GET THE CONTINUATION.
         B     COPYREC                COPY IT OUT.
         SPACE
EODATADR CLOSE (SYSUT1,,SYSUT2,,SYSPUNCH)
         L     R13,4(,R13)            POINT BACK TO CALLER'S SAVE AREA.
         LM    R14,R12,12(R13)        RESTORE REGISTERS.
         SLR   R15,R15                ZERO RETURN CODE.
         BR    R14                    RETURN.
         SPACE
         DROP  R12                    GLSPARSE.
         TITLE 'CONSTANTS AND VARIABLES'
SAVE     DC    18F'0'
TEMPLATE DC    CL80'         DC    C''    '
INREC    DC    CL80' '
OUTREC   DC    CL80' '
HEX      DC    CL16'0123456789ABCDEF'
SPECIALT DC    X'00000000000000000800000000000000'
         DC    X'101112131415161718191A1B1C1D1E1F'
         DC    X'002122232425262728292A2B2C2D2E2F'
         DC    X'0031323334353637003900003C3D3E3F'
         DC    X'00000000000000000000000000000000'
         DC    X'50000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'000000000000000000000000007D0000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
PUNCHTAB DC    X'406C5B7B505C7C4A404E4E4E4E4E4E4E'
         DC    X'40404040404040404040404040404040'
         DC    X'40404040404040404040404040404040'
         DC    X'40404040404040404040604F40404040'
         DC    X'404142434445464748494A4B4C4D4E4F'
         DC    X'505152535455565758595A5B5C5D5E5F'
         DC    X'606162636465666768696A6B6C6D6E6F'
         DC    X'707172737475767778797A7B7C7D7E7F'
         DC    X'808182838485868788898A8B8C8D8E8F'
         DC    X'909192939495969798999A9B9C9D9E9F'
         DC    X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF'
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'
         DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFE4B'
GETAB    DC    XL8'00',X'08',XL247'00'
GRAFTABL DC    C' ABCDEFGHI??????'       40 TO 4F.
         DC    C'?JKLMNOPQR??????'       50 TO 5F.
         DC    C'??STUVWXYZ??????'       60 TO 6F.
         DC    C'?',X'5354',C'?????'     70 TO 77.
         DC    X'52',C'???????'          78 TO 7F.
         DC    C'~??³³³???????³³?'       80 TO 8F.
         DC    C'???????????'            90 TO 9A.
         DC    X'83',C'?',X'96',C'??'    9B TO 9F.
         DC    X'4951',C'-?',X'95'       A0 TO A4.
         DC    C'????????',X'41',C'??'   A5 TO AF.
         DC    X'81858999A66FA7'         B0 TO B6.
         DC    C'\/???T',X'42',C'?³'     B7 TO BF.
         DC    C'{(+?--³-'               C0 TO C7.
         DC    X'48',C'???????'          C8 TO CF.
         DC    C'})?+--³-???!????'       D0 TO DF.
         DC    C'?123????????????'       E0 TO EF.
         DC    C'0123456789??????'       F0 TO FF.  (FF IS INVALID.)
SYSUT1   DCB   DSORG=PS,MACRF=(GM),DDNAME=SYSUT1,EODAD=EODATADR
SYSUT2   DCB   DSORG=PS,MACRF=(PM),DDNAME=SYSUT2
SYSPUNCH DCB   DSORG=PS,MACRF=(PM),DDNAME=SYSPUNCH,RECFM=FB,LRECL=80
         SPACE
         LTORG
         SPACE
         DS    0D                     END OF CSECT.
         TITLE 'EQUATES'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
QUOTE    EQU   X'7D'                  INSTEAD OF C''''.
         SPACE 2
         END   GLSPARSE
