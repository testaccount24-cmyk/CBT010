*        COPYRIGHT (C) 1986,1994  PRYCROFT SIX PTY LTD
         TITLE 'SYSTEM LIBRARY LISTER SUBROUTINE'
         USING LISTLIBS,R11,R10
LISTLIBS DS    0H
         LA    R10,2048(,R11)    SET UP SECOND
         LA    R10,2048(,R10)                  BASE REGISTER.
         MVC   INCHARS(L'INCHARS-1),INCHARS+1
         MVI   INCHARS+L'INCHARS-1,C' '  ADJUST ANY COMMAND INPUT.
         B     CMDSCANL          CHECK FOR SUBCOMMAND.
         SPACE
REDOLIST MVI   ENDDEPTH+1,0      MAKE PF3/15 FUNCTION AS '='.
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         L     R2,WINBUFF        GET WINDOW BUFFER START ADDRESS.
         SLR   R0,R0
         ST    R0,WINLINES       INITIALIZE LINE COUNTER.
         DROP  R15               WNDWMNGR.
         SPACE
         MVC   0(LL-79,R2),HIGHX SUPPLY HEADING ATTRIBUTES.
         MVI   8(R2),X'F7'       SHOW HEADING IN WHITE.         (I3279)
         MVI   2(R2),X'F4'       USE UNDERSCORE FOR HEADING.    (I3279)
         MVI   5(R2),X'C4'       SUPPLY UNDERLINE ALSO.         (F9526)
         CLI   LISTFLAG,C'L'     DISPLAY THE LINK LIST?
         BE    LISTLINK          YES.
         CLI   LISTFLAG,C'P'     DISPLAY THE LINK PACK LIST?
         BE    LISTPACK          YES.
         SPACE
LISTAPFL MVI   LISTFLAG,C'A'     DISPLAY APF AUTHORIZED LIBRARY LIST.
         TM    OSLEVEL,X'88'     MVS/ESA SP4 OR LATER?
         BNO   OLDAPFTB          NO, CAN'T HAVE APF EXTENSIONS.
         L     R1,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R1
         TM    CVTOSLVL+1,CVTDYAPF SP4.3 OR LATER?
         BZ    OLDAPFTB          NO, APF EXTENSIONS NOT AVAILABLE.
         DROP  R1                CVT.
         CSVAPF REQUEST=QUERYFORMAT,FORMAT=APFLTYPE
         TM    APFLTYPE,X'FF'    NEW APF LIBRARY LIST FORMAT USEABLE?
         BNM   OLDAPFTB          NO, USE THE TRIED AND TRUE.
LAWAPREP L     R0,APFLSIZE       GET THE WORK AREA SIZE.
         GETMAIN RU,LV=(0),SP=SUBPOOL,LOC=ANY
         ST    R1,APFLADDR       SAVE THE ADDRESS.
         LR    R4,R1             COPY THE ADDRESS.
         CSVAPF REQUEST=LIST,ANSAREA=(R4),ANSLEN=APFLSIZE
         CHI   R15,4             SUCCESS?
         BL    NEWAPFTB          YES.
         BH    NEWLFAIL          NO.
         LM    R0,R1,APFLSIZE    GET THE WORK AREA DETAILS.
         USING APFHDR,R1
         L     R3,APFHTLEN       GET THE SIZE THAT IS REQUIRED.
         DROP  R1                APFHDR.
         FREEMAIN RU,LV=(0),A=(1),SP=SUBPOOL
         ST    R3,APFLSIZE       UPDATE THE SIZE FOR RETRY.
         B     LAWAPREP
NEWLFAIL STM   R15,R0,WORK       SAVE RETURN AND REASON CODE.
         UNPK  CSVBDMSG+35(9),WORK(5)
         TR    CSVBDMSG+35(8),HEX-C'0'
         MVI   CSVBDMSG+43,C' '
         UNPK  CSVBDMSG+57(9),WORK+4(5)
         TR    CSVBDMSG+57(8),HEX-C'0'
         MVI   CSVBDMSG+65,C' '
         MVC   LL-79(79,R2),CSVBDMSG
         BAS   R14,LADDLINE      LINE NOW COMPLETE.
         B     NEWLDONE
NEWAPFTB L     R3,APFLADDR       POINT TO THE AUTHORIZED LIBRARY TABLE.
         USING APFHDR,R3
         L     R4,APFH#REC       GET NUMBER OF AUTHORIZED LIBRARIES.
         CVD   R4,WORK           DISPLAY NUMBER OF ENTRIES IN HEADING.
         LA    R1,HEADAPFL+62    HANDLE ZERO ENTRIES.
         MVC   HEADAPFL+57(6),ED3Z
         EDMK  HEADAPFL+57(6),WORK+5
         BCTR  R1,0              POINT TO BEFORE FIRST DIGIT.
         MVI   0(R1),C'('        TIDY UP BRACKETS.
         MVC   HEADAPFL+19(3),=C'SMS'
         MVC   LL-79(79,R2),HEADAPFL  LOAD HEADING.
         BAS   R14,LADDLINE      LINE NOW COMPLETE.
         L     R5,APFHOFF        GET OFFSET TO FIRST APFE.
         LA    R5,0(R5,R3)       POINT TO FIRST ENTRY.
         LTR   R4,R4             ANY ENTRIES?
         BZ    NEWLDONE          NO.
         USING APFE,R5
NEWAPFLB MVC   0(L'LOWX,R2),LOWX SUPPLY ATTRIBUTE BYTES.
         MVC   9(79,R2),BLANKS   BLANK THE LINE.
         MVC   19(6,R2),APFEVOLUME LOAD VOLUME SERIAL NUMBER.
         TM    APFEFLAGS,APFESMS SMS-MANAGED LIBRARY?
         BZ    NEWSMSOK          NO.
         MVC   28(3,R2),=C'YES'  YES, INDICATE THIS.
NEWSMSOK SLR   R9,R9
         IC    R9,APFEDSLEN      GET DATA SET NAME LENGTH.
         EX    R9,APFNWLOD       LOAD AUTHORIZED LIBRARY NAME.
         BAS   R14,LADDLINE      LINE NOW COMPLETE.
         ICM   R9,3,APFELEN      GET THE ENTRY LENGTH.
         LA    R5,0(R9,R5)       POINT TO NEXT ENTRY.
         BCT   R4,NEWAPFLB       GET NEXT ENTRY.
NEWLDONE LM    R0,R1,APFLSIZE    GET THE WORK AREA DETAILS.
         FREEMAIN RU,LV=(0),A=(1),SP=SUBPOOL
         B     ENDOFLIB          END OF LIBRARY LIST REACHED.
APFNWLOD MVC   34(0,R2),APFEDSNAME              <<< EXECUTED >>>
         DROP  R3,R5             APFHDR, APFE.
OLDAPFTB L     R3,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R3
         L     R3,CVTAUTHL       POINT TO THE AUTHORIZED LIBRARY TABLE.
         DROP  R3                CVT.
         SLR   R4,R4
         IC    R4,1(,R3)         GET NUMBER OF AUTHORIZED LIBRARIES.
         CVD   R4,WORK           DISPLAY NUMBER OF ENTRIES IN HEADING.
         LA    R1,HEADAPFL+62    HANDLE ZERO ENTRIES.
         MVC   HEADAPFL+59(4),ED3Z
         EDMK  HEADAPFL+59(4),WORK+6
         BCTR  R1,0              POINT TO BEFORE FIRST DIGIT.
         MVI   0(R1),C'('        TIDY UP BRACKETS.
         MVC   LL-79(79,R2),HEADAPFL  LOAD HEADING.
         BAS   R14,LADDLINE      LINE NOW COMPLETE.
         LA    R5,2(,R3)         POINT TO FIRST ENTRY.
         LTR   R4,R4             ANY ENTRIES?
         BZ    ENDOFLIB          NO.
NXTAPFLB MVC   0(L'LOWX,R2),LOWX SUPPLY ATTRIBUTE BYTES.
         MVC   9(79,R2),BLANKS   BLANK THE LINE.
         MVC   19(6,R2),1(R5)    LOAD VOLUME SERIAL NUMBER.
         SLR   R9,R9
         IC    R9,0(,R5)         GET LENGTH OF ENTRY.
         AHI   R9,-7             GET DATA SET NAME LENGTH MINUS ONE.
         EX    R9,APFNMLOD       LOAD AUTHORIZED LIBRARY NAME.
         BAS   R14,LADDLINE      LINE NOW COMPLETE.
         LA    R5,8(R9,R5)       POINT TO NEXT ENTRY.
         BCT   R4,NXTAPFLB       GET NEXT ENTRY.
         B     ENDOFLIB          END OF LIBRARY LIST REACHED.
         SPACE
LISTLINK L     R3,CVTPTR(,0)     POINT TO CVT.
         USING CVT,R3
         L     R7,CVTLINK        POINT TO THE IPL-TIME LINK LIST DCB.
         L     R3,CVTLLTA        POINT TO THE IPL-TIME LINK LIST TABLE.
         DROP  R3                CVT.
         TM    OSLEVEL+1,CVTDYNL OS/390 1.3 OR LATER?
         BNO   LNKLSTOK          NO, NO DYNAMIC LINK LIST FACILITY.
         L     R6,PSAAOLD        POINT TO THE CURRENT ASCB.
         USING ASCB,R6
         L     R6,ASCBASSB       POINT TO THE CURRENT ASSB.
         DROP  R6                ASCB.
         USING ASSB,R6
         L     R6,ASSBDLCB       POINT TO DYNAMIC LNKLST CONTROL BLOCK.
         DROP  R6                ASSB.
         USING DLCB,R6
         L     R7,DLCBDCB@       POINT TO THIS ASID'S LINK LIST DCB.
         USING IHADCB,R7
         L     R3,DLCBLLT@       POINT TO THIS ASID'S LINK LIST TABLE.
LNKLSTOK ICM   R7,7,DCBDEBA      POINT TO THE LINK LIST DEB.
         DROP  R7                IHADCB.
         USING DEBBASIC,R7
         L     R4,4(,R3)         GET NUMBER OF LINK LIST LIBRARIES.
         CVD   R4,WORK           DISPLAY NUMBER OF ENTRIES IN HEADING.
         MVC   HEADLNKL+59(4),ED3Z
         EDMK  HEADLNKL+59(4),WORK+6
         BCTR  R1,0              POINT TO BEFORE FIRST DIGIT.
         MVI   0(R1),C'('        TIDY UP BRACKETS.
         MVC   LL-79(79,R2),HEADLNKL  LOAD HEADING.
         TM    OSLEVEL+1,CVTDYNL OS/390 1.3 OR LATER?
         BNO   LNKHDGOK          NO, NO DYNAMIC LINK LIST FACILITY.
         MVC   LL-44(4,R2),=C'SET '
         MVC   LL-40(16,R2),DLCBLNKLSTSETNAME
         DROP  R6                DLCB.
LNKHDGOK BAS   R14,LADDLINE      LINE NOW COMPLETE.
         LA    R5,8(,R3)         POINT TO FIRST ENTRY.
         LR    R6,R4             GET THE NUMBER OF ENTRIES.
         MHI   R6,45             MULTIPLY BY THE ENTRY LENGTH.
         LA    R6,8(R6,R3)       POINT TO APF FLAG BYTES.
         SLR   R8,R8
         IC    R8,DEBNMEXT       GET THE NUMBER OF LINK LIST EXTENTS.
         DROP  R7                DEBBASIC.
         LA    R7,32(,R7)        POINT TO DEB DASD EXTENSION.
         SLL   R8,4              BY 16 FOR DASD EXTENSION SIZE.
         LA    R8,0(R8,R7)       POINT TO DEB BPAM SECTION.
         BCTR  R8,0              POINT TO ONE BEFORE IT.
         LR    R9,R4             COPY THE NUMBER OF ENTRIES.
NXTLNKLB MVC   0(L'LOWX,R2),LOWX SUPPLY ATTRIBUTE BYTES.
         MVC   9(79,R2),BLANKS   BLANK THE LINE.
         SLR   R1,R1
         CR    R9,R4             FIRST ENTRY?
         BE    LNKVOLSR          YES, HAD DEB EXTENT DESCRIPTOR.
         IC    R1,0(,R8)         NO, LOAD ENTRY'S FIRST EXTENT NUMBER.
         SLL   R1,4              MULTIPLY BY 16 FOR INDEX.
LNKVOLSR LA    R1,0(R1,R7)       POINT TO ENTRY'S FIRST DEB EXTENT.
         USING DEBDASD,R1
         ICM   R1,7,DEBUCBA      POINT TO ENTRY'S FIRST DEB EXTENT UCB.
         DROP  R1                DEBDASD.
         USING UCBOB,R1
         MVC   19(6,R2),UCBVOLI  LOAD VOLUME SERIAL NUMBER.
         DROP  R1                UCBOB.
         MVC   34(44,R2),1(R5)   LOAD LINK LIST LIBRARY NAME.
         TM    0(R6),X'80'       APF AUTHORIZED LIBRARY?
         BZ    DONLNKLB          NO.
         MVC   28(3,R2),=C'YES'  YES, INDICATE THIS.
DONLNKLB BAS   R14,LADDLINE      LINE NOW COMPLETE.
         LA    R5,45(,R5)        POINT TO NEXT ENTRY.
         LA    R6,1(,R6)         POINT TO NEXT ENTRY'S APF FLAG.
         LA    R8,1(,R8)         POINT TO NEXT ENTRY'S 1ST EXTENT NO.
         BCT   R4,NXTLNKLB       GET NEXT ENTRY.
         B     ENDOFLIB          END OF LIBRARY LIST REACHED.
         SPACE
LISTPACK L     R3,CVTPTR(,0)     POINT TO CVT.
         USING CVT,R3
         L     R3,CVTSMEXT       POINT TO STORAGE MAP EXTENSION.
         DROP  R3                CVT.
         USING CVTVSTGX,R3
         L     R3,CVTEPLPS       POINT TO LINK PACK AREA LIST TABLE.
         DROP  R3                CVTVSTGX.
         L     R4,4(,R3)         GET NUMBER OF LINK PACK LIBRARIES.
         CVD   R4,WORK           DISPLAY NUMBER OF ENTRIES IN HEADING.
         MVC   HEADPAKL+59(4),ED3Z
         EDMK  HEADPAKL+59(4),WORK+6
         BCTR  R1,0              POINT TO BEFORE FIRST DIGIT.
         MVI   0(R1),C'('        TIDY UP BRACKETS.
         LA    R5,8(,R3)         POINT TO FIRST ENTRY.
         LA    R1,1              ONE.
         CR    R1,R4             ONE ENTRY?
         BNE   LPAHDGOK          NO, PLURAL.
         MVC   HEADPAKL+68(4),=C'Y)  '
LPAHDGOK MVC   LL-79(79,R2),HEADPAKL  LOAD HEADING.
         BAS   R14,LADDLINE      LINE NOW COMPLETE.
NXTPAKLB MVC   0(L'LOWX,R2),LOWX SUPPLY ATTRIBUTE BYTES.
         MVC   9(79,R2),BLANKS   BLANK THE LINE.
         MVC   34(44,R2),1(R5)   LOAD LPA LIST LIBRARY NAME.
         BAS   R14,LADDLINE      LINE NOW COMPLETE.
         LA    R5,45(,R5)        POINT TO NEXT ENTRY.
         BCT   R4,NXTPAKLB       GET NEXT ENTRY.
         SPACE
ENDOFLIB ST    R4,APFDELNO       CLEAR ANY REMOVAL ENTRY NUMBER.
         BAS   R1,SYSUMMRY       PRODUCE & SHOW SYSTEM SUMMARY LINE.
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         LA    R1,1
         A     R1,WINLINES       INCREMENT LINE COUNTER.
         ST    R1,WINLINES
         MVC   0(2,R2),FFFF+2    SET FINAL LINE FLAG FOR WINDOW DATA.
         DROP  R15               WNDWMNGR.
PUTSCRNL LA    R0,LL             MAKE REGISTER 0 POSITIVE FOR OUTPUT.
GETSCRNL L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         BASR  R14,R15           CALL WINDOW MANAGER.
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         MVI   WINSUFLN,X'FF'    NEGATE DATA STREAM SUFFIX LENGTH CODE.
         DROP  R15               WNDWMNGR.
         MVI   HOME,X'C1'        RESET THE BELL FLAG IN THE WCC.
         CLI   DOWNCNTR,C' '     ARE WE IN AUTO REFRESH MODE?
         BH    REDOLIST          YES, BRANCH TO NEW SCREEN LOGIC.
CMDSCANL MVC   WORK(1),LISTFLAG  SAVE OLD LIST TYPE FLAG.
         CLI   INCHARS,C' '      CONTINUE REQUESTED?
         BE    REDOLIST          YES.
         MVC   LISTFLAG,INCHARS  UPDATE LIST TYPE FLAG.
         CLI   INCHARS,C'A'      APF LIBRARY DISPLAY REQUEST?
         BE    REDOLIST          YES.
         CLI   INCHARS,C'L'      LINK LIST DISPLAY REQUEST?
         BE    REDOLIST          YES.
         CLI   INCHARS,C'P'      LINK PACK AREA LIST DISPLAY REQUEST?
         BE    REDOLIST          YES.
         MVC   LISTFLAG,WORK     INVALID SO RESTORE OLD LIST TYPE FLAG.
         L     R15,ATHTBADR      POINT TO FEATURE AUTHORIZATION TABLE.
         MVC   OPTNATR,C'V'-C' '(R15)  COPY CUSTOMIZABLE BYTE.
         NC    OPTNATR,C'V'(R15)       MASK CUSTOMIZABLE BYTE.
         OC    OPTNATR,C'L'-C' '(R15)  GATE CUSTOMIZABLE BYTE.
         NI    OPTNATR,X'F8'     RESET INVALID BITS.
         OC    OPTNATR,COPYATR1  TURN ON THIS USER'S BITS.
         TM    OPTNATR,X'FA'     SUITABLY AUTHORIZED?
         BNO   GIVEHLPL          NO, CAN'T FIDDLE WITH SQA AND CVT.
         CLI   INCHARS+1,C'A'    APF LIBRARY LIST UPDATE REQUESTED?
         BNE   LINKCHEK          NO.
         CSVAPF REQUEST=QUERYFORMAT,FORMAT=APFLTYPE
         CLI   INCHARS,C'R'      RESET APF LIBRARY LIST REQUESTED?
         BNE   LCHECKXA          NO.
         MVI   LISTFLAG,C'A'     DISPLAY APF LIBRARIES AFTERWARDS.
         TM    APFLTYPE,X'FF'    IS THE DYNAMIC FORMAT IN FORCE?
         BM    LFMTFAIL          YES, NOT SUPPORTED.
         ENQ   (LMAJORQ,LMINORQ,E,L'LMINORQ,SYSTEM),RET=USE
         LTR   R15,R15           SOMEONE ELSE ALREADY DOING THIS?
         BNZ   LENQFAIL          YES, FAIL THE REQUEST.
         MVI   ENDDEPTH+1,1      ALLOW PF3/15 TO CANCEL THE REQUEST.
         LA    R0,LCONMSGL
         LA    R1,LCONFIRM
         BAS   R14,SCREENIO      CALL SCREEN I/O HANDLER.
         CLI   ENDDEPTH+1,0      REQUEST TO BE CANCELLED?
         BE    LDEQREDO          YES.
         CLI   INBUFF,13         WAS ENTER SELECTED?
         BNE   LDEQREDO          NO, ABORT APF LIBRARY LIST RESET.
         LA    R1,ARMSG          PREPARE TO SAY THAT THIS IS ALREADY
         LA    R0,ARMSGLEN-1     THE IPL-TIME APF LIBRARY LIST.
         L     R3,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R3
         L     R6,CVTAUTHL       POINT TO THE AUTHORIZED LIBRARY TABLE.
         DROP  R3                CVT.
         LR    R5,R6
         SRL   R5,12
         SLL   R5,12
         CR    R5,R6             IS TABLE ORIGIN ON PAGE BOUNDARY?
         BE    MSGSCRNL          YES, PROBABLY ALREADY ALTERED BY TMON.
         LA    R5,40             GET THE PREFIX LENGTH.
         SR    R6,R5             POINT TO THE PREFIX, IF ANY.
         CLC   =CL8'APFALT  ',0(R6)    VALID PREFIX ID?
         BNE   MSGSCRNL          NO, SHOW MESSAGE.
         L     R15,PSATOLD       POINT TO THE CURRENT TCB.
         L     R15,12(,R15)      POINT TO THE TIOT.
         MVC   LXPRY66I+12(8),0(R15)   SUPPLY THE TSO USERID.
         MODESET MF=(E,MDSET0)   GET INTO KEY ZERO.
         WTO   MF=(E,LXPRY66I)   LOG THIS ALTERATION FOR THE RECORD.
         L     R1,36(,R6)        LOAD ADDRESS OF IPL-TIME TABLE.
         ST    R1,484(,R3)       RE-ACTIVATE IPL-TIME TABLE.
         LR    R1,R6             POINT TO DE-ACTIVATED TABLE'S PREFIX.
         LR    R0,R5             COPY THE LENGTH OF THE PREFIX.
         B     LFREEOLD          GO FREE THE DE-ACTIVATED TABLE.
LFMTFAIL LA    R1,CFMSG          TELL THE USER THAT THE DYNAMIC APF
         LA    R0,CFMSGLEN-1     LIBRARY MANAGEMENT IS NOT SUPPORTED.
         B     LPREFAIL
LENQFAIL LA    R1,EFMSG          TELL THE USER THAT ANOTHER USER
         LA    R0,EFMSGLEN-1     IS UPDATING THE SYSTEM STRUCTURES.
LPREFAIL L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         ST    R1,WINSUFIX
         ST    R0,WINSUFLN
         DROP  R15               WNDWMNGR.
         MVI   HOME,X'C5'        SOUND THE BELL.
         B     REDOLIST          MAKE A NEW SCREEN IMAGE.
LNOTLBLN LA    R1,WLMSG          TELL THE USER THAT THE CURSOR
         LA    R0,WLMSGLEN-1     WAS NOT ON A LINE CONTAINING AN
*        B     MSGSCRNL          APF AUTHORIZED LIBRARY TABLE ENTRY.
MSGSCRNL L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         ST    R1,WINSUFIX
         ST    R0,WINSUFLN
         DROP  R15               WNDWMNGR.
         MVI   HOME,X'C5'        SOUND THE BELL.
         B     LDEQREDO          MAKE A NEW SCREEN IMAGE.
LCHECKXA CLI   INCHARS,C'X'      EXTRA APF LIBRARY REQUESTED?
         BNE   LCHECKDA          NO.
         MVI   LISTFLAG,C'A'     DISPLAY APF LIBRARIES AFTERWARDS.
         TM    APFLTYPE,X'FF'    IS THE DYNAMIC FORMAT IN FORCE?
         BNM   LXADOENQ          NO, STATIC SO SERIALIZE WITH ENQ.
         MVC   ALVOLSER,=C'***SMS'   YES, PRIME WITH SMS-MANAGED FLAG.
         B     LXGETVOL
LXADOENQ ENQ   (LMAJORQ,LMINORQ,E,L'LMINORQ,SYSTEM),RET=USE
         LTR   R15,R15           SOMEONE ELSE ALREADY DOING THIS?
         BNZ   LENQFAIL          YES, FAIL THE REQUEST.
LXGETVOL MVI   ENDDEPTH+1,1      ALLOW PF3/15 TO CANCEL THE REQUEST.
         MVI   APFVPRMP,X'C1'    ISSUE PROMPT FOR VOLUME SERIAL NUMBER.
         LA    R0,ALVPRMPL
         LA    R1,APFVPRMP
         BAS   R14,SCREENIO      CALL SCREEN I/O HANDLER.
         CLI   ENDDEPTH+1,0      REQUEST TO BE CANCELLED?
         BE    LDEQREDO          YES.
         CLI   INBUFF+4,0        INPUT FROM THE FIRST SCREEN LINE?
         BE    LDEQREDO          YES, ABORT APF LIBRARY ADDITION.
         CLI   INBUFF,13         WAS ENTER SELECTED?
         BNE   LDEQREDO          NO, ABORT APF LIBRARY ADDITION.
         LH    R1,TGETLEN        GET THE LENGTH OF INPUT DATA STREAM.
         CHI   R1,12             TOO LONG?
         BH    LAVINVLD          YES, INVALID INPUT.
         CLI   INCHARS,C' '      BLANK OR NULL INPUT?
         BNH   LDEQREDO          YES, ABORT APF LIBRARY ADDITION.
         MVC   LXPRY65I+86(6),INCHARS SUPPLY THE VOLUME SERIAL NUMBER.
         TM    APFLTYPE,X'FF'    IS THE DYNAMIC FORMAT IN FORCE?
         BNM   LAXNOSMS          NO, SO NEED VALID VOLUME SERIAL.
         CLC   STARS(6),INCHARS      SYSTEM RESIDENCE VOLUME SPECIFIED?
         BE    LAXVOKAY          YES, SPECIAL VALUE OKAY.
         CLC   =C'*MCAT*',INCHARS    MASTERCATALOG VOLUME SPECIFIED?
         BE    LAXVOKAY          YES, SPECIAL VALUE OKAY.
         CLC   =C'***SMS',INCHARS    SMS-MANAGED SPECIFIED?
         BNE   LAXNOSMS          NO, VALIDATE VOLUME SERIAL NUMBER.
         XC    INCHARS(6),INCHARS    USE NULLS TO FLAG SMS.
         B     LAXVOKAY          SPECIAL VALUE OKAY.
LAXNOSMS CLC   INCHARS(6),STARS  NO, ASTERISKS SUPPLIED?
         BNE   LAXVLCHK          NO.
         L     R9,CVTPTR(,0)     YES, POINT TO THE CVT.
         USING CVT,R9
         L     R9,CVTSYSAD       POINT TO SYSTEM RESIDENCE UCB.
         DROP  R9                CVT.
         MVC   INCHARS(6),28(R9) LOAD VOLUME SERIAL OF SYSRES.
LAXVLCHK LA    R9,5              GET MAXIMUM LENGTH CODE OF VOLUME.
         LA    R1,INCHARS+5      POINT TO LAST POSSIBLE VOLUME CHAR.
LAXVLOOP CLI   0(R1),C' '        TRAILING BLANK?
         BNE   GOTXVLEN          NO, FOUND THE END OF VOLUME SERIAL.
         BCTR  R1,0              YES, BACK UP A BYTE.
         BCT   R9,LAXVLOOP
GOTXVLEN MVI   LAXTRTTB+C'.',X'FF'     PERIODS ARE NOT VALID.
         EX    R9,LAXTRT         VALID VOLUME SERIAL NUMBER?
         BZ    LAXVOKAY          YES.
LAVINVLD MVI   APFVPRMP,X'C5'    NO, REISSUE PROMPT WITH BELL.
         LA    R0,ALVERRLN
         B     LXGETVOL
LAXVOKAY MVC   WORK2,INCHARS     SAVE SUPPLIED VOLUME SERIAL NUMBER.
         MVI   LIBDPRMP,X'C1'    ISSUE PROMPT FOR DATA SET NAME.
         LA    R0,ALDPRMPL
LXGETDSN LA    R1,LIBDPRMP
         BAS   R14,SCREENIO      CALL SCREEN I/O HANDLER.
         CLI   ENDDEPTH+1,0      REQUEST TO BE CANCELLED?
         BE    LDEQREDO          YES.
         CLI   INBUFF+4,0        INPUT FROM THE FIRST SCREEN LINE?
         BE    LDEQREDO          YES, ABORT APF LIBRARY ADDITION.
         CLI   INBUFF,13         WAS ENTER SELECTED?
         BNE   LDEQREDO          NO, ABORT APF LIBRARY ADDITION.
         LH    R1,TGETLEN        GET THE LENGTH OF INPUT DATA STREAM.
         CHI   R1,50             TOO LONG?
         BH    LADINVLD          YES, INVALID INPUT.
         CLI   INCHARS,C' '      BLANK OR NULL INPUT?
         BNH   LDEQREDO          YES, ABORT APF LIBRARY ADDITION.
         CLI   INCHARS,C'.'      STARTING WITH A PERIOD?
         BE    LADINVLD          YES, INVALID.
         CLI   INCHARS,C'0'      STARTING WITH A NUMERIC CHARACTER?
         BNL   LADINVLD          YES, INVALID.
         LA    R9,43             NO, GET MAXIMUM LENGTH CODE OF DSNAME.
         LA    R1,INCHARS+43     POINT TO LAST POSSIBLE DSNAME CHAR.
LAXDLOOP CLI   0(R1),C' '        TRAILING BLANK?
         BNE   GOTXDLEN          NO, FOUND THE END OF DATA SET NAME.
         BCTR  R1,0              YES, BACK UP A BYTE.
         BCT   R9,LAXDLOOP
GOTXDLEN CLI   0(R1),C'.'        ENDING IN A PERIOD?
         BE    LADINVLD          YES, INVALID.
         MVI   LAXTRTTB+C'.',X'00'   PERIODS ARE VALID.
         EX    R9,LAXTRT         VALID DATA SET NAME?
         BZ    LAXDOKAY          HOPE SO - DID NOT VERIFY QUALIFIERS.
LADINVLD MVI   LIBDPRMP,X'C5'    NO, REISSUE PROMPT WITH BELL.
         LA    R0,ALDERRLN
         B     LXGETDSN
LAXDOKAY MVC   LXPRY65I+38(44),INCHARS  SUPPLY THE DATA SET NAME.
         TM    APFLTYPE,X'FF'    IS THE DYNAMIC FORMAT IN FORCE?
         BM    LAXDONEW          YES, DO THE NEW METHOD OF ADD.
         L     R3,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R3
         L     R3,CVTAUTHL       POINT TO THE AUTHORIZED LIBRARY TABLE.
         DROP  R3                CVT.
         SLR   R4,R4             ZERO DATA SET COUNTER.
         ST    R4,WORK           CLEAR SOME STORAGE.
         CLI   1(R3),255         MAXIMUM ENTRIES?
         BL    LXANTFUL          NO, TABLE IS NOT FULL.
         LA    R1,TFMSG          PLACE "TABLE FULL" MESSAGE IN
         LA    R0,TFMSGLEN-1     DATA STREAM SUFFIX.
         B     MSGSCRNL
LXANTFUL DS    0H
         MODESET MF=(E,MDSET0)   GET INTO KEY ZERO.
         LA    R5,2(,R3)         POINT TO FIRST ENTRY.
         ICM   R4,B'0001',1(R3)  GET NUMBER OF AUTHORIZED LIBRARIES.
         BZ    NOAPFLIB          THIS NUMBER IS NOUGHT.
         SLR   R1,R1
NXTAPFSZ IC    R1,0(,R5)         GET LENGTH OF ENTRY.
         LA    R5,1(R1,R5)       POINT PASSED THIS ENTRY.
         BCT   R4,NXTAPFSZ       GET NEXT ENTRY.
NOAPFLIB LA    R0,7+1+7+40(,R5)  PREPARE FOR NEW VOLUME AND PREFIX.
         AR    R0,R9             ADD DSN LENGTH CODE FOR NEW ENTRY.
         SRL   R0,3              ENSURE DOUBLEWORD BOUNDARY.
         SLL   R0,3
         SR    R0,R3             GET THE NEW TABLE SIZE.
         BAS   R14,LGETABLE      ACQUIRE STORAGE FOR THE NEW TABLE.
         LA    R14,40(,R1)       GET THE NEW ADDRESS, PAST THE PREFIX.
         LR    R15,R5            GET THE OLD ENDING ADDRESS.
         SR    R15,R3            GET THE OLD LENGTH.
         LR    R6,R3             COPY THE OLD ADDRESS.
         LR    R7,R15            COPY THE OLD LENGTH.
         MVCL  R14,R6            COPY THE OLD TABLE.
         MVC   1(6,R14),WORK2    LOAD IN THE NEW VOLUME SERIAL NUMBER.
         EX    R9,APFDSNLD       LOAD IN THE NEW DATA SET NAME.
         LA    R9,7(,R9)         GET THE NEW ENTRY'S LENGTH INDICATOR.
         STC   R9,0(,R14)        LOAD IT INTO THE NEW TABLE.
         LR    R6,R1             COPY THE NEW PREFIX ADDRESS.
         SLR   R15,R15
         IC    R15,41(,R6)       GET THE OLD APF LIBRARY COUNT.
         LA    R15,1(,R15)       GET THE NEW APF LIBRARY COUNT.
         STC   R15,41(,R6)       SAVE IT.
         WTO   MF=(E,LXPRY65I)   LOG THIS ALTERATION FOR THE RECORD.
APFINALE L     R15,CVTPTR(,0)    POINT TO THE CVT.
         USING CVT,R15
         LA    R1,40(,R6)        POINT TO THE NEW TABLE.
         ST    R1,CVTAUTHL       ACTIVATE THE NEW TABLE.
         DROP  R15               CVT.
         LR    R1,R3             GET THE OLD TABLE ADDRESS.
         SRL   R1,12
         SLL   R1,12
         CR    R1,R3             IS TABLE ORIGIN ON PAGE BOUNDARY?
         BE    LXAALLDN          YES, PROBABLY ALREADY ALTERED BY TMON.
         LR    R1,R3             GET THE OLD TABLE ADDRESS.
         LA    R0,40             GET THE PREFIX LENGTH.
         SR    R1,R0             GET OLD PREFIX ADDRESS.
         CLC   =CL8'APFALT  ',0(1)   ORIGINAL IPL APF LIST?
         BNE   LXAALLDN          YES, UPDATE NOW COMPLETE.
         MVC   36(4,R6),36(R1)   NO, COPY IPL TABLE ADDRESS.
LFREEOLD A     R0,32(,R1)        ADD OLD TABLE SIZE TO PREFIX SIZE.
         FREEMAIN RU,LV=(0),A=(1),SP=245       FREE THE OLD TABLE.
LXAALLDN DS    0H
         MODESET MF=(E,MDSETN0)  RETURN TO PROBLEM KEY.
LDEQREDO TM    APFLTYPE,X'FF'    IS THE DYNAMIC FORMAT IN FORCE?
         BM    REDOLIST          YES, THERE IS NO ENQ TO DEQ.
         DEQ   (LMAJORQ,LMINORQ,L'LMINORQ,SYSTEM),RET=NONE
         B     REDOLIST          DISPLAY NEW APF LIBRARY STATUS.
LAXDONEW DS    0H
         MODESET MF=(E,MDSTSUP)  GET INTO SUPERVISOR STATE.
         L     R15,PSATOLD       POINT TO THE CURRENT TCB.
         L     R15,12(,R15)      POINT TO THE TIOT.
         MVC   LXPRY65I+12(8),0(R15)   SUPPLY THE TSO USERID.
         LA    R3,LXPRY65I       POINT TO WTO REQUIRED TO LOG CHANGE.
         CSVAPF REQUEST=ADD,DSNAME=INCHARS,VOLTYPE=ANY,VOLUME=WORK2
LCSVAPFX STM   R15,R0,WORK       SAVE RETURN AND REASON CODE.
         LTR   R15,R15           SUCCESS?
         BNZ   LCSVWTOX          NO, SKIP WRITE-TO-OPERATOR.
         WTO   MF=(E,(R3))       YES, ISSUE MESSAGE TO LOG THE CHANGE.
LCSVWTOX MODESET MF=(E,MDSTPRB)  RETURN TO PROBLEM STATE.
         ICM   R15,15,WORK       WAS RETURN CODE ZERO?
         BZ    REDOLIST          YES, DISPLAY NEW APF LIBRARY STATUS.
         UNPK  CTMSGTXT+11(3),WORK+3(2)
         UNPK  CTMSGTXT+14(9),WORK+4(5)
         TR    CTMSGTXT+11(11),HEX-C'0'
         MVI   CTMSGTXT+13,C'-'
         MVI   CTMSGTXT+22,C' '  SHOW RETURN CODE AND REASON CODE.
         LA    R1,CTMSG          PLACE "CSV TRIED" MESSAGE IN
         LA    R0,CTMSGLEN-1     DATA STREAM SUFFIX.
         MVC   CTMSGTXT+24(15),BLANKS
         CLI   WORK+3,4          WAS THE RETURN CODE FOUR?
         BNE   LCSVEROR          NO.
         MVI   CTMSG+7,X'F6'     YES, YELLOW FOR WARNING.
         CLI   WORK+7,2          REASON MORE THAN 0402?
         BH    MSGSCRNL          YES, DON'T KNOW WHAT IT MEANS.
         CLI   WORK+7,1          REASON LESS THAN 0401?
         BL    MSGSCRNL          YES, DON'T KNOW WHAT IT MEANS.
         MVC   CTMSGTXT+24(13),=C'ALREADY ADDED'
         BE    MSGSCRNL          REASON WAS 0401.
         MVC   CTMSGTXT+24(15),=C'ENTRY NOT FOUND'
         B     MSGSCRNL          REASON WAS 0402.
LCSVEROR MVI   CTMSG+7,X'F2'     RED FOR ERROR.
         CLI   WORK+7,4          DID SECURITY REFUSED AUTHORIZATION?
         BNE   MSGSCRNL          NO, AT LEAST THAT WASN'T THIS PROB.
         MVC   CTMSGTXT+24(13),=C'ACCESS DENIED'
         B     MSGSCRNL          REASON WAS 0804.
LCHECKDA CLI   INCHARS,C'D'      DELETE APF LIBRARY REQUESTED?
         BNE   GIVEHLPL          NO.
         TM    APFLTYPE,X'FF'    IS THE DYNAMIC FORMAT IN FORCE?
         BM    LDAENQOK          YES, SKIP THE ENQUEUE.
         ENQ   (LMAJORQ,LMINORQ,E,L'LMINORQ,SYSTEM),RET=USE
         LTR   R15,R15           SOMEONE ELSE ALREADY DOING THIS?
         BNZ   LENQFAIL          YES, FAIL THE REQUEST.
LDAENQOK CLI   LISTFLAG,C'A'     DISPLAYING APF LIBRARIES?
         BNE   LNOTLBLN          NO, DISPLAY ERROR MESSAGE.
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         SLR   R1,R1             CLEAR FOR INSERT.
         IC    R1,INBUFF+1       GET RELATIVE LINE NUMBER OF CURSOR.
         CH    R1,WINHDGCT       CURSOR ON A HEADING LINE?
         BNH   LNOTLBLN          YES, DISPLAY ERROR MESSAGE.
         BCTR  R1,0
         BCTR  R1,0
         A     R1,WINTOP         CONVERT TO WINDOW LINE NUMBER.
         C     R1,WINLINES       CURSOR AFTER LAST LINE?
         BNL   LNOTLBLN          YES, DISPLAY ERROR MESSAGE.
         LR    R0,R1             COPY ENTRY NUMBER.
         MH    R1,WINLNLEN       NO, GET AN INDEX INTO WINDOW AREA.
         A     R1,WINBUFF        POINT TO DETAIL LINE CONTENTS.
         DROP  R15               WNDWMNGR.
         CLI   8(R1),X'F5'       CURSOR ON SUMMARY LINE?
         BNE   LNOTLBLN          YES, DISPLAY ERROR MESSAGE.
         MVC   ARDSNAME,34(R1)   COPY DATA SET NAME.
         MVC   ARVOLUME,19(R1)   COPY VOLUME SERIAL NUMBER.
         MVC   ARSMSFLG,BLANKS   CLEAR SMS STATUS INDICATOR.
         CLI   28(R1),C'Y'       SMS-MANAGED?
         BNE   LADNDPTH          NO.
         MVC   ARSMSFLG,=C'(SMS)'
LADNDPTH MVI   ENDDEPTH+1,1      ALLOW PF3/15 TO CANCEL THE REQUEST.
         TM    APFLTYPE,X'FF'    IS THE DYNAMIC FORMAT IN FORCE?
         BM    LADCNFRM          YES, APF TABLE SCAN.
         L     R3,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R3
         L     R3,CVTAUTHL       POINT TO THE AUTHORIZED LIBRARY TABLE.
         DROP  R3                CVT.
         SLR   R1,R1
         IC    R1,1(,R3)         GET NUMBER OF AUTHORIZED LIBRARIES.
         BCTR  R0,0              GET RELATIVE ENTRY NUMBER TO DELETE.
         SR    R1,R0             GET "INVERSE" (BCT) ENTRY NUMBER.
         BNP   LDEQREDO          JUST IN CASE OF REALITY FAILURE.
         ST    R1,APFDELNO       SAVE THE "ENTRY NUMBER" TO DELETE.
LADCNFRM LA    R0,ARDPRMPL       ISSUE CONFIRMATION REQUEST.
         LA    R1,APFRPRMP
         BAS   R14,SCREENIO      CALL SCREEN I/O HANDLER.
         CLI   ENDDEPTH+1,0      REQUEST TO BE CANCELLED?
         BE    LDEQREDO          YES.
         CLI   INBUFF,13         WAS ENTER SELECTED?
         BNE   LDEQREDO          NO, ABORT APF LIBRARY REMOVAL.
         TM    APFLTYPE,X'FF'    IS THE DYNAMIC FORMAT IN FORCE?
         BNM   LDOLDWAY          NO, DO THINGS THE "OLD" WAY.
         L     R15,PSATOLD       POINT TO THE CURRENT TCB.
         L     R15,12(,R15)      POINT TO THE TIOT.
         MVC   LXPRY67I+12(8),0(R15)   SUPPLY THE TSO USERID.
         MVC   LXPRY67I+40(44),ARDSNAME SUPPLY THE DATA SET NAME.
         MVC   LXPRY67I+88(6),ARVOLUME SUPPLY THE VOLUME SERIAL NUMBER.
         MVC   WORK2(6),ARVOLUME SUPPLY THE VOLUME SERIAL NUMBER.
         CLI   ARSMSFLG+2,C'S'   SMS-MANAGED SPECIFIED?
         BNE   LADNOSMS          NO, VALIDATE VOLUME SERIAL NUMBER.
         XC    WORK2,WORK2       USE NULLS TO FLAG SMS.
LADNOSMS LA    R3,LXPRY67I       POINT TO WTO REQUIRED TO LOG CHANGE.
         CSVAPF REQUEST=DELETE,  ATTEMPT TO DELETE THE ENTRY.          +
               DSNAME=ARDSNAME,VOLTYPE=ANY,VOLUME=WORK2
         B     LCSVAPFX          HANDLE CONSEQUENCES OF CSVAPF MACRO.
LDOLDWAY LA    R5,2(,R3)         POINT TO FIRST ENTRY.
         SLR   R4,R4
         ICM   R4,B'0001',1(R3)  GET NUMBER OF AUTHORIZED LIBRARIES.
         BZ    LDEQREDO          THIS NUMBER IS NOUGHT - CAN'T HAPPEN.
         MODESET MF=(E,MDSET0)   GET INTO KEY ZERO.
         SLR   R1,R1
         LA    R6,2              INITIALIZE TABLE LENGTH ACCUMULATOR.
APFSIZLP IC    R1,0(,R5)         GET LENGTH OF ENTRY.
         C     R4,APFDELNO       IS THIS THE ENTRY TO REMOVE?
         BE    DELSIZOK          YES, DO NOT ADD THIS ENTRY'S LENGTH.
         LA    R6,1(R1,R6)       NO, ACCUMULATE TABLE LENGTH.
DELSIZOK LA    R5,1(R1,R5)       POINT PASSED THIS ENTRY.
         BCT   R4,APFSIZLP       GET NEXT ENTRY.
         LA    R0,7+1+40(,R6)    PREPARE FOR NEW TABLE GETMAIN.
         SRL   R0,3              ENSURE DOUBLEWORD BOUNDARY.
         SLL   R0,3
         BAS   R14,LGETABLE      ACQUIRE STORAGE FOR THE NEW TABLE.
         LA    R5,2(,R3)         POINT TO FIRST ENTRY.
         LA    R6,2+40(,R1)      POINT TO FIRST NEW ENTRY.
         SLR   R4,R4
         ICM   R4,B'0001',1(R3)  GET NUMBER OF AUTHORIZED LIBRARIES.
         SLR   R15,R15
APFCPYLP IC    R15,0(,R5)        GET LENGTH OF ENTRY.
         C     R4,APFDELNO       IS THIS THE ENTRY TO REMOVE?
         BNE   APFDOCPY          NO, GO COPY THIS ENTRY.
         MVC   LXPRY67I+40(44),BLANKS   SUPPLY THE DATA SET NAME.
         LA    R0,7
         SR    R15,R0            GET DATA SET NAME LENGTH CODE.
         EX    R15,APFNMCPY      LOAD DATA SET NAME INTO MESSAGE.
         AR    R15,R0            RESTORE ENTRY LENGTH.
         MVC   LXPRY67I+88(6),1(R5)   SUPPLY THE VOLUME SERIAL NUMBER.
         B     APFCPYOK          YES, DO NOT ADD THIS ENTRY'S LENGTH.
APFNMCPY MVC   LXPRY67I+40(0),7(R5)             <<< EXECUTED >>>.
APFDOCPY EX    R15,APFNTCPY      COPY THE WHOLE ENTRY.
         LA    R6,1(R15,R6)      POINT PAST THE NEW ENTRY.
APFCPYOK LA    R5,1(R15,R5)      POINT PAST THE OLD ENTRY.
         BCT   R4,APFCPYLP       GET NEXT ENTRY.
         ICM   R4,B'0011',0(R3)  GET NUMBER OF AUTHORIZED LIBRARIES.
         BCTR  R4,0              THERE IS ONE LESS NOW.
         LR    R6,R1             COPY NEW PREFIX ADDRESS.
         STH   R4,40(,R6)        SAVE NEW ENTRY COUNT.
         WTO   MF=(E,LXPRY67I)   LOG THIS ALTERATION FOR THE RECORD.
         B     APFINALE          COMPLETE THE HOUSEKEEPING.
APFNTCPY MVC   0(0,R6),0(R5)                    <<< EXECUTED >>>
LINKCHEK CLI   INCHARS+1,C'L'    LINK LIST UPDATE REQUESTED?
         BNE   GIVEHLPL          NO.
*                                OS/390 R2 OR LATER?
         TM    OSLEVEL+1,CVTOS390_R2
         BO    GIVEHLPL          YES, NOT SUPPORTED.
         CLI   INCHARS,C'X'      EXTRA LINK LIST LIBRARY REQUESTED?
         BNE   LCHECKRL          NO.
         MVI   LISTFLAG,C'L'     DISPLAY LINKLIST LIBRARIES AFTERWARDS.
         ENQ   (LMAJORQ,LMINORQ,E,L'LMINORQ,SYSTEM),RET=USE
         LTR   R15,R15           SOMEONE ELSE ALREADY DOING THIS?
         BNZ   LENQFAIL          YES, FAIL THE REQUEST.
         BAS   R14,LLACHECK      CHECK TO SEE IF LLA IS ACTIVE.
         MVI   ENDDEPTH+1,1      ALLOW PF3/15 TO CANCEL THE REQUEST.
         MVI   LIBDPRMP,X'C1'    ISSUE PROMPT FOR DATA SET NAME.
         LA    R0,ALDPRMPL
LLGETDSN LA    R1,LIBDPRMP
         BAS   R14,SCREENIO      CALL SCREEN I/O HANDLER.
         CLI   ENDDEPTH+1,0      REQUEST TO BE CANCELLED?
         BE    LDEQREDO          YES.
         CLI   INBUFF+4,0        INPUT FROM THE FIRST SCREEN LINE?
         BE    LDEQREDO          YES, ABORT LINK LIST LIBRARY ADDITION.
         CLI   INBUFF,13         WAS ENTER SELECTED?
         BNE   LDEQREDO          NO, ABORT LINK LIST LIBRARY ADDITION.
         LH    R1,TGETLEN        GET THE LENGTH OF INPUT DATA STREAM.
         CHI   R1,50             TOO LONG?
         BH    LLDINVLD          YES, INVALID INPUT.
         CLI   INCHARS,C' '      BLANK OR NULL INPUT?
         BNH   LDEQREDO          YES, ABORT LINK LIST LIBRARY ADDITION.
         CLI   INCHARS,C'.'      STARTING WITH A PERIOD?
         BE    LLDINVLD          YES, INVALID.
         CLI   INCHARS,C'0'      STARTING WITH A NUMERIC CHARACTER?
         BNL   LLDINVLD          YES, INVALID.
         LA    R9,43             NO, GET MAXIMUM LENGTH CODE OF DSNAME.
         LA    R1,INCHARS+43     POINT TO LAST POSSIBLE DSNAME CHAR.
LALDLOOP CLI   0(R1),C' '        TRAILING BLANK?
         BNE   GOTLDLEN          NO, FOUND THE END OF DATA SET NAME.
         BCTR  R1,0              YES, BACK UP A BYTE.
         BCT   R9,LALDLOOP
GOTLDLEN CLI   0(R1),C'.'        ENDING IN A PERIOD?
         BE    LLDINVLD          YES, INVALID.
         MVI   LAXTRTTB+C'.',X'00'   PERIODS ARE VALID.
         EX    R9,LAXTRT         VALID DATA SET NAME?
         BZ    LALDOKAY          HOPE SO.
LLDINVLD MVI   LIBDPRMP,X'C5'    NO, REISSUE PROMPT WITH BELL.
         LA    R0,ALDERRLN
         B     LLGETDSN
LALDOKAY MVC   DSNAMLA,INCHARS   SUPPLY DATA SET NAME.
         MVC   RTDDNLA,BLANKS    CLEAR DATA DEFINTION NAME.
         LA    R1,LINKALOC       POINT TO DYNALLOC PARAMETER LIST.
         DYNALLOC                ALLOCATE THE DATA SET.
         LTR   R15,R15           WAS ALLOCATION SUCCESSFUL?
         BZ    LLUSELIB          YES, PROCESS IT.
         STC   R15,WORK          STORE THE RETURN CODE.
         UNPK  LAMSGTXT+13(3),WORK(2)  DISPLAY DYNALLOC RETURN AND
         TR    LAMSGTXT+13(2),HEX-C'0' ERROR AND INFORMATION CODES.
         MVI   LAMSGTXT+15,C' '
         UNPK  LAMSGTXT+17(5),ERRORLA(3)
         TR    LAMSGTXT+17(4),HEX-C'0'
         MVI   LAMSGTXT+21,C' '
         UNPK  LAMSGTXT+23(5),INFOLA(3)
         TR    LAMSGTXT+23(4),HEX-C'0'
         MVI   LAMSGTXT+27,C' '
         LA    R1,LAMSG          TELL THE USER THAT THE LINK LIST
         LA    R0,LAMSGLEN-1     LIBRARY CANDIDATE COULD NOT BE
         B     MSGSCRNL          ALLOCATED.
LLUSELIB MVC   DDNAMLF,RTDDNLA   REMEMBER FILE TO BE FREED LATER.
         SLR   R0,R0             CLEAR FOR INSERTS.
         L     R5,PSATOLD        GET POINTER TO CURRENT TCB.
         L     R5,12(0,R5)       POINT TO TIOT.
         LA    R5,24(0,R5)       POINT TO TIOELNGH.
LLDDSCAN CLC   4(8,R5),RTDDNLA
         BE    HAVELLDD          FILE EXISTS SO GO AND USE IT.
         IC    R0,0(0,R5)        GET TIOT ENTRY LENGTH.
         ALR   R5,R0             POINT TO NEXT TIOT ENTRY.
         CLI   0(R5),0           ZERO LENGTH ENTRY?
         BNE   LLDDSCAN          NO, CHECK OUT THIS ENTRY.
         DC    H'193'            ABEND S0C1 SHOULD NOT HAPPEN.
HAVELLDD MVC   LLUCBAD+1(3),17(R5) GET UCB ADDRESS OF "NEW" LIBRARY.
         LA    R1,LINKFREE       POINT TO DYNALLOC PARAMETER LIST.
         DYNALLOC                FREE THE DATA SET.
         LA    R15,VTOCNAME      POINT TO THE DATA SET NAME OF VTOC.
         L     R1,LLUCBAD        POINT TO THE UCB.
         LA    R0,28(,R1)        POINT TO THE VOLUME SERIAL NUMBER.
         LA    R1,SECWORKA       POINT TO DSCB1 RETRIEVAL AREA.
         STM   R15,R1,LOBTSRCH+4 SAVE IN OBTAIN PARAMETER LIST.
         OBTAIN LOBTSRCH         OBTAIN FORMAT-4 DSCB.
         LTR   R15,R15           DID IT WORK?
         BNZ   LBADLIB           NO, DATA SET NOT SUPPORTED.
         MVC   LCYLTRKS,SECWORKA+20  SAVE TRACKS PER CYLINDER.
         LA    R15,DSNAMLA       POINT TO THE DATA SET NAME.
         MVC   LXPRY68I+44(44),0(R15)  SUPPLY THE DATA SET NAME.
         L     R1,LLUCBAD        POINT TO THE UCB.
         LA    R0,28(,R1)        POINT TO THE VOLUME SERIAL NUMBER.
         LA    R1,SECWORKA       POINT TO DSCB1 RETRIEVAL AREA.
         STM   R15,R1,LOBTSRCH+4 SAVE IN OBTAIN PARAMETER LIST.
         OBTAIN LOBTSRCH         OBTAIN FORMAT-1 DSCB.
         LTR   R15,R15           DID IT WORK?
         BNZ   LBADLIB           NO, DATA SET NOT SUPPORTED.
         TM    SECWORKA-44+82,2  DSORG=PO?
         BNO   LBADLIB           NO, DATA SET NOT SUPPORTED.
         CLI   SECWORKA-44+59,0  ANY EXTENTS?
         BE    LBADLIB           NO, DATA SET NOT SUPPORTED.
         CLI   SECWORKA-44+59,16 MORE THAN 16 EXTENTS?
         BH    LBADLIB           YES, DATA SET NOT SUPPORTED.
         CLI   SECWORKA-44+59,4  MORE THAN 3 EXTENTS?
         BL    LDSCB3OK          NO, FORMAT-3 DSCB TO FETCH.
         LA    R15,SECWORKA-44+135 POINT TO THE FORMAT-3 CCHHR.
         L     R1,LLUCBAD        POINT TO THE UCB.
         LA    R0,28(,R1)        POINT TO THE VOLUME SERIAL NUMBER.
         LA    R1,SECWORKA+100   POINT TO DSCB3 RETRIEVAL AREA.
         STM   R15,R1,LOBTSEEK+4 SAVE IN OBTAIN PARAMETER LIST.
         OBTAIN LOBTSEEK         OBTAIN FORMAT-3 DSCB.
         LTR   R15,R15           DID IT WORK?
         BNZ   LBADLIB           NO, DATA SET NOT SUPPORTED.
LDSCB3OK L     R3,CVTPTR(,0)     POINT TO CVT.
         USING CVT,R3
         L     R3,CVTLINK        POINT TO THE LINK LIST DCB.
         DROP  R3                CVT.
         USING IHADCB,R3
         ICM   R3,7,DCBDEBA      POINT TO THE LINK LIST DEB.
         DROP  R3                DCB.
         MODESET MF=(E,MDSET0)   GET INTO KEY ZERO.
         USING DEBBASIC,R3
         SLR   R1,R1
         IC    R1,DEBNMEXT       GET THE EXTENT COUNT.
         LR    R0,R1             COPY IT.
         IC    R1,SECWORKA-44+59 GET THE COUNT OF EXTENTS TO BE ADDED.
         AR    R0,R1             GET THE NEW TOTAL EXTENT COUNT.
         CHI   R0,255            MORE THAN 255 EXTENTS?
         BH    LBADPROB          YES, CAN'T DO IT.
         SLL   R0,4              MULTIPLY BY SIXTEEN.
         IC    R1,DEBAMLNG       GET OLD BPAM SECTION LENGTH.
         AR    R1,R0             ACCUMULATE IT.
         LA    R0,40+32+7+1(,R1) COUNT PREFIX, DEB BASE AND ROUND.
         SRL   R0,3
         SLL   R0,3
         BAS   R14,LGETABLE      ACQUIRE STORAGE FOR THE NEW TABLE.
         MVC   0(8,R1),=CL8'LKLSTALT'    CORRECT THE PREFIX ID.
         LA    R6,40(,R1)        POINT TO NEW DEB.
         ST    R6,WORK2          SAVE NEW DEB BASE ADDRESS.
         MVC   0(32,R6),DEBBASIC COPY DEB BASE.
         SLR   R0,R0
         IC    R0,DEBNMEXT       GET OLD DEB EXTENT COUNT.
         DROP  R3                DEBBASIC.
         LA    R3,32(,R3)        POINT TO OLD DEB EXTENT LIST.
         LA    R6,32(,R6)        POINT TO NEW DEB EXTENT LIST.
LLXTNTLP MVC   0(16,R6),0(R3)    COPY ONE EXTENT.
         LA    R3,16(,R3)        POINT TO NEXT EXTENT.
         LA    R6,16(,R6)        POINT TO NEXT EXTENT.
         BCT   R0,LLXTNTLP       PROCESS NEXT EXTENT.
         IC    R0,SECWORKA-44+59 GET THE COUNT OF EXTENTS TO BE ADDED.
         LA    R4,SECWORKA-44+105    POINT TO DS1EXT1.
         SLR   R15,R15           CLEAR EXTENT COUNTER.
LLNEWXLP LA    R15,1(,R15)       INCREMENT EXTENT COUNTER.
         CHI   R15,4             UP TO EXTENT NUMBER 4?
         BE    LUSEFMT3          YES.
         CHI   R15,8             UP TO EXTENT NUMBER 8?
         BNE   LEXTOKAY          NO.
         LA    R4,SECWORKA+145   POINT TO DATA PART PAST ID OF DSCB-3.
         B     LEXTOKAY
LUSEFMT3 LA    R4,SECWORKA+104   POINT TO KEY PART PAST ID OF DSCB-3.
LEXTOKAY MVC   0(4,R6),LLUCBAD   SUPPLY UCB ADDRESS.
         TM    0(R4),X'80'       ALLOCATED IN CYLINDERS?
         BO    LFILEMSK          YES, LEAVE FILE MASK AS ZERO.
         MVI   0(R6),X'18'       NO, UPDATE FILE MASK.
LFILEMSK STCM  R0,12,4(R6)       ZERO OUT BIN NUMBER.
         MVC   6(8,R6),2(R4)     COPY START CCHH AND END CCHH.
         LH    R14,10(,R6)       GET END CC.
         SH    R14,6(,R6)        SUBTRACT START CC.
         SLL   R14,16            ENSURE CYLINDER COUNT IS
         SRL   R14,16            NON-NEGATIVE.
         MH    R14,LCYLTRKS      CONVERT CYLINDERS TO TRACKS.
         AH    R14,12(,R6)       ADD END HH.
         SH    R14,8(,R6)        SUBTRACT START HH.
         LA    R14,1(,R14)       COUNT FIRST TRACK.
         STH   R14,14(,R6)       SAVE EXTENT TRACK COUNT.
         LA    R4,10(,R4)        POINT TO NEXT EXTENT IN DSCB.
         LA    R6,16(,R6)        POINT TO NEXT EXTENT IN DEB.
         BCT   R0,LLNEWXLP       PROCESS NEXT EXTENT.
         IC    R15,4+40(,R1)     GET BPAM SECTION LENGTH.
         BCTR  R15,0             DECREMENT FOR EXECUTE.
         EX    R15,LCOPYDIR      COPY DIRECTORY EXTENT NUMBERS.
         LA    R6,1(R15,R6)      POINT PAST DATA JUST LOADED.
         MVC   0(1,R6),16+40(R1) OLD EXTENTS IS NEW DIRECTORY EXTENT.
         LA    R15,1+1(,R15)     GET NEW BPAM SECTION LENGTH.
         STC   R15,4+40(,R1)     SAVE DATA SET COUNT MINUS ONE.
         IC    R15,16+40(,R1)    GET OLD EXTENT COUNT.
         IC    R0,SECWORKA-44+59 GET EXTENT COUNT OF NEW DATA SET.
         AR    R15,R0            GET NEW EXTENT COUNT.
         STC   R15,16+40(,R1)    UPDATE EXTENT COUNT IN NEW DEB.
*
         L     R3,CVTPTR(,0)     POINT TO CVT.
         USING CVT,R3
         L     R3,CVTLLTA        POINT TO THE LINK LIST TABLE.
         DROP  R3
         L     R4,4(,R3)         GET CURRENT LINK LIST DATA SET COUNT.
         LA    R4,1(,R4)         INCREMENT FOR NEW DATA SET.
         MHI   R4,46             GET TABLE SIZE.
         LA    R0,40+8+7(,R4)    ALLOW FOR PREFIX AND ROUND.
         SRL   R0,3
         SLL   R0,3
         BAS   R14,LGETABLE      ACQUIRE STORAGE FOR THE NEW TABLE.
         MVC   0(8,R1),=CL8'LKLSTALT'    CORRECT THE PREFIX ID.
         LA    R4,40(,R1)        POINT PAST NEW PREFIX.
         ST    R4,WORK2+4        SAVE NEW TABLE ADDRESS.
         MVC   0(8,R4),0(R3)     COPY LIST HEADER ('LLT ') AND COUNT.
         L     R0,4(,R3)         GET OLD LIST ENTRY COUNT.
LLLTCOPY MVC   8(45,R4),8(R3)    COPY ENTRY TO NEW LIST.
         LA    R3,45(,R3)        ADJUST OLD POINTER.
         LA    R4,45(,R4)        ADJUST NEW POINTER.
         BCT   R0,LLLTCOPY       PROCESS NEXT ENTRY.
         MVC   9(44,R4),DSNAMLA  APPEND NEW DATA SET NAME.
         LA    R15,8+44(,R4)     POINT TO LAST BYTE OF DATA SET NAME.
         LA    R0,44             GET MAXIMUM DATA SET NAME LENGTH.
LLBLNKLP CLI   0(R15),C' '       TRAILING BLANK AFTER DATA SET NAME?
         BNE   LLDSNLEN          NO, NOW KNOW DATA SET NAME LENGTH.
         BCTR  R15,0             YES, BACK UP ONE CHARACTER.
         BCT   R0,LLBLNKLP       CHECK FOR ANOTHER TRAILING BLANK.
LLDSNLEN STC   R0,8(,R4)         SUPPLY LENGTH OF NEW DATA SET NAME.
         LA    R4,45(,R4)        ADJUST NEW POINTER.
         L     R15,4+40(,R1)     GET OLD LIST ENTRY COUNT.
         BCTR  R15,0             DECREMENT FOR EXECUTE.
         EX    R15,LLAPFLGS      COPY APF AUTHORIZATION FLAGS.
         LA    R4,9(R15,R4)      POINT PAST LAST COPIED FLAG.
         MVI   0(R4),X'80'       APF AUTHORIZE NEW ENTRY.
         LA    R15,2(,R15)       GET NEW LIST ENTRY COUNT.
         ST    R15,4+40(,R1)     SAVE IN NEW TABLE.
         WTO   MF=(E,LXPRY68I)   LOG THIS ALTERATION FOR THE RECORD.
         L     R3,CVTPTR(,0)     POINT TO CVT.
         USING CVT,R3
         L     R4,CVTLINK        POINT TO THE LINK LIST DCB.
         LM    R5,R6,WORK2       GET THE NEW ADDRESSES.
         USING IHADCB,R4
         STCM  R5,7,DCBDEBA      POINT TO THE NEW LINK LIST DEB.
         DROP  R4                IHADCB.
         ST    R6,CVTLLTA        POINT TO THE NEW LINK LIST TABLE.
         LA    R0,40             GET THE PREFIX LENGTH.
         SR    R5,R0             POINT TO THE CURRENT PREFIX.
         L     R1,36(,R5)        POINT TO DE-ACTIVATED DEB.
         SR    R1,R0             POINT TO DE-ACTIVATED DEB'S PREFIX.
         CLC   =CL8'LKLSTALT',0(R1)    VALID PREFIX ID?
         BNE   LLTOLDCH          NO, GO CHECK OLD LLT.
         MVC   36(4,R5),36(R1)   POINT OLD POINTER TO IPL-TIME DEB.
         A     R0,32(,R1)        ADD OLD TABLE SIZE TO PREFIX SIZE.
         FREEMAIN RU,LV=(0),A=(1),SP=245       FREE THE OLD TABLE.
         LA    R0,40             GET THE PREFIX LENGTH.
LLTOLDCH SR    R6,R0             POINT TO THE CURRENT PREFIX.
         L     R1,36(,R6)        POINT TO DE-ACTIVATED LLT.
         LR    R4,R1             COPY THIS ADDRESS.
         SRL   R4,12
         SLL   R4,12             POINT TO START OF PAGE.
         CR    R4,R1             LLT ON PAGE BOUNDARY?
         BE    LXAALLDN          YES, PROBABLY ALTERED BY TMON FOR MVS.
         SR    R1,R0             POINT TO DE-ACTIVATED LLT'S PREFIX.
         CLC   =CL8'LKLSTALT',0(R1)    VALID PREFIX ID?
         BNE   LXAALLDN          NO, GO DISPLAY NEW LIST.
         MVC   36(4,R6),36(R1)   POINT OLD POINTER TO IPL-TIME LLT.
         B     LFREEOLD          GO FREE THE DE-ACTIVATED LLT.
LBADPROB MODESET MF=(E,MDSETN0)  RETURN TO PROBLEM KEY.
LBADLIB  LA    R1,LKBADMSG       SHOW A COVER-ALL MESSAGE
         LA    R0,L'LKBADMSG     IN LINE MODE.
         TPUT  (1),(0),R
         B     LDEQREDO
LCHECKRL CLI   INCHARS,C'R'      RESET APF LIBRARY LIST REQUESTED?
         BNE   GIVEHLPL          NO.
         MVI   LISTFLAG,C'L'     DISPLAY LINKLIST LIBRARIES AFTERWARDS.
         ENQ   (LMAJORQ,LMINORQ,E,L'LMINORQ,SYSTEM),RET=USE
         LTR   R15,R15           SOMEONE ELSE ALREADY DOING THIS?
         BNZ   LENQFAIL          YES, FAIL THE REQUEST.
         BAS   R14,LLACHECK      CHECK TO SEE IF LLA IS ACTIVE.
         MVI   ENDDEPTH+1,1      ALLOW PF3/15 TO CANCEL THE REQUEST.
         LA    R0,LCONMSGL
         LA    R1,LCONFIRM
         BAS   R14,SCREENIO      CALL SCREEN I/O HANDLER.
         CLI   ENDDEPTH+1,0      REQUEST TO BE CANCELLED?
         BE    LDEQREDO          YES.
         CLI   INBUFF,13         WAS ENTER SELECTED?
         BNE   LDEQREDO          NO, ABORT LINK LIST RESET.
         LA    R1,ARMSG          PREPARE TO SAY THAT THIS IS ALREADY
         LA    R0,ARMSGLEN-1     THE IPL-TIME LINK LIST.
         L     R3,CVTPTR(,0)     POINT TO THE CVT.
         L     R6,CVTLINK        POINT TO THE LINK LIST DCB.
         USING IHADCB,R6
         SLR   R7,R7
         ICM   R7,7,DCBDEBA      POINT TO THE LINK LIST DEB.
         L     R4,CVTLLTA        POINT TO THE LINK LIST TABLE.
         LR    R5,R4
         SRL   R5,12
         SLL   R5,12
         CR    R5,R4             IS TABLE ORIGIN ON PAGE BOUNDARY?
         BE    MSGSCRNL          YES, PROBABLY ALREADY ALTERED BY TMON.
         LA    R5,40             GET THE PREFIX LENGTH.
         SR    R7,R5             POINT TO THE PREFIX, IF ANY.
         CLC   =CL8'LKLSTALT',0(R7)    VALID PREFIX ID?
         BNE   MSGSCRNL          NO, SHOW MESSAGE.
         SR    R4,R5             POINT TO THE PREFIX, IF ANY.
         CLC   =CL8'LKLSTALT',0(R4)    VALID PREFIX ID?
         BNE   MSGSCRNL          NO, SHOW MESSAGE.
         L     R15,PSATOLD       POINT TO THE CURRENT TCB.
         L     R15,12(,R15)      POINT TO THE TIOT.
         MVC   LXPRY69I+12(8),0(R15)   SUPPLY THE TSO USERID.
         MODESET MF=(E,MDSET0)   GET INTO KEY ZERO.
         WTO   MF=(E,LXPRY69I)   LOG THIS ALTERATION FOR THE RECORD.
         L     R0,36(,R7)        LOAD ADDRESS OF IPL-TIME TABLE.
         L     R1,36(,R4)        LOAD ADDRESS OF IPL-TIME TABLE.
         STCM  R0,7,DCBDEBA      RE-ACTIVATE IPL-TIME TABLE.
         DROP  R6                IHADCB.
         ST    R1,CVTLLTA        RE-ACTIVATE IPL-TIME TABLE.
         LR    R1,R7             POINT TO DE-ACTIVATED TABLE'S PREFIX.
         LR    R0,R5             COPY THE LENGTH OF THE PREFIX.
         A     R0,32(,R1)        ADD OLD TABLE SIZE TO PREFIX SIZE.
         FREEMAIN RU,LV=(0),A=(1),SP=245       FREE THE OLD TABLE.
         LR    R1,R4             POINT TO DE-ACTIVATED TABLE'S PREFIX.
         LR    R0,R5             COPY THE LENGTH OF THE PREFIX.
         B     LFREEOLD          GO FREE THE DE-ACTIVATED TABLE.
         DROP  R3                CVT.
GIVEHLPL MVC   INBUFF(8),SBLST   REQUEST SUBCOMMAND LIST FROM TUTORIAL.
         MVI   TGETLEN+1,8       SUPPLY LENGTH OF INPUT TO PARSE.
         LNR   R0,R11            MAKE REGISTER 0 NEGATIVE FOR PARSE.
         B     GETSCRNL          GO DISPLAY HELP PANEL.
         SPACE
LADDLINE TR    LL-79(79,R2),XLATETBL
         LA    R2,LL(,R2)        ADJUST BUFFER POINTER.
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         LA    R0,1
         A     R0,WINLINES       INCREMENT LINE COUNTER.
         ST    R0,WINLINES
         MVC   0(2,R2),WINFULL   PREPARE FOR FULL WINDOW.
         C     R2,WINEND         SEE IF THE BUFFER IS FULL YET.
         BNL   PUTSCRNL          IF YES, THEN FORGET SUMMARY LINE.
         BR    R14
         DROP  R15               WNDWMNGR.
         SPACE
LGETABLE DS    0H                GET A TABLE IN SQA.
         LR    R8,R0             SAVE REQUEST SIZE FOR LATER.
         GETMAIN RC,LV=(0),SP=245,LOC=(BELOW,ANY)
         LTR   R15,R15           GETMAIN OK?
         BNZ   LSQAFULL          NO, SEEMS LIKE SQA IS FULL.
         LA    R6,0(,R1)         COPY THE NEW PREFIX ADDRESS.
         L     R15,PSATOLD       POINT TO THE CURRENT TCB.
         L     R15,12(,R15)      POINT TO THE TIOT.
         MVC   LXPRY65I+12(8),0(R15)   SUPPLY THE TSO USERID.
         MVC   LXPRY67I+12(8),0(R15)   SUPPLY THE TSO USERID.
         MVC   LXPRY68I+12(8),0(R15)   SUPPLY THE TSO USERID.
         MVC   0(8,R6),=CL8'APFALT  '  SUPPLY THE PREFIX ID.
         MVC   8(8,R6),0(R15)          SUPPLY THE TSO USERID.
         TIME  DEC                     GET THE CURRENT DATE AND TIME.
         STM   R0,R1,WORK
         UNPK  16(3,R6),WORK(2)        SHOW THE HOURS.
         MVI   18(R6),C':'
         UNPK  19(3,R6),WORK+1(2)      SHOW THE MINUTES.
         MVI   21(R6),C':'
         UNPK  22(3,R6),WORK+2(2)      SHOW THE SECONDS.
         L     R7,DTCONVAD       GET DATE CONVERSION ENTRY POINT.
         LR    R0,R14            SAVE RETURN ADDRESS.
         BASR  R14,R7            GET CURRENT YY/MM/DD.
         MVC   24(8,R6),WORK     PUT IT INTO PREFIX.
         LR    R14,R0            RESTORE RETURN ADDRESS.
         LA    R0,40             GET THE SIZE OF PREFIX.
         SR    R8,R0             GET THE SIZE OF THIS NEW TABLE.
         ST    R8,32(,R6)        STORE THIS IN THE PREFIX.
         ST    R3,36(,R6)        STORE THE OLD TABLE'S ADDRESS.
         LR    R1,R6             COPY THE NEW PREFIX ADDRESS.
         BR    R14               RETURN TO CALLER.
LSQAFULL L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         LA    R1,SFMSG          PLACE "SQA FULL" MESSAGE IN
         LA    R0,SFMSGLEN-1     DATA STREAM SUFFIX.
         ST    R1,WINSUFIX
         ST    R0,WINSUFLN
         DROP  R15               WNDWMNGR.
         MVI   HOME,X'C5'        SOUND THE BELL.
         B     LXAALLDN          MAKE A NEW SCREEN IMAGE.
         SPACE
LLACHECK DS    0H                CHECK IF LLA IS ACTIVE.
         L     R1,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R1
         L     R1,CVTLLCB        POINT TO THE LLCB.
         DROP  R1                CVT.
         TM    5(R1),X'80'       IS LLA ACTIVE?
         BZR   R14               NO, RETURN SUCCESSFULLY.
         LA    R1,LLMSG          PLACE "LLA ACTIVE" MESSAGE IN
         LA    R0,LLMSGLEN-1     DATA STREAM SUFFIX.
         B     MSGSCRNL          MAKE A NEW SCREEN IMAGE.
         SPACE
APFNMLOD MVC   34(0,R2),7(R5)                   <<< EXECUTED >>>
APFDSNLD MVC   7(0,R14),INCHARS                 <<< EXECUTED >>>
LAXTRT   TRT   INCHARS(0),LAXTRTTB              <<< EXECUTED >>>
LLAPFLGS MVC   8(0,R4),8(R3)                    <<< EXECUTED >>>
LCOPYDIR MVC   0(0,R6),0(R3)                    <<< EXECUTED >>>
         SPACE
         DROP  R11,R10           LISTLIBS.
         TITLE 'SYSTEM LIBRARY LISTER - VARIABLES AND CONSTANTS'
LLUCBAD  DC    A(0)              NEW LINK LIST LIBRARY UCB ADDRESS.
LMAJORQ  DC    CL8'IMPMAJOR'
LMINORQ  DC    C'IM UPDATING CONTROL BLOCKS'
LCYLTRKS DC    H'15'             NUMBER OF TRACKS PER CYLINDER.
APFDELNO DC    F'0'              "INVERSE" ENTRY NUMBER TO REMOVE.
APFLSIZE DC    F'4096'           CSVAPF WORKAREA SIZE.
APFLADDR DC    A(0)              CSVAPF WORKAREA ADDRESS.
VTOCNAME DC    44X'04'
LINKALOC DYNALC SUFFIX=LA,DSNAME=LINK.LIST,RETDD=YES,STATUS=SHR
LINKFREE DYNALC SUFFIX=LF,DEALLOC=YES,DDNAME=TEMPFILE
LOBTSRCH CAMLST SEARCH,2,3,4
LOBTSEEK CAMLST SEEK,2,3,4
LXPRY65I WTO   'PRY605I TSOUSER ADDED APF LIBRARY 11111111.22222222.333+
               33333.44444444.55555555 ON VOLSER',ROUTCDE=(9),MF=L
LXPRY66I WTO   'PRY606I TSOUSER RESET APF LIBRARY LIST TO IPL-TIME SPEC+
               IFICATION',ROUTCDE=(9),MF=L
LXPRY67I WTO   'PRY607I TSOUSER REMOVED APF LIBRARY 11111111.22222222.3+
               3333333.44444444.55555555 ON VOLSER',ROUTCDE=(9),MF=L
LXPRY68I WTO   'PRY608I TSOUSER ADDED LINK LIST LIBRARY 11111111.222222+
               22.33333333.44444444.55555555',ROUTCDE=(9),MF=L
LXPRY69I WTO   'PRY609I TSOUSER RESET LINK LIST LIBRARIES TO IPL-TIME S+
               PECIFICATION',ROUTCDE=(9),MF=L
LISTFLAG DC    C'?'             LIBRARY LIST DISPLAY TYPE.
APFLTYPE DC    X'FF'            APF LIBRARY LIST LEVEL TYPE.
HEADAPFL DC    CL79'          VOLUME         AUTHORIZED LIBRARY NAME   +
                       (### ENTRIES)       '
HEADLNKL DC    CL79'          VOLUME   APF   LINK LIST LIBRARY NAME    +
                       (### ENTRIES)       '
HEADPAKL DC    CL79'                         LINK PACK AREA LIBRARY NAM+
               E       (### ENTRIES)       '
CSVBDMSG DC    CL79'        CSVAPF FAILURE  -  RETCODE=00000000  REASON+
               -CODE=00000000              '
LKBADMSG DC    C'OBTAIN FAILURE OR BAD EXTENT COUNT OR NON-PDS DATA SET+
                - REQUEST IGNORED'
         SPACE
APFVPRMP DC    X'C11140403C404000'
         DCS   SBA,(5,3)
         DC    X'&LOW'
         DC    C'ENTER THE VOLUME SERIAL NUMBER OF THE APF LIBRARY TO '
         DC    C'BE ADDED'
         DCS   SBA,(10,3)
         DC    X'&MED',C'===>',X'1BC94E132841F4'
ALVOLSER DC    XL6'00'
         DC    X'2841001BF0C22842F5'
         DC    C'  (SUPPLY NULL OR BLANK INPUT OR USE',X'&HIGH'
         DC    C'PF3/15',X'&LOW',C'TO CANCEL REQUEST.)'
ALVPRMPL EQU   *-APFVPRMP
         DCS   SBA,(15,3)
         DC    X'&HIGH'
         DC    C'REENTER - INVALID VOLUME SERIAL NUMBER SPECIFIED'
ALVERRLN EQU   *-APFVPRMP
         SPACE
LIBDPRMP DC    X'C11140403C404000'
         DCS   SBA,(5,3)
         DC    X'&LOW'
         DC    C'ENTER THE DATA SET NAME OF THE LIBRARY TO '
         DC    C'BE ADDED'
         DCS   SBA,(10,3)
         DC    X'&MED',C'===>',X'1BC94E132841F4'
ALDSNAME DC    XL44'00'
         DC    X'2841001BF0C22842F5'
         DCS   SBA,(12,4)
         DC    C'(USE',X'&HIGH',C'PF3/15',X'&LOW'
         DC    C'TO CANCEL REQUEST.)'
ALDPRMPL EQU   *-LIBDPRMP
         DCS   SBA,(15,3)
         DC    X'&HIGH'
         DC    C'REENTER - INVALID DATA SET NAME SPECIFIED'
ALDERRLN EQU   *-LIBDPRMP
         SPACE
APFRPRMP DC    X'C51140403C40400013'
         DCS   SBA,(3,3)
         DC    X'&LOW',C'SELECT'
         DC    X'&HIGH',C'ENTER',X'&LOW',C'TO CONFIRM THE REMOVAL OF'
         DCS   SBA,(6,3)
         DC    X'1DF82842F7'
ARDSNAME DC    CL44' '
         DCS   SBA,(8,3)
         DC    X'&LOW',C'ON VOLUME',X'1DF82842F7'
ARVOLUME DC    CL6' '
         DC    CL1' '
ARSMSFLG DC    CL5' '
         DCS   SBA,(11,3)
         DC    X'&LOW',C'FROM THE APF AUTHORIZED LIBRARY LIST.'
         DCS   SBA,(16,4)
         DC    C'SELECT',X'&HIGH',C'PF3/15',X'&LOW'
         DC    C'TO CANCEL THE REMOVAL REQUEST.'
ARDPRMPL EQU   *-APFRPRMP
         SPACE
LCONFIRM DC    X'C51140403C40400013'
         DCS   SBA,(6,1)
         DC    X'&LOW',C'SELECT'
         DC    X'&HIGH',C'ENTER',X'&LOW'
         DC    C'TO CONFIRM THE REINSTATEMENT OF THE'
         DC    X'&MED',C'IPL-TIME',X'&LOW',C'VERSION OF THIS LIST.'
         DCS   SBA,(10,2)
         DC    C'SELECT',X'&HIGH',C'PF3/15',X'&LOW'
         DC    C'TO CANCEL THIS REQUEST.'
LCONMSGL EQU   *-LCONFIRM
         SPACE
SFMSG    DC    X'115DD81DF82842F22841F2'     "SQA FULL" MESSAGE.
         DC    CL39'      NO ROOM IN SQA FOR NEW LIST      '
SFMSGLEN EQU   *-SFMSG
         SPACE
TFMSG    DC    X'115DD81DF82842F22841F2'     "TABLE FULL" MESSAGE.
         DC    CL39'     TABLE HAS MAXIMUM ENTRY COUNT     '
TFMSGLEN EQU   *-TFMSG
         SPACE
ARMSG    DC    X'115DD81DF82842F62841F2'     "ALREADY RESET" MESSAGE.
         DC    CL39'  IPL-TIME LIBRARY LIST ALEADY ACTIVE  '
ARMSGLEN EQU   *-ARMSG
         SPACE
WLMSG    DC    X'115DD81DF82842F22841F2'     "WRONG LINE" MESSAGE.
         DC    CL39'   CURSOR NOT ON LINE OF APF LIBRARY   '
WLMSGLEN EQU   *-WLMSG
         SPACE
LAMSG    DC    X'115DD81DF82842F22841F2'     "LIBRARY ALLOC" MESSAGE.
LAMSGTXT DC    CL39' DYNALLOC RC=##  ####  ####  (ALL HEX) '
LAMSGLEN EQU   *-LAMSG
         SPACE
LLMSG    DC    X'115DD81DF82842F22841F2'     "LLA ACTIVE" MESSAGE.
         DC    CL39'  LLA IS ACTIVE - STOP LLA THEN RETRY  '
LLMSGLEN EQU   *-LLMSG
         SPACE
EFMSG    DC    X'115DD81DF82842F22841F2'     "ENQUEUE FAILURE" MESSAGE.
         DC    CL39' UPDATE ALREADY ACTIVE BY ANOTHER USER '
EFMSGLEN EQU   *-EFMSG
         SPACE
CFMSG    DC    X'115DD81DF82842F22841F2'     "CSV FAILURE" MESSAGE.
         DC    CL39'    DYNAMIC APF FORMAT NOT SUPPORTED   '
CFMSGLEN EQU   *-CFMSG
         SPACE
CTMSG    DC    X'115DD81DF82842F22841F2'     "CSV TRIED" MESSAGE.
CTMSGTXT DC    CL39' CSVAPF RC=XX-XXXXXXXX  ALREADY ADDED  '
CTMSGLEN EQU   *-CTMSG
         SPACE
LAXTRTTB DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFF00FFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFF0000FFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FF000000000000000000FFFFFFFFFFFF'
         DC    X'FF000000000000000000FFFFFFFFFFFF'
         DC    X'FFFF0000000000000000FFFFFFFFFFFF'
         DC    X'00000000000000000000FFFFFFFFFFFF'
         SPACE
         LTORG
         SPACE
         DS    0H
