*        COPYRIGHT (C) 1986,1994,2006  PRYCROFT SIX PTY LTD
         TITLE 'UNIT STATUS SAMPLING MONITOR'
         USING UNITSAMP,R11,R8
UNITSAMP DS    0H
         LA    R8,2048(,R11)     INITIALIZE SECOND
         LA    R8,2048(,R8)                        BASE REGISTER.
         L     R10,IMCOMADR      POINT TO THE IMP/XA COMMON AREA.
         USING IMPXACOM,R10
         L     R1,SMCAADDR       GET SMCA ADDRESS.
         MVC   ULOGSID,16(R1)    COPY SMF SYSTEM ID.
         MVC   ULOGCOMP,=C'IMXA'
         MVI   ULOGFLG,X'CE'     SET SUBSYS+SUBTYPE+ESA+XA+VS2 FLAGS.
         MVI   ULOGRTY,222       LOAD A SILLY "SMF" RECORD TYPE.
         MVC   ULOGSBTY,FFFF     ZERO OUT SUB-TYPE.
         CLI   INCHARS+1,C' '    ANY OPTION PRE-SPECIFIED?
         BNH   REDOUNIT          NO.
         MVC   INCHARS(L'INCHARS-1),INCHARS+1
         MVI   INCHARS+L'INCHARS-1,C' ' YES, ADJUST ANY COMMAND INPUT.
         B     CMDSCANU          PROCESS IT.
         SPACE
REDOUNIT DS    0H
         ICM   R3,15,THEUCBAD    TARGET UCB AVAILABLE?
         BZ    FINDUNIT          NO, GO GET ONE.
         CLI   THEUCBAD,X'DD'    TRANSFERRED FROM OPTION "D"?
         BE    UNITSCAN          YES, UPDATE UCB ADDRESS.
         OI    UNITSCYL,X'80'    INVALIDATE/RESET COUNTERS.
         XC    ULOGZERO,ULOGZERO
         OI    UTIMEB4,X'80'     INVALIDATE "BEFORE" TIME-OF-DAY.
         MVI   HDGUCODE,0        RESET HEADING.
         MVI   ULOGSBTY+1,0      RESET RECORD-LOGGED FLAG.
         LA    R4,UNITSCHR       POINT TO FIRST SAMPLE ENTRY.
         LA    R2,100            GET THE NUMBER OF SAMPLES TO BE DONE.
         TM    MODESW2,AUTH      APF AUTHORIZED?
         BZ    UB4STUFF          NO, SKIP SYSEVENT SVC.
         BAS   R14,DONTSWAP      BECOME NON-SWAPPABLE.
UB4STUFF LA    R15,32            GET "UCB PREFIX" LENGTH.
         LR    R5,R3             POINT TO COMMON UCB SECTION.
         SLR   R5,R15            POINT TO PATH MGMT CONTROL WORD.
         USING UCBPMCW1,R5
*                                ARE MEASUREMENTS BEING COLLECTED?
         TM    UCBPMCW1+1,UCBMCMB
         BZ    UNITINIT          NO, NOT FOR THIS DEVICE.
         TIME  BIN               YES, GET TIME-OF-DAY.
         ST    R0,UTIMEB4        SAVE IT.
         SLR   R15,R15
         ICM   R15,3,UCBMBI      GET MEASUREMENT BLOCK INDEX.
         DROP  R5                UCBPMCW1.
         L     R1,CMCTADDR       POINT TO CHANNEL MEASUREMENT CNTL TBL.
         USING CMCT,R1
         L     R5,CMCTCMBV       POINT TO CHANNEL MEASUREMENT BLOCK.
         DROP  R1                CMCT.
         SLL   R15,5             GET ENTRY OFFSET INTO CMB.
         ALR   R5,R15            POINT TO THIS DEVICE'S ENTRY.
         TM    MODESW4,ECMB      ECMB RATHER THAN CMB FOR DEVICE?
         BNO   UUSECMB1          NO, DIRECTLY ACCESS THE CMB.
         TM    MODESW2,AUTH      APF AUTHORIZED?
         BNO   UNITINIT          NO, CANNOT FETCH ECMB DATA.
         L     R15,IOSECMB@      YES, POINT TO IOSCMB ROUTINE.
         LR    R1,R3             POINT TO THE UCB.
         BASR  R14,R15           INVOKE IT.
         LTR   R15,R15           SUCCESS?
         BNZ   UNITINIT          NO.
         LA    R5,SECWORKA+48    POINT TO CMB DATA.
UUSECMB1 MVC   UIOCNTB4,0(R5)    SAVE THE I/O COUNTS.
         L     R15,4(,R5)        GET DEVICE CONNECT TIME.
         AL    R15,8(,R5)        ADD FUNCTION PENDING TIME.
         AL    R15,12(,R5)       ADD DEVICE DISCONNECT TIME.
         ST    R15,UIOTIMB4      SAVE THE I/O ELAPSED TIME.
         B     UNITINIT          SKIP THE FIRST WAIT.
UNITLOOP STIMER WAIT,BINTVL=USAMPLTM  WAIT A BIT.
         TM    MODESW2,ATTN      ATTENTION INTERRUPT?
         BO    UNITQUIT          YES, STOP SAMPLING AND TALK TO SCREEN.
         TM    OSLEVEL,CVTUCBSV  UCB SERVICES AVAILABLE?
         BNO   UNITINIT          NO, HAVE ACTUAL STATIC UCB ADDRESS.
         L     R9,USCANADR       YES, POINT TO UCBSCAN ROUTINE.
         BR    R9                UPDATE LOCAL COPY OF THE UCB.
         USING UCBOB,R3
UNITINIT XC    0(14,R4),0(R4)    RESET DATA IN SAMPLING ENTRY.
         TM    UCBFLA,UCBDEFER   IS THE DEFER BIT ON?
         BNO   UNNOTDFR          NO.
         LA    R0,1              YES.
         AH    R0,UNITDEFR       INCREMENT CONTROL-UNIT-BUSY COUNTER.
         STH   R0,UNITDEFR
UNNOTDFR TM    UCBFLA,UCBNRY     IS THE DEVICE NOT READY?
         BNO   UNITREDY          NO.
         LA    R0,1              YES.
         AH    R0,UNITNRDY       INCREMENT DEVICE-NOT-READY COUNTER.
         STH   R0,UNITNRDY
         OI    12(R4),ULNOTRDY   INDICATE NOT READY STATUS.
UNITREDY MVI   13(R4),X'FF'      USE A "FUNNY FLAG" IN CASE NO CHPID.
         LA    R1,28             GET "UCB PREFIX" LENGTH.
         LR    R5,R3             POINT TO UCB.
         DROP  R3                UCBOB.
         SLR   R5,R1             POINT INTO UCB PREFIX.
         USING UCBLPM,R5
         LA    R1,UCBCHPS        POINT TO UNIT CHANNEL PATH ARRAY.
         ICM   R5,8,UCBLPUM      LOAD LAST PATH USED MASK.
         BM    GTUNTPTH          LAST PATH WAS FIRST CHPID IN ARRAY.
         DROP  R5                UCBLPM.
         LA    R0,7              SEVEN OTHER BITS IN THIS BYTE.
UNTPTHLP LA    R1,1(,R1)         INCREMENT CHANNEL PATH ARRAY POINTER.
         SLA   R5,1              TEST NEXT BIT.
         BO    GTUNTPTH          THIS IS IT.
         BCT   R0,UNTPTHLP       TRY NEXT ONE.
GTUNTPTH MVC   13(1,R4),0(R1)    SAVE LAST CHANNEL USED TO DEVICE.
         USING UCBOB,R3
         TM    UCBSTAT,UCBONLI   IS THE DEVICE ONLINE?
         BO    UNITONLN          YES.
         TM    UCBFL5,UCBNALOC   NO, BEING PROCESSED IN OFFLINE MODE?
         BO    UNITUSED          YES.
         OI    12(R4),ULOFFLIN   NO, INDICATE OFFLINE AND UNUSED.
         B     USKIPFSN          NO, GO DETERMINE IF DASD OR NOT.
UNITONLN TM    UCBSTAT,UCBALOC   IS THE DEVICE ALLOCATED?
         BNO   USKIPFSN          NO.
UNITUSED SLR   R0,R0             CLEAR A WORK REGISTER.
         LR    R5,R3             POINT TO UCB.
         DROP  R3                UCBOB.
         LA    R1,44
         SR    R5,R1             POINT TO UCBIOQF.
         USING UCBIOQF,R5
         SLR   R1,R1             RESET QUEUE LENGTH COUNTER.
         LM    R5,6,UCBIOQF      POINT TO FIRST AND LAST IOQS.
         DROP  R5                UCBIOQF.
         LTR   R5,R5             IS THE FIRST POINT ZERO?
         BZ    GOTUNQLN          YES, NO QUEUING.
         USING IOQ,R5
UIOQLOOP TM    IOQFLA,IOQACTV    IS THIS IOQ ACTIVE?
         BO    NEXTUIOQ          YES, SO THIS IS NOT QUEUED.
         LA    R1,1(,R1)         NO, WAITING SO INCREMENT POINTER.
NEXTUIOQ CR    R5,R6             LAST IOQ ON QUEUE?
         BE    GOTUNQLN          YES, END OF CHAIN.
         ICM   R5,15,IOQCHAIN    POINT TO NEXT IOQ ON UCB CHAIN.
         BNZ   UIOQLOOP          PROCESS IT.
         DROP  R5                IOQ.
         USING UCBOB,R3
GOTUNQLN LTR   R1,R1             ANY QUEUING FOUND?
         BZ    UNITNOTQ          NO.
         A     R1,UNITQLEN       ADD COUNT TO QUEUE LENGTH TOTAL.
         ST    R1,UNITQLEN
         LA    R0,1              YES.
         AH    R0,UNITQUED       INCREMENT I/O-QUEUED-TO-DEVICE COUNTR.
         STH   R0,UNITQUED
UNITNOTQ TM    UCBFLA,UCBBOX     IS THE DEVICE BOXED OFFLINE?
         BZ    UNITNTBX          NO.
         OI    12(R4),ULBOXED    YES, INDICATE THIS.
UNITNTBX CLI   UCBTBYT3,X'80'    MAGNETIC TAPE DEVICE?
         BNE   USKIPFSN          NO, FORGET FILE SEQUENCE NUMBER.
         MVI   HDGUCODE,1
         MVC   8(2,R4),UCBFSEQ   SAVE FILE (DATA SET) SEQUENCE NUMBER.
         OI    12(R4),ULIOADDR   INDICATE VALID NUMBER OBTAINED.
         TM    UCBWGT,UCBREW     REWIND ISSUED TO THIS TAPE?
         BNO   UNITNTDA          NO, CHECK FOR BUSY DEVICE.
         OI    12(R4),ULREWIND   YES, INDICATE SAME.
USKIPFSN CLI   UCBTBYT3,X'20'    DASD DEVICE?
         BNE   UNITNTDA          NO, PROCESS NON-DIRECT ACCESS DEVICE.
         SLR   R0,R0             CLEAR A WORK REGISTER.
         ICM   R0,1,UCBSQC       LOAD RESERVE MACRO INTRUCTION COUNT.
         BZ    UNITNOTR          NO HARDWARE RESERVES ARE ACTIVE.
         A     R0,UNITRCNT       ADD COUNT TO RESERVE COUNT TOTAL.
         ST    R0,UNITRCNT
         LA    R0,1              YES.
         AH    R0,UNITRSVD       INCREMENT DISK-RESERVED COUNTER.
         STH   R0,UNITRSVD
UNITNOTR CLI   UCBFLA,UCBSTRT    IS THE DISK BUSY WITH USER I/O?
         BNE   GOTUNTJB          NO, IGNORE IOQ AND IOSB.
         LA    R0,1              YES.
         AH    R0,UNITBUSY       INCREMENT DEVICE BUSY COUNTER.
         STH   R0,UNITBUSY
         MVC   THEVOLUM,UCBVOLI  UPDATE THE VOLUME SERIAL NUMBER.
         DROP  R3                UCBOB.
UNITIOSB LR    R6,R3             GET UCB ADDRESS.
         AHI   R6,-4             GET IOQ HANDLING I/O FOR THIS UNIT.
         USING UCBIOQC,R6
         L     R6,UCBIOQC
         DROP  R6                UCBIOQC.
         USING IOQ,R6
         L     R6,IOQIOSB        GET THE IOSB.
         DROP  R6                IOQ.
         USING IOSB,R6
         SLR   R1,R1
         ICM   R1,3,IOSASID      GET ASID TO BE SCHEDULED AT I/O COMP.
         BZ    GOTDSKJB          NO ASID.
         USING UCBOB,R3
GETUNTJB MVC   0(4,R4),STARS     CATER FOR STAR-TING ADDRESS SPACE.
         STH   R1,WORK+6         STORE THE ASID.
         UNPK  WORK(5),WORK+6(3) SHOW HEX ADDRESS SPACE IDENTIFIER.
         TR    WORK(4),HEX-C'0'  MAKE DISPLAYABLE.
         MVC   4(4,R4),WORK      LOAD INTO ENTRY.
         SLL   R1,2              GET INDEX INTO ASVT (MULTIPLY BY 4).
         A     R1,ASVTADDR
*                                GET ASVT ENTRY FOR THIS ASID.
         LA    R1,ASVTENTY-ASVT-4(,R1)
         ICM   R15,15,0(R1)      IS THIS ADDRESS SPACE ACTIVE?
         BM    GOTDSKJB          NO, THE JOB HAS ENDED.
         USING ASCB,R15
         ICM   R1,15,ASCBJBNI    LOAD PTR TO JOBNAME.
         BNZ   LODDSKJB
         ICM   R1,15,ASCBJBNS    LOAD PTR TO JOBNAME. (S/M/L)
         BZ    GOTDSKJB          JOB HAS NO NAME.
         DROP  R15               ASCB.
LODDSKJB CLI   0(R1),X'49'       IS IT DISPLAYABLE?
         BNH   GOTDSKJB          NO, SO DON'T DISPLAY IT.
         MVC   0(8,R4),0(R1)     LOAD JOB NAME RESPONSIBLE FOR I/O.
GOTDSKJB CLI   UCBTBYT3,X'20'    DASD DEVICE?
         BNE   GOTUNTJB          NO, SKIP CYLINDER PROCESSING.
         MVI   HDGUCODE,2
         MVC   8(2,R4),IOSSKCC   SAVE CYLINDER NUMBER OF DYNAMIC SEEK.
         MVC   10(2,R4),IOSSKH2  SAVE HEAD+REC NUMBER OF DYNAMIC SEEK.
         OI    12(R4),ULIOADDR   INDICATE VALID NUMBER OBTAINED.
         B     GOTUNTJB          END OF DASD UNIT SAMPLING.
         DROP  R6                IOSB.
*                                IS THE DEVICE BUSY?
UNITNTDA TM    UCBFLA,UCBSTRT+UCBHALT+UCBCLEAR
         BZ    GOTUNTJB          NO, NOTHING ELSE TO DO.
         LA    R0,1              YES.
         AH    R0,UNITBUSY       INCREMENT DEVICE BUSY COUNTER.
         STH   R0,UNITBUSY
         MVC   THEVOLUM,UCBVOLI  UPDATE THE VOLUME SERIAL NUMBER.
         TM    UCBSTAT,UCBALOC   IS THE DEVICE ALLOCATED?
         BZ    UNITIOSB          NO, HAVE TO LOOK AT IOSB FOR JOBNAME.
         SLR   R1,R1             CLEAR POINTER REGISTER.
         SLR   R6,R6             CLEAR POINTER REGISTER.
         ICM   R6,7,UCBEXTP      POINT TO COMMON UCB EXTENSION.
         ICM   R1,3,14(R6)       GET ASID OF LAST ALLOCATING JOB.
         BZ    UNITIOSB          NO ASID HERE SO TRY IOSB.
         B     GETUNTJB          TRY FOR A JOB NAME.
GOTUNTJB DS    0H                END OF DEVICE SAMPLE INTERATION.
         LA    R4,14(0,R4)       POINT TO NEXT SAMPLE ENTRY.
         BCT   R2,UNITLOOP       PERFORM NEXT SAMPLE.
UNITQUIT TM    UTIMEB4,X'80'     SYSTEM I/O MEASUREMENTS PRESENT?
         BO    UNITNOCM          NO, SKIP CMB STUFF.
         DROP  R3                UCBOB.
         LA    R15,32            GET "UCB PREFIX" LENGTH.
         LR    R5,R3             POINT TO COMMON UCB SECTION.
         SLR   R5,R15            POINT TO PATH MGMT CONTROL WORD.
         USING UCBPMCW1,R5
         TM    UCBPMCW1+1,UCBMCMB ARE MEASUREMENTS BEING COLLECTED?
         BZ    UNITNOCM          NO, NOT FOR THIS DEVICE.
         ICM   R15,3,UCBMBI      GET MEASUREMENT BLOCK INDEX.
         DROP  R5                UCBPMCW1.
         L     R1,CMCTADDR       POINT TO CHANNEL MEASUREMENT CNTL TBL.
         USING CMCT,R1
         L     R5,CMCTCMBV       POINT TO CHANNEL MEASUREMENT BLOCK.
         DROP  R1                CMCT.
         SLL   R15,5             GET ENTRY OFFSET INTO CMB.
         ALR   R5,R15            POINT TO THIS DEVICE'S ENTRY.
         TM    MODESW4,ECMB      ECMB RATHER THAN CMB FOR DEVICE?
         BNO   UUSECMB2          NO, DIRECTLY ACCESS THE CMB.
         TM    MODESW2,AUTH      APF AUTHORIZED?
         BNO   UNITNOCM          NO, CANNOT FETCH ECMB DATA.
         L     R15,IOSECMB@      YES, POINT TO IOSCMB ROUTINE.
         LR    R1,R3             POINT TO THE UCB.
         BASR  R14,R15           INVOKE IT.
         LTR   R15,R15           SUCCESS?
         BNZ   UNITNOCM          NO.
         LA    R5,SECWORKA+48    POINT TO CMB DATA.
UUSECMB2 MVC   UIOCNTAF,0(R5)    SAVE THE I/O COUNTS.
         L     R15,4(,R5)        GET DEVICE CONNECT TIME.
         AL    R15,8(,R5)        ADD FUNCTION PENDING TIME.
         AL    R15,12(,R5)       ADD DEVICE DISCONNECT TIME.
         ST    R15,UIOTIMAF      SAVE THE I/O ELAPSED TIME.
         USING UCBOB,R3
UNITNOCM SLR   R0,R0
         STCM  R0,15,DASDALOC    ZERO ALLOCATED AND OPEN COUNTS.
         TM    UCBSTAT,UCBALOC   IS THE DEVICE ALLOCATED?
         BZ    UNITNOAL          NO.
         MVI   DASDALOC+1,1      YES, CHANGE ALLOCATION COUNT.
         MVI   DASDOPEN+1,1      ASSUME IT IS OPEN.
UNITNOAL TM    UCBTBYT3,X'A0'    DASD OR TAPE?
         BZ    UNITEXIT          NO, SKIP TAPE/DISK STUFF.
         MVC   DASDOPEN+1(1),UCBDMCT COPY FILE OPEN COUNT.
         NI    DASDOPEN+1,X'7F'  TURN OFF MOUNT PENDING BIT.
         CLI   UCBTBYT3,X'20'    DIRECT ACCESS STORAGE DEVICE?
         BNE   UNITEXIT          NO, SKIP DISK STUFF.
         MVC   DASDALOC,UCBUSER      COPY FILE ALLOCATION COUNT.
         MVC   DASDLSPC,BLANKS   BLANK OUT FREE SPACE DETAILS.
         TM    UCBSTAT,UCBONLI   ONLINE DASD?
         BZ    UNITEXIT          NO.
*                                I/O DEFERRED, NOT READY OR BOXED?
         TM    UCBFLA,UCBDEFER+UCBNRY+UCBBOX
         BNZ   UNITEXIT          YES.
         TM    UCBDMCT,UCBMOUNT  MOUNT PENDING?
         BO    UNITEXIT          YES.
         CLI   UCBVTOC+2,1       R OF VTOC TTR0 IS 1 (AS PER OS DISK)?
         BNE   UNITEXIT          NO.
         MVC   GQVOLSER,UCBVOLI  COPY VOLUME SERIAL NUMBER.
         LA    R5,SECWORKA       GET A GQSCAN WORK AREA.
         GQSCAN AREA=((R5),512),SCOPE=ALL,                             +
               RESNAME=(SYSVTOC,GQVOLSER,6,SPECIFIC,8),                +
               TOKEN=GQUTOKEN
         CHI   R15,4             IS VTOC AVAILABLE FOR SPACE DATA?
         BL    UNITEXIT          NO.
         BE    LSPACEOK          YES.
         GQSCAN QUIT=YES,TOKEN=GQUTOKEN    NO, BUT QUIT GQSCAN FIRST.
         B     UNITEXIT          SKIP LSPACE.
*SPACEOK LR    R0,R3             YES, LOAD UCB ADDRESS.
*        LA    R1,DASDLSPC       POINT TO MESSAGE BUFFER.
*        SVC   78                PERFORM LSPACE.
LSPACEOK LSPACE UCB=(R3),EXPMSG=DASDLSPC
         DROP  R3                UCBOB.
UNITEXIT TIME  BIN               GET TIME-OF-DAY.
         ST    R0,UTIMEAFT       SAVE IT.
         STM   R0,R1,ULOGTIME    TIMESTAMP THE LOGGING RECORD.
         TM    MODESW2,AUTH      APF AUTHORIZED?
         BZ    UNITSHOW          NO, SKIP SYSEVENT SVC.
         BAS   R14,OKAYSWAP      YES, BECOME SWAPPABLE.
UNITSHOW TIME  DEC               GET THE TIME.
         STCM  R0,12,UNITHHMM    SAVE HH:MM AT END OF SAMPLE.
         L     R2,CCTADDR        GET CCT ADDRESS.
         MVC   UNITCPU,UTILP(R2) SAVE CCVUTILP (CPU BUSY %).
         LA    R2,BUFFER         GET A WORK AREA.
         BAS   R1,SYSUMMRY       PRODUCE SYSTEM SUMMARY LINE.
         MVC   UNITSUMM,SUMMVARS SAVE SYSTEM SUMMARY LINE.
         TR    UNITSUMM,XLATETBL
         CLI   ULOGMODE,C'L'     CURRENTLY IN LOGGING MODE?
         BNE   NOULOG            NO, DON'T LOG THIS ACTIVITY.
         CLI   ULOGSBTY+1,0      HAS THIS RECORD ALREADY BEEN LOGGED?
         BNE   NOULOG            YES, DON'T LOG THIS ACTIVITY.
         CLC   UNITBUSY,ULGTHRSH IS BUSY % UP TO THRESHOLD?
         BL    NOULOG            NO, DON'T LOG THIS ACTIVITY.
         MVI   ULOGSBTY+1,1      SUPPLY RECORD SUB-TYPE.
         LA    R1,ULOGPUT
         BASSM R5,R1             WRITE A RECORD.
*        LA    R0,1
*        A     R0,ULOGCNTR       INCREMENT LOG RECORD COUNT.
*        ST    R0,ULOGCNTR
NOULOG   CLI   UNITMODE,C'S'     DISPLAYING SAMPLES?
         BNE   CYLNDUSE          YES, GO MAKE A GRAPH
         SPACE
SHOWSAMP LA    R4,UNITSCHR       POINT TO START OF FORMATTED AREA.
         LA    R2,BUFFER         POINT TO START OF DETAIL BUFFER AREA.
         LA    R0,20             TWENTY DETAIL LINES TO LOAD.
UDTLLOOP MVC   0(LL-79,R2),LOWX  SUPPLY 3270 ATTRIBUTES.
         LA    R7,5              FIVE SAMPLE ENTRIES PER LINE.
         LA    R6,LL-79(,R2)     POINT TO FIRST DISPLAY AREA.
UENTLOOP MVC   0(8,R6),0(R4)     LOAD JOBNAME OR ASID.
         CLC   0(8,R6),BLANKS    ANY ACTIVITY HERE?
         BNH   USJBNMOK          NO, LEAVE BLANK.
         CLI   SELJOBNM,C' '     LOOKING FOR CERTAIN JOB NAMES?
         BNH   USJBNMOK          NO, CONTINUE.
         ST    R4,WORK2          SAVE CURRENT JOB NAME ADDRESS.
         LA    R1,SELJOBNM       POINT TO JOB NAME PREFIX.
         ST    R1,WORK+4         SAVE ITS ADDRESS.
         LH    R1,JPRFXLEN       GET LENGTH OF JOB NAME PREFIX.
         ST    R1,WORK2+4        SAVE IT IN PARAMETER LIST.
         ST    R7,WORK           SAVE CURRENT LOOP COUNTER.
         L     R7,PRFCHKAD       LOAD PREFCHEK ENTRY POINT.
         BASR  R1,R7             COMPARE JOB NAME WITH PREFIX.
         L     R7,WORK           RESTORE CURRENT LOOP COUNTER.
         BE    USJBNMOK          PERSERVE THE FULL JOB NAME.
         MVI   0(R6),C'-'        OVERLAY THE JOB NAME WITH
         MVC   1(7,R6),0(R6)     DASHES.
USJBNMOK MVC   8(7,R6),BLANKS    ERASE VARIABLE PART OF DISPLAY ENTRY.
         TM    12(R4),ULNOTRDY   UNIT NOT READY?
         BZ    UREADYOK          NO, READY STATUS OKAY.
         MVI   12(R6),C'¬'       YES, LOAD NOT READY FLAG.
UREADYOK CLI   13(R4),X'FF'      ANY LAST-CHPID-USED?
         BE    UCHPIDFF          NO, JUST LEAVE IT BLANK.
         UNPK  13(3,R6),13(2,4)  SHOW CHANNEL USED BY LAST I/O.
         TR    13(2,R6),HEX-C'0' MAKE DISPLAYABLE HEX.
UCHPIDFF MVI   15(R6),X'3B'      ERASE GARBAGE.
         TM    12(R4),ULREWIND   TAPE DRIVE REWINDING?
         BZ    NOREWIND          NO.
         MVC   9(3,R6),=C'REW'   YES, INDICATE THIS.
         B     EOSMPENT          END OF SAMPLE ENTRY PROCESSING.
NOREWIND TM    12(R4),ULIOADDR   GOT A NUMBER TO SHOW?
         BZ    NOUNITNO          NO.
         SLR   R1,R1             YES, SO USE IT.
         ICM   R1,3,8(R4)        GET CYLINDER OR FILE SEQUENCE NUMBER.
         CVD   R1,WORK
         MVC   8(4,R6),ED3
         ED    8(4,R6),WORK+6
         CLI   WORK+5,0          CYLINDER NUMBER LESS THAN 1000?
         BE    NOUNITNO          YES, CYLINDER NUMBER DONE.
         MVC   8(1,R6),WORK+5
         OC    8(4,R6),=C'0000'  NO, SUPPORT THOUSANDS DIGIT.
NOUNITNO TM    12(R4),ULOFFLIN   UNIT OFFLINE?
         BZ    UBOXCHEK          NO, CHECK FOR BOXED OFFLINE.
         MVC   9(3,R6),=C'OFF'   YES, INDICATE THIS.
UBOXCHEK TM    12(R4),ULBOXED    UNIT BOXED OFFLINE?
         BZ    EOSMPENT          NO, END OF SAMPLE ENTRY PROCESSING.
         MVC   9(3,R6),=C'BOX'   YES, INDICATE THIS.
EOSMPENT LA    R4,14(,R4)        POINT TO NEXT SAMPLE ENTRY.
         LA    R6,16(,R6)        POINT TO NEXT DISPLAY ENTRY.
         BCT   R7,UENTLOOP       PROCESS NEXT ENTRY ON THIS LINE.
         LA    R2,LL(,R2)        POINT TO NEXT DETAIL LINE.
         BCT   R0,UDTLLOOP       PROCESS NEXT DETAIL LINE.
USAMPSUM MVC   0(LL-79,R2),UNITLNAT  LOAD ATTRIBUTES AND SAMPLE
         MVC   LL-79(79,2),IMUNITLN STATISTICS LINE TEMPLATE.
         LH    R0,UNITBUSY       SHOW SAMPLE COUNT OF UNIT BUSY.
         CVD   R0,WORK
         MVC   18(4,R2),ED3
         ED    18(4,R2),WORK+6
         LH    R0,UNITDEFR       GET SAMPLE COUNT OF CONTROL UNIT BUSY.
         CVD   R0,WORK
         MVC   26(4,R2),ED3
         ED    26(4,R2),WORK+6
         LH    R0,UNITNRDY       SHOW SAMPLE COUNT OF UNIT NOT READY.
         CVD   R0,WORK
         MVC   36(4,R2),ED3
         ED    36(4,R2),WORK+6
         LH    R0,UNITQUED       SHOW SAMPLE COUNT OF I/O QUEUING.
         CVD   R0,WORK
         MVC   45(4,R2),ED3
         ED    45(4,R2),WORK+6
         L     R0,UNITQLEN       SHOW SAMPLE AVERAGE QUEUE LENGTH.
         CVD   R0,WORK
         MVC   53(7,R2),=X'402021204B2020'
         ED    53(7,R2),WORK+5
         CLI   UNITTYPE+2,X'20'  DASD DEVICE?
         BE    UDORESV           YES, SHOW H/W RESERVE DETAILS.
         MVC   64(27,R2),BLANKS  ERASE H/W RESERVE STUFF FOR NON-DASD.
         B     UNORESV           BRANCH AROUND IT.
UDORESV  LH    R0,UNITRSVD       SHOW SAMPLE COUNT OF DASD RESERVES.
         CVD   R0,WORK
         MVC   64(4,R2),ED3
         ED    64(4,R2),WORK+6
         L     R0,UNITRCNT       SHOW SAMPLE AVERAGE RESERVE COUNT.
         CVD   R0,WORK
         MVC   73(7,R2),=X'402021204B2020'
         ED    73(7,R2),WORK+5
UNORESV  TR    LL-79(79,R2),XLATETBL
         LA    R2,LL(,R2)        POINT TO NEXT DETAIL LINE.
         ICM   R1,15,UTIMEB4     GET START OF SAMPLE TIME.
         BM    GOTUSCRN          INVALID SO SKIP OS DATA LINE.
         MVC   0(LL-79,R2),UNITLNAT  LOAD ATTRIBUTES AND SAMPLE
         MVC   LL-79(79,R2),OSUNITLN STATISTICS LINE TEMPLATE.
         L     R4,UTIMEAFT       GET END OF SAMPLE TIME.
         SR    R4,R1             GET SAMPLE TIME DURATION.
         BP    UTIMEOK           NICE TO KNOW THAT TIME GOES FORWARDS.
         A     R4,=F'8640000'    SAMPLE TIME STRADDLED MIDNIGHT.
UTIMEOK  SLR   R1,R1
         SLR   R5,R5
         ICM   R1,3,UIOCNTAF     GET END OF SAMPLE I/O COUNT.
         ICM   R5,3,UIOCNTB4     GET START OF SAMPLE I/O COUNT.
         SLR   R1,R5             GET I/O COUNT CHANGE DURING SAMPLE.
         BNM   UIOCNTOK          CHANGE IS POSITIVE.
         A     R1,FFFF           CATER FOR WRAP-AROUND.
         LA    R1,1(,R1)
UIOCNTOK M     R0,TENGRAND       CENTISECONDS AND 2 DECIMAL PLACES.
         DR    R0,R4             GET SIO RATE FOR DASD.
         CVD   R1,WORK
         MVC   29(7,R2),=X'402021204B2020'
         ED    29(7,R2),WORK+5
         L     R1,UIOTIMAF       GET END OF SAMPLE I/O ELAPSED TIME.
         SL    R1,UIOTIMB4       GET I/O TIME CHANGE DURING SAMPLING.
         LR    R6,R1             SAVE IT FOR LATER.
         SLR   R0,R0
         SLDL  R0,7              CONVERT TO MICROSECONDS.
         DR    R0,R4             GET BUSY FRACTION OF TIME.
         CVD   R1,WORK
         MVC   18(7,R2),=X'402021204B2020'
         ED    18(7,R2),WORK+5
         SLR   R1,R1
         SLR   R5,R5
         ICM   R5,3,UIOCNTAF+2   GET END OF SAMPLE SAMPLE I/O COUNT.
         ICM   R1,3,UIOCNTB4+2   GET START OF SAMPLE SAMPLE I/O COUNT.
         SLR   R5,R1             GET I/O SAMPLE COUNT DURING SAMPLE.
         BNM   USAMPLOK          CHANGE IS POSITIVE.
         A     R5,FFFF           CATER FOR WRAP-AROUND.
         LA    R5,1(,R5)
USAMPLOK LTR   R5,R5             ANY I/O'S SAMPLED IN THIS INTERVAL?
         BZ    NOUNITRT          NO, SO NO RESPONSE TIME.
         LR    R1,R6             RE-LOAD I/O ELAPSED TIME.
         SLR   R0,R0
         SLDL  R0,7              CONVERT TO MICROSECONDS.
         DR    R0,R5             GET MICROSECONDS PER I/O AS SAMPLED
         SLR   R0,R0                 BY THE CHANNEL HARDWARE.
         D     R0,ONEGRAND       GET MILLISECONDS PER I/O.
         CVD   R1,WORK
         MVC   41(7,R2),=X'4021204B202020'
         ED    41(7,R2),WORK+5
         B     GTUNITRT          GOT UNIT RESPONSE TIME.
NOUNITRT MVC   42(14,R2),BLANKS  INDICATION OF PRECISELY ZERO I/O'S.
GTUNITRT LH    R0,DASDALOC       LOAD UCB USE COUNT (ASSUME < 32K).
         CVD   R0,WORK           DISPLAY NUMBER OF ALLOCATIONS.
         MVC   64(4,R2),ED3
         ED    64(4,R2),WORK+6
         LH    R0,DASDOPEN       LOAD UCB OPEN COUNT.
         CVD   R0,WORK           DISPLAY NUMBER OF OPEN DCBS.
         MVC   79(4,R2),ED3
         ED    79(4,R2),WORK+6
         TR    LL-79(79,R2),XLATETBL
         LA    R2,LL(,R2)        POINT TO NEXT DETAIL LINE.
GOTUSCRN CLI   UNITMODE,C'D'     DISPLAYING DASD/DATASET DETAILS?
         BE    SHOWUNIT          YES, GO PERFORM GENERAL TIDY-UP.
         LA    R1,UNITCLAS
         LA    R0,8              EIGHT DEVICE CLASS BITS.
         SLR   R15,R15
         ICM   R15,8,UNITTYPE+2  LOAD DEVICE CLASS BITS.
UCLSLOOP LTR   R15,R15           TOP BIT ON?
         BM    GOTUNCLS          YES.
         SLL   R15,1             NO, PROMOTE BITS.
         LA    R1,6(,R1)         POINT TO NEXT CLASS DESCRIPTION.
         BCT   R0,UCLSLOOP       TRY NEXT BIT.
         LA    R1,BLANKS         WHO KNOWS WHAT HAPPENED THERE?
GOTUNCLS MVC   HEADINGU+18(6),0(R1)     SHOW DEVICE CLASS.
*        MVC   HEADINGU+13(3),ULOGUNIT  SHOW UCB NAME IN HEADING.    4D
         UNPK  HEADINGU+13(5),ULOGUNIT  SHOW UCB NAME IN HEADING.    4D
         TR    HEADINGU+13(4),HEX-C'0'  MAKE DISPLAYABLE HEX.        4D
         MVI   HEADINGU+17,C' '         ERASE GARBAGE.               4D
         MVC   HEADINGU+1(4),ULOGSID    SHOW SYSTEM ID IN HEADING.
         SLR   R1,R1
         IC    R1,HDGUCODE              GET CODE FOR HEADING GUFF.
         SLL   R1,2                     CONVERT CODE TO INDEX.
         LA    R1,HDGUGUFF(R1)          POINT TO CORRECT TEXT.
         MVC   HEADINGU+38(3),0(R1)     SHOW CORRECT COLUMN HEADING.
         TM    UNITTYPE+2,X'A0'  TAPE OR DASD?
         BZ    NOUNVLSR          NO, SO NO VOLUME SERIAL NUMBER.
         CLI   THEVOLUM,C' '     USABLE VOLUME SERIAL NUMBER?
         BNH   NOUNVLSR          NO, SO DON'T SHOW IT.
         CLI   THEVOLUM,X'FF'    USABLE VOLUME SERIAL NUMBER?
         BE    NOUNVLSR          NO, SO DON'T SHOW IT.
         MVC   HEADINGU+18(6),THEVOLUM  YES, IT SHOULD BE OKAY.
NOUNVLSR UNPK  HEADINGU+63(3),UNITHHMM(2)
         MVI   HEADINGU+65,C':'  DISPLAY SAMPLE TIME HOURS.
         UNPK  HEADINGU+66(3),UNITHHMM+1(2)
         MVI   HEADINGU+68,C'>'  DISPLAY SAMPLE TIME MINUTES.
         MVC   HEADING,HEADINGU  LOAD HEADING INTO DISPLAY BUFFER.
         TR    HEADING,XLATETBL  ENSURE DISPLAYABLE CHARACTERS.
         MVI   HEADING+28,X'3B'
         MVI   HEADING+44,X'3B'
         B     SHOUSAMP          END OF SHOW-SAMPLE-SPECIFICS.
         SPACE
DASDSAMP MVC   UNITHDGD+41(4),ULOGSID    SHOW SYSTEM ID IN HEADING.
*        MVC   UNITHDGD+51(3),ULOGUNIT   SHOW UCB NAME IN HEADING.   4D
         UNPK  UNITHDGD+51(5),ULOGUNIT   SHOW UCB NAME IN HEADING.   4D
         TR    UNITHDGD+51(4),HEX-C'0'   MAKE DISPLAYABLE HEX.       4D
         MVI   UNITHDGD+55,C' '          ERASE GARBAGE.              4D
         MVC   UNITHDGD+56(6),THEVOLUM   LOAD VOLUME SERIAL NUMBER.
         UNPK  UNITHDGD+63(3),UNITHHMM(2)
         MVI   UNITHDGD+65,C':'          DISPLAY SAMPLE TIME HOURS.
         UNPK  UNITHDGD+66(3),UNITHHMM+1(2)
         MVI   UNITHDGD+68,C')'          DISPLAY SAMPLE TIME MINUTES.
         MVC   HEADING,UNITHDGD  LOAD HEADING INTO DISPLAY BUFFER.
         LA    R4,UNITSCHR-14    POINT TO BEFORE FORMATTED AREA.
         SLR   R6,R6             RESET OBSERVATION COUNTER.
         LH    R0,UDXSCROL       GET FIRST LINE NUMBER FOR DISPLAY.
         B     UDPOSIN1          GO TO FIRST SCROLL LOOP DECREMENT.
UDPOSILP LA    R4,14(,R4)        POINT TO NEXT OBSERVATION.
         LA    R6,1(,R6)         INCREMENT OBSERVATION NUMBER.
         CLC   0(8,R4),BLANKS    ANY ACTIVITY HERE?
         BNH   UDPOSILP          NO, TRY NEXT OBSERVATION.
UDPOSIN1 BCT   R0,UDPOSILP       YES, BUT SCROLLED PAST IT.
         LA    R2,BUFFER         POINT TO START OF DETAIL BUFFER AREA.
         L     R0,LINES          GET THE NUMBER OF LINES ON THE SCREEN.
         AHI   R0,-4             GET THE MAXIMUM DETAIL LINE COUNT.
UDETAILP LA    R4,14(,R4)        POINT TO NEXT OBSERVATION.
         LA    R6,1(,R6)         INCREMENT OBSERVATION NUMBER.
         C     R6,AHUNDRED       PAST SAMPLE OBSERVATION 100?
         BH    USAMPSUM          YES, GO TIDY UP SCREEN.
         CLC   0(8,R4),BLANKS    ANY ACTIVITY HERE?
         BNH   UDETAILP          NO, TRY NEXT OBSERVATION.
         CLI   SELJOBNM,C' '     LOOKING FOR CERTAIN JOB NAMES?
         BNH   UDAOBSOK          NO, CONTINUE.
         ST    R4,WORK2          SAVE CURRENT JOB NAME ADDRESS.
         LA    R1,SELJOBNM       POINT TO JOB NAME PREFIX.
         ST    R1,WORK+4         SAVE ITS ADDRESS.
         LH    R1,JPRFXLEN       GET LENGTH OF JOB NAME PREFIX.
         ST    R1,WORK2+4        SAVE IT IN PARAMETER LIST.
         L     R7,PRFCHKAD       LOAD PREFCHEK ENTRY POINT.
         BASR  R1,R7             COMPARE JOB NAME WITH PREFIX.
         BNE   UDETAILP          SKIP THIS IF MASKING MISMATCH.
UDAOBSOK MVC   0(LL-79,R2),LOWX  SUPPLY 3270 ATTRIBUTES.
         MVI   LL-79(R2),C' '    BLANK A LINE.
         MVC   LL-78(78,R2),LL-79(R2)
         CVD   R6,WORK           DISPLAY SAMPLE OBSERVATION NUMBER.
         MVC   LL-79(4,R2),ED3
         ED    LL-79(4,R2),WORK+6
         MVC   LL-74(8,R2),0(R4) LOAD JOBNAME OR ASID.
         SLR   R1,R1             CLEAR FOR INSERT.
         IC    R1,11(,R4)        SHOW THE TRACK'S RECORD NUMBER.
         CVD   R1,WORK
         MVC   LL-57(4,R2),ED3
         ED    LL-57(4,R2),WORK+6
         IC    R1,10(,R4)        SHOW THE READ/WRITE HEAD NUMBER.
         CVD   R1,WORK
         MVC   LL-61(4,R2),ED3
         ED    LL-61(4,R2),WORK+6
         ICM   R1,3,8(R4)        SHOW THE VOLUME CYLINDER NUMBER.
         CVD   R1,WORK
         MVC   LL-66(6,R2),ED5
         ED    LL-66(6,R2),WORK+5
         ICM   R3,15,UDXTABLE    POINT TO DATA SET EXTENT TABLE.
         BZ    UDETDONE          NO TABLE SO LINE NOW COMPLETE.
         USING UDXENTRY,R3
UDDDTEST CLC   UDXLCCHH(2),8(R4)
         BH    UDDDNEXT          I/O BEFORE STARTING CYLINDER.
         BL    UDDDTRYH          I/O AFTER START - TEST EXTENT HIGH.
         CLC   UDXLCCHH+3(1),10(R4)
         BH    UDDDNEXT          I/O BEFORE STARTING TRACK.
UDDDTRYH CLC   UDXHCCHH(2),8(R4)
         BL    UDDDNEXT          I/O AFTER ENDING CYLINDER.
         BH    UDDDTHIS          I/O BEFORE ENDING CYLINDER.
         CLC   UDXHCCHH+3(1),10(R4)
         BNL   UDDDTHIS          I/O NOT AFTER ENDING TRACK.
UDDDNEXT LA    R3,UDXENTSZ(,R3)  TRY NEXT EXTENT DESCRIPTOR.
         C     R3,UDNXTENT       REACHED END OF TABLE?
         BL    UDDDTEST          NO, CONTINUE SCANNING.
         B     UDETDONE          YES, NOT FOUND SO LINE NOW COMPLETE.
UDDDTHIS SLR   R1,R1             CLEAR FOR INSERT.
         IC    R1,UDXTNTNO       LOAD RELATIVE EXTENT NUMBER.
         LA    R1,1(,R1)         CONVERT TO NATURAL EXTENT COUNT.
         CVD   R1,WORK           SHOW IT.
         MVC   LL-53(4,R2),ED3
         ED    LL-53(4,R2),WORK+6
         MVC   LL-48(44,R2),UDXDSNAM    COPY THE DATA SET NAME.
UDETDONE TR    LL-79(79,R2),XLATETBL    HANDLE BAD DATA SET NAME.
         LA    R2,LL(,R2)        ADJUST BUFFER POINTER.
         BCT   0,UDETAILP        FORMAT THE NEXT LINE.
         DROP  R3                UDXENTRY.
         B     USAMPSUM          SCREEN FULL SO GO TIDY UP.
         SPACE
CYLNDUSE TM    UNITSCYL,X'80'    ANY VALID RESULTS?
         BZ    UNITGRAF          YES, FORMAT AND DISPLAY THEM.
CYLREGRF XC    UNITSCYL(146),UNITSCYL   NO, RESET COUNTERS.
         XC    UNITJCYL(146),UNITJCYL
         XC    UNITHDMV(146),UNITHDMV
         XC    UNITHDJB(146),UNITHDJB
         MVC   UNITJBSY,FFFF
         MVI   UNITOCYL,X'FF'    INVALIDATE PREVIOUS CYLINDER.
         XC    UNITSJOB(20),UNITSJOB  ZERO FIRST TWO JOB ENTRIES.
         MVC   UCYLHI(4),FFFF    PREPARE FOR HIGH AND LOW WATER MARKS.
         LA    R4,UNITSCHR       POINT TO FIRST SAMPLE ENTRY.
         LA    R9,100            GET THE NUMBER OF SAMPLES DONE.
CYLSMPLP TM    12(R4),ULIOADDR   VALID CYLINDER NUMBER PRESENT?
         BZ    NOHDMVMT          NO, NOTHING TO DO FOR THIS SAMPLE.
         LA    R5,UNITSJOB       POINT TO JOB SAMPLE PROFILES.
UJOBLOOP ICM   R1,15,0(R5)       LOAD POINTER TO JOB NAME.
         BZ    NEWUJENT          EMPTY ENTRY FOUND.
         CLC   0(8,R4),0(R1)     ENTRY FOR THIS JOB?
         BE    GOTUJENT          YES, UPDATE IT.
         LA    R5,10(,R5)        NO, POINT TO NEXT ENTRY.
         B     UJOBLOOP          GO TRY IT.
NEWUJENT STCM  R4,B'1111',0(R5)  SAVE POINTER TO JOB NAME.
         SLR   R1,R1
         ICM   R1,B'0011',8(R4)  GET CYLINDER NUMBER OF DYNAMIC SEEK.
         STCM  R1,B'0011',4(R5)  SUPPLY LOWEST CYLINDER NUMBER SO FAR.
         STCM  R1,B'0011',6(R5)  SUPPLY HIGHEST CYLINDER NUMBER SO FAR.
         MVI   9(R5),1           SUPPLY NUMBER OF SAMPLES SO FAR.
         XC    10(10,R5),10(R5)  ENSURE NEXT ENTRY IS ZERO.
         B     DONUJENT          HAVE NOW PROCESSED THIS ENTRY.
GOTUJENT LA    R0,1
         AH    R0,8(,R5)         INCREMENT SAMPLES-FOR-THIS-JOB COUNTR.
         STH   R0,8(,R5)
         SLR   R1,R1
         ICM   R1,B'0011',8(R4)  GET CYLINDER NUMBER OF DYNAMIC SEEK.
         LA    R5,4(,R5)         POINT TO LOWEST CYLINDER NUMBER.
         CLM   R1,B'0011',0(R5)  IS THIS SAMPLE LOWER?
         BL    CHGUJENT          YES, SO CAN'T BE NEW HIGHEST.
         LA    R5,2(,R5)         POINT TO HIGHEST CYLINDER NUMBER.
         CLM   R1,B'0011',0(R5)  IS THIS SAMPLE HIGHER?
         BNH   DONUJENT          NO, SO DON'T CHANGE IT.
CHGUJENT STCM  R1,B'0011',0(R5)  SUPPLY NEW CYLINDER NUMBER.
DONUJENT CLM   R1,B'0011',UCYLOW NEW LOWEST SAMPLED CYLINDER?
         BNL   GTNEWULO          NO.
         STCM  R1,B'0011',UCYLOW YES, SAVE IT.
GTNEWULO CLM   R1,B'0011',UCYLHI NEW HIGHEST SAMPLED CYLINDER?
         BNH   GTNEWUHI          NO.
         STCM  R1,B'0011',UCYLHI YES, SAVE IT.
GTNEWUHI LH    R14,CYLHZSHF      GET CYLINDER SHIFTING VALUE.
         LR    R2,R1             SAVE CYLINDER VALUE.
         SRL   R1,0(R14)         DIVIDE BY EIGHT OR SIXTEEN.
         CH    R1,CYLHZMAX       INDEX TOO BIG?
         BNH   CYLPOSOK          NO, GO AHEAD AND RECORD IT.
         LA    R0,1              YES.
         AH    R0,CYLHZSHF       INCREMENT HORIZONTAL SHIFTING VALUE.
         STH   R0,CYLHZSHF
*        LH    R0,CYLHZSCL
*        SLL   R0,1              DOUBLE HORIZONTAL SCALING FACTOR.
*        STH   R0,CYLHZSCL
         B     CYLREGRF          RESTART CYLINDER CALCULATIONS.
CYLPOSOK SLL   R1,R1             DOUBLE TO GET INDEX.
         LA    R15,UNITSCYL(R1)  POINT TO COUNTER FOR CYLINDER RANGE.
         LA    R0,1              INCREMENT IT.
         AH    R0,0(,R15)
         STH   R0,0(,R15)
         CLI   SELJOBNM,C' '     LOOKING FOR CERTAIN JOB NAMES?
         BNH   NOCYLJOB          NO, CONTINUE.
         ST    R4,WORK2          SAVE CURRENT JOB NAME ADDRESS.
         LA    R0,SELJOBNM       POINT TO JOB NAME PREFIX.
         ST    R0,WORK+4         SAVE ITS ADDRESS.
         LH    R0,JPRFXLEN       GET LENGTH OF JOB NAME PREFIX.
         ST    R0,WORK2+4        SAVE IT IN PARAMETER LIST.
         L     R7,PRFCHKAD       LOAD PREFCHEK ENTRY POINT.
         BASR  R1,R7             COMPARE JOB NAME WITH PREFIX.
         BNE   NOCYLJOB          JOB NAME DOES NOT MATCH "PREFIX".
         LA    R0,1              JOB NAME HAS SPECIFIED "PREFIX".
         AH    R0,UNITJBSY       INCREMENT "PREFIX" MATCH BUSY COUNT.
         STH   R0,UNITJBSY
         B     ISCYLJOB
NOCYLJOB LA    R0,1              INCREMENT NOT-SPECIFIED-JOB COUNTER.
         AH    R0,146(,R15)      FOR THIS CYLINDER RANGE.
         STH   R0,146(,R15)
ISCYLJOB LR    R1,R2             RESTORE CYLINDER NUMBER.
         S     R1,UNITOCYL       GET CYLINDER NUMBER DIFFERENCE.
         ST    R2,UNITOCYL       SAVE THE NEW CYLINDER NUMBER.
         LPR   R1,R1             GET ABSOLUTE VALUE.
         BZ    NOHDMVMT          NO DIFFERENCE SO DON'T LOG A CHANGE.
         LH    R14,CYLHZSHF      GET CYLINDER SHIFTING VALUE.
         SRL   R1,0(R14)         DIVIDE BY EIGHT OR SIXTEEN.
         CH    R1,CYLHZMAX       INDEX TOO BIG?
         BH    NOHDMVMT          YES, CAN'T SHOW IT (SHOULDN'T HAPPEN).
         SLL   R1,R1             DOUBLE TO GET INDEX.
         LA    R15,UNITHDMV(R1)  POINT TO COUNTER FOR CYLINDER RANGE.
         LA    R0,1              INCREMENT IT.
         AH    R0,0(,R15)
         STH   R0,0(,R15)
         CLI   SELJOBNM,C' '     LOOKING FOR CERTAIN JOB NAMES?
         BNH   NOMOVJOB          NO, CONTINUE.
         L     R7,PRFCHKAD       LOAD PREFCHEK ENTRY POINT.
         BASR  R1,R7             COMPARE JOB NAME WITH PREFIX.
         BE    NOHDMVMT          JOB NAME HAS SPECIFIED "PREFIX".
NOMOVJOB LA    R0,1              INCREMENT NOT-SPECIFIED-JOB COUNTER.
         AH    R0,146(,R15)      FOR THIS CYLINDER RANGE.
         STH   R0,146(,R15)
NOHDMVMT LA    R4,14(0,R4)       POINT TO NEXT SAMPLE ENTRY.
         BCT   R9,CYLSMPLP       PROCESS NEXT SAMPLE.
         CLI   SELJOBNM,C' '     LOOKING FOR CERTAIN JOB NAMES?
         BH    SRTUJENT          YES, NOW COUNTED SAMPLES FOR "PREFIX".
         MVC   UNITJBSY,UNITBUSY NO, SO ALL ENTRIES MATCH "PREFIX".
SRTUJENT MVI   WORK,0            MAKE A SWITCH FLAG.
         LA    R5,UNITSJOB       POINT TO FIRST ENTRY.
SORTUJLP OC    10(10,R5),10(R5)  EMPTY ENTRY?
         BZ    SRTUJCHK          YES, SEE IF ANOTHER PASS IS NEEDED.
         CLC   8(2,R5),18(R5)    COMPARE SAMPLE COUNTS.
         BNL   SORTUJOK          LEAVE IN ASCENDING ORDER.
         XC    0(10,R5),10(R5)   OUT OF ORDER SO SWITCH ENTRIES.
         XC    10(10,R5),0(R5)
         XC    0(10,R5),10(R5)
         MVI   WORK,1            REMEMBER THAT A BUBBLE SWITCH OCCURED.
SORTUJOK LA    R5,10(,R5)        POINT TO NEXT ENTRY.
         B     SORTUJLP          CONTINUE BUBBLE PASS.
SRTUJCHK CLI   WORK,0            WAS A BUBBLE SWITCH PERFORMED?
         BNE   SRTUJENT          YES, PERFORM ANOTHER BUBBLE PASS.
UNITGRAF CLI   UNITMODE,C'D'     SHOWING DASD/DATASET EXTENT SAMPLES?
         BE    DASDSAMP          YES, GO TO IT.
         CLI   UNITMODE,C'A'     GRAPHING DISK USAGE BY ADDRESS SPACE?
         BNE   SHOWCYLS          NO, MUST BE GRAPHING CYLINDERS.
         SPACE
         LA    R9,20             GET NUMBER OF DETAIL LINES.
         LA    R5,UNITSJOB       POINT TO JOB ACCESS SAMPLES.
         LA    R2,BUFFER         RESET BUFFER POINTER.
         LH    R14,JOBHZSHF      GET JOB % SHIFTING VALUE.
         MVC   0(LL-79,R2),HIGHX HIGH INTENSITY FOR HEADING.
         MVI   LL-80(R2),X'F3'   PINK FOR HEADING.              (I3279)
         MVC   LL-79(79,R2),JOBUNTLN LABEL COLUMNS AND X-AXIS.
         CLI   JOBHZSHF+1,0      CORRECT SCALE FOR X-AXIS?
         BE    UAXHDGOK          YES, LOAD HEADING AND DISPLAY PAGE.
         MVC   LL-48(48,R2),JOBUNLN2  NO, SUPPLY CORRECT LABELS.
UAXHDGOK LA    R2,LL(,R2)        POINT TO NEXT DETAIL LINE.
         MVC   0(LL-79,R2),LOWX
         MVI   LL-79(R2),C' '    BLANK THE LINE.
         MVC   LL-78(78,R2),LL-79(R2)
         MVC   LL-78(7,R2),=C'*TOTAL*'
         LH    R1,UNITBUSY       GET SAMPLE COUNT FOR ALL JOBS.
         CVD   R1,WORK
         MVC   LL-57(4,R2),ED3
         ED    LL-57(4,R2),WORK+6
         MVI   LL-53(R2),C'%'
         LTR   R1,R1             ANY ACTIVITY SAMPLED?
         BZ    NOTOTCYL          NO, CAN'T SHOW SAMPLED CYLINDER RANGE.
         ICM   R1,B'0011',UCYLOW GET LOW CYLINDER VALUE.
         CVD   R1,WORK
         MVC   LL-71(6,R2),ED5
         ED    LL-71(6,R2),WORK+5
         ICM   R1,B'0011',UCYLHI GET HIGH CYLINDER VALUE.
         CVD   R1,WORK
         MVC   LL-65(6,R2),ED5
         MVI   LL-65(R2),C'-'
         ED    LL-65(6,R2),WORK+5
NOTOTCYL MVI   LL-51(R2),C'+'    SUPPLY THE AXIS.
         MVI   LL-50(R2),C'-'
         MVC   LL-49(49,R2),LL-50(R2)
         MVI   LL-41(R2),C'+'    SUPPLY THE 10% MARKS.
         MVI   LL-31(R2),C'+'
         MVI   LL-21(R2),C'+'
         MVI   LL-11(R2),C'+'
         MVI   LL-1(R2),C'+'
         CLI   JOBHZSHF+1,0      FULL-SCALE PLOT?
         BZ    JOBGRFLP          YES, DONE THE FULL-SCALE 10% MARKS.
         MVI   LL-46(R2),C'+'    SUPPLY THE ODD 10% MARKS.
         MVI   LL-36(R2),C'+'
         MVI   LL-26(R2),C'+'
         MVI   LL-16(R2),C'+'
         MVI   LL-6(R2),C'+'
JOBGRFLP LA    R2,LL(,R2)        POINT TO NEXT DETAIL LINE.
         MVC   0(LL-79,R2),LOWX
         MVI   LL-79(R2),C' '    BLANK THE LINE.
         MVC   LL-78(78,R2),LL-79(R2)
         MVI   LL-51(R2),C'|'    SUPPLY THE AXIS.
         MVI   LL-41(R2),C'|'    SUPPLY THE 10% LINES.
         MVI   LL-31(R2),C'|'
         MVI   LL-21(R2),C'|'
         MVI   LL-11(R2),C'|'
         MVI   LL-1(R2),C'|'
         LTR   R14,R14           FULL-SCALE GRAPH?
         BZ    UJOBFULL          YES, DONE THE FULL-SCALE 10% LINES.
         MVI   LL-46(R2),C'|'    SUPPLY THE ODD 10% LINES.
         MVI   LL-36(R2),C'|'
         MVI   LL-26(R2),C'|'
         MVI   LL-16(R2),C'|'
         MVI   LL-6(R2),C'|'
UJOBFULL ICM   R1,B'1111',0(R5)  POINT TO JOB NAME FOR THIS ENTRY.
         BZ    UJOBEND           END OF LIST SO NO DATA TO GRAPH.
         MVC   LL-79(8,R2),0(R1) LOAD JOB NAME.
         SLR   R1,R1
         ICM   R1,B'0011',4(R5)  GET LOW CYLINDER VALUE.
         CVD   R1,WORK
         MVC   LL-71(6,R2),ED5
         ED    LL-71(6,R2),WORK+5
         ICM   R1,B'0011',6(R5)  GET HIGH CYLINDER VALUE.
         CVD   R1,WORK
         MVC   LL-65(6,R2),ED5
         MVI   LL-65(R2),C'-'
         ED    LL-65(6,R2),WORK+5
         LH    R15,8(,R5)        GET SAMPLE COUNT FOR THIS JOB.
         CVD   R15,WORK
         MVC   LL-57(4,R2),ED3
         ED    LL-57(4,R2),WORK+6
         MVI   LL-53(R2),C'%'
         TR    LL-79(79,R2),XLATETBL
         AR    R15,R14           ADD ZERO OR ONE FOR ROUNDING.
         SRL   R15,0(R14)        LEAVE OR HALVE FOR SCALING.
         MVI   LL-50(R2),X'06'   SUPPLY CODE FOR A YELLOW GRAPHIC.
         CLI   SELJOBNM,C' '     LOOKING FOR CERTAIN JOB NAMES?
         BNH   JOBLINOK          NO, CONTINUE.
         MVC   WORK2(4),0(R5)    SAVE CURRENT JOB NAME ADDRESS.
         LA    R0,SELJOBNM       POINT TO JOB NAME PREFIX.
         ST    R0,WORK+4         SAVE ITS ADDRESS.
         LH    R0,JPRFXLEN       GET LENGTH OF JOB NAME PREFIX.
         ST    R0,WORK2+4        SAVE IT IN PARAMETER LIST.
         L     R7,PRFCHKAD       LOAD PREFCHEK ENTRY POINT.
         BASR  R1,R7             COMPARE JOB NAME WITH PREFIX.
         BNE   JOBLINOK          NOT A SPECIALLY INTERESTING JOB.
         MVI   LL-50(R2),X'03'   SUPPLY CODE FOR A PINK GRAPHIC.
JOBLINOK BCT   R15,PLOTUJOB      DECREMENT FOR ONE ALREADY SUPPLIED.
         B     UJOBGRFD          ONLY ONE POSITION WAS REQUIRED.
UJOBPLOT MVC   LL-49(0,R2),LL-50(R2)            <<< EXECUTED >>>
PLOTUJOB BCTR  R15,0             DECREMENT FOR EXECUTE.
         EX    R15,UJOBPLOT      EXTEND PLOT TO APPROPRIATE PERCENTAGE.
UJOBGRFD LA    R5,10(,R5)        POINT TO NEXT JOB ENTRY.
UJOBEND  CHI   R9,2              SECOND LAST JOB PLOT LINE?
         BNE   NOLSPACE          NO.
         CLI   DASDLSPC,C' '     ANY LSPACE DATA?
         BE    NOLSPACE          NO.
         LR    R1,R2             GET CURRENT BUFFER POINTER.
         LA    R0,LL             GET THE LINE LENGTH.
         SR    R1,R0             POINT TO THE PREVIOUS LINE.
         MVC   LL-40(40,R1),DASDLSPH
         MVC   LL-40(40,R2),DASDLSPC
NOLSPACE BCT   R9,JOBGRFLP       PROCESS NEXT JOB ENTRY.
         TR    LL-79(79,R2),XLATETBL
         B     UGRAFHDG          LOAD HEADING AND DISPLAY PAGE.
         SPACE
SHOWCYLS LA    R7,20             GET NUMBER OF DETAIL LINES.
         MH    R7,CYLVTSCL       GET MAXIMUM VERTICAL GRAPH VALUE.
         LA    R2,BUFFER         RESET BUFFER POINTER.
CYLGRFLP MVC   0(LL-79,R2),LOWX
         MVI   LL-79(R2),C' '    BLANK THE LINE.
         MVC   LL-78(78,R2),LL-79(R2)
         MVI   LL-74(R2),C'|'    SUPPLY THE AXIS.
         SLR   R0,R0
         LR    R1,R7             GET THE VALUE OF THIS LINE.
         D     R0,TEN            DIVIDE BY TEN.
         LTR   R0,R0             ANY REMAINDER?
         BNZ   CYLAXSOK          YES.
         CVD   R7,WORK           NO, CALLIBRATION REQUIRED.
         MVC   LL-79(4,R2),ED3
         ED    LL-79(4,R2),WORK+6
         MVI   LL-75(R2),C'%'    DENOTE PERCENTAGE.
         MVI   LL-74(R2),C'+'    MARK THE AXIS.
         MVI   LL-73(R2),C'-'    MAKE A DASHED LINE FOR EASY READING.
         MVC   LL-72(72,R2),LL-73(R2)
CYLAXSOK LA    R0,73             NUMBER OF CYLINDER RANGES SUPPORTED.
         LA    R4,UNITHDMV       POINT TO HEAD MOVEMENT VECTOR.
         LA    R5,LL-73(,R2)     POINT TO FIRST DATA COLUMN.
         CLI   UNITMODE,C'M'     GRAPHING HEAD MOVEMENT?
         BE    CYLINELP          YES, SO DO IT.
         L     R15,UCYLXADR      NO, POINT TO CYLINDER MAP SUBROUTINE.
         BASR  R14,R15           INVOKE IT.
         LA    R4,UNITSCYL       POINT TO CYLINDER RANGE VECTOR.
CYLINELP CH    R7,0(,R4)         GRAPH MARK REQUIRED?
         BH    CYLINOK1          NO.
         MVI   0(R5),X'03'       YES, SUPPLY CODE FOR A PINK GRAPHIC.
CYLINOK1 CH    R7,146(,R4)       GRAPH MARK REQUIRED?
         BH    CYLINOK2          NO.
         MVI   0(R5),X'06'       YES, SUPPLY CODE FOR A YELLOW GRAPHIC.
CYLINOK2 LA    R4,2(,R4)         POINT TO NEXT CYLINDER RANGE COUNT.
         LA    R5,1(,R5)         POINT TO NEXT DATA COLUMN.
         BCT   R0,CYLINELP       PROCESS NEXT COLUMN.
         LA    R2,LL(,R2)        POINT TO NEXT DETAIL LINE.
         SH    R7,CYLVTSCL       GET PERCENTAGE VALUE OF NEXT LINE.
         BP    CYLGRFLP          FORMAT NEXT LINE OF GRAPH.
         LA    R1,7*LL+BUFFER    POINT TO SEVENTH DETAIL LINE.
         LA    R0,9              GET NUMBER OF LINES TO LABEL.
         LA    R15,UNITFREQ      POINT TO LABEL TEXT.
CYLYLOOP MVI   4(R1),X'F8'       HIGH INTENSITY.
         MVI   LL-80(R1),X'F3'   PINK.                          (I3279)
         MVC   LL-79(1,R1),0(R15)     LABEL Y-AXIS.
         MVI   LL-78(R1),X'25'   MAKE REST OF LINE TURQUOISE/LOW.
         LA    R1,LL(,R1)        POINT TO NEXT DISPLAY LINE.
         LA    R15,1(,R15)       POINT TO NEXT TEXT LABEL BYTE.
         BCT   R0,CYLYLOOP
         MVC   0(LL-79,R2),LOWX
         MVC   LL-79(79,R2),CYLXAXIS
         TR    LL-79(79,R2),XLATETBL
         LA    R2,LL(,R2)        POINT TO NEXT DETAIL LINE.
         MVC   0(LL-79,R2),HIGHX
         MVI   LL-80(R2),X'F3'   PINK.                          (I3279)
         LH    R1,CYLHZSHF       GET CYLINDER SHIFTING VALUE.
         AHI   R1,-3             MAKE ZERO LOWEST POSSIBLE VALUE.
         SLL   R1,2              MULTIPLY BY FOUR FOR INDEX.
         L     R1,CYLXLBAD(R1)   POINT TO CORRECT CALLIBRATION VALUES.
         MVC   LL-79(79,R2),0(R1) DISPLAY THEM.
         TR    LL-79(79,R2),XLATETBL
         MVI   LL-76(R2),X'25'   MAKE AXIS TURQUOISE/LOW.
UGRAFHDG LA    R2,LL(,R2)        POINT TO NEXT DETAIL LINE.
         MVC   UNITHDGC+1(4),ULOGSID      SHOW SYSTEM ID IN HEADING.
*        MVC   UNITHDGC+13(3),ULOGUNIT    SHOW UCB NAME IN HEADING.  4D
         UNPK  UNITHDGC+13(5),ULOGUNIT    SHOW UCB NAME IN HEADING.  4D
         TR    UNITHDGC+13(4),HEX-C'0'    MAKE DISPLAYABLE HEX.      4D
         MVI   UNITHDGC+17,C' '           ERASE GARBAGE.             4D
         MVC   UNITHDGC+18(6),THEVOLUM    LOAD VOLUME SERIAL NUMBER.
         UNPK  UNITHDGC+63(3),UNITHHMM(2)
         MVI   UNITHDGC+65,C':'           DISPLAY SAMPLE TIME HOURS.
         UNPK  UNITHDGC+66(3),UNITHHMM+1(2)
         MVI   UNITHDGC+68,C' '           DISPLAY SAMPLE TIME MINUTES.
         MVC   HEADING,UNITHDGC  LOAD HEADING INTO DISPLAY BUFFER.
         CLI   UNITMODE,C'C'     CYLINDER ACTIVITY GRAPH?
         BE    SHOWUNIT          YES, SO DISPLAY IT.
         MVC   HEADING+28(24),=CL24'  HEAD MOVEMENT DISTANCE'
         CLI   UNITMODE,C'M'     HEAD MOVEMENT GRAPH?
         BE    SHOWUNIT          YES, SO DISPLAY IT.
         MVC   HEADING+28(24),=CL24' DISK ACCESS BY JOB NAME'
         SPACE
SHOWUNIT TR    HEADING,XLATETBL  ENSURE DISPLAYABLE CHARACTERS.
SHOUSAMP LH    R9,UNITCPU        LOAD CCVUTILP AS AT SAMPLING TIME.
         CVD   R9,WORK           CONVERT IT TO DECIMAL.
         MVC   BUSY,ED3          MOVE IN THE EDIT MASK.
         ED    BUSY,WORK+6       EDIT THE OUTPUT FIELD.
         C     R2,PAGEND         BUFFER FULL?
         BNL   PUTALLUN          YES, SHOW THE PAGE.
         MVC   0(LL-79,R2),SYSLINE   LOAD SUMMARY LINE ATTRIBUTE BYTES.
         MVC   LL-79(79,R2),UNITSUMM LOAD SUMMARY LINE.
         CLI   ULOGMODE,C'L'     ANY LOG ACTVITY?
         BL    USUMRYOK          NO, DON'T INDICATE ANYTHING.
         BH    ULOLDREC          YES, RECORD READ FROM LOG.
         MVC   LL-79(9,R2),=C'(LOGGING)'
         CLI   ULOGSBTY+1,0      HAS THIS RECORD ALREADY BEEN LOGGED?
         BE    USUMRYOK          NO.
         MVC   LL-8(8,R2),=C'(LOGGED)'
         B     USUMRYOK          YES.
ULOLDREC MVC   LL-79(10,R2),=C'(FROM LOG)'
         L     R1,ULOGDATE       GET THE LOG RECORD DATE.
         L     R7,DTCONVAD       GET DATE CONVERSION ENTRY POINT.
         BASR  R14,R7            GET LOG DATE YY/MM/DD.
         MVI   LL-10(R2),C'('
         MVC   LL-9(8,R2),WORK
         MVI   LL-1(R2),C')'
USUMRYOK LA    R2,LL(,R2)        ADJUST BUFFER POINTER.
         C     R2,PAGEND         BUFFER FULL?
         BNL   PUTALLUN          YES, SHOW THE PAGE.
         MVC   0(4,R2),BLNKREST  ERASE REST OF SCREEN.
         LA    R2,4(,R2)         ADJUST BUFFER POINTER.
PUTALLUN LA    R1,HOME           POINT TO START OF SCREEN BUFFER.
         LR    R0,R2             POINT TO END OF SCREEN BUFFER.
         SR    R0,R1             GET SCREEN BUFFER LENGTH.
PUTSCRNU BAS   R14,SCREENIO      CALL SCREEN I/O HANDLER.
         CLI   DOWNCNTR,C' '     ARE WE IN AUTO REFRESH MODE?
         BH    MOREUNIT          YES, REDO THE STATISTICS.
         TM    MODESW2,XFLG      NO, SUBROUTINE EXIT REQUIRED?
         BZ    GETCMDUN          NO, PROCESS SUBCOMMAND.
         CLOSE IMPULOG           YES, CLOSE THE UNIT LOGGING FILE.
         MVI   ULOGMODE,C' '     FLAG IT.
         BR    R9                RETURN TO MAINLINE VIA SCREENIO.
GETCMDUN CLI   INBUFF,7          PF7/19?
         BE    INCRVSCL          YES, INCREMENT AXIS COMPRESSION FACTOR
         CLI   INBUFF,8          PF8/20?
         BE    DECRVSCL          YES, DECREMENT AXIS COMPRESSION FACTOR
         CLI   INBUFF,10         PF10/22?
         BE    DECRHSCL          YES, DECREMENT AXIS COMPRESSION FACTOR
         CLI   INBUFF,11         PF11/23?
         BE    INCRHSCL          YES, INCREMENT AXIS COMPRESSION FACTOR
         CLI   INCHARS,C' '      CONTINUE REQUESTED?
         BE    UNITDATA          YES.
CMDSCANU L     R3,THEUCBAD       POINT TO UCB IF ANY.
         USING UCBOB,R3
         CLI   INCHARS,C'S'      REQUEST FOR SHOW-SAMPLES MODE?
         BE    SETMODEU          YES.
         CLI   INCHARS,C'M'      REQUEST FOR GRAPH-HEAD-MOVEMENT MODE?
         BE    SETMODEU          YES.
         CLI   INCHARS,C'A'      REQUEST FOR GRAPH-ASID-ACCESS MODE?
         BE    SETMODEU          YES.
         CLI   INCHARS,C'C'      REQUEST FOR GRAPH-CYLINDERS MODE?
         BE    SETMODEU          YES.
         CLI   INCHARS,C'D'      REQUEST FOR DASD/DATASET-DETAIL MODE?
         BE    SETMODEU          YES.
         CLI   INCHARS,C'V'      SET VERTICAL SCALING FACTOR?
         BE    SETVTSCL          YES.
         CLI   INCHARS,C'I'      SET SAMPLING WAIT INTERVAL?
         BE    SETUWAIT          YES.
         CLI   INCHARS,C'L'      COMMENCE UNIT LOGGING?
         BE    UNITLOGL          YES.
         CLI   INCHARS,C'R'      COMMENCE UNIT LOG ANALYSIS?
         BE    UNITLOGR          YES.
         CLI   INCHARS,C'T'      TERMINATE LOG ACTIVITY?
         BE    UNITLOGT          YES.
         CLI   INCHARS,C'J'      REQUEST PROMPT FOR NEW JOBNAME PREFIX?
         BE    UNITJOBP          YES.
         CLI   INCHARS,C'U'      REQUEST PROMPT FOR NEW UNIT?
         BNE   GIVEHLPU          NO.
FINDUNIT MVI   UNITPRMP,X'C1'    RESET WCC.
         LA    R0,UNTPRMPL       FULL SCREEN TPUT THE PROMPT MESSAGE.
REFNDUNT LA    R1,UNITPRMP
         BAS   R14,SCREENIO      ISSUE PROMPT AND GET UNIT ADDRESS.
         CLI   INBUFF+4,0        INPUT FROM THE FIRST SCREEN LINE?
         BE    FINDUNIT          YES, UNEXPECTED SO REDRIVE THE PROMPT.
         MVC   THEUNIT,INCHARS   NO, EXTRACT SPECIFIED UCB NAME.
UNITSCAN XC    THEUCBAD,THEUCBAD RESTART UCB SCAN.
         L     R4,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R4
         L     R3,CVTUCBA        POINT TO FIRST UCB.
         DROP  R4                CVT.
         TM    OSLEVEL,CVTUCBSV  UCB SERVICES AVAILABLE?
         BNO   FRSTUNIT          NO, FOLLOW STATIC UCB CHAIN.
         L     R9,USCANADR       YES, POINT TO UCBSCAN SUBROUTINE.
         USING UUCBSCAN,R9
         XC    USCNWORK,USCNWORK CLEAR WORK AREA FOR THIS UCB SCAN.
         DROP  R9                UUCBSCAN.
         XC    USCANDEV,USCANDEV RESET SPECIFIC DEVICE EXAM FLAG.
         BR    R9                GO INVOKE UCBSCAN.
UNITDATA MVI   UDXSCROL+1,1      SHOW NEW DATA FROM FIRST LINE IN "UD".
         CLI   ULOGMODE,C'R'     READING THE UNIT LOG?
         BE    ULOGMDR           YES, GO DO IT.
MOREUNIT ICM   R3,15,THEUCBAD    RESTORE UCB ADDRESS.
         BZ    FINDUNIT          NO PREVIOUS UNIT, ISSUE PROMPT FOR 1.
NEXTUNIT ICM   R3,15,UCBNXUCB    GET NEXT UCB ADDRESS.
         BNZ   FRSTUNIT          MUST BE USING STATIC UCB CHAIN.
         TM    OSLEVEL,CVTUCBSV  UCB SERVICES AVAILABLE?
         BNO   LOSTUNIT          NO, END OF STATIC UCB CHAIN REACHED.
         XC    USCANDEV,USCANDEV RESET SPECIFIC DEVICE EXAM FLAG.
         L     R9,USCANADR       YES, POINT TO UCBSCAN SUBROUTINE.
         BR    R9                GO INVOKE UCBSCAN.
FRSTUNIT UNPK  WORK(5),UCBCHAN(3) UNPACK UCBCHAN.
         TR    WORK(4),HEX-C'0'  ENSURE PRINTABLE HEX DIGITS.
         LA    R0,4              GET LENGTH OF UCB NAME.
         ST    R0,WORK2+4        SAVE IT IN PARAMETER LIST.
         LA    R0,THEUNIT        GET ADDRESS OF USER SPECIFICATION.
         ST    R0,WORK+4         SAVE IT IN PARAMETER LIST.
         LA    R0,WORK           POINT TO UCB NAME.
         ST    R0,WORK2          SAVE IT IN PARAMETER LIST.
         L     R7,PRFCHKAD       LOAD PREFCHEK ENTRY POINT.
         BASR  R1,R7             COMPARE UCB LABEL WITH PREFIX.
         BNE   NEXTUNIT          DIDN'T MATCH, SO TRY NEXT UCB.
         TM    UCBSTAT,UCBALOC   IS THE DEVICE ALLOCATED?
         BO    UDOTHIS           YES, DON'T SUPPRESS SAMPLING IT.
         CLI   THEUNIT,C'*'      GENERIC UNIT SCAN?
         BE    NEXTUNIT          YES, DON'T SAMPLE UNUSED DEVICE.
         CLI   THEUNIT+1,C'*'    GENERIC UNIT SCAN?
         BE    NEXTUNIT          YES, DON'T SAMPLE UNUSED DEVICE.
         CLI   THEUNIT+2,C'*'    GENERIC UNIT SCAN?
         BE    NEXTUNIT          YES, DON'T SAMPLE UNUSED DEVICE.
         CLI   THEUNIT+3,C'*'    GENERIC UNIT SCAN?
         BE    NEXTUNIT          YES, DON'T SAMPLE UNUSED DEVICE.
UDOTHIS  ST    R3,THEUCBAD       SAVE UCB ADDRESS.
*        MVC   ULOGUNIT(7),UCBNAME LOAD UCB NAME AND TYPE FIELDS.    4D
         MVC   ULOGUNIT,UCBCHAN  COPY HEX DEVICE NUMBER.             4D
         MVC   UNITTYPE,UCBTYP   COPY UCB TYPE.                      4D
         CLC   THEVOLUM,UCBVOLI  SAME VOLUME AS PREVIOUSLY?
         BE    UDXFREED          YES, DO NOT FREE THE EXTENT TABLE.
         MVC   THEVOLUM,UCBVOLI  NO, SAVE THE VOLUME SERIAL NUMBER.
         LM    R0,R1,UDXTREGS    LOAD UDXTABLE FREEMAIN VALUES.
         LTR   R1,R1             ANY TABLE TO FREE?
         BZ    UDXFREED          NO, SO SKIP FREEMAIN.
         FREEMAIN RU,LV=(0),A=(1),SP=SUBPOOL
         SLR   R0,R0
         ST    R0,UDXTABLE       INDICATE TABLE HAS BEEN FREED.
         XC    UDXLARGE(40),UDXLARGE  INDICATE NO LARGEST EXTENT KNOWN.
UDXFREED IC    R0,UNITMODE       SAVE CURRENT MODE.
         MVI   UNITMODE,C'S'     FORCE MODE S FOR NON-DASD.
         CLI   UNITTYPE+2,X'20'  DASD?
         BNE   REDOUNIT          NO, GO SAMPLE IT.
         STC   R0,UNITMODE       YES, RESTORE DISPLAY MODE.
         TM    UCBSTAT,UCBONLI   ONLINE DASD?
         BZ    USCALEDA          NO.
         TM    UCBFLA,UCBNRY     DEVICE NOT READY?
         BNZ   USCALEDA          YES.
         TM    UCBDMCT,UCBMOUNT  MOUNT PENDING?
         BO    USCALEDA          YES.
         CLI   UCBVTOC+2,1       R OF VTOC TTR0 IS 1 (AS PER OS DISK)?
         BNE   USCALEDA          NO.
         ICM   R0,15,UDXTABLE    DOES THE EXTENT TABLE ALREADY EXIST?
         BNZ   REDOUNIT          YES, AVOID RE-READING THE VTOC.
         L     R9,UDSNXADR       NO, POINT TO VTOC MAP SUBROUTINE.
         BASR  R14,R9            INVOKE IT.
         B     REDOUNIT          DO NOT ALTER SCALE FROM FORMAT-4 DSCB.
USCALEDA CLI   UNITTYPE+3,X'0B'  EIGHT CYLS PER RANGE OKAY?
         BH    DBLDENS           NO, DOUBLE IT.
         MVI   CYLHZSHF+1,3      YES, SUPPLY SHIFTING VALUE.
*        MVI   CYLHZSCL+1,8      OKAY FOR ANYTHING LESS THAN A 3330-1.
         B     REDOUNIT          GO SAMPLE THIS DISK.
DBLDENS  MVI   CYLHZSHF+1,4      HANDLE 3330-1/F479, 3375, 3380/F6425,
*        MVI   CYLHZSCL+1,16     3390 AND F6421 DEVICES.
         B     REDOUNIT          GO SAMPLE THIS DISK.
LOSTUNIT OC    THEUCBAD,THEUCBAD WAS THIS A SCAN RESUMPTION?
         BNZ   UNITSCAN          YES, RESTART FROM BEGINNING.
         LA    R0,UNTERRLN       NO, REQUESTED UNIT DOES NOT EXIST.
         MVI   UNITPRMP,X'C5'    SET BELL BIT ON IN WCC.
         B     REFNDUNT          REPROMPT FOR NEW UNIT ADDRESS.
SETMODEU MVC   UNITMODE,INCHARS  SUPPLY NEW MODE.
         LTR   R3,R3             LOOKING AT ANYTHING YET?
         BZ    FINDUNIT          NO, GO FIND SOMETHING.
         CLI   UNITTYPE+2,X'20'  LOOKING AT A DISK?
         BE    UREGRAPH          YES.
         MVI   UNITMODE,C'S'     NO, FORCE DISPLAY MODE FOR NON-DASD.
         B     PUTALLUN          RESHOW SCREEN WITHOUT CHANGE.
UREGRAPH CLI   UNITMODE,C'S'     SHOWING SAMPLES?
         BE    SHOWSAMP          YES.
         B     CYLNDUSE          NO, SHOW A GRAPH.
INCRVSCL CLI   UNITMODE,C'S'     DISPLAYING A GRAPH?
         BE    SAMEUNIT          NO, IGNORE REQUEST.
         CLI   UNITMODE,C'D'     DISPLAYING DASD/DATASET EXTENTS?
         BE    UDSCRLUP          YES, SCROLL UP.
         CLI   UNITMODE,C'A'     DISPLAYING ADDRESS SPACE GRAPH?
         BE    SAMEUNIT          YES, IGNORE REQUEST.
         CLI   CYLVTSCL+1,5      ALREADY AT MAXIMUM COMPRESSION?
         BNL   SAMEUNIT          YES, DON'T INCREASE IT.
         LA    R0,1              NO.
         AH    R0,CYLVTSCL       INCREMENT IT.
         STH   R0,CYLVTSCL
         B     UREGRAPH          RESHOW GRAPH.
UDSCRLUP LH    R0,UDXSCROL       GET THE CURRENT FIRST LINE NUMBER.
         AHI   R0,4              ALLOW FOR HEADINGS AND SUMMARIES.
         S     R0,LINES          GET NEW FIRST LINE NUMBER.
         BP    UDSCRLOK          RESULT IS VALID.
UDXATTOP LA    R0,1              CAN'T GO UP BEYOND FIRST LINE.
UDSCRLOK STH   R0,UDXSCROL       SAVE THE NEW FIRST LINE NUMBER.
         B     DASDSAMP          REDISPLAY FROM NEW LINE NUMBER.
DECRVSCL CLI   UNITMODE,C'S'     DISPLAYING A GRAPH?
         BE    SAMEUNIT          NO, IGNORE REQUEST.
         CLI   UNITMODE,C'D'     SHOWING DASD/DATASET EXTENT SAMPLES?
         BE    UDSCRLDN          YES, SCROLL DOWN.
         CLI   UNITMODE,C'A'     DISPLAYING ADDRESS SPACE GRAPH?
         BE    SAMEUNIT          YES, IGNORE REQUEST.
         LH    R0,CYLVTSCL       GET VERTICAL AXIS COMPRESSION FACTOR.
         BCT   R0,DECRNOT0       DECREMENT IT.
         B     UREGRAPH          RESHOW GRAPH.
DECRNOT0 STH   R0,CYLVTSCL       SAVE NEW VALUE IF STILL POSITIVE.
         B     UREGRAPH          RESHOW GRAPH.
UDSCRLDN LH    R0,UDXSCROL       GET THE CURRENT FIRST LINE NUMBER.
         A     R0,LINES          SCROLL DOWN A PAGE.
         AHI   R0,-4             ALLOW FOR HEADINGS AND SUMMARIES.
         STH   R0,UDXSCROL       SAVE THE NEW FIRST LINE NUMBER.
         LA    R0,1              LIMIT SCROLLING TO KEEP LAST PAGE FULL
         AH    R0,UNITJBSY       GET NUMBER OF LINES PLUS ONE.
         AHI   R0,4              ALLOW FOR HEADINGS AND SUMMARIES.
         S     R0,LINES          GET MAXIMUM FIRST LINE NUMBER.
         CH    R0,UDXSCROL       IS SCROLLING DOWN A PAGE ALRIGHT?
         BNL   DASDSAMP          YES, REDISPLAY FROM NEW LINE NUMBER.
         LTR   R0,R0             NO, SO IS THERE MORE THAN ONE PAGE?
         BNP   UDXATTOP          NO, SO KEEP STARTING FROM FIRST LINE.
         B     UDSCRLOK          YES, SO SCROLL DOWN THE MAXIMUM.
DECRHSCL CLI   UNITMODE,C'A'     DISPLAYING ADDRESS SPACE GRAPH?
         BNE   SAMEUNIT          NO, IGNORE REQUEST.
         MVI   JOBHZSHF+1,0      YES, USE FULL-SCALE GRAPH.
         B     UREGRAPH          RESHOW GRAPH.
INCRHSCL CLI   UNITMODE,C'A'     DISPLAYING ADDRESS SPACE GRAPH?
         BNE   SAMEUNIT          NO, IGNORE REQUEST.
         MVI   JOBHZSHF+1,1      YES, USE HALF-SCALE GRAPH.
         B     UREGRAPH          RESHOW GRAPH.
SETVTSCL CLI   INCHARS+1,C'1'    IS SCALING FACTOR TOO LOW?
         BL    GIVEHLPU          YES, SHOW HELP PANEL.
         CLI   INCHARS+1,C'5'    IS SCALING FACTOR TOO HIGH?
         BH    GIVEHLPU          YES, SHOW HELP PANEL.
         MVC   CYLVTSCL+1(1),INCHARS+1
         NI    CYLVTSCL+1,X'0F'  CONVERT CHARACTER TO BINARY.
SAMEUNIT LTR   R3,R3             LOOKING AT ANYTHING YET?
         BZ    FINDUNIT          NO, GO FIND SOMETHING.
         CLI   UNITMODE,C'S'     YES, IN A GRAPH DISPLAY MODE?
         BE    PUTALLUN          NO, RESHOW SCREEN WITHOUT CHANGE.
         B     CYLNDUSE          YES, GO REDRAW THE GRAPH.
SETUWAIT CLI   INCHARS+1,C'0'    NUMERIC COEFFICIENT?
         BL    GIVEHLPU          NO, SHOW HELP PANEL.
         CLI   INCHARS+1,C'9'    NUMERIC COEFFICIENT?
         BH    GIVEHLPU          NO, SHOW HELP PANEL.
         MVC   USAMPLTM+3(1),INCHARS+1
         NI    USAMPLTM+3,X'0F'  CONVERT CHARACTER TO BINARY.
         LTR   R3,R3             LOOKING AT ANYTHING YET?
         BZ    FINDUNIT          NO, GO FIND SOMETHING.
         B     PUTALLUN          YES, RESHOW SCREEN WITHOUT CHANGE.
UNITJOBP XC    SELJOBNM,SELJOBNM ERASE PREVIOUS JOBNAME.
         SLR   R1,R1
         CLI   INCHARS+1,C'/'    ERASE PREVIOUS PREFIX REQUEST?
         BE    NOJOBUNT          YES, DO IT.
UGETJNAM LA    R1,JPRFXMSG
         LA    R0,JOBSELEN       FULL SCREEN TPUT THE PROMPT MESSAGE.
         BAS   R14,SCREENIO      ISSUE PROMPT AND GET PREFIX.
         CLI   INBUFF+4,0        INPUT FROM THE FIRST SCREEN LINE?
         BE    UGETJNAM          YES, UNEXPECTED SO REDRIVE THE PROMPT.
         MVC   SELJOBNM,INCHARS  EXTRACT SPECIFIED PREFIX.
         LH    R1,TGETLEN        GET LENGTH OF INPUT STREAM.
         AHI   R1,-6             GET LENGTH OF TEXT.
NOJOBUNT STH   R1,JPRFXLEN       STORE PREFIX LENGTH.
         OI    UNITSCYL,X'80'    INVALIDATE COUNTERS.
         B     UREGRAPH          RECONSTRUCT SCREEN IMAGE FOR DISPLAY.
UNITLOGL BAS   R14,ULOGCHEK      VERIFY IMPULOG FILE EXISTENCE.
UGETTHRS LA    R0,UTHRSHLN       FULL SCREEN TPUT THE PROMPT MESSAGE.
         LA    R1,UTHRESH
         BAS   R14,SCREENIO      ISSUE PROMPT AND GET PERCENTAGE.
         CLI   INBUFF+4,0        INPUT FROM THE FIRST SCREEN LINE?
         BE    UGETTHRS          YES, UNEXPECTED SO REDRIVE THE PROMPT.
         LA    R14,2             MAXIMUM NUMBER OF DIGITS SUPPORTED.
         LA    R15,INCHARS       POINT TO INPUT AREA.
         SLR   R0,R0
         SLR   R1,R1
UTHRSHLP CLI   0(R15),C'0'       NUMERIC CHARACTER?
         BL    GOTLOGTH          NO, END OF STORY.
         MH    R0,TEN+2          PROMOTE PREVIOUS DIGIT.
         NI    0(R15),X'0F'      ERASE ZONE.
         IC    R1,0(,R15)        LOAD DIGIT VALUE.
         AR    R0,R1             ACCUMULATE.
         LA    R15,1(,R15)       POINT TO NEXT DIGIT.
         BCT   R14,UTHRSHLP      GET NEXT DIGIT.
GOTLOGTH STH   R0,ULGTHRSH       SAVE % BUSY THRESHOLD FOR LOGGING.
         CVD   R0,WORK           SHOW IT IN NEXT PROMPT.
         OI    WORK+7,X'0F'
         UNPK  UTHRSCHR,WORK+6(2)
         CLI   ULOGMODE,C'L'     ALREADY LOGGING?
         BE    ULOGTHIS          YES, BUT MAYBE LOG THIS NOW.
         CLI   ULOGMODE,C' '     ANY LOG ACTIVITY?
         BE    OPNOTPUT          NO, GO OPEN FOR OUTPUT.
         CLOSE IMPULOG           YES, CLOSE IT FIRST.
OPNOTPUT OPEN (IMPULOG,OUTPUT)   OPEN FOR OUTPUT.
         OI    MODESW2,CLNF      FLAG CLEAN-UP REQUIRED UPON EXIT.
*        SLR   R0,R0
*        ST    R0,ULOGCNTR       RESET LOG RECORD COUNT.
         MVI   ULOGMODE,C'L'     REMEMBER LOGGING MODE.
ULOGTHIS CLI   ULOGSBTY+1,0      HAS THIS RECORD ALREADY BEEN LOGGED?
         BNE   NOULOG            YES, DON'T LOG THIS ACTIVITY.
         CLC   UNITBUSY,ULGTHRSH IS BUSY % UP TO THRESHOLD?
         BL    SAMEUNIT          NO, DON'T LOG THIS ACTIVITY.
         MVI   ULOGSBTY+1,1      SUPPLY RECORD SUB-TYPE.
         LA    R1,ULOGPUT
         BASSM R5,R1             WRITE A RECORD.
*        LA    R0,1
*        A     R0,ULOGCNTR       INCREMENT LOG RECORD COUNT.
*        ST    R0,ULOGCNTR
         B     NOULOG            GET NEXT REQUEST.
UNITLOGR BAS   R14,ULOGCHEK      VERIFY IMPULOG FILE EXISTENCE.
         CLI   ULOGMODE,C'R'     READING IMPULOG ALREADY?
         BE    ULOGMDR           YES.
         CLI   ULOGMODE,C' '     ANY LOG ACTIVITY?
         BE    OPNINPUT          NO, GO OPEN FOR INPUT.
         CLOSE IMPULOG           YES, CLOSE IT FIRST.
OPNINPUT OPEN (IMPULOG,INPUT)    OPEN FOR INPUT.
         OI    MODESW2,CLNF      FLAG CLEAN-UP REQUIRED UPON EXIT.
         MVI   ULOGMODE,C'R'     REMEMBER LOGGING MODE.
         LTR   R3,R3             WAS UNIT SPECIFIED PREVIOUSLY?
         BP    ULOGMDR           YES, CONTINUE.
         DROP  R3                UCBOB.
         L     R3,CVTPTR(,0)     NO, ARBITRARILY CHOOSE TO POINT TO
         USING CVT,R3
         L     R3,CVTSYSAD       SYSRES UCB WHILE READING IMPULOG.
         DROP  R3                CVT.
         USING UCBOB,R3
         UNPK  WORK(5),UCBCHAN(3) UNPACK UCBCHAN.
         TR    WORK(4),HEX-C'0'
         MVC   THEUNIT,WORK      COPY THE UCB NAME.
         ST    R3,THEUCBAD       SYSRES NOW DEFAULT VOLUME AFTER E-O-F.
ULOGMDR  DS    0H
         MVC   WORK(6),THEVOLUM  SAVE PREVIOUS VOLUME SERIAL NUMBER.
         LA    R1,ULOGGET
         BASSM R5,R1             READ A RECORD.
         OI    UNITSCYL,X'80'    INVALIDATE COUNTERS.
         CLC   THEVOLUM,WORK     SAME VOLUME AS PREVIOUSLY?
         BE    UREGRAPH          YES, CONSTRUCT THE NEXT DISPLAY.
         L     R9,UDSNXADR       NO, POINT TO VTOC MAP SUBROUTINE.
         BASR  R14,R9            INVOKE IT.
         B     UREGRAPH          CONSTRUCT NEXT DISPLAY.
EOULOG   LA    R1,1
         SLL   R1,31             GET NEW AMODE BIT.
         LA    R0,ULOGCLOS       GET TARGET ADDRESS.
         OR    R1,R0             REVERT TO 31-BIT AMODE AND
         BSM   R0,R1             CLOSE THE LOGGING FILE.
UNITLOGT MVI   UCMSG,X'C5'       SOUND ALARM FOR CLOSE FAILURE.
         MVI   UCMSG+5,X'F8'     HIGH INTENSITY FOR CLOSE FAILURE.
         MVI   UCMSG+8,X'F2'     RED MESSAGE FOR CLOSE FAILURE. (I3279)
         CLI   ULOGMODE,C' '     ANY LOG ACTIVITY?
         BE    PUTUCMSG          NO, SHOW MESSAGE WITHOUT A CLOSE.
ULOGCLOS CLOSE IMPULOG           YES, CLOSE THE LOGGING FILE.
         NI    MODESW2,255-CLNF  CLEAN-UP FOR EXIT NO LONGER REQUIRED.
         MVI   ULOGMODE,C' '     FLAG IT.
         MVI   UCMSG,X'C1'       DON'T SOUND ALARM FOR CLOSE SUCCESS.
         MVI   UCMSG+5,X'F0'     LOW INTENSITY FOR CLOSE SUCCESS.
         MVI   UCMSG+8,X'F4'     GREEN MESSAGE FOR CLOSE OKAY.  (I3279)
PUTUCMSG LA    R1,UCMSG          POINT TO "UNIT-LOG CLOSED" MESSAGE.
         LA    R0,UCMSGLEN       GET "UNIT-LOG CLOSED" MESSAGE LENGTH.
         B     PUTSCRNU          SHOW IT AND GET THE NEXT REQUEST.
GIVEHLPU MVC   INBUFF(8),SBLST   REQUEST SUBCOMMAND LIST FROM TUTORIAL.
         MVI   TGETLEN+1,8       SUPPLY LENGTH OF INPUT TO PARSE.
         LNR   R0,R11            MAKE REGISTER 0 NEGATIVE FOR PARSE.
         B     PUTSCRNU          GO DISPLAY HELP PANEL.
ULOGCHEK L     R1,PSATOLD        GET POINTER TO CURRENT TCB.
         L     R1,12(0,R1)       POINT TO TIOT.
         LA    R1,24(0,R1)       POINT TO TIOELNGH.
         SLR   R0,R0             PREPARE FOR IC.
CHKUNITL CLC   4(8,R1),=C'IMPULOG '
         BER   R14               FILE EXISTS SO RETURN.
         IC    R0,0(0,R1)        GET TIOT ENTRY LENGTH.
         AR    R1,R0             POINT TO NEXT TIOT ENTRY.
         CLI   0(R1),0           ZERO LENGTH ENTRY?
         BNE   CHKUNITL          NO, CHECK OUT THIS ENTRY.
         LA    R1,NUMSG          YES, POINT TO "NO UNIT LOG" MESSAGE.
         LA    R0,NUMSGLEN       GET "NO UNIT LOG" MESSAGE LENGTH.
         B     PUTSCRNU          DISPLAY ERROR MESSAGE.
ULOGPUT  PUT   IMPULOG,ULOGREC   WRITE A RECORD.
         BSM   R0,R5             RETURN TO CALLER.
ULOGGET  GET   IMPULOG,ULOGREC   READ A RECORD.
         BSM   R0,R5             RETURN TO CALLER.
         SPACE
         TITLE 'UNIT SAMPLING MONITOR - VARIABLES AND CONSTANTS'
GQUTOKEN DC    F'0'              TOKEN FOR GQSCAN.
THEUCBAD DC    A(0)              ADDRESS OF UCB OF UNIT BEING SAMPLED.
*                                POSSIBLE X-AXIS LABELS VECTOR.
CYLXLBAD DC    A(CYLXLBLS,CYLXLBL2,CYLXLBL3,CYLXLBL4,CYLXLBL5)
USAMPLTM DC    F'1'              SAMPLING INTERVAL OF 10 MILLISECONDS.
*LOGCNTR DC    F'0'              COUNT OF RECORDS WRITTEN TO IMPULOG.
USCANADR DC    A(UUCBSCAN)       ADDRESS OF UCBSCAN SUBROUTINE.
UDSNXADR DC    A(UNITDSNX)       ADDRESS OF VTOC MAP SUBROUTINE.
UCYLXADR DC    A(UNITCYLX)       ADDRESS OF CYLINDER MAP SUBROUTINE.
UDNXTENT DC    A(0)              ADDRESS OF NEXT DS EXTENT TABLE ENTRY.
USCANDEV DC    H'0'              DEVICE NUMBER REQUIRED FROM UCBSCAN.
CYLVTSCL DC    H'1'              VERTICAL AXIS SCALING FACTOR.
*YLHZSCL DC    H'8'              HORIZONTAL AXIS SCALING FACTOR.
CYLHZSHF DC    H'3'              CYLINDER RANGE BIT SHIFTING VALUE.
CYLHZMAX DC    H'72'             MAXIMUM GRAPH COLUMN INDEX.
JOBHZSHF DC    H'0'              JOB ACCESS BIT SHIFTING VALUE.
ULGTHRSH DC    H'0'              BUSY PERCENT THRESHOLD FOR LOGGING.
UDXSCROL DC    H'1'              FIRST LINE NUMBER FOR DISPLAY IN "UD".
HDGUGUFF DC    CL12'DTL FSN CYL '
UNITMODE DC    C'S'
ULOGMODE DC    C' '
UNITCLAS DC    C'*TAPE**COMM**DASD**DISP***UR***CHRD**CCAD**MISC*'
SYSVTOC  DC    CL8'SYSVTOC '     RESERVE MAJOR NAME.
GQVOLSER DC    CL6' '            RESERVE MINOR NAME.
DASDLSPH DC    CL40'FREE  CYLNDS TRACKS EXTNTS LARGEST-EXTNT'
         SPACE
         PRINT NOGEN
         SPACE
IMPULOG  DCB   DSORG=PS,MACRF=(GM,PM),DDNAME=IMPULOG,RECFM=FB,         +
               LRECL=2048,BLKSIZE=0,BUFNO=2,EODAD=EOULOG
         SPACE
         PRINT GEN
         SPACE
HEADINGU DC    CL71' SSSS   UNIT=XXX  VOLSER    |JOB/ASID DTL CH|  <<I/+
               O SAMPLES - HH:MM>> '
UNITHDGC DC    CL71' SSSS   UNIT=XXX  VOLSER    CYLINDER RANGE FREQUENC+
               Y GRAPH  -  HH:MM   '
UNITFREQ EQU   UNITHDGC+43,9
UNITHDGD DC    CL71'# JOB/ASID   CYL HD REC EXT-DATASETNAME (SSSS UNIT=+
               XXX  VOLSER HH:MM)  '
UNITLNAT DC    X'2841001BF0402842F3'
IMUNITLN DC    CL79'IM DATA:  ###%BSY ###%DEFER ###%¬RDY ###%Q''D ###.#+
               #Q-AV ###%RSVD ###.##RSV-AV  '
OSUNITLN DC    CL79'OS DATA:  000.00%BSY 000.00SIO/S 00.000S-RSPTM  FIL+
               ES:  ### ALLOCATED  ### OPEN'
JOBUNTLN DC    CL79'JOB/ASID   CYL-RANGE   BUSY 0       10%       20%  +
                    30%       40%       50%'
JOBUNLN2 DC    CL48'10%  20%  30%  40%  50%  60%  70%  80%  90% 100%'
CYLXAXIS DC    CL79'   0%+---------/\--------/\--------/\--------/\----+
               ----/\--------/\--------/\->'
CYLXLBLS DC    CL79'CYL  0         80       160       240       320    +
                  400       480       560  '
CYLXLBL2 DC    CL79'CYL  0        160       320       480       640    +
                  800       960       1120 '
CYLXLBL3 DC    CL79'CYL  0        320       640       960       1280   +
                  1600      1920      2240 '
CYLXLBL4 DC    CL79'CYL  0        640       1280      1920      2560   +
                  3200      3840      4480 '
CYLXLBL5 DC    CL79'CYL  0        1280      2560      3840      5120   +
                  6400      7680      8960 '
UNITPRMP DC    X'C11140403C40400011C5C2&LOW'
         DC    C'ENTER THE 4-HEX DIGIT NAME OF THE UNIT TO BE SELECTED'
         DC    X'&MED',C'===>',X'1BC94E132841F4'
THEUNIT  DC    X'00000000'
         DC    X'2841001BF0C22842F5114BD3'
         DC    C'(USE',X'&HIGH',C'*',X'&LOW'
         DC    C'FOR NON-SPECIFIC PLACE-HOLDER CHARACTERS)'
UNTPRMPL EQU   *-UNITPRMP
         DC    X'11D1E2&HIGH'
         DC    C'REENTER - THE PREVIOUSLY SPECIFIED UNIT WAS NOT FOUND'
UNTERRLN EQU   *-UNITPRMP
UTHRESH  DC    X'C11140403C40400011C5C2&LOW'
         DC    C'ENTER SAMPLED BUSY PERCENTAGE THRESHOLD FOR LOGGING'
         DC    X'&MED',C'===>',X'1BC94E132841F4'
UTHRSCHR DC    X'0000'
         DC    X'2841001BF0C2'
UTHRSHLN EQU   *-UTHRESH
NUMSG    DC    X'C5115DD81DF82842F22841F2' "NO UNIT LOG" MESSAGE.
         DC    CL39'     IMPULOG IS NOT PRE-ALLOCATED      '
         DC    X'1140402842001D402841F4130000'
NUMSGLEN EQU   *-NUMSG
UCMSG    DC    X'C1115DD81DF02842F42841F2' "UNIT-LOG CLOSED" MESSAGE.
         DC    CL39' IMPULOG CLOSED BY USER REQUEST OR EOF '
         DC    X'1140402842001D402841F4130000'
UCMSGLEN EQU   *-UCMSG
         SPACE
         LTORG
         SPACE
         DS    0H
         TITLE 'UNIT CONTROL BLOCK DATA ACQUISITION ROUTINE'
         USING UUCBSCAN,R9
UUCBSCAN L     R15,CNFGTKAD      POINT TO IOCTOKEN AREA.
         ICM   R0,3,USCANDEV     SAMPLING A SPECIFIC DEVICE?
         BNZ   UUCBSAME          YES, NEED THE SAME UCB AS BEFORE.
         UCBSCAN COPY,           SCAN UCBS, EVEN IF NOT APF'D.         +
               WORKAREA=USCNWORK,                                      +
               UCBAREA=USCNUCB,                                        +
               CMXTAREA=USCNCMXT,                                      +
               DEVNCHAR=USCNDEVN,                                      +
               UCBPAREA=USCNPRFX,                                      +
               DYNAMIC=YES,                                            +
               RANGE=ALL,                                              +
               NONBASE=YES,                                            +
               DEVCLASS=ALL,                                           +
               IOCTOKEN=(R15),                                         +
               LINKAGE=SYSTEM,                                         +
               MF=(E,USCN,COMPLETE)
         LTR   R15,R15           WAS A UCB RETURNED BY UCBSCAN?
         BNZ   LOSTUNIT          NO, NO MORE UCB ENTRIES.
         LA    R3,USCNUCB        YES, POINT TO THE RETURNED UCB COPY.
         MVC   USCANDEV,UCBCHAN  SAVE UCBCHAN FOR DEVICE SAMPLING.
         B     FRSTUNIT          JUMP OVER STATIC UCB CHAIN STUFF.
         SPACE
UUCBSAME XC    USAMEWRK,USAMEWRK CLEAR WORK AREA FOR THIS UCB SCAN.
         LA    R3,USCANDEV       POINT TO REQUIRED UCBCHAN VALUE.
         UCBSCAN COPY,           SCAN UCBS, EVEN IF NOT APF'D.         +
               WORKAREA=USAMEWRK,                                      +
               UCBAREA=USCNUCB,                                        +
               CMXTAREA=USCNCMXT,                                      +
               DEVNCHAR=USCNDEVN,                                      +
               UCBPAREA=USCNPRFX,                                      +
               DEVN=(R3),                                              +
               DYNAMIC=YES,                                            +
               RANGE=ALL,                                              +
               NONBASE=YES,                                            +
               DEVCLASS=ALL,                                           +
               IOCTOKEN=(R15),                                         +
               LINKAGE=SYSTEM,                                         +
               MF=(E,USCN,COMPLETE)
         LTR   R15,R15           WAS A UCB RETURNED BY UCBSCAN?
         BNZ   UNITQUIT          NO, TERMINATE SAMPLING.
         LA    R3,USCNUCB        YES, POINT TO THE RETURNED UCB COPY.
         CLC   USCANDEV,UCBCHAN  WAS THE REQUIRED UCB RETURNED?
         BNE   UNITQUIT          NO, TERMINATE SAMPLING.
         B     UNITINIT          YES, NOW CHECK THE DEVICE STATUS.
         DROP  R9,R3             UUCBSCAN, UCBOB.
         SPACE 2
USCNWORK DC    XL100'00'         UCBSCAN WORKAREA.
USCNPRFX DC    XL48'00'          UCBSCAN UCB PREFIX AREA.
USCNUCB  DC    XL48'00'          UCBSCAN UCB BASE AREA.
USCNCMXT DC    XL64'00'          UCBSCAN UCB COMMON EXTENSION AREA.
USCNDEVN DC    CL4'DEV#'         UCBSCAN UCB DEVICE NUMBER AREA.
USAMEWRK DC    XL100'00'         UCBSCAN WORKAREA.
         UCBSCAN MF=(L,USCN)     UCBSCAN PARAMETER LIST.
         TITLE 'UNIT SAMPLING DATA SET NAME EXTENT ASSIGNMENT ROUTINE'
         USING UNITDSNX,R9
UNITDSNX STM   R14,R12,SAVE+12   SAVE GENERAL REGISTER VALUES.
         LA    R3,SECWORKA       POINT TO THE NEW SAVE AREA.
         ST    R3,8(,R13)        CHAIN SAVE AREAS.
         ST    R13,4(,R3)
         DROP  R13               GOTAREA.
         LR    R13,R3
         USING SECWORKA,R13
         XC    UDXLARGE(40),UDXLARGE  INDICATE NO LARGEST EXTENT KNOWN.
         XC    UNITSJOB(20),UNITSJOB  CLEAR A WORK AREA.
         ICM   R1,15,UDXTABLE    DOES THE EXTENT TABLE ALREADY EXIST?
         BNZ   UDXTBLOK          YES, SKIP GETMAIN.
         LA    R0,UDXENTSZ       GET THE SIZE OF AN EXTENT ENTRY.
         SLL   R0,10             ALLOW FOR 1024 EXTENT ENTRIES.
         ST    R0,UDXTBSIZ       SAVE THE TABLE'S SIZE.
         GETMAIN RC,LV=(0),SP=SUBPOOL LOC=(ANY,ANY)
         LTR   R15,R15           WAS THE GETMAIN SUCCESSFUL?
         BNZ   UDVTCXIT          NO, RETURN TO CALLER.
         LA    R1,0(,1)          YES, ENSURE ADDRESS FORMAT.
         ST    R1,UDXTABLE       SAVE THE TABLE'S ADDRESS.
UDXTBLOK XC    0(UDXENTSZ,R1),0(R1)   CREATE AN ENTRY FOR VOLUME LABEL.
         USING UDXENTRY,R1
         MVC   UDXDSNAM,BLANKS
         MVC   UDXDSNAM(20),=CL20'*** VOLUME LABEL ***'
         DROP  R1                UDXENTRY.
         LA    R1,UDXENTSZ(,R1)  POINT PAST FIRST ENTRY.
         ST    R1,UDNXTENT       SAVE FIRST VACANT ENTRY ADDRESS.
         MVC   VLSERVA,THEVOLUM  GET THE VOLUME TO ALLOCATE.
         MVI   TSVA4+5,8         RESET DDNAME LENGTH.
         MVC   RTDDNVA,BLANKS    RESET DDNAME.
         MVI   TSVA5+5,44        RESET DSNAME LENGTH.
         MVC   RTDSNVA,BLANKS    RESET DSNAME.
         LA    R1,VTOCALOC       POINT TO DYNALLOC PARAMETER LIST.
         DYNALLOC                ALLOCATE THE VOLUME.
         LTR   R15,R15           WAS ALLOCATION SUCCESSFUL?
         BNZ   UDVTCXIT          NO, RETURN TO CALLER.
         LA    R1,RTDDNVA        POINT TO THE DDNAME.
         LA    R0,1              LOAD ENTRY CODE FOR OPEN.
         LA    R15,VTOCCOMM      GET VTOC READ ENTRY POINT.
         BASSM R14,R15           OPEN THE VTOC.
         LTR   R15,R15           DID THE OPEN WORK?
         BNZ   UDVTCFRE          NO, FREE THE VTOC.
UDVTCGET SLR   R0,R0             LOAD ENTRY CODE FOR READ.
         LA    R15,VTOCCOMM      GET VTOC READ ENTRY POINT.
         BASSM R14,R15           GET A DSCB.
         CHI   R15,4             END-OF-FILE?
         BE    UDVTCLOS          YES, GO CLOSE THE VTOC.
         BH    UDVTCGET          IF I/O ERROR GET THE NEXT VTOC TRACK.
         CLI   8+44(R1),C'4'     IS THIS A FORMAT-4 DSCB?
         BE    UDISFMT1          YES, TREAT IT AS A FORMAT-1 DSCB.
         CLI   8+44(R1),C'1'     IS THIS A FORMAT-1 DSCB?
         BNE   UDISFMT3          NO, SO GO SEE IF IT IS A FORMAT-3.
UDISFMT1 SLR   R0,R0
         ICM   R0,1,8+59(R1)     LOAD THE NUMBER OF EXTENTS.
         BZ    UDVTCGET          IGNORE DSCB IF ZERO EXTENTS.
         LA    R3,3
         CR    R0,R3             MORE THAN THREE EXTENTS?
         BNH   UDF1EXOK          NO.
         LR    R0,R3             YES, BUT NOT DESCRIBED BY THIS DSCB.
UDF1EXOK LA    R2,8+105(,R1)     POINT TO THE FIRST EXTENT DESCRIPTOR.
UDF1EXLP BAS   R14,UDGETENT      GET THE NEXT EXTENT ENTRY.
         USING UDXENTRY,R3
         MVC   UDXDSNAM,8(R1)    LOAD DATA SET NAME.
         MVC   UDSCBADR,0(R1)    LOAD CCHHR OF THIS DSCB.
         MVC   UDSCBPTR,8+135(R1) PUT CCHHR OF RELATED DSCB.
         MVC   UDXTNTCT,8+59(R1) LOAD DATA SET EXTENT COUNT.
         LA    R2,10(,R2)        POINT TO THE NEXT EXTENT DESCRIPTOR.
         BCT   R0,UDF1EXLP       PROCESS THE NEXT EXTENT.
         CLI   UDXDSNAM,X'04'    IS IT THE VTOC?
         BNE   UDVTCGET          NO, PROCESS THE NEXT DSCB.
         MVC   UDXDSNAM,BLANKS   YES, ERASE GARBAGE. (HOPE ONLY 1 EXT.)
         MVC   UDXDSNAM(32),=CL32'*** VOLUME TABLE OF CONTENTS ***'
         B     UDVTCGET          PROCESS THE NEXT DSCB.
         DROP  R3                UDXENTRY.
UDISFMT3 CLI   8+44(R1),C'3'     IS THIS A FORMAT-3 DSCB?
         BNE   UDVTCGET          NO, SO IGNORE THIS DSCB.
         LA    R0,4              YES, GET MAXIMUM EXTENT COUNT IN KEY.
         LA    R2,8+4(,R1)       POINT TO THE FIRST EXTENT DESCRIPTOR.
         BAS   R6,UDF3EXLP       PROCESS EXTENTS IN KEY.
         LA    R0,9              GET MAXIMUM EXTENT COUNT IN DATA.
         LA    R2,8+45(,R1)      POINT TO THE FIRST EXTENT DESCRIPTOR.
         BAS   R6,UDF3EXLP       PROCESS EXTENTS IN DATA.
         B     UDVTCGET          PROCESS THE NEXT DSCB.
UDF3EXLP CLI   1(R2),0           UNUSED EXTENT SO NO MORE EXTENTS?
         BE    UDVTCGET          YES, CAN'T HAVE 1ST EXTENT IN A FMT-3.
         BAS   R14,UDGETENT      NO, GET THE NEXT EXTENT ENTRY.
         USING UDXENTRY,R3
         MVC   UDXDSNAM(5),0(R1) LOAD DATA SET NAME WITH DSCB CCHHR.
         MVC   UDSCBADR,0(R1)    LOAD CCHHR OF THIS DSCB.
         MVC   UDSCBPTR,8+135(R1) PUT CCHHR OF RELATED DSCB.
         DROP  R3                UDXENTRY.
         LA    R2,10(,R2)        POINT TO THE NEXT EXTENT DESCRIPTOR.
         BCT   R0,UDF3EXLP       PROCESS THE NEXT EXTENT.
         BR    R6                RETURN TO THE CALLER - DSCB-3 ROUTINE.
UDVTCLOS LA    R0,2              LOAD ENTRY CODE FOR CLOSE.
         LA    R15,VTOCCOMM      GET VTOC READ ENTRY POINT.
         BASSM R14,R15           OPEN THE VTOC.
UDVTCFRE MVC   DDNAMVF,RTDDNVA   COPY THE CORRECT DDNAME.
         LA    R1,VTOCFREE       POINT TO DYNALLOC PARAMETER LIST.
         DYNALLOC                DEALLOCATE THE VTOC.  (HOPE FOR 0 RC.)
UDSNSRCH MVI   WORK,0            CLEAR A FLAG.
         L     R1,UDXTABLE       POINT TO THE TABLE.
         L     R15,UDNXTENT      END OF TABLE.
UDSNLOOP CLI   2(R1),0           PROPER DSNAME LOADED IN ENTRY?
         BNE   UDSNOKAY          YES.  (OR HH IS OVER 255!!)
         L     R3,UDXTABLE       NO, POINT TO FIRST TABLE ENTRY.
         USING UDXENTRY,R3
UDMTCHLP CLC   UDSCBPTR,0(R1)    ENTRY RELATED TO THIS DSCB?
         BNE   UDPNTRLK          NO, TRY NEXT TABLE ENTRY.
         MVC   0(44,R1),UDXDSNAM YES, COPY THE DATA SET NAME.
         CLI   2(R1),0           PROPER DSNAME NOW LOADED IN ENTRY?
         BNE   UDSNOKAY          YES.  (OR HH IS OVER 255!!)
         OI    WORK,1            NO, ANOTHER PASS NEEDED.  (ICF VSAM.)
         B     UDSNOKAY          CONTINUE THIS PASS THROUGH TABLE.
UDPNTRLK LA    R3,UDXENTSZ(,R3)  POINT TO THE NEXT ENTRY.
         C     R3,UDNXTENT       REACHED END OF TABLE?
         BL    UDMTCHLP          NO, CONTINUE.
         MVC   0(44,R1),BLANKS   YES, CLEAR DATA SET NAME.
         MVC   0(8,R1),UNKNOWN   INDICATE ORPHAN DSCB.
         DROP  R3                UDXENTRY.
UDSNOKAY LA    R1,UDXENTSZ(,R1)  POINT TO THE NEXT ENTRY.
         C     R1,UDNXTENT       REACHED END OF TABLE?
         BL    UDSNLOOP          NO, CONTINUE.
         CLI   WORK,0            IS ANOTHER PASS REQUIRED?
         BNE   UDSNSRCH          YES, GO DO IT.
         DROP  R13               SECWORKA.
UDVTCXIT L     R13,4(,R13)       POINT TO OLD SAVE AREA.
         USING GOTAREA,R13
         ST    R15,SAVE+16       SAVE THE RETURN CODE.
         LM    R14,R12,SAVE+12   RESTORE REGISTERS.
         BR    R14               RETURN TO CALLER.
         SPACE
         DROP  R13               GOTAREA.
         USING SECWORKA,R13
UDGETENT DS    0H                DATA SET EXTENT REGISTERING ROUTINE.
         L     R3,UDNXTENT       POINT TO THE FIRST VACANT ENTRY.
         L     R15,UDXTABLE      POINT TO THE START OF THE TABLE.
         A     R15,UDXTBSIZ      POINT JUST PAST THE END OF THE TABLE.
         CR    R15,R3            ANY VACANT ENTRY LEFT?
         BNH   UDVTCLOS          NO, CLOSE AND DEALLOCATE THE VTOC.
         LA    R15,UDXENTSZ(,R3) YES, POINT TO THE NEXT ENTRY.
         ST    R15,UDNXTENT      THIS IS NOW THE FIRST VACANT ENTRY.
         USING UDXENTRY,R3
         MVC   UDXTNTNO(9),1(R2) COPY THE EXTENT DESCRIPTOR.
         STM   R14,R12,12(R13)   SAVE REGISTERS WITH NEW ENTRY ADDRESS.
         CLI   8(R1),X'04'       ENTRY FOR THE VTOC?
         BNE   ULRGPARS          NO, CHECK FOR LARGE EXTENT.
         MVC   UTRKSCYL,8+64(R1) YES, GET THE CYLINDER TRACK COUNT.
         LH    R15,8+62(R1)      GET THE NUMBER OF CYLINDERS ON DISK.
         LTR   R15,R15           SENSIBLE VALUE?
         BNP   UDXTEXIT          NO, DON'T KNOW WHAT HAPPENED THERE.
         LA    R5,3              LOAD MINIMUM SHIFTING VALUE.
         SRL   R15,0(R5)         SHIFT BY THIS VALUE.
UDXHZTST STH   R5,CYLHZSHF       SAVE NEW VALUE FOR GRAPHS.
         CH    R15,CYLHZMAX      WILL ALL CYLINDERS FIT ON SCREEN?
         BNH   UDXTEXIT          YES, RETURN TO CALLER.
         LA    R5,1(,R5)         NO, ADD ONE TO SHIFT VALUE.
         SRL   R15,1             SHIFT CYLINDER COUNT ANOTHER ONE.
         B     UDXHZTST          GO TEST THE NEW VALUE.
ULRGPARS DS    0H                LARGE EXTENT CHECKING ROUTINE.
         LH    R5,UDXHCCHH       GET EXTENT END CYLINDER NUMBER.
         SH    R5,UDXLCCHH       GET NUMBER OF CYLINDERS SPANNED.
         MH    R5,UTRKSCYL       CONVERT THIS TO A TRACK COUNT.
         SH    R5,UDXLCCHH+2     SUBTRACT STARTING TRACK NUMBER.
         AH    R5,UDXHCCHH+2     ADD ENDING TRACK NUMBER.
         LA    R5,1(,R5)         GET THE TOTAL EXTENT TRACK COUNT.
         LA    R0,10             TEN LARGE EXTENTS TO BE RETAINED.
         LA    R6,UDXLARGE       POINT TO LARGE EXTENT ENTRY LIST.
         LA    R7,UNITSJOB       POINT TO LARGE EXTENT SIZE LIST.
UDSIZELP CLM   R5,3,0(R7)        IS NEW ENTRY BIGGER?
         BH    UDINSERT          YES, INSERT THIS INTO THE LIST.
         LA    R6,4(,R6)         POINT TO NEXT ADDRESS IN LIST.
         LA    R7,2(,R7)         POINT TO NEXT SIZE IN LIST.
         BCT   R0,UDSIZELP       TRY FOR NEXT POSITION IN LIST.
         B     UDXTEXIT          NOT IN TOP TEN SO RETURN.
UDINSERT L     R4,0(,R6)         REMEMBER OLD ADDRESS.
         ICM   R5,12,0(R7)       REMEMBER OLD SIZE.
         ST    R3,0(,R6)         INSERT NEW ADDRESS.
         STH   R5,0(,R7)         INSERT NEW SIZE.
         LR    R3,R4             PROMOTE OLD ADDRESS.
         SRL   R5,16             PROMOTE OLD SIZE.
         LA    R6,4(,R6)         POINT TO NEXT ADDRESS IN LIST.
         LA    R7,2(,R7)         POINT TO NEXT SIZE IN LIST.
         BCT   R0,UDINSERT       PERCOLATE DOWN THE LIST.
UDXTEXIT LM    R14,R12,12(R13)   RESTORE REGISTERS.
         BR    R14               RETURN TO CALLER.
         DROP  R3,R13,R9         UDXENTRY, SECWORKA, UNITDSNX.
         USING GOTAREA,R13
         SPACE
UTRKSCYL DC    H'15'             NUMBER OF TRACKS PER CYLINDER.
         LTORG
         TITLE 'UNIT SAMPLING CYLINDER RANGE DESIGNATION SUBROUTINE'
         USING UNITCYLX,R15
UNITCYLX STM   R14,R12,SAVE+12   SAVE GENERAL REGISTER VALUES.
         LA    R1,BUFFER+LL      POINT TO SECOND DETAIL LINE.
         CR    R1,R2             ON EXTENT INDICATION LINE?
         BNE   UCYLXKEY          NO, CHECK IF LEGEND LINE.
         SPACE
         LA    R0,10             SHOW UP TO TEN LARGEST EXTENTS.
         LA    R3,UDXLARGE+36    START WITH TENTH LARGEST.
         USING UDXENTRY,R4
URANGELP L     R4,0(,R3)         POINT TO LARGE EXTENT ENTRY.
         LR    R14,0
         BCTR  R14,0
         STC   R14,WORK2         SUPPLY INDICATION CHARACTER.
         OI    WORK2,X'30'       USE APL NUMERIC SUPERSCRIPTS.
         BAS   R14,USHOWALC      INDICATE ITS ALLOCATION RANGE.
         AHI   R3,-4             POINT TO NEXT LARGER EXTENT ENTRY.
         BCT   R0,URANGELP       PROCESS NEXT LARGER EXTENT.
         ICM   R4,15,UDXTABLE    POINT TO DATA SET EXTENT LIST.
         BZ    UCYLEXIT          IT DOES NOT EXIST.
         LA    R4,UDXENTSZ(,R4)  POINT TO SECOND (IE. VTOC) ENTRY.
         CLI   UDXDSNAM,C'*'     REALLY THE VTOC ENTRY?
         BNE   UCYLEXIT          NO, FORGET ALL THIS.
         MVI   WORK2,C'V'        SUPPLY INDICATION CHARACTER.
         BAS   R14,USHOWALC      INDICATE ITS ALLOCATION RANGE.
UCYLEXIT LM    R14,R12,SAVE+12   RESTORE REGISTERS.
         BR    R14               RETURN TO CALLER.
         SPACE
UCYLXKEY LA    R9,LL+LL(,R1)     POINT TO FOURTH DETAIL LINE.
         LA    R4,UDXLARGE       POINT TO LARGE EXTENT ADDRESS LIST.
         LA    R3,X'30'          GET FIRST INDICATION CHARACTER CODE.
         CR    R9,R2             ON LEGEND INDICATION LINE?
         BNE   UCYL2KEY          NO, TRY FOR SECOND LEGEND LINE.
         MVC   LL-70(6,2),=CL6'V-VTOC'
USHOWLRG ICM   R4,15,0(R4)       POINT TO DATA SET EXTENT LIST.
         BNP   UCYLEXIT          IT DOES NOT EXIST.
         XC    LL(256,R2),LL(R2) CLEAR A TRANSLATE TABLE AREA.
         LA    R6,LL(3,R2)       POINT TO INDICATION CHARACTER SLOT.
         STC   R3,0(,R6)         FLAG THE SLOT.
         MVC   LL-60(2,R2),BLANKS
         TRT   LL-73(73,R1),LL(R2)
         BZ    UINDOKAY          LARGE EXTENT RANGE NOT INDICATED.
         LR    R2,R9             RESTORE BUFFER POINTER AFTER TRT.
         STC   R3,LL-60(,R2)     SUPPLY INDICATION CHARACTER.
         MVI   LL-59(R2),C'-'    INDICATE SYMBOL IS RELATED TO DSNAME.
UINDOKAY MVC   LL-58(14,R2),=C'EXTENT ZZ9 OF '
         SLR   R1,R1             CLEAR FOR INSERT.
         ICM   R1,1,UDXTNTNO     LOAD RELATIVE EXTENT NUMBER.
         BNZ   UMULTEXT          NOT FIRST EXTENT SO MULTI-EXTENT D/S.
         CLI   UDXTNTCT,1        SINGLE-ENTENT DATA SET?
         BNE   UMULTEXT          NO, SO SHOW EXTENT NUMBER.
         MVC   LL-58(44,R2),UDXDSNAM  YES, JUST SHOW THE DATA SET NAME.
         MVC   LL-14(14,R2),BLANKS    PREPARE FOR TIDY UP.
UCYLTIDY CLI   0(R5),C'-'        IS THIS A DASHED LINE?
         BNE   UCYLEXIT          NO, LEGEND LINE NOW COMPLETE.
         LA    R1,LL-1(,R2)      YES, POINT TO LAST BYTE ON LINE.
UCTIDYLP CLI   0(R1),C' '        IS IT BLANK?
         BNE   UCYLEXIT          NO, LEGEND LINE NOW COMPLETE.
         MVI   0(R1),C'-'        YES, SO PUT A DASH THERE.
         BCTR  R1,0              BACK UP A BYTE.
         B     UCTIDYLP          EXTEND DASHES BACKWARDS IF NECESSARY.
UMULTEXT LA    R1,1(,R1)         CONVERT TO NATURAL EXTENT COUNT.
         CVD   R1,WORK           SHOW IT.
         MVC   LL-52(4,R2),ED3
         ED    LL-52(4,R2),WORK+6
         MVC   LL-44(44,R2),UDXDSNAM  SHOW THE DATA SET NAME.
UCYLEDLP CLI   LL-51(R2),C' '    LEADING BLANK TO SUPPRESS?
         BNE   UCYLTIDY          NO, NOW CHECK IF EXTRA DASHES NEEDED.
         MVC   LL-51(50,R2),LL-50(R2)
         MVI   LL-1(R2),C' '     YES, SQUEEZE IT OUT.
         B     UCYLEDLP          NOW CHECK IT AGAIN.
         SPACE
UCYL2KEY LA    R9,LL(,R9)        POINT TO NEXT LEGEND LINE.
         LA    R3,1(,R3)         INCREMENT INDICATION CHARACTER CODE.
         CH    R3,UCMAXCHR       DONE SUPPORTED LARGE EXTENT COUNT?
         BH    UCYLEXIT          YES, NO MORE LEGEND LINES.
         LA    R4,4(,R4)         POINT TO NEXT LARGE EXTENT LIST ENTRY.
         CR    R9,R2             ON LEGEND INDICATION LINE?
         BH    UCYLEXIT          NO, NOT UP TO IT YET.
         BE    USHOWLRG          YES, SHOW WHOSE RANGE WAS INDICATED.
         B     UCYL2KEY          NO, SEE IF ON NEXT LEGEND LINE.
         SPACE
USHOWALC LTR   R4,R4             ANY EXTENT ENTRY TO PLOT?
         BNPR  R14               NO, SO RETURN.
         LH    R9,CYLHZSHF       YES, GET CYLINDERS/COLUMN SHIFT SCALE.
         ICM   R1,15,UDXLCCHH    GET EXTENT START ADDRESS.
         BZR   R14               INVALID SO RETURN.
         SRL   R1,16(R9)         GET X-AXIS LOCATION OF EXTENT START.
         LA    R1,0(R1,R5)       POINT TO CORRESPONDING COLUMN.
         MVC   0(1,R1),WORK2     INDICATE EXTENT BOUNDARY.
         ST    R1,WORK+4         REMEMBER THIS ADDRESS.
         ICM   R1,15,UDXHCCHH    GET EXTENT END ADDRESS.
         BZR   R14               INVALID RETURN.
         SRL   R1,16(R9)         GET X-AXIS LOCATION OF EXTENT START.
         LA    R1,0(R1,R5)       POINT TO CORRESPONDING COLUMN.
         S     R1,WORK+4         GET EXTRA COL COUNT THAT XTNT SPANS.
         BNPR  R14               START AND END IN SAME SCREEN COLUMN.
         BCTR  R1,0              DECREMENT FOR EXECUTE.
         L     R9,WORK+4         POINT TO EXTENT START COLUMN.
         EX    R1,UCYLSPAN       MARK ALL COLUMNS WITH LARGE EXTENT.
         BR    R14               RETURN TO CALLER.
UCYLSPAN MVC   1(0,R9),0(R9)                    <<< EXECUTED >>>
         SPACE
         DROP  R11,R8,R10,R15,R4 UNITSAMP, IMPXACOM, UNITCYLX, UDXENTRY
         SPACE
UCMAXCHR DC    AL2(X'39')        HIGHEST INDICATION CODE SUPPORTED.
         LTORG
         DS    0H
