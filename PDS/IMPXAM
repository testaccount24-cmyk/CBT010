*        COPYRIGHT (C) 1986,1994,2012  PRYCROFT SIX PTY LTD
         TITLE 'COUPLING FACILITY MONITOR DISPLAY LINE MAPPING'
MCLINE1  DSECT
         DS    XL(L'LOWX)
MCL1CFNM DS    CL8
         DS    CL1
MCL1CFST DS    CL9
         DS    CL1
MCL1PLCY DS    CL8
         DS    CL2
MCL1BAR1 DS    CL1
         DS    CL1
MCL1SYST DS    CL8
         DS    CL1
MCL1BAR2 DS    CL1
         DS    CL3
MCL1STRC DS    CL16
         DS    CL4
MCL1STST DS    CL12
         DS    CL3
         SPACE
MCLINE2  DSECT
         DS    XL(L'LOWX)
MCL2CFNM DS    CL8
MCL2SIZE DS    CL23    1234567K 1234567K 100%
         DS    CL1
MCL2CNTL DS    CL23    1234567K 1234567K 100%
         DS    CL1
MCL2DUMP DS    CL23    1234567K 1234567K 100%
         SPACE
MCLINE3  DSECT
         DS    XL(L'LOWX)
MCL3CFNM DS    CL8
         DS    CL1
MCL3BDIO DS    CL6
         DS    CL1
MCL3NTAV DS    CL6
         DS    CL3
MCL3SBCH DS    CL4
         DS    CL2
MCL3DEVN DS    CL4
         DS    CL1
MCL3SCST DS    CL8
MCL3BUSY DS    CL8
MCL3PATH DS    CL8
MCL3UTIL DS    CL8
MCL3RATE DS    CL9
         SPACE
MCLINE4  DSECT
         DS    XL(L'LOWX)
MCL4STNM DS    CL16
         DS    CL2
MCL4STTY DS    CL5
         DS    CL3
MCL4STAL EQU   *,9
MCL4STNA DS    CL13
         DS    CL3
MCL4CFNM DS    CL8
         DS    CL2
MCL4SIZE DS    CL8
         DS    CL2
MCL4USED DS    CL8
         DS    CL2
MCL4FULL DS    CL4
         DS    CL3
         SPACE
MCLINE5  DSECT
         DS    XL(L'LOWX)
MCL5CNNM DS    CL16
         DS    CL4
MCL5SYSN DS    CL8
         DS    CL2
MCL5JOBN DS    CL8
         DS    CL4
MCL5CNST DS    CL17
         TITLE 'SYSPLEX MONITOR DISPLAY LINE MAPPING'
MSLINE1  DSECT
         DS    XL(L'LOWX)
MSL1SYSN DS    CL8
         DS    CL1
MSL1STAT DS    CL8
         DS    CL1
MSL1DIRN DS    CL3
         DS    CL2
MSL1TCLS DS    CL8
         DS    CL1
MSL1#PTH DS    CL6
MSL1#NOP DS    CL8
MSL1#BSY DS    CL8
MSL1BFMX DS    CL8
         DS    CL2
MSL1BFUS DS    CL8
         DS    CL2
MSL1BFPC DS    CL4
         DS    CL1
         SPACE
MSLINE2  DSECT
         DS    XL(L'LOWX)
MSL2SYSN DS    CL8
         DS    CL1
MSL2DIRN DS    CL3
         DS    CL2
MSL2TCLS DS    CL8
         DS    CL2
MSL2#BIG DS    CL8
MSL2#FIT DS    CL8
MSL2#SML DS    CL8
MSL2#OVR DS    CL8
         DS    CL2
MSL2#TCL DS    CL8
         DS    CL2
MSL2#SMX DS    CL8
         DS    CL1
         SPACE
MPLINE1  DSECT
         DS    XL(L'LOWX)
MPL1PDEV DS    CL4
         DS    CL1
MPL1PSYS DS    CL8
         DS    CL1
MPL1STAT DS    CL10
         DS    CL1
MPL1DIRN DS    CL3
         DS    CL1
MPL1TCLS DS    CL8
         DS    CL1
MPL1TDEV DS    CL4
         DS    CL1
MPL1TSYS DS    CL8
MPL1MXMS DS    CL8
MPL1#USE DS    CL8
         DS    CL4
MPL1#IBR DS    CL8
         SPACE
MPLINE2  DSECT
         DS    XL(L'LOWX)
MPL2PDEV DS    CL4
         DS    CL1
MPL2DIRN DS    CL3
         DS    CL1
MPL2TDEV DS    CL4
         DS    CL1
MPL2TSYS DS    CL8
MPL2MRET DS    CL8
MPL2#RET DS    CL8
MPL2#RST DS    CL8
MPL2#SIG DS    CL8
MPL2#ACT DS    CL8
MPL2#SUS DS    CL8
MPL2#APP DS    CL8
         SPACE
MGLINE1  DSECT
         DS    XL(L'LOWX)
MGL1GRPN DS    CL8
         DS    CL1
MGL1MEMN DS    CL16
         DS    CL1
MGL1STAT DS    CL1
         DS    CL1
MGL1SYSN DS    CL8
         DS    CL1
MGL1SSLT DS    CL2
         DS    CL1
MGL1JJOB DS    CL8
         DS    CL1
MGL1TOD  DS    CL13
         DS    CL1
MGL1SCNT DS    CL8
MGL1RCNT DS    CL8
         SPACE
MDXLINE  DSECT
         DS    XL(L'LOWX)
         DS    CL2
MDXNAME  DS    CL16
         DS    CL2
MDXMODNM DS    CL8
         DS    CL2
MDXFLAGS DS    CL3
         DS    CL1
MDXENTRY DS    CL8
         DS    CL2
MDXLDPNT DS    CL8
         DS    CL2
MDXLEN   DS    CL6
         DS    CL2
MDXJOB   DS    CL8
         SPACE
MCPFLINE DSECT
         DS    XL(L'LOWX)
         DS    CL2
MCPFPREF DS    CL8
         DS    CL2
MCPFOWNR DS    CL8
         DS    CL2
MCPFSYS  DS    CL8
         DS    CL2
MCPFASID DS    CL4
         DS    CL2
MCPFSCOP DS    CL8
         DS    CL2
MCPFREMV DS    CL8
         DS    CL2
MCPFFDSP DS    CL8
         SPACE
CPFT     DSECT ,                       COMMAND PREFIX TABLE
CPFTACRO DS    CL4                     EYECATCHER 'CPFT'
CPFTVRSN DS    XL1                     VERSION
CPFTRSV1 DS    CL3                     FREE
CPFTNUME DS    F                       NUMBER OF ENTRIES
CPFT1ST  DS    F                       OFFSET FIRST ENTRY
CPFTLAST DS    F                       OFFSET LAST ENTRY
CPFTRSV2 DS    CL8                     FREE
*
CPFT_ENTRY DSECT ,                     START OF AN ENTRY
CPFTFLGS DS    X                       FLAGS
CPFTSCOP EQU   X'80'                   SCOPE
CPFTFDP0 EQU   X'40'                   FAILDISP
CPFTFDP1 EQU   X'20'                   FAILDISP
CPFTREMV EQU   X'10'                   REMOVE
CPFTRSV3 DS    CL3                     FREE
CPFTPRFX DS    CL8                     PREFIX
CPFTPRLN DS    XL1                     PREFIX_LENGTH
CPFTRSV4 DS    CL3                     FREE
CPFTOWNR DS    CL8                     OWNER
CPFTSYS  DS    CL8                     SYSTEM
CPFTASID DS    H                       ASID
CPFTRSV5 DS    CL10                    FREE
CPFT_ENTRY_LENGTH EQU *-CPFT_ENTRY     LENGTH
         TITLE 'IMCFLIST SUBROUTINE RETURNED AREAS'
         COPY  IMCFDATA
         TITLE 'IMXCF SUBROUTINE RETURNED AREAS'
         COPY  IMXCDATA
         TITLE 'SYSTEM/SYSPLEX MANAGEMENT STATUS MONITOR SUBROUTINE'
IMPXA    CSECT
MANSTATS DS    0H
         AHI   R11,MSSCTEND-MANSTATS
         LA    R10,2048(,R11)    INITIALIZE SECOND
         LA    R10,2048(,R10)                      BASE REGISTER.
         LA    R8,2048(,R10)     INITIALIZE THIRD
         LA    R8,2048(,R8)                       BASE REGISTER.
         USING MSSCTEND,R11,R10,R8
         MVC   INCHARS(L'INCHARS-1),INCHARS+1
         MVI   INCHARS+L'INCHARS-1,C' '  ADJUST ANY COMMAND INPUT.
         CLI   MORSMODE,C' '     ANY TOP LINE NUMBER TO RESTORE?
         JE    MMTOPSET          NO.
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         MVC   WINTOP,MTOPLINE   SET TOP-OF-SCREEN LINE NUMBER.
         CLI   MORSMODE,C'M'     CORRECT ONE SET?
         JE    MMTOPSET          YES.
         MVC   WINTOP,MCTOPLIN   NO, SET VALUE FROM CORRECT FIELD.
         CLI   MORSMODE,C'C'     CORRECT ONE SET?
         JE    MMTOPSET          YES.
         MVC   WINTOP,MSTOPLIN   NO, SET VALUE FROM CORRECT FIELD.
         DROP  R15               WNDWMNGR.
MMTOPSET OI    MODESW2,CLNF      FLAG CLEAN-UP REQUIRED UPON EXIT.
         L     R4,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R4
         TM    CVTOSLV0,CVTCADS  COMMON DATA SPACES SUPPORTED?
         JNO   MLPARMOK          NO, MAXCAD IS NOT PRESENT.
         L     R5,CVTSVT         YES, POINT TO THE SVT.
         LH    R7,SVTMCADS-SVT(,R5)   GET MAXCAD.
         CVD   R7,WORK
         MVC   MANMXCAD,ED3      SHOW IT.
         ED    MANMXCAD,WORK+6
         TM    CVTOSLV1,CVTJ5522 LOAD PARAMETER AVAILABLE?
         JNO   MLPARMOK          NO.
         L     R5,CVTSCPIN       POINT TO THE SCCB.
         MVC   MANLDPRM,24(R5)   COPY THE LOAD PARAMETER.
         L     R5,CVTIXAVL       POINT TO THE IOCOM.
         L     R5,208(,R5)       POINT TO THE IOVT.
         L     R5,24(,R5)        POINT TO THE CDA.
         MVC   MANEDTID,104(R5)  LOAD THE EDT ID.
MLPARMOK MVC   MANSNAME,CVTSNAME LOAD GRS SYSTEM NAME.
         L     R7,CVTJESCT       POINT TO THE JESCT.
         USING JESCT,R7
         MVC   MANPRISS,JESPJESN COPY THE PRIMARY SUBSYSTEM NAME.
         LA    R7,JESSSCT-4      POINT TO BEFORE FIRST SSCVT POINTER.
         DROP  R7                JESCT.
         USING SSCT,R7
PRIMSSLP ICM   R7,15,SSCTSCTA    POINT TO NEXT SSCVT.
         JZ    PRIMOKAY          END OF CHAIN SO NOT FOUND.
         CLC   MANPRISS,SSCTSNAM FOUND THE PRIMARY SUBSYSTEM?
         JNE   PRIMSSLP          NO, CONTINUE SEARCH.
         CLI   SSCTSSID,2        IS PRIMARY SUBSYSTEM JES2?
         JNE   PRIMOKAY          NO.
         ICM   R7,15,SSCTSUSE    YES.
         JZ    PRIMOKAY          THAT'S UNUSUAL.
         DROP  R7                SSCT.
         MVC   MANPRISP,0(R7)    SHOW JES2 VERSION.
PRIMOKAY L     R7,CVTMSER        POINT TO THE MSRDA.
         USING BASE,R7
         MVC   MANLOGCL,MSLOGCLS DISPLAY THE SYSTEM LOG SYSOUT CLASS.
         SLR   R0,R0
         ICM   R0,7,MSLOGLMT     GET MAXIMUM WTLS PER LOG DATA SET.
         JZ    LOGLMTOK          SKIP FORMATTING IF ZERO.
         CVD   R0,WORK
         MVC   MANLOGLM,ED9Z
         ED    MANLOGLM,WORK+3
         MVC   MANLOGLM,MANLOGLM+2
LOGLMTOK L     R7,CVTEXT2        POINT TO THE CVT VS1/VS2 COMMON EXTN.
         USING CVTXTNT2,R7
         L     R0,CVTBCLMT       LOAD BROADCAST NOTICE MESSAGE LIMIT.
         CVD   R0,WORK
         MVC   MANBCLMT,ED5      DISPLAY IT.
         ED    MANBCLMT,WORK+5
         MVC   MANBCLMT,MANBCLMT+1
         MVC   MANNUCID,CVTNUCLS LOAD THE NUCLEUS ID.
         MVC   MANIOCID,CVTIOCID LOAD THE I/O CONFIGURATION ID.
         ICM   R7,15,CVTATCVT    POINT TO VTAM'S CVT.
         JZ    VTAMOKAY          VTAM IS INACTIVE.
         DROP  R7                CVTEXT2.
         ICM   R7,15,0(R7)       POINT TO VTAM'S LEVEL STRING.
         JZ    VTAMOKAY
         MVC   MANVTAM,0(R7)     DISPLAY VTAM VERSION/RELEASE/LEVEL.
VTAMOKAY ICM   R7,15,CVTDFA      GET ADDRESS OF DATA FACILITIES AREA.
         JZ    MDFPOKAY          NO DFA SO DFP IS NOT INSTALLED.
         USING DFA,R7
         CLI   DFARELS,X'01'     DFSMS PRESENT?
         JL    MNODFSMS          NO.
         MVC   MANLINH1+60(5),=C'DFSMS'
         MVC   MANDFP+0(1),DFAVER  VERSION.
         MVC   MANDFP+2(1),DFARLSE RELEASE.
         MVC   MANDFP+4(1),DFAMOD  MODIFICATION.
         J     MISDFSMS
MNODFSMS LH    R7,DFAREL         LOAD PACKED DFP VRM0.
         DROP  R7                DFA.
         STCM  R7,2,MANDFP+2     DFP RELEASE.
         SRL   R7,4
         STCM  R7,2,MANDFP+0     DFP VERSION.
         STCM  R7,1,MANDFP+4     DFP MODIFICATION LEVEL.
MISDFSMS OI    MANDFP+0,C'0'     MAKE DFP VERSION A NUMERIC CHARACTER.
         OI    MANDFP+2,C'0'     MAKE DFP RELEASE A NUMERIC CHARACTER.
         OI    MANDFP+4,C'0'     MAKE DFP MOD LEVEL A NUMERIC CHAR.
         TR    MANDFP,HEX-C'0'   MAKE DIGITS VALID HEXADECIMAL.
         MVI   MANDFP+1,C'.'
         MVI   MANDFP+3,C'.'
MDFPOKAY ICM   R7,15,CVTTVT      POINT TO THE TSO VECTOR TABLE.
         JZ    TSOEOKAY          NO TSVT SO TSO/E IS NOT INSTALLED.
         MVC   MANTSOE(5),=C'VER 1'
         CLI   100(R7),C'0'      IS THE TSO/E LEVEL AVAILABLE?
         JNH   TSOEOKAY          NO, RELEASE 1 OR 2 OF VERSION 1.
         MVC   MANTSOE(1),100(R7)    COPY THE TSO/E VERSION NUMBER.
         MVI   MANTSOE+1,C'.'
         MVC   MANTSOE+2(2),101(R7)  COPY THE TSO/E RELEASE NUMBER.
         MVI   MANTSOE+4,C'.'
         MVC   MANTSOE+5(1),103(R7)  COPY THE TSO/E MODIFICATION LEVEL.
TSOEOKAY L     R7,CVTASMVT       POINT TO THE ASMVT.
         USING ASMVT,R7
         TM    ASMFLAG2,ASMWARM  WARM IPL?
         JO    IPLTYPOK          YES.
         MVC   MANIPLTP,CVIO     NO.
         TM    ASMFLAG2,ASMQUICK QUICK IPL?
         JO    IPLTYPOK          YES.
         MVC   MANIPLTP,CLPA     NO.
         DROP  R7                ASMVT.
IPLTYPOK L     R5,CVTSYSAD       POINT TO SYSTEM RESIDENCE UCB.
         MVC   MANSYSRS,28(R5)   LOAD VOLUME SERIAL OF SYSRES.
         MVC   MANIPLAD,13(R5)   LOAD DEVICE NUMBER OF SYSRES.
         CLI   MANIPLAD,C'U'     FOUR-DIGIT DEVICE NUMBER?
         JNE   MIPLADOK          NO.
         UNPK  MANIPLAD(5),4(3,R5)
         TR    MANIPLAD(4),HEX-C'0'
         MVI   MANIPLAD+4,C' '   YES, SHOW FOUR DIGITS.
MIPLADOK LA    R5,40             GET "CVT PREFIX" LENGTH.
         LCR   R5,R5
         AR    R5,R4             POINT TO THE VERSION CHARACTER STRING.
         MVC   MANPRDCT,0(R5)    DISPLAY PRODUCT NAME AND FMID.
         TM    OSLEVEL+1,CVTOS390 OS/390 OR LATER?
         JZ    MANPRDOK          NO, PRE-OS/390.
         CLC   BLANKS(16),MANPRDCT+16
         JNE   MANPRDOK          SITE USES CVTVERID.
         L     R7,CVTECVT        POINT TO ECVT.
         USING ECVT,R7
         CLI   ECVTPNAM+6,C' '   DOES ECVTPNAM FIT IN 6 BYTES?
         JNE   MANPRDOK          NO.
         MVC   MANPRDCT+17(6),ECVTPNAM
         MVC   MANPRDCT+24(2),ECVTPVER
         MVI   MANPRDCT+26,C'.'
         MVC   MANPRDCT+27(2),ECVTPREL
         MVI   MANPRDCT+29,C'.'
         MVC   MANPRDCT+30(2),ECVTPMOD
         DROP  R7                ECVT.
MANPRDOK MVC   MANRELNO+1(4),36(R5)    LOAD SYSTEM RELEASE NUMBER.
         MVC   MANRELNO(2),MANRELNO+1
         MVI   MANRELNO+2,C'.'
         MVC   WORK(4),CVTDATE   COPY CURRENT DECIMAL JULIAN DATE.
         AP    WORK(4),=P'1900000'
         MVC   MANCVJUL,=X'40202020214B202020'
         ED    MANCVJUL,WORK     EDIT CVTDATE.
         L     R7,DTCONVAD       GET DATE CONVERSION ENTRY POINT.
         L     R1,CVTDATE        LOAD CURRENT DECIMAL JULIAN DATE.
         DROP  R4                CVT.
         BASR  R14,R7
         MVC   MANCVYMD,WORK     SHOW CURRENT YY/MM/DD.
         L     R4,SMCAADDR       GET SMCA ADDRESS.
         USING SMCABASE,R4
         MVC   MANSYSID,SMCASID  SMF SYSTEM ID.
         XC    WORK,WORK
         MVC   WORK(4),SMCAIDTE  COPY IPL DATE.
         AP    WORK(4),=P'1900000'
         MVC   MANIPLDT,=X'40202020214B202020'
         ED    MANIPLDT,WORK     EDIT IPL DATE.
         L     R1,SMCAIDTE       LOAD IPL DATE.
         BASR  R14,R7
         MVC   MANIPYMD,WORK     SHOW IPL YY/MM/DD.
         L     R5,SMCAITME       GET IPL TIME.
         DROP  R4                SMCABASE.
         SLR   R4,R4
         D     R4,AHUNDRED       GET IPL T-O-D IN SECONDS.
         SLR   R4,R4
         D     R4,=F'60'         GET IPL T-O-D IN MINUTES.
         CVD   R4,WORK           SHOW SECONDS.
         OI    WORK+7,15
         UNPK  MANIPLTM+6(2),WORK+6(2)
         SLR   R4,R4
         D     R4,=F'60'         GET IPL T-O-D IN HOURS.
         CVD   R4,WORK           SHOW MINUTES.
         OI    WORK+7,15
         UNPK  MANIPLTM+3(2),WORK+6(2)
         CVD   R5,WORK           SHOW HOURS.
         OI    WORK+7,15
         UNPK  MANIPLTM(2),WORK+6(2)
         ICM   R1,15,EDTADDR     POINT TO ELIGIBLE DEVICES TABLE.
         JZ    CMDSCANM          NO LONGER EXISTS.
         MVC   MANEDTID,10(R1)   LOAD THE EDT ID NUMBER.
         J     CMDSCANM          HANDLE REQUEST, BLANKS REBOUND.
         SPACE
REDOMANS L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         L     R2,WINBUFF        GET WINDOW BUFFER START ADDRESS.
         SLR   R0,R0             GET ZERO.
         ST    R0,WINLINES       INITIALIZE LINE COUNTER.
         DROP  R15               WNDWMNGR.
         SPACE
         JAS   R14,MFSTLINE      INITIALIZE THE FIRST DISPLAY LINE.
         MVC   0(LL-79,R2),HIGHX LOAD HEADING ATTRIBUTES.
         MVI   LL-80(R2),X'F7'   WHITE.                         (I3279)
         MVI   2(R2),X'F4'       UNDERSCORE.                    (I3279)
         SPACE
         CLI   MORSMODE,C'M'     SHOW SYSTEM MANAGEMENT DETAILS?
         JNE   MPERPLEX          NO, GO SHOW SYSPLEX INFORMATION.
         SPACE
         MVC   LL-79(79,R2),HEADNGMM
         JAS   R14,MSPCLINE      LINE NOW COMPLETE.
         JAS   R14,MSPCLINE      INSERT A BLANK LINE.
         L     R5,PSAPCCAV       POINT TO THE PCCA.
         MVC   MANVER,4(R5)      LOAD CPU VERSION NUMBER.
         MVC   MANSER,6(R5)      LOAD CPU SERIAL NUMBER.
         MVC   MANMODEL,12(R5)   LOAD CPU MODEL NUMBER.
         MVC   MANCPNUM,PSACPULA+1  GET CURRENT LOGICAL CP NUMBER.
         NI    MANCPNUM,X'0F'    TURN OFF "LOGICAL BIT".
         TR    MANCPNUM,HEX      CONVERT TO HEX DIGIT.
         L     R9,RMCTADDR       GET RMCT ADDRESS.
         USING RMCT,R9
         SLR   R0,R0             CLEAR FOR DIVIDE.
         L     R1,SIXTNMIL       LOAD SIXTEEN MILLION AND DIVIDE BY
         D     R0,RMCTADJC       THE CPU RATE ADJUSTMENT FACTOR.
         CVD   R1,WORK
         MVC   MANCPURT,ED9Z
         ED    MANCPURT,WORK+3
         L     R1,RMCTWMST       GET LATEST WMST ADDRESS.
         MVC   MANIPSID,4(R1)    LOAD IPS ID.
         ICM   R1,15,RMCTICST    IS ICS DEFINED?
***      JZ    NOICS             NO, SKIP IT.
         MVI   MANICSID,C'¬'     PREPARE FOR WLM GOAL MODE.
         TM    RMCTICST,X'7F'    IN WLM GOAL MODE?
         JNM   NOICS             NO.
         MVC   MANICSID,0(R1)    LOAD ICS ID.
NOICS    ICM   R1,15,RMCTRMPT    POINT TO CONTROL ALGORITHM PARAM TBL.
         JZ    NOOPT             NONE PRESENT, SKIP IT.
         MVC   MANOPTID,83(R1)   LOAD OPT ID.
         DROP  R9                RMCT.
NOOPT    L     R9,CVTPTR(,0)     POINT TO CVT.
         USING CVT,R9
         MVI   TZSIGN,C'+'       ASSUME NOT BEHIND GMT.
         ICM   R1,15,CVTTZ       LOAD CVTTZ.
         JNM   TZSIGNOK          BRANCH IF ASSUMPTION WAS CORRECT.
         MVI   TZSIGN,C'-'       LOCAL TIME IS BEHIND GMT.
TZSIGNOK LPR   R1,R1             GET ABSOLUTE VALUE OF TIME DIFFERENCE.
         SLR   R0,R0
         SLDL  R0,20             CONVERT TO MICROSECONDS.
         D     R0,MONEMILL       CONVERT TO SECONDS.
         SLR   R0,R0
         LA    R5,3600
         DR    R0,R5
         CVD   R1,WORK           DISPLAY HOURS.
         OI    WORK+7,X'0F'
         UNPK  TZSIZE(2),WORK+6(2)
         LR    R1,R0             COPY REMAINDER IN SECONDS.
         SLR   R0,R0
         LA    R5,60
         DR    R0,R5
         CVD   R1,WORK           DISPLAY MINUTES.
         OI    WORK+7,X'0F'
         UNPK  TZSIZE+3(2),WORK+6(2)
         CVD   R0,WORK           DISPLAY SECONDS.
         OI    WORK+7,X'0F'
         UNPK  TZSIZE+6(2),WORK+6(2)
         MVC   MANGTFST,=C'INACTIVE'
         TM    CVTGTFST,CVTGTFAV IS GTF GOING?
         JZ    GTFEND            NO.
         MVC   MANGTFST,=C'ACTIVE  '
GTFEND   DS    0H
         ICM   R1,15,CVTRAC      POINT TO RACF CVT.
         JZ    RACFEND           NO RCVT SO SKIP RACF STATUS.
         USING RCVT,R1
         MVC   MANACFST,=C'INACTIVE'
         TM    RCVTSTAT,RCVTRNA  IS RACF INACTIVE?
         JO    RACFEND           YES.
         MVC   MANACFST,=C'ACTIVE  '
         CLC   =C'RCVT',RCVTID   RCVT WITH EXPECTED ID?
         JE    RACFEND           YES.
         DROP  R1                RCVT.
         MVC   MANACFNM,0(R1)    NO, PROBABLY SECURITY PRODUCT NAME.
         LARL  R1,PRTXLATE
         TR    MANACFNM,0(R1)
RACFEND  DS    0H
         MVC   MANLOGRC,AVAILTXT+2
         TM    CVTOPTB,CVTNLOG   IS LOGREC UNAVAILABLE?
         JZ    LOGRECOK          NO.
         MVC   MANLOGRC,AVAILTXT
LOGRECOK MVC   MANTCAM,=C'INACTIVE'
         ICM   R0,15,CVTAQAVT    POINT TO TCAM ADDRESS VECTOR TABLE.
         JZ    TCAMOKAY              TCAM IS NOT ACTIVE.
         MVC   MANTCAM,=C'ACTIVE  '  TCAM IS ACTIVE.
         TM    CVTTCMFG,CVTTCRDY     IS TCAM READY TO ACCEPT USERS?
         JZ    TCAMOKAY              NO.
         MVC   MANTCAM,=C'READY   '  YES.
TCAMOKAY L     R9,CVTCSD         POINT TO COMMON SYSTEM DATA AREA.
         DROP  R9                CVT.
         USING CSD,R9
         LH    R0,CSDCPUOL       GET ALIVE CPU COUNT.
         CVD   R0,WORK
         MVC   WORK2(R4),ED3
         ED    WORK2(R4),WORK+6
         MVC   MANCPUCT,WORK2+1
         ICM   R0,12,CSDCPUAL    GET ALIVE CPU BIT MASK.
         DROP  R9                CSD.
         LA    R1,HEX            POINT TO HEX CHARACTERS.
         LA    R9,MANCPIDS       POINT TO DISPLAY AREA.
         MVC   MANCPIDS,BLANKS   ERASE PREVIOUS DATA.
         LA    R15,16            NUMBER OF BITS TO TEST.
MPCPCHEK LTR   R0,R0             SIGN BIT ON?
         JNM   DEADCP            NO.
         MVC   1(1,R9),0(R1)     YES, COPY HEX DIGIT FOR CP ID.
         LA    R9,2(,R9)         POINT TO NEW DISPLAY AREA.
DEADCP   LA    R1,1(,R1)         POINT TO NEXT CP ID NUMBER.
         SLL   R0,1              PROMOTE NEXT BIT.
         JCT   R15,MPCPCHEK      CHECK IT.
         L     R9,ASVTADDR       GET ASVT ADDRESS.
         USING ASVT,R9
         L     R1,ASVTAAV        GET NUMBER OF AVAILABLE ASVT ENTRIES.
         CVD   R1,WORK
         LA    R1,MANFUSER+5     HANDLE ZERO FREE ENTRIES.
         MVC   MANFUSER,ED5
         EDMK  MANFUSER,WORK+5
         BCTR  R1,0              POINT TO BEFORE FIRST DIGIT.
         MVI   0(R1),C'('
         L     R1,ASVTAST        GET NUMBER OF FREE START/SASI ENTRIES.
         CVD   R1,WORK
         LA    R1,MANFSTRT+3     HANDLE ZERO FREE ENTRIES.
         MVC   MANFSTRT,ED3
         EDMK  MANFSTRT,WORK+6
         BCTR  R1,0              POINT TO BEFORE FIRST DIGIT.
         MVI   0(R1),C'('
         L     R1,ASVTANR        GET NUMBER OF FREE NON-REUSEABLE
         CVD   R1,WORK           REPLACEMENT ENTRIES.
         LA    R1,MANFNONR+3     HANDLE ZERO FREE ENTRIES.
         MVC   MANFNONR,ED3
         EDMK  MANFNONR,WORK+6
         BCTR  R1,0              POINT TO BEFORE FIRST DIGIT.
         MVI   0(R1),C'('
         L     R1,ASVTSTRT       GET ORIGINAL NUMBER OF START/SASI
         CVD   R1,WORK           ENTRIES.
         MVC   MANRSTRT,ED3
         ED    MANRSTRT,WORK+6
         L     R1,ASVTNONR       GET ORIGINAL NUMBER OF FREE
         CVD   R1,WORK           NON-REUSEABLE REPLACEMENT ENTRIES.
         MVC   MANRNONR,ED3
         ED    MANRNONR,WORK+6
         L     R1,ASVTMAXI       GET ORIGINAL MAXUSER COUNT.
         CVD   R1,WORK
         MVC   MANMUSER,ED5
         ED    MANMUSER,WORK+5
         L     R1,ASVTMAXU       GET ACTUAL MAXUSER COUNT.
         CVD   R1,WORK
         MVC   MANMAXAS,ED5
         ED    MANMAXAS,WORK+5
         DROP  R9                ASVT.
         USING SMCABASE,R9
         L     R9,SMCAADDR       GET SMCA ADDRESS.
         MVC   MANSMFST,=C'TERMNATD'
         TM    SMCAFLGR,SMCATERM SMF TERMINATED?
         JO    SMFCHECK          YES.
         MVC   MANSMFST,=C'INACTIVE'
         TM    SMCAMISC,SMCAUSER+SMCAMAN
         JZ    SMFCHECK          SMF IS INACTIVE.
         MVC   MANSMFST,=C'ACTIVE  '
*        TM    SMCAMISC,SMCAUSER+SMCAMAN
         JO    SMFCHECK          SMF IS RECORDING.
         MVC   MANSMFST,=C'USER REC'
         TM    SMCAMISC,SMCAMAN  USER RECORDING?
         JO    SMFCHECK          YES.
         MVC   MANSMFST,=C'INVALID '
SMFCHECK TM    SMCAFLGS,SMCADTLS DATA LOST BECAUSE ALL SMF FILES FULL?
         JNO   SMFOK             NO.
         MVC   MANSMFST,=C'D/S FULL'
SMFOK    MVC   MANJWT,SMCASJWT   COPY JOB WAIT TIME (HHMM).
         MVC   MANMXDRM,SMCASMDM COPY MAXIMUM DORMANT TIME (MMSS).
         MVC   MANSTTUS,SMCASSTS COPY STATUS RECORD INTERVAL (HHMMSS).
         L     R1,SMCAACTP       POINT TO THE ACT.
         MVC   MANSMFID,38(R1)   COPY SMF PARAMETERS MEMBER SUFFIX.
         TM    OSLEVEL,CVTH4410  SP4 OR LATER?
         JNO   SMFSUFOK          NO, HAVE THE CORRECT SUFFIX.
         MVC   MANSMFID,46(R1)   YES, COPY SMF PARMS MEMBER SUFFIX.
SMFSUFOK L     R0,SMCABFWT       LOAD NUMBER OF BUFFERS WRITTEN.
         CVD   R0,WORK
         MVC   MANBFWRT,ED11
         ED    MANBFWRT,WORK+2
         L     R0,SMCARCWT       LOAD NUMBER OF RECORDS WRITTEN.
         CVD   R0,WORK
         MVC   MANRCWRT,ED11
         ED    MANRCWRT,WORK+2
         L     R0,SMCABFLS       LOAD NUMBER OF RECORDS LOST.
         CVD   R0,WORK
         MVC   MANRCLST,ED11
         ED    MANRCLST,WORK+2
         MVC   MANREC17,=CL5'PERM)'
         TM    SMCAOPT,SMCATDS
         JZ    MGETSMCX
         MVC   MANREC17,=CL5'ALL) '
MGETSMCX L     R9,SMCASMCX
         DROP  R9                SMCABASE.
         USING SMCX,R9
         MVC   MANINTVL,SMCXINTP SHOW INTVAL.
         MVC   MANSYNCV,SMCXSYNP SHOW SYNCVAL.
         MVC   MANRECOR,=CL10'DATASET)  '
         TM    SMCXLSBT,SMCXLSDS
         JNO   MRECOROK
         MVC   MANRECOR,=CL10'LOGSTREAM)'
MRECOROK MVC   MANMEMLM,SMCXMEM  SHOW MEMLIMIT.
         MVC   MANMEMLM+6(2),=CL2') '
         CLC   SMCXMEML,=X'00000FFFFFFFF000'
         JNE   MANGETRS          HAVE LIMIT.
         MVC   MANMEMLM(8),=CL8'NOLIMIT)'
MANGETRS SR    R0,R0
         ICM   R0,3,SMCXSMFRESTARTS
         CVD   R0,WORK
         MVC   MANASRES,ED5
         ED    MANASRES,WORK+5
         DROP  R9                SMCX.
         SPACE
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),MANLINH1
         JAS   R14,MSPCLINE      HEADER LINE 1 NOW COMPLETE.
         MVC   LL-79(79,R2),MANLINE1
         JAS   R14,MSPCLINE      DETAIL LINE 1 NOW COMPLETE.
         SPACE
         JAS   R14,MSPCLINE      INSERT A BLANK LINE.
         SPACE
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),MANLINH2
         JAS   R14,MSPCLINE      HEADER LINE 2 NOW COMPLETE.
         MVC   LL-79(79,R2),MANLINE2
         JAS   R14,MSPCLINE      DETAIL LINE 2 NOW COMPLETE.
         SPACE
         JAS   R14,MSPCLINE      INSERT A BLANK LINE.
         SPACE
         TM    OSLEVEL+1,CVTH5510 SP5 OR LATER?
         JZ    DONEIODF          NO.
         SPACE
         L     R4,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R4
         L     R5,CVTIXAVL       POINT TO THE IOCOM.
         L     R5,208(,R5)       POINT TO THE IOVT.
         L     R5,24(,R5)        POINT TO THE CDA.
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(12,R2),=C'ACTIVE IODF:'
         MVI   LL-67(R2),X'25'
         MVC   LL-66(44,R2),32(R5)
         TR    LL-66(44,R2),XLATETBL
         MVI   LL-21(R2),X'26'
         MVC   LL-20(10,R2),=C'OS CONFIG:'
         MVI   LL-10(R2),X'25'
         MVC   LL-9(8,R2),92(R5)
         TR    LL-9(8,R2),XLATETBL
         JAS   R14,MSPCLINE      IODF DETAIL LINE NOW COMPLETE.
         JAS   R14,MSPCLINE      INSERT A BLANK LINE.
DONEIODF EQU   *
         SPACE
         TM    OSLEVEL+1,CVTH6601 SP6 OR LATER?
         JZ    MCSRSIOK          NO, NOT OS/390.
         SPACE
         SYSSTATE ARCHLVL=1
         L     R0,CSRSIWKL       GET AREA LENGTH.
         GETMAIN RU,LV=(0),LOC=(31,64),SP=SUBPOOL
         LR    R7,R1             POINT TO RETURN AREA.
         USING SIV1,R7
         USING SI00,SIV1SI00
         USING SI11V1,SIV1SI11V1
         XC    SIV1SI00,SIV1SI00 CLEAR AREA SO FLAGS ARE TESTABLE.
         L     R4,CVTPTR(,0)     POINT TO THE CVT.
         L     R15,CVTCSRT       POINT TO CALLABLE SVCS REQUEST TABLE.
         L     R15,X'30'(,R15)   POINT TO CSRSI.
         CALL  (15),(CSRSIRQ#,CSRSIWKL,(R7),(R13)),MF=(E,WORK)
         TM    SI00VALIDITYFLAGS,SI00VALIDSI11V1
         JNO   MCSRSIDN
         CLI   SI11V1CPCMODEL1,C' '
         JNH   MCSRSIDN
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(9,R2),=C'CPU TYPE:'
         MVI   LL-70(R2),X'25'
         MVC   LL-69(4,R2),SI11V1CPCTYPE
         MVI   LL-64(R2),X'26'
         MVC   LL-63(10,R2),=C'CPU MODEL:'
         MVI   LL-53(R2),X'25'
         MVC   LL-52(16,R2),SI11V1CPCMODEL1
         MVI   LL-36(R2),X'26'
         MVC   LL-35(18,R2),=C'MODEL CAPACITY ID:'
         MVI   LL-17(R2),X'25'
         MVC   LL-16(16,R2),SI11V1CPCMODELCAPIDENT
         JAS   R14,MSPCLINE      DETAIL LINE NOW COMPLETE.
         DROP  R7                SIV1, SI00, SI11V1.
MCSRSIDN LR    R1,R7             POINT TO RETURN AREA.
         FREEMAIN RU,LV=(0),A=(1),SP=SUBPOOL
         SYSSTATE ARCHLVL=0
         TM    OSLEVEL+5,CVTH7760 EARLIER THAN Z/OS 1.11?
         JNO   MCSRSIOK          YES, SKIP RMCTZ ACCESS.
         L     R9,RMCTADDR       POINT TO THE RMCT.
         USING RMCT,R9
         ICM   R9,15,RMCTX3      POINT TO THE RMCTZ.
         JZ    MCSRSIOK          NO RMCTZ.
         DROP  R9                RMCT.
         USING RMCTZ,R9
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(21,R2),=C'LAST CAPACITY CHANGE:'
         MVI   LL-58(R2),X'25'
         MVC   WORK,RMCTZ_CAPACITY_CHANGE_TIME
         STCKCONV STCKVAL=WORK,  POINT TO INPUT STCK VALUE.            +
               CONVVAL=SAVE+28,  POINT TO OUTPUT FOUR WORDS.           +
               TIMETYPE=DEC,     GET TIME DECIMAL DIGITS (DEFAULT).    +
               DATETYPE=YYYYMMDD, SPECIFY DATE FORMAT.                 +
               MF=(E,STCKCNVL)   SPECIFY PARAMETER LIST.
         UNPK  LL-56(5,R2),SAVE+36(3)    YYYY.
         UNPK  LL-51(3,R2),SAVE+38(2)    MM.
         UNPK  LL-48(3,R2),SAVE+39(2)    DD.
         UNPK  LL-45(3,R2),SAVE+28(2)    HH.
         UNPK  LL-42(3,R2),SAVE+29(2)    MM.
         UNPK  LL-39(3,R2),SAVE+30(2)    SS.
         TR    LL-56(19,R2),HEX-C'0' HANDLE BAD DECIMAL DIGITS.
         MVI   LL-52(R2),C'-'        SUPPLY SEPARATORS AND
         MVI   LL-49(R2),C'-'               TIDY UP AFTER TRANSLATE
         MVI   LL-46(R2),C' '               AND THE LAST UNPACK.
         MVI   LL-43(R2),C':'
         MVI   LL-40(R2),C':'
         MVC   LL-37(4,R2),=C' UTC'
         SR    R0,R0
         MVC   LL-29(24,R2),=C'CAPACITY REDUCTION: NONE'
         ICM   R0,1,RMCTZ_CAPACITY_ADJUSTMENT_INDICATION
         JZ    MCAPRDUC          NO CAPACITY REDUCTION.
         CVD   R0,WORK
         MVC   LL-10(4,R2),ED3
         ED    LL-10(4,R2),WORK+6
         MVC   LL-6(4,R2),=C'/100'
MCAPRDUC MVI   LL-30(R2),X'26'
         MVI   LL-10(R2),X'25'
MCAPLNOK JAS   R14,MSPCLINE      DETAIL LINE 5 NOW COMPLETE.
         DROP  R9                RMCTZ.
MCSRSIOK EQU   *
         SPACE
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),MANLINE5
         JAS   R14,MSPCLINE      DETAIL LINE 5 NOW COMPLETE.
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),MANLINE6
         JAS   R14,MSPCLINE      DETAIL LINE 6 NOW COMPLETE.
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),MANLINE7
         JAS   R14,MSPCLINE      DETAIL LINE 7 NOW COMPLETE.
         SPACE
         JAS   R14,MSPCLINE      INSERT A BLANK LINE.
         SPACE
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),MANLINE4
         CLI   MANICSID,C'¬'     IN WLM GOAL MODE?
         JNE   MANLN4OK          NO, CONTINUE.
         MVC   LL-60(15,R2),=C'*WLM GOAL MODE*'
         MVI   LL-61(R2),X'21'   SHOW IT IN BLUE.
MANLN4OK JAS   R14,MSPCLINE      DETAIL LINE 4 NOW COMPLETE.
         L     R4,CVTPTR(,0)     POINT TO THE CVT.
         TM    CVTOSLV5,CVTH7740 Z/OS 1.9 OR LATER?
         JNO   MCADSOK           NO.
         MVC   0(LL-79,R2),HIGHX
         L     R5,CVTRCEP        YES, POINT TO THE RCE.
         USING RCE,R5
         MVC   LL-79(5,R2),=C'CADS:'
         MVI   LL-74(R2),X'25'
         SR    R0,R0
         ICM   R0,3,RCECADSUSED  GET USED CADS COUNT.
         CVD   R0,WORK
         MVC   LL-70(6,R2),ED5
         ED    LL-70(6,R2),WORK+5
         MVC   LL-63(6,R2),=C'IN USE'
         ICM   R0,3,RCECADSHW    GET USED CADS HIGH WATER MARK.
         CVD   R0,WORK
         MVC   LL-50(6,R2),ED5
         ED    LL-50(6,R2),WORK+5
         MVC   LL-43(13,R2),=C'MAX SINCE IPL'
         ICM   R0,3,RCECADSLOST  GET USED CADS NOW LOST.
         CVD   R0,WORK
         MVC   LL-20(6,R2),ED5
         ED    LL-20(6,R2),WORK+5
         MVC   LL-13(4,R2),=C'LOST'
         JAS   R14,MSPCLINE      CADS DISPLAY LINE NOW COMPLETE.
         DROP  R5                RCE.
         SPACE
MCADSOK  JAS   R14,MSPCLINE      INSERT A BLANK LINE.
         SPACE
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),MANLINE8
         JAS   R14,MSPCLINE      DETAIL LINE 8 NOW COMPLETE.
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),MANLINE9
         JAS   R14,MSPCLINE      DETAIL LINE 9 NOW COMPLETE.
         SPACE
         JAS   R14,MSPCLINE      INSERT A BLANK LINE.
         SPACE
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),MANLINEH
         JAS   R14,MSPCLINE      DETAIL LINE 18 NOW COMPLETE.
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),MANLINEG
         JAS   R14,MSPCLINE      DETAIL LINE 17 NOW COMPLETE.
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),MANLINEA
         JAS   R14,MSPCLINE      DETAIL LINE 10 NOW COMPLETE.
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),MANLINEB
         JAS   R14,MSPCLINE      DETAIL LINE 11 NOW COMPLETE.
         L     R4,CVTPTR(,0)     POINT TO THE CVT.
         L     R3,CVTAUTHL       POINT TO THE AUTHORIZED LIBRARY TABLE.
         LR    R0,R3             COPY THE ADDRESS.
         SLL   R0,20
         SRL   R0,20             GET LOW-ORDER 12 BITS.
         LTR   R0,R0             IS THE TABLE ON A PAGE BOUNDARY?
         JZ    MALTOKAY          YES, PROBABLY CHANGED BY TMON FOR MVS.
         LA    R0,40             NO, GET THE PREFIX LENGTH.
         SR    R3,R0             POINT TO THE PREFIX, IF ANY.
         CLC   =CL8'APFALT  ',0(R3)    VALID PREFIX ID?
         JNE   MALTOKAY          NO, SKIP APFALT DISPLAY LINE.
         MVC   MALTUSER,8(R3)    YES, COPY THE USERID.
         MVC   MALTTIME,16(R3)   COPY THE TIME.
         MVC   MALTDATE,24(R3)   COPY THE DATE.
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),MANLINEC
         JAS   R14,MSPCLINE      DETAIL LINE 12 NOW COMPLETE.
MALTOKAY L     R3,CVTLLTA        POINT TO THE LINK LIST LIBRARY TABLE.
         LR    R0,R3             COPY THE ADDRESS.
         SLL   R0,20
         SRL   R0,20             GET LOW-ORDER 12 BITS.
         LTR   R0,R0             IS THE TABLE ON A PAGE BOUNDARY?
         JZ    MLNKOKAY          YES, PROBABLY CHANGED BY TMON FOR MVS.
         LA    R0,40             NO, GET THE PREFIX LENGTH.
         SR    R3,R0             POINT TO THE PREFIX, IF ANY.
         CLC   =CL8'LKLSTALT',0(R3)    VALID PREFIX ID?
         JNE   MLNKOKAY          NO, SKIP LKLNKALT DISPLAY LINE.
         MVC   MALTUSER,8(R3)    YES, COPY THE USERID.
         MVC   MALTTIME,16(R3)   COPY THE TIME.
         MVC   MALTDATE,24(R3)   COPY THE DATE.
         MVC   0(LL-79,R2),MEDX
         MVC   LL-79(79,R2),MANLINEC
         MVC   LL-79(14,R2),=CL14'   SYSTEM LINK'
         JAS   R14,MSPCLINE      DETAIL LINE 12 NOW COMPLETE (AGAIN).
         DROP  R4                CVT.
MLNKOKAY TM    MODESW2,AUTH      APF AUTHORIZED?
         JZ    MAPFDON1          NO, CAN'T GET INTO SUPERVISOR STATE.
         MODESET MF=(E,MDSTSUP0) YES, GET INTO SUPERVISOR STATE, KEY 0.
         L     R15,CVTPTR(,0)    POINT TO THE CVT.
         USING CVT,R15
         L     R15,CVTTCASP      POINT TO THE TCAS TABLE.
         DROP  R15               CVT.
         USING TCAST,R15
         LH    R0,TCASUMAX       GET USERMAX.
         LA    R3,TSUSERMX       POINT TO OUTPUT AREA.
         JAS   R1,TCASEDIT       FORMAT DISPLAY COUNT.
         LH    R0,TCASUSEC       GET NUMBER OF ACTIVE USERS.
         LA    R3,TSUSERCT       POINT TO OUTPUT AREA.
         JAS   R1,TCASEDIT       FORMAT DISPLAY COUNT.
         LH    R0,TCASRCON       GET RECONNECT LIMIT IN MINUTES.
         LA    R3,TSRECNLM       POINT TO OUTPUT AREA.
         JAS   R1,TCASEDIT       FORMAT DISPLAY COUNT.
         LH    R0,TCASCLSZ       GET CELL SIZE.
         LA    R3,TSBUFSIZ       POINT TO OUTPUT AREA.
         JAS   R1,TCASEDIT       FORMAT DISPLAY COUNT.
         L     R0,TCASHBUF       GET HIGH BUFFER THRESHOLD.
         LA    R3,TSHIBEXT       POINT TO OUTPUT AREA.
         JAS   R1,TCASEDIT       FORMAT DISPLAY COUNT.
         L     R0,TCASLBUF       GET LOW BUFFER THRESHOLD.
         LA    R3,TSLOBEXT       POINT TO OUTPUT AREA.
         JAS   R1,TCASEDIT       FORMAT DISPLAY COUNT.
         LH    R0,TCASCRSZ       GET 3270 SCREEN SIZE.
         LA    R3,TSSCRSIZ       POINT TO OUTPUT AREA.
         JAS   R1,TCASEDIT       FORMAT DISPLAY COUNT.
         SLR   R0,R0
         IC    R0,TCASCHNL       GET MAXIMUM CHAIN LENGTH.
         LA    R3,TSCHNLEN       POINT TO OUTPUT AREA.
         JAS   R1,TCASEDIT       FORMAT DISPLAY COUNT.
         DROP  R15               TCAST.
         STCTL R0,R15,SECWORKA   FETCH CONTROL REGISTER CONTENTS.
         MODESET MF=(E,MDSTPROB) BACK TO PROBLEM STATE AND KEY.
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),MANLINED
         JAS   R14,MSPCLINE      DETAIL LINE 13 NOW COMPLETE.
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),MANLINEE
         JAS   R14,MSPCLINE      DETAIL LINE 14 NOW COMPLETE.
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),MANLINEF
         JAS   R14,MSPCLINE      DETAIL LINE 15 NOW COMPLETE.
MAPFDON1 TM    OSLEVEL+1,CVTH5520 EARLIER THAN MVS/SP5.2?
         JNO   MTKNDONE          YES, NO LOGREC NAME/TOKEN.
         L     R15,CVTPTR(,0)    POINT TO THE CVT, AND THEN TO THE
         L     R15,CVTCSRT-CVT(,R15) CALLABLE SERVICE REQUEST TABLE.
         L     R15,X'14'(,R15)
         L     R15,X'08'(,R15)
         CALL  (15),             RETRIEVE TOKEN FROM NAME/TOKEN PAIR.  +
               (MMTKNLV,IFBNT_DSNLOGREC,MMTOKEN,MMTKNRC),              +
               MF=(E,WORK)
         LA    R15,IEANT_OK      GET SUCCESSFUL RETURN CODE VALUE.
         C     R15,MMTKNRC       WAS TOKEN RETURNED?
         JNE   MTKNDONE          NO, SKIP IT.
         LARL  R15,PRTXLATE
         USING IFBNT_TOKEN,MMTOKEN
         L     R9,IFBNT_LOGREC_NAME_PTR
         USING IFBNT_LOGREC,R9
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(8,R2),MANLINEF
         MVC   LL-71(44,R2),IFBNT_LOGREC_NAME
         TR    LL-71(44,R2),0(R15)
         CLI   IFBNT_LOGREC_CURRENT,IFBNT_USE_DATASET
         JE    MANLOGOK
         MVC   LL-26(23,R2),=C'** RECORDING IGNORED **'
         CLI   IFBNT_LOGREC_CURRENT,IFBNT_USE_LOGSTREAM
         JNE   MANLOGOK
         MVC   LL-26(26,R2),IFBNT_LOGREC_LOGSTREAM
         TR    LL-26(26,R2),0(R15)
MANLOGOK JAS   R14,MSPCLINE      DETAIL LINE 15 NOW COMPLETE.
         DROP  R9                IFBNT_LOGREC.
MTKNDONE JAS   R14,MSPCLINE      INSERT A BLANK LINE.
         SPACE
         L     R9,SMCAADDR       GET SMCA ADDRESS.
         USING SMCABASE,R9
         ICM   R7,15,SMCAFRDS    POINT TO FIRST RDS.
         JNZ   RDSFIRST          PROCESS IT.
         MVC   0(LL-79,R2),MEDX
         MVC   LL-58(36,R2),=CL36'THERE ARE NO SMF RECORDING DATA SETS'
         JAS   R14,MSPCLINE      DETAIL LINE NOW COMPLETE.
         J     NOSMFRDS          END OF SMF DATA SET STATUS DISPLAY.
         USING RDS,R7
RDSFIRST MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),MANDSHDG
         JAS   R14,MSPCLINE      SHOW SMF DATA SET HEADING.
RDSLOOP  CLI   RDSID+3,C'H'      BACK TO RDS HEADER?
         JE    NOSMFRDS          YES, END OF DATA SET LIST.
         TM    RDSFLAG2,RDSLOST  DUMMY RDS FOR LOST DATA?
         JO    NEXTRDS           YES, SO SKIP IT AND TRY NEXT ONE.
         MVC   LL-76(10,R2),RDSNAME    LOAD DATA SET NAME.
         MVC   LL-64(6,R2),RDSVOLID    LOAD VOLUME SERIAL.
         LR    R14,R7                  RDS ENTRY ADDRESS.
         TM    OSLEVEL+1,CVTH5510      SP5 OR LATER?
         JNO   MRDSOK1                 NO.
         MVC   LL-64(6,R2),RDSNAME+44  LOAD VOLUME SERIAL.
         CLI   RDSFLAG4,9              DSNAME LONGER THAN 9 BYTES?
         JNH   MRDSADJ1                NO.
         MVC   LL-79(14,R2),RDSNAME    YES, LOAD MORE OF DATA SET NAME.
MRDSADJ1 AHI   R7,36                   YES, ADJUST FOR LENGTH CHANGE.
MRDSOK1  L     R3,RDSCAPTY       LOAD BLOCK CAPACITY.
         CVD   R3,WORK
         MVC   LL-58(12,R2),ED11
         ED    LL-58(12,R2),WORK+2
         L     R1,RDSNXTBL       LOAD NEXT FREE BLOCK NUMBER.
         BCTR  R1,0              GET NUMBER OF USED BLOCKS.
         CVD   R1,WORK
         MVC   LL-45(12,2),ED11
         ED    LL-45(12,2),WORK+2
         M     R0,ONEGRAND       PREPARE FOR % AND ONE DECIMAL PLACE.
         DR    R0,R3             GET PERCENT USED.
         CVD   R1,WORK
         MVC   LL-31(7,R2),=X'202021204B206C'
         ED    LL-32(7,R2),WORK+5
         C     R14,SMCASVCR      RDS POINTED TO BY SMCASVCR?
         JNE   MDSNTACT          NO, NOT THE ACTIVE DATA SET.
*        ICM   R0,14,RDSFLAG1    ANY EVENT PENDING FOR THIS RDS?
         ICM   R0,14,12(R14)     ANY EVENT PENDING FOR THIS RDS?
         JNZ   MDSNTACT          YES, NOT THE ACTIVE DATA SET.
         MVC   LL-21(6,R2),=C'ACTIVE  '
*        L     R1,368(,R9)       LOAD SMCACISZ (ESA ONLY).
         L     R1,RDSCINV        LOAD SMF VSAM CONTROLINTERVALSIZE.
         CVD   R1,WORK
         MVC   LL-6(6,R2),ED5    SHOW CISIZE AGAINST ACTIVE DATA SET.
         ED    LL-6(6,R2),WORK+5
         MVC   LL-12(7,R2),=CL7'CISIZE='
         TM    OSLEVEL+1,CVTH5510 SP5 OR LATER?
         JNO   DONERDS           NO.
         AHI   R7,-36            YES, ADJUST FOR LENGTH CHANGE.
         J     DONERDS
MDSNTACT TM    OSLEVEL+1,CVTH5510 SP5 OR LATER?
         JNO   MRDSOK2           NO.
         AHI   R7,-36            YES, ADJUST FOR LENGTH CHANGE.
MRDSOK2  TM    RDSFLAG1,RDSDUMP  IS THIS DATA SET AVAILABLE FOR USE?
         JO    MDSDMPRQ          NO, A DUMP IS REQUIRED.
         TM    RDSFLAG1,RDSCLOSE CLOSE PENDING?
         JO    MDSCLSRQ          YES.
         C     R7,SMCASRBR       RDS POINTED TO BY SMCASRBR?
         JE    MDSCLSRQ          YES.
         TM    RDSFLAG1,RDSREADY IS IT READY FOR USE?
         JZ    MDSNTALT          NO, SO IT'S NOT AN ALTERNATE DATA SET.
         MVC   LL-21(9,R2),=C'ALTERNATE'
         J     MANIOCHK
MDSDMPRQ MVC   LL-21(13,R2),=C'DUMP REQUIRED'
         J     MANIOCHK
MDSNTALT MVC   LL-21(13,R2),=C'*** ERROR ***'
         J     MANIOCHK
MDSCLSRQ MVC   LL-21(13,R2),=C'CLOSE PENDING'
MANIOCHK TM    RDSFLAG2,RDSPHYER+RDSLOGER
         JZ    DONERDS           NO I/O ERROR.
         MVC   LL-7(7,R2),=C'I/O ERR'
         MVI   2(R2),X'F1'       BLINKING FOR ERROR.            (I3279)
         MVI   5(R2),X'50'       BLINKING FOR ERROR.            (F9526)
         TM    RDSFLAG2,RDSPHYER PHYSICAL I/O ERROR?
         JO    DONERDS           YES.
         MVC   LL-7(3,R2),=C'LOG' NO, INDICATE LOGICAL.
DONERDS  JAS   R14,MADDLINE      DETAIL LINE NOW COMPLETE.
NEXTRDS  L     R7,4(,R7)         POINT TO NEXT RDS.
         J     RDSLOOP           GO PROCESS IT.
         DROP  R7,R9             RDS, SMCABASE.
         SPACE
NOSMFRDS JAS   R14,MSPCLINE      INSERT A BLANK LINE.
         SPACE
         TM    OSLEVEL+1,CVTH5520 EARLIER THAN MVS/SP5.2?
         JNO   MSYMDONE          YES, NO STATIC SYSTEM SYMBOL TABLE.
         L     R4,CVTPTR(,0)     POINT TO CVT.
         L     R4,CVTECVT-CVT(,R4) POINT TO ECVT, AND THEN
         L     R4,ECVTSYMT-ECVT(,R4)     TO STATIC SYSTEM SYMBOL TABLE.
         LH    R7,2(,R4)         GET SYMBOL COUNT.
         LTR   R7,R7             ANY SYMBOLS?
         JNP   MSYMDONE
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-50(21,R2),=CL21'STATIC SYSTEM SYMBOLS'
         JAS   R14,MSPCLINE      SHOW SYMBOL HEADING.
         LARL  R5,PRTXLATE
         LA    R4,4(,R4)         POINT TO SYMBOL OFFSET ORIGIN.
         LR    R3,R4             POINT TO FIRST ENTRY.
MSYMLOOP L     R1,0(,R3)         GET OFFSET TO SYMBOL NAME.
         L     R14,4(,R3)        GET LENGTH OF SYMBOL NAME.
         LA    R15,LL-55(,R2)    POINT TO NAME DISPLAY TARGET.
         BCTR  R14,0             DECREMENT FOR EXECUTE.
         ALR   R1,R4             POINT TO THE SYMBOL NAME.
         EX    R14,MMOVE         LOAD SYMBOL NAME.
         L     R1,8(,R3)         GET OFFSET TO SYMBOL SUBTEXT.
         L     R14,12(,R3)       GET LENGTH OF SYMBOL SUBTEXT.
         LTR   R14,R14           ZERO LENGTH?
         JZ    MSYMSHOW          YES, NOTHING TO SHOW.
         LA    R15,LL-35(,R2)    POINT TO SUBTEXT DISPLAY TARGET.
         BCTR  R14,0             DECREMENT FOR EXECUTE.
         ALR   R1,R4             POINT TO THE SYMBOL SUBTEXT.
         EX    R14,MMOVE         LOAD SYMBOL SUBTEXT.
MSYMSHOW TR    LL-79(79,R2),0(R5)
         JAS   R14,MSPCLINE      DETAIL LINE NOW COMPLETE.
         LA    R3,16(,R3)        POINT TO NEXT SYMBOL ENTRY.
         JCT   R7,MSYMLOOP       PROCESS NEXT SYMBOL.
         JAS   R14,MSPCLINE      INSERT A BLANK LINE.
         SPACE
MSYMDONE TM    OSLEVEL,CVTJ4422  EARLIER THAN MVS/SP4.2.2?
         JNO   MNTPDONE          YES, NO NAME/TOKEN PAIRS.
         L     R4,CVTPTR(,0)     POINT TO CVT.
         L     R4,CVTECVT-CVT(,R4) POINT TO ECVT, AND THEN
         ICM   R4,15,ECVTNTTP-ECVT(R4)   TO NAME/TOKEN HEADER.
         JZ    MDOCPF            NO NAME/TOKEN PAIRS.
         ICM   R4,15,64(R4)      POINT TO FIRST NTTE.
         JZ    MDOCPF            NO NAME/TOKEN PAIRS.
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-54(29,R2),=CL29'SYSTEM-LEVEL NAME/TOKEN PAIRS'
         JAS   R14,MSPCLINE      SHOW NAME/TOKEN HEADING.
MNTPLOOP MVC   0(LL-79,R2),MEDX
         MVC   LL-79(16,R2),8(R4)     SHOW THE NAME IN PINK.
         MVC   LL-62(16,R2),24(R4)    SHOW THE TOKEN IN TURQUOISE.
         TR    LL-79(79,R2),XLATETBL
         MVI   LL-63(R2),X'25'
         LA    R15,LL-46(,R2)    POINT TO TOKEN HEX DISPLAY AREA.
         LA    R0,4              GET WORD COUNT.
         LA    R7,24(,R4)        POINT TO THE TOKEN.
MNTXLOOP MVI   0(R15),X'24'
         UNPK  1(9,R15),0(5,R7)
         TR    1(8,R15),HEX-C'0'
         LA    R15,9(,R15)       POINT TO NEXT AREA.
         LA    R7,4(,R7)         POINT TO WORD OF TOKEN.
         JCT   R0,MNTXLOOP
         MVI   0(R15),X'25'
         MVC   1(5,R15),=C'ASID='
         UNPK  6(5,R15),58(3,R4)
         TR    6(4,R15),HEX-C'0'
         MVI   10(R15),C' '
         JAS   R14,MSPCLINE      DETAIL LINE NOW COMPLETE.
         ICM   R4,15,64(R4)      POINT TO NEXT NTTE.
         JNZ   MNTPLOOP          PROCESS NEXT NAME/TOKEN.
         JAS   R14,MSPCLINE      INSERT A BLANK LINE.
         SPACE
         USING MCPFLINE,R2
MDOCPF   MVC   0(LL-79,R2),HIGHX
         MVC   MCPFPREF,=C'CMND-PFX'
         MVC   MCPFOWNR(5),=C'OWNER'
         MVC   MCPFSYS(6),=C'SYSTEM'
         MVC   MCPFASID,=C'ASID'
         MVC   MCPFSCOP(5),=C'SCOPE'
         MVC   MCPFREMV(6),=C'REMOVE'
         MVC   MCPFFDSP,=C'FAILDISP'
         JAS   R14,MSPCLINE      SHOW CPF TABLE HEADING.
         L     R3,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R3
         L     R4,CVTCUCB        POINT TO THE UCM.
         DROP  R3                CVT.
         USING UCM,R4
         L     R4,UCMBFEXT       POINT TO UCM FIXED EXTENSION.
         DROP  R4                UCM.
         USING UCMFEXTA,R4
         L     R4,UCMCPFTA       POINT TO CPF TABLE.
         DROP  R4                UCMFEXTA.
         USING CPFT,R4
         ICM   R3,15,CPFTNUME    GET NUMBER OF ENTRIES.
         JZ    MDONECPF          HANDLE EMPTY TABLE.
         A     R4,CPFT1ST        POINT TO FIRST ENTRY.
         DROP  R4                CPFT.
         USING CPFT_ENTRY,R4
MCPFLOOP DS    0H
         MVC   MCPFPREF,CPFTPRFX
         MVC   MCPFOWNR,CPFTOWNR
         MVC   MCPFSYS,CPFTSYS
         UNPK  MCPFASID(5),CPFTASID(3)
         TR    MCPFASID,HEX-C'0'
         MVI   MCPFASID+4,C' '
         MVC   MCPFSCOP(6),=C'SYSTEM'
         TM    CPFTFLGS,CPFTSCOP
         JNO   MCPFL1
         MVC   MCPFSCOP(7),=C'SYSPLEX'
MCPFL1   MVC   MCPFREMV(2),=C'NO'
         TM    CPFTFLGS,CPFTREMV
         JNO   MCPFL2
         MVC   MCPFSCOP(3),=C'YES'
MCPFL2   MVC   MCPFFDSP(5),=C'PURGE'
         TM    CPFTFLGS,CPFTFDP1
         JNO   MCPFL3
         MVC   MCPFFDSP,=C'SYSPURGE'
MCPFL3   TM    CPFTFLGS,CPFTFDP0+CPFTFDP1
         JNO   MCPFL4
         MVC   MCPFFDSP,=C'RETAIN  '
MCPFL4   JAS   R14,MADDLINE      LINE NOW COMPLETE.
         LA    R4,CPFT_ENTRY_LENGTH(,R4)  POINT TO NEXT ENTRY.
         JCT   R3,MCPFLOOP
MDONECPF JAS   R14,MSPCLINE      INSERT A BLANK LINE.
         SPACE
MNTPDONE TM    MODESW2,AUTH      APF AUTHORIZED?
         JZ    MAPFDON2          NO, CAN'T GET INTO SUPERVISOR STATE.
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-48(17,R2),=CL21'CONTROL REGISTERS'
         JAS   R14,MSPCLINE      SHOW SYMBOL HEADING.
         LA    R6,4              FOUR DETAIL LINES REQUIRED.
         LA    R1,CRLABELS       POINT TO LABELS FOR EACH LINE.
         LA    R3,SECWORKA       POINT TO CONTENTS.
CREGLINE LA    R4,4              SHOW FOUR REGISTERS PER LINE.
         LA    R5,LL-66(,R2)     POINT TO INITIAL DISPLAY POSITION.
         MVI   LL-80(R2),X'F1'   BLUE.                          (I3279)
         MVC   LL-77(7,R2),0(R1) SUPPLY CONTROL REGISTER NUMBERS.
CREGLOOP UNPK  0(9,R5),0(5,R3)   UNPACK CONTENTS OF ONE REGISTER.
         TR    0(8,R5),HEX-C'0'  MAKE DISPLAYABLE.
         MVI   8(R5),C' '        ERASE GARBAGE.
         LA    R3,4(,R3)         POINT TO NEXT REGISTER'S CONTENTS
         LA    R5,12(,R5)          AND DISPLAY AREA.
         JCT   R4,CREGLOOP       PROCESS NEXT REGISTER ON THIS LINE.
         JAS   R14,MSPCLINE      DETAIL LINE NOW COMPLETE.
         LA    R1,7(,R1)         POINT TO NEXT LINE LABEL.
         JCT   R6,CREGLINE       PROCESS NEXT REGISTER ON NEXT LINE.
         SPACE
         JAS   R14,MSPCLINE      INSERT A BLANK LINE.
         SPACE
         MODESET MF=(E,MDSET0)   GET INTO KEY ZERO.
         L     R4,CVTPTR(,0)     POINT TO THE CVT,
         L     R4,CVTJESCT-CVT(,R4)    TO THE JESCT,
         L     R4,JESPPT-JESCT(,R4)    TO THE PPT.  (IEFZB610).
         USING PPT,R4
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-77(32,R2),=C'PROGRAM PROPERTIES TABLE ENTRIES'
         LH    R6,PPTUSED
         CVD   R6,WORK
         MVC   LL-37(6,R2),ED5   SHOW USED ENTRY COUNT.
         ED    LL-37(6,R2),WORK+5
         MVC   LL-30(12,R2),=C'USED ENTRIES'
         LH    R1,PPTENTS        GET TOTAL ENTRY COUNT.
         SR    R1,R6             GET AVAILABLE ENTRIES.
         CVD   R1,WORK
         MVC   LL-18(6,R2),ED5   SHOW IT.
         ED    LL-18(6,R2),WORK+5
         MVC   LL-11(9,R2),AVAILTXT+2
         JAS   R14,MSPCLINE      SHOW PPT HEADING.
         LR    R5,R4             POINT TO PPT HEADER.
         AH    R5,PPTHDRLN       POINT TO FIRST ENTRY.
         LTR   R6,R6             ANY ENTRIES?
         JZ    MPPTEND           NO, THAT'S FUNNY.
         USING PPT1,R5
MPPTLOOP MVC   LL-76(8,R2),PPTNAME  LOAD PROGRAM NAME.
         TM    PPTBYTE1,PPTSKEY  SPECIAL KEY REQUIRED?
         JNO   MPPKEYOK          NO.
         MVC   LL-66(4,R2),=C'KEY='
         ICM   R1,8,PPTKEY       GET THE KEY.
         SRL   R1,28             POINT INTO LOW-ORDER NIBBLE.
         STC   R1,LL-62(,R2)
         TR    LL-62(1,R2),HEX   SHOW STORAGE PROTECT KEY.
MPPKEYOK TM    PPTBYTE1,PPTNCNCL NON-CANCELLABLE?
         JZ    MPPCANOK          NO.
         MVC   LL-59(8,R2),=C'NON-CNCL'
MPPCANOK TM    PPTBYTE1,PPTNSWP  NON-SWAPPABLE?
         JZ    MPPSWPOK          NO.
         MVC   LL-49(8,R2),=C'NON-SWAP'
MPPSWPOK TM    PPTBYTE1,PPTPRIV  PRIVILEGED?
         JZ    MPPPRVOK          NO.
         MVC   LL-39(6,R2),=C'PRVLGD'
MPPPRVOK TM    PPTBYTE1,PPTSYSTK SYSTEM TASK?
         JZ    MPPTSKOK          NO.
         MVC   LL-31(8,R2),=C'SYS-TASK'
MPPTSKOK TM    PPTBYTE1,PPTNDSI  NO DATA SET INTEGRITY?
         JZ    MPPDSIOK          NO.
         MVC   LL-21(6,R2),=C'NO-DSI'
MPPDSIOK TM    PPTBYTE1,PPTNOPAS BYPASS PASSWORD PROTECTION?
         JZ    MPPPASOK          NO.
         MVC   LL-13(6,R2),=C'NO-PAS'
MPPPASOK TM    PPTORIG,PPTDEFLT  IBM DEFAULT ENTRY?
         JZ    MPPIBMOK          NO.
         MVC   LL-5(4,R2),=C'DFLT'
MPPIBMOK JAS   R14,MADDLINE      SHOW PPT PROGRAM ENTRY.
         AH    R5,PPTENTLN       POINT TO NEXT PPT ENTRY.
         JCT   R6,MPPTLOOP       TRY FOR ANOTHER ENTRY.
         DROP  R4,R5             PPT, PPT1.
MPPTEND  JAS   R14,MSPCLINE      INSERT A BLANK LINE.
         MODESET MF=(E,MDSETN0)  RETURN TO PROBLEM KEY.
MAPFDON2 L     R4,CVTPTR(,0)     POINT TO THE CVT,
         L     R4,CVTJESCT-CVT(,R4)    TO THE JESCT.
         MVC   0(LL-79,R2),HIGHX
         USING JESCT,R4
         LH    R0,JESNRSS        GET SUBSYSTEM COUNT.
         CVD   R0,WORK
         MVC   LL-57(6,R2),ED5
         ED    LL-57(6,R2),WORK+5
         MVC   LL-49(22,R2),=C'MVS SUBSYSTEMS DEFINED'
         JAS   R14,MSPCLINE      SHOW SUBSYSTEM LIST HEADING.
         ICM   R4,15,JESSSCT     POINT TO THE FIRST SSCVT.
         JZ    MSSCTEND          THAT'S FUNNY.
         DROP  R4                JESCT.
         USING SSCT,R4
MSSCVTLP JAS   R14,MSPCLINE      INSERT A BLANK LINE.
         MVC   0(LL-79,R2),HIGHX
         MVI   LL-80(R2),X'F7'   WHITE.                         (I3279)
         MVC   LL-79(4,R2),SSCTSNAM   LOAD SUBSYSTEM NAME.
         ST    R4,WORK
         MVC   LL-73(5,R2),=C'SSCVT'
         UNPK  LL-67(9,R2),WORK(5)
         TR    LL-67(8,R2),HEX-C'0'
*        MVI   LL-59(R2),C' '    SHOW SSCVT ADDRESS.
         MVC   LL-57(2,R2),=C'ID'
         UNPK  LL-54(3,R2),SSCTSSID(2)
         TR    LL-54(2,R2),HEX-C'0'
         MVI   LL-52(R2),C' '    SHOW SUBSYSTEM IDENTIFIER.
         MVC   LL-50(4,R2),=C'SSVT'
         UNPK  LL-45(9,R2),SSCTSSVT(5)
         TR    LL-45(8,R2),HEX-C'0'
*        MVI   LL-37(R2),C' '    SHOW SSVT ADDRESS.
         MVC   LL-35(6,R2),=C'SS-USE'
         UNPK  LL-28(9,R2),SSCTSUSE(5)
         TR    LL-28(8,R2),HEX-C'0'
*        MVI   LL-20(R2),C' '    SHOW SUBSYSTEM USAGE WORD CONTENTS.
         MVC   LL-18(6,R2),=C'SS-US2'
         UNPK  LL-11(9,R2),SSCTSUS2(5)
         TR    LL-11(8,R2),HEX-C'0'
*        MVI   LL-3(R2),C' '     SHOW SUBSYSTEM USAGE WORD CONTENTS.
         LR    R1,R2             REMEMBER THIS LINE'S ADDRESS.
         TR    LL-79(79,R2),XLATETBL
         MVI   LL-74(R2),X'26'
         MVI   LL-68(R2),X'24'   MAKE SSCVT ADDRESS TAB SELECTABLE.
         MVI   LL-59(R2),X'26'
         MVI   LL-46(R2),X'24'   MAKE SSVT ADDRESS TAB SELECTABLE.
         MVI   LL-37(R2),X'26'
         MVI   LL-29(R2),X'24'
         MVI   LL-20(R2),X'26'
         MVI   LL-12(R2),X'24'
         MVI   LL-3(R2),X'26'
         JAS   R14,MSPCLINE      SHOW THE LINE FOR THIS SSCVT.
         CLC   LL-79(4,R1),8(R4) IS THE SUBSYSTEM NAME DISPLAYABLE?
         JE    MSSNAMOK          YES, DON'T NEED TO SHOW HEX.
         MVC   0(LL-79,R2),MEDX
         MVC   LL-73(20,R2),=C'SUBSYSTEM NAME IS X'''
         UNPK  LL-53(9,R2),8(5,R4)
         TR    LL-53(8,R2),HEX-C'0'
         MVI   LL-45(R2),C''''   SHOW SUBSYSTEM NAME IN HEXADECIMAL.
         JAS   R14,MSPCLINE      LINE NOW COMPLETE.
MSSNAMOK ICM   R5,15,SSCTSSVT    POINT TO THE SSVT.
         JZ    MNXTSSCT          IF NONE THEN TRY FOR NEXT SSCVT.
         LA    R7,256            GET MAXIMUM SSVT ENTRIES.
         SLR   R3,R3
*        CLC   =C'MSTR',SSCTSNAM IS SUBSYSTEM MSTR?
*        JE    MJES2FLP          YES.
*        CLI   SSCTSSID,2        IS SUBSYSTEM JES2?
*        JNE   MNOTJES2          NO.
MJES2FLP LA    R3,1(,R3)         INCREMENT ENTRY CODE.
         SLR   R1,R1
         IC    R1,3(R3,R5)       LOAD FUNCTION MATRIX ENTRY.
         LTR   R1,R1
         JZ    MNXTJ2FN          IF ZERO THEN IGNORE.
         CVD   R3,WORK
         MVC   LL-79(13,R2),=C'FUNCTION CODE'
         MVC   LL-66(4,R2),ED3
         ED    LL-66(4,R2),WORK+6
         MVI   LL-60(R2),C'-'
         SLL   R1,2              MULTIPLY BY FOUR.
         L     R1,256(R1,R5)     LOAD FUNCTION CODE ENTRY POINT.
         ST    R1,WORK
         UNPK  LL-58(9,R2),WORK(5)
         TR    LL-58(8,R2),HEX-C'0'
*        MVI   LL-50(R2),C' '    SHOW ENTRY POINT ADDRESS.
         CLC   5(3,R1),4(R1)     $$$$?
         JE    MGOTJES2          YES, LOOKS LIKE JES2.
MMSSEPLP CLC   =X'47F0',0(R1)    UNCONDITIONAL BRANCH?
         JE    MMGOTJMP          YES.
         CLC   =X'A7F4',0(R1)    UNCONDITIONAL BRANCH?
         JE    MMGOTJMP          YES.
         CLC   =X'07FE',0(R1)    UNCONDITIONAL BRANCH?
         JE    MJES2OK           YES, GIVE UP.
         CLI   0(R1),X'0B'       BSM?
         JE    MJES2OK           YES, GIVE UP.
         CLI   0(R1),X'82'       LPSW?
         JE    MJES2OK           YES, GIVE UP.
         CLI   0(R1),X'00'       NULL?
         JE    MJES2OK           YES, GIVE UP.
         TM    0(R1),X'C0'       TEST OPCODE LENGTH BITS.
         LA    R1,2(,R1)
         JZ    MMSSEPLP          NOW PAST 2-BYTE INSTRUCTION.
         LA    R1,2(,R1)
         JNO   MMSSEPLP          NOW PAST 4-BYTE INSTRUCTION.
         LA    R1,2(,R1)
         J     MMSSEPLP          NOW PAST 6-BYTE INSTRUCTION.
MMGOTJMP SLR   R14,R14
         IC    R14,3(,R1)
         CLI   0(R1),X'A7'       RELATIVE INSTRUCTION?
         JNE   *+8               NO.
         SLL   R14,1             YES, CONVERT HALFWORDS TO BYTES.
         AHI   R14,-6
         JNP   MCHKIRLM          TOO SHORT - CHECK FOR STRING B4 CODE.
         CLI   4(R1),C'.'        FIRST BYTE A LENGTH INDICATOR?
         JNL   MMGOTILN          PROBABLY NOT.
         IC    R14,4(,R1)        PROBABLY, LOAD IT.
         LA    R1,1(,R1)         POINT PAST IT.
MMGOTILN LA    R15,LL-49(,R2)    POINT TO EYE-CATCHER TARGET AREA.
         LA    R0,49             GET MAXIMUM BYTE COUNT TO SHOW.
         CR    R14,R0            LONGER THAN MAXIMUM?
         JNH   MMICLDLP          NO.
         LR    R14,R0            YES, REDUCE TO MAXIMUM.
MMICLDLP LR    R0,R2             SAVE CURRENT LINE POINTER.
         TRT   4(1,R1),MICATCTB  IS THIS BYTE DISPLAYABLE?
         LR    R2,R0             RESTORE CURRENT LINE POINTER.
         JNZ   MJES2OK           NO, END OF EYE-CATCHER STRING.
         MVC   0(1,R15),4(R1)    YES, COPY THE CHARACTER.
         LA    R15,1(,R15)       POINT TO NEXT TARGET ADDRESS.
         LA    R1,1(,R1)         POINT TO NEXT SOURCE ADDRESS.
         JCT   R14,MMICLDLP      CONTINUE.
         J     MJES2OK           DONE WHOLE STRING OR AREA FILLED.
MCHKIRLM L     R1,WORK           RESTORE ENTRY POINT ADDRESS.
         NI    WORK+2,X'0F'
         LA    R0,16
         CH    R0,WORK+2         OFFSET INTO PAGE AT LEAST 16?
         JH    MJES2OK           NO, DO NOT RISK S0C4.
         SR    R1,R0             YES, BACK UP 16 BYTES.
         CLI   0(R1),C'A'        EYE-CATCHER PRESENT?
         JL    MJES2OK           NO, DOES NOT LOOK LIKE IT.
         MVC   LL-49(16,R2),0(R1)
         J     MJES2OK           YES, SO SHOW IT.
MGOTJES2 MVC   LL-49(8,R2),8(R1) LOAD FUNCTION NAME AND DESCRIPTION.
         CLI   16(R1),C'('       DESCRIPTION IN EYE-CATCHER?
         JE    MNEWJES2          YES, "MODERN" JES2.
         CLI   16(R1),C'A'       DESCRIPTION IN EYE-CATCHER?
         JL    MJES2OK           NO, DON'T SHOW GARBAGE.
MNEWJES2 MVC   LL-40(40,R2),16(R1)
MJES2OK  TR    LL-79(79,R2),XLATETBL
         MVI   LL-59(R2),X'24'   MAKE MODULE ADDRESS TAB SELECTABLE.
         MVI   LL-50(R2),X'25'
         JAS   R14,MSPCLINE      SHOW THE LINE FOR THIS FUNCTION.
MNXTJ2FN JCT   R7,MJES2FLP
         J     MNXTSSCT          PREPARE FOR NEXT SUBSYSTEM.
MNOTJES2 MVC   LL-73(10,R2),=C'FUNCTIONS:'
         LA    R15,LL-63(,R2)    POINT TO FIRST DISPLAY COLUMN.
         LA    R14,LL-8(,R2)     POINT PAST LAST START DISPLAY COLUMN.
MSSVTFLP LA    R3,1(,R3)         INCREMENT ENTRY CODE.
         LA    R1,3(R3,R5)       POINT TO FUNCTION MATRIX ENTRY.
         CLI   0(R1),0           ANY SUPPORT FOR THIS FUNCTION?
         JE    MNXTSSFN          NO.
         CLI   0(R15),C' '       FIRST OR ONLY IN A RANGE?
         JE    MPUTSSFN          YES.
         CLI   1(R1),0           NO, LAST IN A RANGE?
         JNE   MNXTSSFN          NO, DO NOT SHOW THIS NUMBER.
MPUTSSFN CVD   R3,WORK
         MVC   1(3,R15),ED3+1    SHOW THE FUNCTION NUMBER.
         ED    0(4,R15),WORK+6
MSSFN#LP TM    1(R15),X'0F'      LEADING ZERO?
         JNZ   MSSFN#OK          NO.
         MVC   1(3,R15),2(R15)   YES, SHUFFLE UP TO SUPPRESS.
         J     MSSFN#LP
MSSFN#OK LA    R15,2(,R15)       POINT PAST FIRST DIGIT.
MSSFN#CK TM    0(R15),X'F0'      POINTING TO ANOTHER DIGIT?
         JNO   MSSRANGE          NO, POINT PAST WHOLE NUMBER.
         LA    R15,1(,R15)       YES, POINT PAST THIS DIGIT.
         J     MSSFN#CK          GO CHECK FOR ANOTHER DIGIT.
MSSRANGE CLI   1(R1),0           IS THIS THE START OF A RANGE?
         JE    MSSCHKLN          NO.
         CLI   2(R1),0           YES, BUT MORE THAN TWO ENTRIES?
         JNE   MSSFDASH          YES.
MSSCHKLN CR    R15,R14           NEAR THE END OF THE DISPLAY LINE?
         JNH   MNXTSSFN          NO.
         JAS   R14,MADDLINE      YES, SHOW THE FUNCTIONS SO FAR.
         LA    R15,LL-63(,R2)    POINT TO FIRST DISPLAY COLUMN.
         LA    R14,LL-8(,R2)     POINT PAST LAST START DISPLAY COLUMN.
         J     MNXTSSFN          NO.
MSSFDASH MVI   0(R15),C'-'       YES, INDICATE RANGE.
MNXTSSFN JCT   R7,MSSVTFLP
         JAS   R14,MADDLINE      SHOW THE FUNCTIONS FOR THIS SUBSYS.
MNXTSSCT ICM   R4,15,SSCTSCTA    IS THERE ANOTHER SSCVT?
         JNZ   MSSCVTLP          YES, PROCESS IT.
         DROP  R4                SSCT.
MSSCTEND J     MDYNEXIT          GO SHOW DYNAMIC EXITS.
MPOLQERY L     R9,RMCTADDR       POINT TO THE RMCT.
         USING RMCT,R9
         TM    RMCTICST,X'7F'    IN WLM GOAL MODE?
         BM    MWMPOLDN          NO, NO POLICY TO EXTRACT.
         DROP  R9                RMCT.
         TM    MODESW2,AUTH      APF AUTHORIZED?
         BZ    MWMPOLDN          NO, CANNOT EXTRACT POLICY.
         L     R0,MPQRYLEN       YES, GET AREA SIZE.
         GETMAIN RU,LV=(0),SP=SUBPOOL,LOC=(31,64)
         ST    R1,MPQRYPTR       SAVE AREA ADDRESS.
         MODESET MF=(E,MDSTSUP)  GET INTO SUPERVISOR STATE.
         L     R4,MPQRYPTR       POINT TO QUERY AREA.
         IWMPQRY ANSAREA=(R4),ANSLEN=MPQRYLEN,QUERYLEN=MPQRETLN,       +
               MF=(E,MPQRYLST)   GET CURRENT WORKLOAD POLICY.
         LR    R4,R0             SAVE REASON CODE.
         MODESET MF=(E,MDSTPRB)  REVERT TO PROBLEM STATE.
         CLM   R4,3,=X'040A'     WAS AREA LARGE ENOUGH?
         BNE   MWMPOLOK          YES.
         LM    R0,R1,MPQRYLEN    NO, GET LENGTH AND ADDRESS OF AREA.
         FREEMAIN RU,A=(1),LV=(0),SP=SUBPOOL
         ST    R15,MPQRYPTR      RESET AREA POINTER.
         L     R1,MPQRETLN       GET REQUIRED AREA SIZE.
         LA    R1,4095(,R1)
         SRL   R1,12
         SLL   R1,12             ROUND UP TO NEXT PAGE BOUNDARY.
         ST    R1,MPQRYLEN       SAVE THE NEW SIZE.
         B     MPOLQERY          RETRY.
         SPACE
MMOVE    MVC   0(0,R15),0(R1)    <<< EXECUTED >>>
         SPACE
MWMPOLOK BAS   R14,MSPCLINE      INSERT A BLANK LINE.
         L     R4,MPQRYPTR       POINT TO WLM POLICY AREA.
         USING SVPOLHD,R4
         L     R3,SVPOLDPO       GET OFFSET TO POLICY DEFINITION.
         ALR   R3,R4             POINT TO POLICY DEFINITION SECTION.
         USING SVPOLSP,R3
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-78(11,R2),=C'WLM POLICY:'
         MVC   LL-66(8,R2),SVPOLNSP        POLICY NAME.
         MVC   LL-56(32,R2),SVPOLDSP       POLICY DESCRIPTION.
         BAS   R14,MADDLINE
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-66(6,R2),=C'SET BY'
         MVC   LL-59(8,R2),SVPOLIPU        ADMINISTRATOR USERID.
         MVC   LL-50(2,R2),=C'ON'
         MVC   LL-47(8,R2),SVPOLIDS        SYSTEM NAME.
         MVC   LL-37(2,R2),=C'AT'
         MVC   WORK,SVPOLTPA     COPY THE STCK VALUE.
         STCKCONV STCKVAL=WORK,  POINT TO INPUT STCK VALUE.            +
               CONVVAL=SAVE+28,  POINT TO OUTPUT FOUR WORDS.           +
               TIMETYPE=DEC,     GET TIME DECIMAL DIGITS (DEFAULT).    +
               DATETYPE=YYYYMMDD, SPECIFY DATE FORMAT.                 +
               MF=(E,STCKCNVL)   SPECIFY PARAMETER LIST.
         UNPK  LL-34(3,R2),SAVE+28(2)    HH.
         UNPK  LL-31(3,R2),SAVE+29(2)    MM.
         UNPK  LL-28(3,R2),SAVE+30(2)    SS.
         UNPK  LL-25(5,R2),SAVE+36(3)    YYYY.
         UNPK  LL-20(3,R2),SAVE+38(2)    MM.
         UNPK  LL-17(3,R2),SAVE+39(2)    DD.
         TR    LL-34(19,R2),HEX-C'0' HANDLE BAD DECIMAL DIGITS.
         MVI   LL-32(R2),C':'        SUPPLY SEPARATORS AND
         MVI   LL-29(R2),C':'               TIDY UP AFTER TRANSLATE
         MVI   LL-26(R2),C' '               AND THE LAST UNPACK.
         MVI   LL-21(R2),C'-'
         MVI   LL-18(R2),C'-'
         MVI   LL-15(R2),C' '
         BAS   R14,MADDLINE
         MVC   0(LL-79,R2),HIGHX
         MVI   LL-80(R2),X'F7'   WHITE.                         (I3279)
         MVC   LL-72(4,R2),=C'CPU='
         MVC   LL-68(4,R2),SVPOLECP
         MVC   LL-52(4,R2),=C'SRB='
         MVC   LL-48(4,R2),SVPOLESR
         MVC   LL-32(4,R2),=C'IOC='
         MVC   LL-28(4,R2),SVPOLEIO
         MVC   LL-12(4,R2),=C'MSO='
         MVC   LL-8(8,R2),SVPOLEMS
         BAS   R14,MADDLINE
         DROP  R3                SVPOLSP.
         LH    R5,SVPOLDWC       GET NUMBER OF WORKLOAD ENTRIES.
         LTR   R5,R5             ANY WORKLOADS DEFINED?
         BNP   MWRKLDOK          NO.
         L     R3,SVPOLDWO       GET OFFSET TO WORKLOAD DEFINITION.
         ALR   R3,R4             POINT TO WORKLOAD DEFINITION SECTION.
         USING SVPOLWD,R3
         BAS   R14,MSPCLINE
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-52(21,R2),=C'WORKLOAD  DESCRIPTION'
         BAS   R14,MSPCLINE
MWRKLDLP MVC   LL-52(8,R2),SVPOLWNM        WORKLOAD NAME.
         MVC   LL-42(32,R2),SVPOLWDE       WORKLOAD DESCRIPTION.
         BAS   R14,MADDLINE
         AH    R3,SVPOLDWL       POINT TO NEXT WORKLOAD DEFINITION.
         BCT   R5,MWRKLDLP
         DROP  R3                SVPOLWD.
MWRKLDOK LH    R5,SVPOLDCC       GET NUMBER OF SERVICE CLASS ENTRIES.
         LTR   R5,R5             ANY SERVICE CLASSES DEFINED?
         BNP   MSRVCLOK          NO.
         L     R3,SVPOLDCO       GET OFFSET TO SRVCLASS DEFINITION.
         ALR   R3,R4             POINT TO SRVCLASS DEFINITION SECTION.
         USING SVPOLCD,R3
         BAS   R14,MSPCLINE
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),MSRVCLHD
         BAS   R14,MSPCLINE
MSRVCLLP MVC   LL-78(8,R2),SVPOLCNM        SRVCLASS NAME.
         MVC   LL-68(32,R2),SVPOLCDE       SRVCLASS DESCRIPTION.
         LH    R0,SVPOLCPN       SHOW THE NUMBER OF PERIODS.
         CVD   R0,WORK
         MVC   LL-34(6,R2),ED5
         ED    LL-34(6,R2),WORK+5
         MVC   LL-25(8,R2),SVPOLCWN        WORKLOAD NAME.
         MVC   LL-15(8,R2),SVPOLCRN        RESOURCE GROUP NAME.
         BAS   R14,MADDLINE
         AH    R3,SVPOLDCL       POINT TO NEXT SRVCLASS DEFINITION.
         BCT   R5,MSRVCLLP
         LH    R5,SVPOLDCC       GET NUMBER OF SERVICE CLASS ENTRIES.
         L     R3,SVPOLDCO       GET OFFSET TO SRVCLASS DEFINITION.
         ALR   R3,R4             POINT TO SRVCLASS DEFINITION SECTION.
         BAS   R14,MSPCLINE
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),MPERODHD
         BAS   R14,MSPCLINE
MSRVPRLP LH    R6,SVPOLCPN       GET THE NUMBER OF PERIODS FOR CLASS.
         L     R7,SVPOLCPO
         ALR   R7,R3             POINT TO FIRST PERIOD DEFINITION.
         USING SVPOLPD,R7
MPERODLP MVC   LL-78(8,R2),SVPOLCNM        SRVCLASS NAME.
         LH    R1,SVPOLCPN       GET THE NUMBER OF PERIODS.
         LA    R0,1
         CR    R0,R1             SINGLE PERIOD SERVICE CLASS?
         BE    MPERODOK          YES, DON'T SHOW PERIOD NUMBER.
         SR    R1,R6             NO.
         LA    R1,1(,R1)         GET THE PERIOD NUMBER.
         LA    R1,HEX(R1)
         MVC   LL-66(1,R2),0(R1) SHOW THE PERIOD NUMBER.
MPERODOK L     R15,SVPOLTYP      LOAD GOAL TYPE FLAG.
         LA    R0,5              GET KNOWN GOAL TYPE COUNT.
         LA    R1,GOALABEL       POINT TO GOAL NAME TABLE.
MGOLTYLP LTR   R15,R15           THIS GOAL TYPE?
         BM    MTHISGOL          YES.
         SLL   R15,1             NO, PROMOTE NON-SIGN BITS.
         LA    R1,12(,R1)        POINT TO NEXT LABEL.
         BCT   R0,MGOLTYLP
MTHISGOL MVC   LL-60(12,R2),0(R1)
         TM    SVPOLTYP,SVPOLPRC    PERCENTILE RESPONSE TIME GOAL?
         BNO   MPCTILOK             NO.
         LH    R0,SVPOLPER          YES.
         CVD   R0,WORK
         MVC   LL-48(4,R2),ED3
         ED    LL-48(4,R2),WORK+6   SHOW PERCENTILE.
MPCTILOK LH    R0,SVPOLIMP          GET THE IMPORTANCE LEVEL.
         CVD   R0,WORK
         MVC   LL-43(4,R2),ED3Z
         ED    LL-43(4,R2),WORK+6   SHOW THE IMPORTANCE LEVEL.
         TM    SVPOLTYP,SVPOLVEL    VELOCITY GOAL?
         BNO   MVELOCOK             NO.
         L     R0,SVPOLVAL          YES.
         CVD   R0,WORK
         MVC   LL-36(6,R2),ED5
         ED    LL-36(6,R2),WORK+5   SHOW VELOCITY GOAL.
MVELOCOK TM    SVPOLTYP,SVPOLPRC+SVPOLAVG         RESPONSE TIME GOAL?
         BZ    MAVGRTOK             NO.
         L     R0,SVPOLVAL          YES.
         CVD   R0,WORK
         MVC   LL-28(8,R2),ED7
         ED    LL-28(8,R2),WORK+4   SHOW RESPONSE TIME GOAL.
         SLR   R1,R1
         IC    R1,SVPOLRTU
         SLL   R1,2                 MULTIPLY BY FOUR FOR INDEX.
         LA    R1,MRTUNITS(R1)
         MVC   LL-20(4,R2),0(R1)    SHOW RESPONSE TIME UNITS.
MAVGRTOK L     R0,SVPOLDUR
         CVD   R0,WORK
         MVC   LL-16(10,R2),ED9Z
         ED    LL-16(10,R2),WORK+3  SHOW NON-LAST PERIOD DURATION.
         BAS   R14,MADDLINE
         AH    R7,SVPOLDZL       POINT TO NEXT PERIOD DEFINITION.
         BCT   R6,MPERODLP
         AH    R3,SVPOLDCL       POINT TO NEXT SRVCLASS DEFINITION.
         BCT   R5,MSRVPRLP
         DROP  R3,R7             SVPOLCD, SVPOLPD.
MSRVCLOK LH    R5,SVPOLDGC       GET NUMBER OF RESOURCE GROUP ENTRIES.
         LTR   R5,R5             ANY RESOURCE GROUPS DEFINED?
         BNP   MRSGRPOK          NO.
         L     R3,SVPOLDGO       GET OFFSET TO RESGROUP DEFINITION.
         ALR   R3,R4             POINT TO RESGROUP DEFINITION SECTION.
         USING SVPOLRG,R3
         BAS   R14,MSPCLINE
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),MRSGRPHD
         BAS   R14,MSPCLINE
MRSGRPLP MVC   LL-78(8,R2),SVPOLGNM        RESGROUP NAME.
         MVC   LL-68(32,R2),SVPOLGDE       RESGROUP DESCRIPTION.
         TM    SVPOLGLT,SVPOLMNS MINIMUM CAPACITY SPECIFIED?
         BNO   MRSMINOK          NO.
         L     R0,SVPOLGMN       YES, SHOW MINIMUM CPU SU PER SECOND.
         CVD   R0,WORK
         MVC   LL-35(8,R2),ED7
         ED    LL-35(8,R2),WORK+4
MRSMINOK TM    SVPOLGLT,SVPOLMXS MINIMUM CAPACITY SPECIFIED?
         BNO   MRSMAXOK          NO.
         L     R0,SVPOLGMX       YES, SHOW MAXIMUM CPU SU PER SECOND.
         CVD   R0,WORK
         MVC   LL-26(8,R2),ED7
         ED    LL-26(8,R2),WORK+4
MRSMAXOK BAS   R14,MADDLINE
         AH    R3,SVPOLDGL       POINT TO NEXT RESGROUP DEFINITION.
         BCT   R5,MRSGRPLP
         DROP  R3                SVPOLRG.
MRSGRPOK LH    R5,SVPOLDRC       GET NUMBER OF REPORT CLASS ENTRIES.
         LTR   R5,R5             ANY REPORT CLASSES DEFINED?
         BNP   MRPTCLOK          NO.
         L     R3,SVPOLDRO       GET OFFSET TO RPTCLASS DEFINITION.
         ALR   R3,R4             POINT TO RPTCLASS DEFINITION SECTION.
         USING SVPOLRD,R3
         BAS   R14,MSPCLINE
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-56(25,R2),=C'REPORT-CLASS  DESCRIPTION'
         BAS   R14,MSPCLINE
MRPTCLLP MVC   LL-52(8,R2),SVPOLRNM        RPTCLASS NAME.
         MVC   LL-42(32,R2),SVPOLRDE       RPTCLASS DESCRIPTION.
         BAS   R14,MADDLINE
         AH    R3,SVPOLDRL       POINT TO NEXT RPTCLASS DEFINITION.
         BCT   R5,MRPTCLLP
         DROP  R3                SVPOLRD.
MRPTCLOK LM    R0,R1,MPQRYLEN    GET LENGTH AND ADDRESS OF AREA.
         FREEMAIN RU,A=(1),LV=(0),SP=SUBPOOL
         ST    R15,MPQRYPTR      RESET AREA POINTER.
MWMPOLDN TM    MODESW2,AUTH      APF AUTHORIZED?
         BZ    MMSPCXIT          NO, CAN'T REPORT SYSPLEX DATA.
         TM    OSLEVEL+1,CVTH4430 SP4.3 OR LATER?
         BO    MMTELLMS          YES, SYSPLEX MAY EXIST.
MMSPCXIT BAS   R14,MSPCLINE      INSERT A BLANK LINE.
         B     MSUMMARY          COMPLETED OUTPUT FOR "MM".
MMTELLMS MVI   2(R2),X'F4'       UNDERSCORE.                    (I3279)
         BAS   R14,MSPCLINE      INSERT A BLANK LINE.
         MVI   LL-80(R2),X'F1'   BLUE.                          (I3279)
         MVC   LL-79(79,R2),MMSFORMS
         BAS   R14,MADDLINE      LINE NOW COMPLETE.
         TM    OSLEVEL+1,CVTH5510 EARLIER THAN MVS/SP5?
         BNO   MMTELLMS          YES, NO CF MAY EXIST.
         MVI   LL-80(R2),X'F1'   BLUE.                          (I3279)
         MVC   LL-58(36,R2),MMSFORMC
         BAS   R14,MADDLINE      LINE NOW COMPLETE.
         B     MSUMMARY          COMPLETED OUTPUT FOR "MM".
         SPACE
MCCFAREA CLC   MSTRCTNM,BLANKS   CURRENT AREA FOR SPECIFIC STRUCTURE?
         BNER  R14               YES, RETURN WITHOUT ACTION.
         ICM   R1,15,MCFLAREA    ANY CURRENT AREA PRESENT?
         BZR   R14               NO, RETURN WITHOUT ACTION.
         ICM   R1,15,MCFLPREV    ANY LINGERING PREVIOUS RETURNED AREA?
         BZ    MSNEWPRV          NO, UPDATE POINTERS.
         L     R0,0(,R1)         YES, GET SIZE OF PREVIOUS AREA.
         FREEMAIN RU,LV=(0),A=(1),SP=130
MSNEWPRV MVC   MCFLPREV,MCFLAREA COPY CURRENT POINTER.
         MVC   MCFLTIMO,MCFLTIMN COPY CURRENT TIME STAMP.
         XC    MCFLAREA,MCFLAREA CLEAR CURRENT POINTER.
         BR    R14               RETURN TO CALLER.
         SPACE
MPERPLEX CLI   MORSMODE,C'C'     SHOW COUPLING FACILITY DETAILS?
         BNE   MSYSPLEX          NO, GO SHOW SYSPLEX INFORMATION.
         MVC   LL-79(79,R2),HEADNGMC
         BAS   R14,MADDLINE      LINE NOW COMPLETE.
         BAS   R14,MSPCLINE      INSERT A BLANK LINE.
         BAS   R14,MCCFAREA      PERFORM IMCFLIST AREA HOUSEKEEPING.
         LA    R1,CFLSTPRM       POINT TO CF LIST ROUTINE PARAMETER.
         L     R15,=V(IMCFLIST)  GET CF LIST ROUTINE ENTRY POINT.
         BASR  R14,R15           INVOKE IT.
         LTR   R15,R15           SUCCESSFUL CALL?
         BZ    MCCFGOOD          YES.
         SPACE
         MVI   4(R2),X'F8'       NO, HIGH INTENSITY FOR ERROR.
         MVI   LL-80(R2),X'F2'   RED FOR ERROR.                 (I3279)
         CVD   R15,WORK
         MVC   LL-10(6,R2),ED5
         ED    LL-10(6,R2),WORK+5
         MVC   LL-35(25,R2),MSUBRMSG
         CHI   R15,28            MISSING COUPLING FACILITY?
         BE    MCFLST28          YES.
         CHI   R15,24            MISSING POLICY?
         BE    MCFLST24          YES.
         CHI   R15,20            MISSING STRUCTURE?
         BE    MCFLST20          YES.
         MVC   LL-70(14,R2),=C'INTERNAL ERROR'
         B     MCFLSTBD
MCFLST28 MVC   LL-70(35,R2),=C'NO COUPLING FACILITY IN CFRM POLICY'
         B     MCFLSTBD
MCFLST24 MVC   LL-70(25,R2),=C'CANNOT ACCESS CFRM POLICY'
         B     MCFLSTBD
MCFLST20 MVC   LL-70(28,R2),=C'STRUCTURE NOT IN CFRM POLICY'
MCFLSTBD BAS   R14,MADDLINE      LINE NOW COMPLETE.
         BAS   R14,MSPCLINE      INSERT A BLANK LINE.
         B     MSUMMARY          REPORT FAILURE.
         SPACE
MCCFGOOD TIME  BIN               GET THE CURRENT TIME.
         ST    R0,MCFLTIMN       SAVE IT.
         MVC   0(LL-79,R2),HIGHX HIGH INTENSITY FOR HEADING.
         CLC   MSTRCTNM,BLANKS   LOOKING AT SPECIFIC STRUCTURE?
         BNE   MSTRCTUR          YES.
         MVC   LL-79(79,R2),MCCF1HDG
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         L     R1,MCFLAREA       POINT TO RETURNED AREA.
         USING INFTCD2,R1
         L     R0,TCD2CFR#       GET NUMBER OF CF RECORDS.
         LA    R3,TCD2CNRA       POINT TO FIRST CF RECORD.
         DROP  R1                INFTCD2.
         USING TCD2CFR,R3
MCNXTCF1 ST    R0,CFLOOPCT       SAVE CF LOOP COUNTER.
         USING MCLINE1,R2
*        MVI   MCL1BAR1,C'|'
*        MVI   MCL1BAR2,C'|'
*        MVI   2(R2),X'F4'       UNDERSCORE.                    (I3279)
         BAS   R14,MSPCLINE      INSERT A BLANK LINE.
         MVC   MCL1CFNM,TCD2CFNM SHOW CF NAME.
         ICM   R1,8,TCD2FLG1     GET CF STATUS.
         LA    R0,4              GET KNOWN STATUS COUNT.
         LA    R15,CFSTATAB      POINT TO STATUS LABEL TABLE.
CFSTATLP LTR   R1,R1             STATUS FLAG BIT ON?
         BM    MCCFSTAT          YES.
         SLL   R1,1              NO, PROMOTE NEXT BIT.
         LA    R15,9(,R15)       POINT TO NEXT STATUS LABEL.
         BCT   R0,CFSTATLP       TEST NEXT BIT.
MCCFSTAT MVC   MCL1CFST,0(R15)   SHOW CF STATUS.
         MVC   MCL1PLCY,TCD2POLN SHOW POLICY NAME.
         SPACE
         LA    R4,1              GET MINIMUM LINE COUNT PER CF.
         C     R4,TCD2SYS#       COMPARE WITH SYSTEM COUNT.
         BNL   *+8               TAKE THE LARGER OF THE TWO.
         L     R4,TCD2SYS#
         C     R4,TCD2STR#       COMPARE WITH STRUCTURE COUNT.
         BNL   *+8               TAKE THE LARGER OF THE TWO.
         L     R4,TCD2STR#
         ST    R4,MCCFLNCT       SAVE LINE COUNT FOR THIS CF.
         ST    R2,MCCFLNAD       SAVE FIRST LINE ADDRESS FOR THIS CF.
MCCFLNLP MVI   MCL1BAR1,C'|'
         MVI   MCL1BAR2,C'|'
         BAS   R14,MSPCLINE      CREATE ANOTHER DISPLAY LINE.
         BCT   R4,MCCFLNLP       GET THE REQUISITE NUMBER OF LINES.
         SPACE
         L     R2,MCCFLNAD       POINT BACK TO THE FIRST LINE.
         ICM   R4,15,TCD2SYS#    GET SYSTEM COUNT.
         BZ    MCSYSTDN          ALLOW FOR NO SYSTEMS.
         LA    R5,TCD2SYSA       POINT TO FIRST SYSTEM NAME.
MCSYSTLP MVC   MCL1SYST,0(R5)    SHOW SYSTEM NAME.
         LA    R5,8(,R5)         POINT TO NEXT SYSTEM NAME.
         LA    R2,LL(,R2)        POINT TO NEXT DISPLAY LINE.
         BCT   R4,MCSYSTLP       PROCESS NEXT SYSTEM NAME.
         SPACE
MCSYSTDN L     R2,MCCFLNAD       POINT BACK TO THE FIRST LINE.
         ICM   R4,15,TCD2STR#    GET STRUCTURE COUNT.
         BZ    MCSTRCDN          ALLOW FOR NO STRUCTURES.
         LA    R5,TCD2SCL        GET SUBCHANNEL RECORD LENGTH.
         MHI   R5,255
         LA    R5,TCD2STRA(R5)   POINT TO FIRST STRUCTURE RECORD.
         USING TCD2STR,R5
MCSTRCLP MVC   MCL1STRC,TCD2STRN SHOW STRUCTURE NAME.
         ICM   R1,8,TCD2FLG2     GET STRUCTURE STATUS.
         LA    R0,5              GET KNOWN STATUS COUNT.
         LA    R15,STSTATAB      POINT TO STATUS LABEL TABLE.
STSTATLP LTR   R1,R1             STATUS FLAG BIT ON?
         BM    MCSTSTAT          YES.
         SLL   R1,1              NO, PROMOTE NEXT BIT.
         LA    R15,12(,R15)      POINT TO NEXT STATUS LABEL.
         BCT   R0,STSTATLP       TEST NEXT BIT.
MCSTSTAT MVC   MCL1STST,0(R15)   SHOW STRUCTURE STATUS.
         LA    R5,TCD2SCL(,R5)   POINT TO NEXT STRUCTURE RECORD.
         LA    R2,LL(,R2)        POINT TO NEXT DISPLAY LINE.
         BCT   R4,MCSTRCLP       PROCESS NEXT STRUCTURE RECORD.
         DROP  R5                TCD2STR.
         SPACE
MCSTRCDN L     R2,MCCFLNAD       POINT BACK TO THE FIRST LINE.
         L     R4,MCCFLNCT       GET LINE COUNT FOR THIS CF.
MCCFXLLP TR    LL-79(79,R2),XLATETBL
         LA    R2,LL(,R2)
         BCT   R4,MCCFXLLP
         SPACE
         L     R0,CFLOOPCT       RESTORE CF LOOP COUNTER.
         L     R1,MCFLAREA       POINT TO RETURNED AREA.
         USING INFTCD2,R1
         A     R3,TCD2CFRL       POINT TO NEXT CF RECORD.
         BCT   R0,MCNXTCF1       PROCESS NEXT CF RECORD.
         DROP  R1,R2,R3          INFTCD2, MCLINE1, TCD2CFR.
         SPACE
         BAS   R14,MSPCLINE      INSERT A BLANK LINE.
         MVC   0(LL-79,R2),HIGHX HIGH INTENSITY FOR HEADING.
         MVC   LL-79(79,R2),MCCF2HD1
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         MVC   0(LL-79,R2),HIGHX HIGH INTENSITY FOR HEADING.
         MVC   LL-79(79,R2),MCCF2HD2
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         L     R1,MCFLAREA       POINT TO RETURNED AREA.
         USING INFTCD2,R1
         L     R0,TCD2CFR#       GET NUMBER OF CF RECORDS.
         LA    R3,TCD2CNRA       POINT TO FIRST CF RECORD.
         DROP  R1                INFTCD2.
         USING TCD2CFR,R3
MCNXTCF2 ST    R0,CFLOOPCT       SAVE CF LOOP COUNTER.
         USING MCLINE2,R2
         MVC   MCL2CFNM,TCD2CFNM SHOW CF NAME.
         LA    R6,MCL2SIZE       POINT TO DISPLAY AREA.
         LA    R4,TCD2ASIZ       POINT TO CF SIZE DETAILS.
         BAS   R14,MCCFUSPC      CALCULATE USAGE PERCENTAGE.
         LA    R6,MCL2CNTL       POINT TO DISPLAY AREA.
         LA    R4,TCD2ACSP       POINT TO CF CONTROL SPACE DETAILS.
         BAS   R14,MCCFUSPC      CALCULATE USAGE PERCENTAGE.
         LA    R6,MCL2DUMP       POINT TO DISPLAY AREA.
         LA    R4,TCD2ADMP       POINT TO CF DUMPING SPACE DETAILS.
         BAS   R14,MCCFUSPC      CALCULATE USAGE PERCENTAGE.
         BAS   R14,MADDLINE      DETAIL LINE NOW COMPLETE.
         L     R0,CFLOOPCT       RESTORE CF LOOP COUNTER.
         L     R1,MCFLAREA       POINT TO RETURNED AREA.
         USING INFTCD2,R1
         A     R3,TCD2CFRL       POINT TO NEXT CF RECORD.
         BCT   R0,MCNXTCF2       PROCESS NEXT CF RECORD.
         DROP  R1,R2,R3          INFTCD2, MCLINE2, TCD2CFR.
         SPACE
         BAS   R14,MSPCLINE      INSERT A BLANK LINE.
         BAS   R14,MSPCLINE      INSERT A BLANK LINE.
         MVC   0(LL-79,R2),HIGHX HIGH INTENSITY FOR HEADING.
         MVC   LL-79(79,R2),MCCF3HDG
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         L     R1,MCFLAREA       POINT TO RETURNED AREA.
         USING INFTCD2,R1
         L     R0,TCD2CFR#       GET NUMBER OF CF RECORDS.
         LA    R3,TCD2CNRA       POINT TO FIRST CF RECORD.
         DROP  R1                INFTCD2.
         USING TCD2CFR,R3
MCNXTCF3 ST    R0,CFLOOPCT       SAVE CF LOOP COUNTER.
         USING MCLINE3,R2
*        MVI   2(R2),X'F4'       UNDERSCORE.                    (I3279)
         BAS   R14,MSPCLINE      INSERT A BLANK LINE.
         MVC   MCL3CFNM,TCD2CFNM SHOW CF NAME.
         L     R0,TCD2SCUN       GET TOTAL UNSUCCESSFUL OPERATIONS.
         CVD   R0,WORK
         MVC   MCL3BDIO,ED5
         ED    MCL3BDIO,WORK+5
         L     R0,TCD2SCNA       GET NO SUBCHANNEL FREE COUNT.
         CVD   R0,WORK
         MVC   MCL3NTAV,ED5
         ED    MCL3NTAV,WORK+5
         ICM   R4,15,TCD2SCAV    GET SUBCHANNEL COUNT.
         BZ    MCSBCHDN          ALLOW FOR NO SUBCHANNELS.
         LA    R5,TCD2SCA        POINT TO FIRST SUBCHANNEL AREA.
         USING TCD2SC,R5
MCSBCHLP UNPK  MCL3SBCH(5),TCD2SC#(3)
         TR    MCL3SBCH(4),HEX-C'0'
         MVI   MCL3SBCH+4,C' '
         UNPK  MCL3DEVN(5),TCD2SCD#(3)
         TR    MCL3DEVN(4),HEX-C'0'
         MVI   MCL3DEVN+4,C' '
         ICM   R1,12,TCD2SCST    GET STRUCTURE STATUS.
         LA    R0,3              GET KNOWN STATUS COUNT.
         LA    R15,SCSTATAB      POINT TO STATUS LABEL TABLE.
SCSTATLP LTR   R1,R1             STATUS FLAG BIT ON?
         BM    MCSCSTAT          YES.
         SLL   R1,1              NO, PROMOTE NEXT BIT.
         LA    R15,8(,R15)       POINT TO NEXT STATUS LABEL.
         BCT   R0,SCSTATLP       TEST NEXT BIT.
MCSCSTAT MVC   MCL3SCST,0(R15)   SHOW STRUCTURE STATUS.
         L     R1,TCD2SCB        GET DEVICE BUSY COUNT.
         LA    R15,MCL3BUSY      POINT TO OUTPUT AREA.
         BAS   R14,MCFP7         FORMAT AND DISPLAY NUMBER.
         L     R1,TCD2SCPB       GET ALL PATHS BUSY COUNT.
         LA    R15,MCL3PATH      POINT TO OUTPUT AREA.
         BAS   R14,MCFP7         FORMAT AND DISPLAY NUMBER.
         L     R1,TCD2SCU        GET USAGE COUNT.
         LA    R15,MCL3UTIL      POINT TO OUTPUT AREA.
         BAS   R14,MCFP7         FORMAT AND DISPLAY NUMBER.
         ICM   R15,15,MCFLPREV   POINT TO PREVIOUS AREA.
         BZ    MCNXSBCH          NO PREVIOUS AREA SO SKIP RATE CALC.
         S     R15,MCFLAREA
         AR    R15,R5            POINT TO SAME OFFSET IN OLD AREA.
         CLC   TCD2SC(4),0(R15)  SAME SUBCHAN/DEV#?  (ASSUMED OFFSETS.)
         BNE   MCNXSBCH          NO, DO NOT USE THIS FOR RATE CALC.
         L     R1,TCD2SCU        GET CURRENT USAGE COUNT.
         S     R1,TCD2SCU-TCD2SC(,R15)   GET USAGE COUNT CHANGE.
         BZ    MCNXSBCH          SHOW BLANKS FOR NO I/O.
         L     R15,MCFLTIMN      GET THE CURRENT TIME.
         S     R15,MCFLTIMO      GET THE CHANGE IN TIME.
         BNP   MCNXSBCH          INSIST ON POSITIVE TIME CHANGE.
         M     R0,TENGRAND       HANDLE PERCENTAGE AND CENTISECONDS.
         DR    R0,R15            GET THE I/O RATE.
         CVD   R1,WORK
         MVC   MCL3RATE+1(8),=X'20202021204B2020'
         ED    MCL3RATE,WORK+4   SHOW I/O RATE PER SECOND.
MCNXSBCH BAS   R14,MADDLINE      DISPLAY LINE NOW COMPLETE.
         LA    R5,TCD2SCL(,R5)   POINT TO NEXT SUBCHANNEL RECORD.
         BCT   R4,MCSBCHLP       PROCESS NEXT SUBCHANNEL RECORD.
         DROP  R5                TCD2SC.
MCSBCHDN L     R0,CFLOOPCT       RESTORE CF LOOP COUNTER.
         L     R1,MCFLAREA       POINT TO RETURNED AREA.
         USING INFTCD2,R1
         A     R3,TCD2CFRL       POINT TO NEXT CF RECORD.
         BCT   R0,MCNXTCF3       PROCESS NEXT CF RECORD.
         DROP  R1,R2,R3          INFTCD2, MCLINE3, TCD2CFR.
         SPACE
         BAS   R14,MCCFAREA      PERFORM IMCFLIST AREA HOUSEKEEPING.
         MVI   2(R2),X'F4'       UNDERSCORE.                    (I3279)
         BAS   R14,MSPCLINE      INSERT A BLANK LINE.
         MVI   LL-80(R2),X'F1'   BLUE.                          (I3279)
         MVC   LL-79(79,R2),MCSTRMSG
         BAS   R14,MADDLINE      LINE NOW COMPLETE.
         B     MSUMMARY
         SPACE
MSTRCTUR MVI   ENDDEPTH+1,1      ENSURE PF3/15 MEANING IS CORRECT.
         L     R3,MCFLAREA       POINT TO RETURNED AREA.
         USING INFTCD1,R3
         MVC   LL-79(79,R2),MCST1HDG
         TM    TCD1FLG1,LISTSTR  LIST STRUCTURE?
         BO    *+10              YES, LEAVE EXTRA HEADING COLUMNS.
         MVC   LL-13(13,R2),BLANKS
         BAS   R14,MADDLINE      LINE NOW COMPLETE.
         USING MCLINE4,R2
         MVC   MCL4STNM,MSTRCTNM SHOW STRUCTURE NAME.
         ICM   R1,8,TCD1FLG1     GET STRUCTURE TYPE.
         LA    R0,3              GET KNOWN STATUS COUNT.
         LA    R15,STTYPTAB      POINT TO TYPE LABEL TABLE.
STTYPELP LTR   R1,R1             STATUS FLAG BIT ON?
         BM    MCSTTYPE          YES.
         SLL   R1,1              NO, PROMOTE NEXT BIT.
         LA    R15,5(,R15)       POINT TO NEXT TYPE LABEL.
         BCT   R0,STTYPELP       TEST NEXT BIT.
MCSTTYPE MVC   MCL4STTY,0(R15)   SHOW STRUCTURE TYPE.
         MVC   MCL4STAL,MISALLOC
         TM    TCD1FLG2,STRALOC  STRUCTURE ALLOCATED?
         BO    MCSTSTOK          YES.
         MVC   MCL4STNA,MNOTALOC
         TM    TCD1FLG2,STRNALOC STRUCTURE NOT ALLOCATED?
         BO    MCSTSTOK          YES.
         MVC   MCL4STNA,BLANKS
MCSTSTOK MVC   MCL4CFNM,TCD1CFNM SHOW COUPLING FACILITY NAME.
         LA    R4,TCD1ASIZ       POINT TO ALLOCATED AND USED SIZES.
         LA    R6,MCL4SIZE       POINT TO DISPLAY AREA.
         BAS   R14,MCSTUSPC      CALCULATE USAGE PERCENTAGE.
         MVI   MCL4SIZE+8,C'K'
         MVI   MCL4USED+8,C'K'
         TM    TCD1FLG1,LISTSTR  LIST STRUCTURE?
         BO    *+10              YES, LEAVE USED AMOUNT FIGURES.
         MVC   MCL4USED(17),BLANKS
         BAS   R14,MADDLINE      LINE NOW COMPLETE.
         DROP  R2                MCLINE4.
         ICM   R4,15,TCD1CNR#    GET CONNECTOR COUNT.
         BZ    MCCONNDN          HANDLE ZERO CONNECTOR RECORDS.
         BAS   R14,MSPCLINE      INSERT A BLANK LINE.
         MVC   0(LL-79,R2),HIGHX HIGH INTENSITY FOR HEADING.
         MVC   LL-79(79,R2),MCST2HDG
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         LA    R5,TCD1CNRA       POINT TO FIRST CONNECTOR RECORD.
         USING TCD1CNR,R5
         USING MCLINE5,R2
MCCONNLP MVC   MCL5CNNM,TCD1CNNM SHOW CONNECTOR NAME.
         MVC   MCL5SYSN,TCD1SYSN SHOW SYSTEM NAME.
         MVC   MCL5JOBN,TCD1JOBN SHOW JOB NAME.
         ICM   R1,8,TCD1FLG3     GET STRUCTURE CONNECTION STATUS.
         LA    R0,4              GET KNOWN STATUS COUNT.
         LA    R15,CNSTATAB      POINT TO STATUS LABEL TABLE.
CNSTATLP LTR   R1,R1             STATUS FLAG BIT ON?
         BM    MSCNSTAT          YES.
         SLL   R1,1              NO, PROMOTE NEXT BIT.
         LA    R15,17(,R15)      POINT TO NEXT STATUS LABEL.
         BCT   R0,CNSTATLP       TEST NEXT BIT.
MSCNSTAT MVC   MCL5CNST,0(R15)   SHOW CONNECTOR STATUS.
         BAS   R14,MADDLINE      LINE NOW COMPLETE.
         LA    R5,TCD1CNRL(,R5)  POINT TO NEXT CONNECTOR RECORD.
         BCT   R4,MCCONNLP
         DROP  R2,R5             MCLINE5, TCD1CNR.
MCCONNDN TM    TCD1FLG1,LISTSTR+LOCKSTR+CACHESTR
         BZ    MSTRCTDN          NOT A KNOWN STRUCTURE TYPE.
         BAS   R14,MSPCLINE      INSERT A BLANK LINE.
         MVC   0(LL-79,R2),HIGHX HIGH INTENSITY FOR HEADING.
         TM    TCD1FLG1,CACHESTR
         BO    MCACHEST          IS A CACHE STRUCTURE.
         MVC   LL-46(25,R2),=C'AVAIL-CT   USED-CT  USED%'
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         LA    R4,TCD1ELC        POINT TO ELEMENTS COUNTERS.
         LA    R6,LL-46(,R2)     POINT TO DISPLAY AREA.
         BAS   R14,MCSTUSPC      CALCULATE USAGE PERCENTAGE.
         MVC   LL-56(8,R2),=C'ELEMENTS'
         TM    TCD1FLG1,LOCKSTR  LOCK STRUCTURE?
         BO    MCLOCKST          YES.
         MVC   LL-61(4,R2),=C'LIST'
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         LA    R4,TCD1ENTA       POINT TO LIST ENTRIES COUNTERS.
         LA    R6,LL-46(,R2)     POINT TO DISPLAY AREA.
         BAS   R14,MCSTUSPC      CALCULATE USAGE PERCENTAGE.
         MVC   LL-60(12,R2),=C'LIST ENTRIES'
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         B     MSTRCTDN
MCLOCKST MVC   LL-61(4,R2),=C'LOCK'
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         LA    R4,TCD1LKTA       POINT TO LOCK TABLE ENTRIES COUNTERS.
         LA    R6,LL-46(,R2)     POINT TO DISPLAY AREA.
         BAS   R14,MCSTUSPC      CALCULATE USAGE PERCENTAGE.
         MVC   LL-66(18,R2),=C'LOCK TABLE ENTRIES'
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         BAS   R14,MSPCLINE      INSERT A BLANK LINE.
         MVC   LL-66(31,R2),=C'TOTAL LOCK CONTENTION REQUESTS:'
         L     R1,TCD1LKCT
         LA    R15,LL-35(,R2)    POINT TO OUTPUT AREA.
         BAS   R14,MCFP7         FORMAT AND DISPLAY NUMBER.
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         MVC   LL-66(31,R2),=C'TOTAL LOCK CONTENTION REQUESTS:'
         MVC   LL-66(5,R2),=C'FALSE'
         L     R1,TCD1LKCF
         LA    R15,LL-35(,R2)    POINT TO OUTPUT AREA.
         BAS   R14,MCFP7         FORMAT AND DISPLAY NUMBER.
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         B     MSTRCTDN
MCACHEST MVC   LL-43(5,R2),=C'COUNT'
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         MVC   LL-55(7,R2),=C'ENTRIES'
         MVC   LL-71(15,R2),=C'CACHE DIRECTORY'
         L     R1,TCD1DEC
         LA    R15,LL-46(,R2)    POINT TO OUTPUT AREA.
         BAS   R14,MCFP7         FORMAT AND DISPLAY NUMBER.
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         MVC   LL-67(19,R2),=C'CACHE DATA ELEMENTS'
         L     R1,TCD1ELC
         LA    R15,LL-46(,R2)    POINT TO OUTPUT AREA.
         BAS   R14,MCFP7         FORMAT AND DISPLAY NUMBER.
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         BAS   R14,MSPCLINE      INSERT A BLANK LINE.
         MVC   LL-65(35,R2),=C'MAXIMUM CACHE STORAGE CLASS VALUE ='
         SLR   R1,R1
         IC    R1,TCD1MXSC
         LA    R15,LL-30(,R2)    POINT TO OUTPUT AREA.
         BAS   R14,MCFP7         FORMAT AND DISPLAY NUMBER.
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         MVC   LL-65(35,R2),=C'MAXIMUM CACHE STORAGE CLASS VALUE ='
         MVC   LL-51(7,R2),=C'CASTOUT'
         SLR   R1,R1
         ICM   R1,3,TCD1MXCC
         LA    R15,LL-30(,R2)    POINT TO OUTPUT AREA.
         BAS   R14,MCFP7         FORMAT AND DISPLAY NUMBER.
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         DROP  R3                INFTCD1.
         SPACE
MSTRCTDN MVI   2(R2),X'F4'       UNDERSCORE.                    (I3279)
         BAS   R14,MSPCLINE      INSERT A BLANK LINE.
         MVI   LL-80(R2),X'F1'   BLUE.                          (I3279)
         MVC   LL-64(48,R2),MSPF3MSG
         BAS   R14,MADDLINE      LINE NOW COMPLETE.
         L     R1,MCFLAREA       POINT TO CURRENT STRUCTURE DATA.
         L     R0,0(,R1)         GET ITS SIZE AND FREE IT.
         FREEMAIN RU,LV=(0),A=(1),SP=130
         SLR   R15,R15           SHOULD BE A NO-OP.
         ST    R15,MCFLAREA      RESET CURRENT AREA POINTER.
         SPACE
MSUMMARY BAS   R1,SYSUMMRY       PRODUCE & SHOW SYSTEM SUMMARY LINE.
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         LA    R1,1
         A     R1,WINLINES       INCREMENT LINE COUNTER.
         ST    R1,WINLINES
         MVC   0(2,R2),FFFF+2    SET FINAL LINE FLAG FOR WINDOW DATA.
         DROP  R15               WNDWMNGR.
PUTSCRNM LA    R0,LL             MAKE REGISTER 0 POSITIVE FOR OUTPUT.
GETSCRNM L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         BASR  R14,R15           CALL WINDOW MANAGER.
         TM    MODESW2,XFLG      SUBROUTINE EXIT REQUIRED?
         BZ    NOTEXITM          NO, PROCESS SUBCOMMAND.
         ICM   R1,15,MCFLAREA    ANY LINGERING RETURNED AREA?
         BZ    ISEXITM           NO, PROCEED WITH TIDY UP.
         L     R0,0(,R1)         GET SIZE OF RETURNED AREA.
         FREEMAIN RU,LV=(0),A=(1),SP=130
         ST    R15,MCFLAREA      RESET AREA POINTER.
ISEXITM  L     R15,WINMANAD      YES, POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         CLI   MORSMODE,C'M'     LOOKING AT SYSTEM STUFF?
         BNE   ISEXITMC          NO.
         MVC   MTOPLINE,WINTOP   SAVE TOP-OF-SCREEN LINE NUMBER.
         BR    R9                RETURN TO MAINLINE VIA SCREENIO.
ISEXITMC CLI   MORSMODE,C'C'     LOOKING AT CF STUFF?
         BNE   ISEXITMS          NO.
         MVC   MCTOPLIN,WINTOP   SAVE TOP-OF-SCREEN LINE NUMBER.
         BR    R9                RETURN TO MAINLINE VIA SCREENIO.
ISEXITMS MVC   MSTOPLIN,WINTOP   SAVE TOP-OF-SCREEN LINE NUMBER.
         BR    R9                RETURN TO MAINLINE VIA SCREENIO.
         DROP  R15               WNDWMNGR.
NOTEXITM CLI   DOWNCNTR,C' '     ARE WE IN AUTO REFRESH MODE?
         JH    REDOMANS          YES, CONTINUE WITH DISPLAYS.
         CLI   INBUFF,3          PF3/15?
         BNE   CMDSCANM          NO, CHECK FOR COMMAND TEXT.
         MVC   MSTRCTNM,BLANKS   YES, BLANK OUT STRUCTURE NAME.
         J     REDOMANS
CMDSCANM CLI   INCHARS,C'M'      REQUEST FOR SYSTEM DISPLAY?
         BE    MSETSUBM          YES.
         CLI   INCHARS,C'C'      REQUEST FOR COUPLING FACILITY DISPLAY?
         BE    MSETSUBC          YES.
         CLI   INCHARS,C'S'      REQUEST FOR SYSPLEX DISPLAY?
         BE    MSETSUBS          YES.
         CLI   INCHARS,C'G'      REQUEST FOR SYSPLEX DISPLAY?
         BE    MSETSUBS          YES.
         CLI   INCHARS,C'P'      REQUEST FOR SYSPLEX DISPLAY?
         BE    MSETSUBS          YES.
         CLI   INCHARS,C' '      CONTINUE REQUESTED?
         BH    GIVEHLPM          NO, DISPLAY HELP.
         SLR   R0,R0             DETERMINE IF ZOOM REQUESTED.
         ICM   R0,1,INBUFF+1     GET THE CURSOR ROW NUMBER.
         JZ    REDOMANS          CURSOR ON HEADING LINE.
         BCTR  R0,0
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         A     R0,WINTOP         GET DETAIL LINE NUMBER.
         C     R0,WINLINES       BEFORE SUMMARY LINE?
         JNL   REDOMANS          NO, CURSOR PAST END OF DISPLAY.
         BCTR  R0,0              GET THE RELATIVE LINE NUMBER.
         LA    R1,LL             GET THE LINE LENGTH.
         MR    R0,R0             GET OFFSET INTO DISPLAY.
         A     R1,WINBUFF        POINT TO THE DISPLAY LINE.
         DROP  R15               WNDWMNGR.
         CLC   LL-73(5,R1),=C'SSCVT'
         BE    SCVTEXAM          ZOOM IN ON SSCVT.
         LA    R7,LL-58(,R1)     PERHAPS POINT TO JES2 MODULE ADDRESS.
         CLC   LL-79(13,R1),=C'FUNCTION CODE'
         BE    MEXAMSS
         CLI   LL-46(R1),X'24'   TOKEN CONTENTS ZOOM?
         BE    MNTPZOOM          YES.
         USING MCLINE1,R1
         CLI   MCL1BAR1,C'|'     DOES LINE HAVE EXPECTED FORMAT?
         JNE   REDOMANS          NO, CURSOR NOT ON ZOOM ELIGIBLE LINE.
         CLI   MCL1BAR2,C'|'     DOES LINE HAVE EXPECTED FORMAT?
         JNE   REDOMANS          NO, CURSOR NOT ON ZOOM ELIGIBLE LINE.
         CLI   LL-80(R1),X'F5'   TURQUOISE?  (DETAIL LINE?)
         JNE   REDOMANS          NO, CURSOR NOT ON ZOOM ELIGIBLE LINE.
         CLC   MCL1STRC,BLANKS   ANY STRUCTURE NAME PRESENT?
         JE    REDOMANS          NO, CANNOT PERFORM A ZOOM.
         MVC   MSTRCTNM,MCL1STRC YES, LOAD IT INTO IMCFLIST PARAMETER.
         MVI   ENDDEPTH+1,1      PF3/15 SELECTS CF OVERVIEW.
         J     REDOMANS
         DROP  R1                MCLINE1.
MNTPZOOM CLI   INBUFF+2,34       CURSOR BEFORE COLUMN 35?
         JL    REDOMANS          YES, NO ZOOMABLE FIELD.
         LA    R7,LL-45(,R1)     POINT TO FIRST TOKEN WORD.
         CLI   INBUFF+2,43       CURSOR BEFORE COLUMN 44?
         BL    MEXAMSS           YES, ZOOM TO THIS ADDRESS.
         LA    R7,LL-36(,R1)     POINT TO FIRST TOKEN WORD.
         CLI   INBUFF+2,52       CURSOR BEFORE COLUMN 53?
         BL    MEXAMSS           YES, ZOOM TO THIS ADDRESS.
         LA    R7,LL-27(,R1)     POINT TO FIRST TOKEN WORD.
         CLI   INBUFF+2,61       CURSOR BEFORE COLUMN 62?
         BL    MEXAMSS           YES, ZOOM TO THIS ADDRESS.
         LA    R7,LL-18(,R1)     POINT TO FIRST TOKEN WORD.
         CLI   INBUFF+2,70       CURSOR BEFORE COLUMN 71?
         BL    MEXAMSS           YES, ZOOM TO THIS ADDRESS.
         J     REDOMANS
SCVTEXAM LA    R7,LL-67(,R1)     POINT TO SSCT ADDRESS.
         CLI   INBUFF+2,30       CURSOR BEFORE COLUMN 31?
         BL    MEXAMSS           YES, ZOOM IN TO SSCT.
         LA    R7,LL-45(,R1)     POINT TO SSVT ADDRESS.
         CLI   INBUFF+2,45       CURSOR BEFORE COLUMN 46?
         BL    MEXAMSS           YES, ZOOM IN TO SSVT.
         LA    R7,LL-28(,R1)     POINT TO SSCTSUSE CONTENTS.
         CLI   INBUFF+2,62       CURSOR BEFORE COLUMN 63?
         BL    MEXAMSS           YES, ZOOM IN TO SSVTSUSE.
         LA    R7,LL-11(,R1)     POINT TO SSCTSUS2 CONTENTS.
MEXAMSS  MVC   INBUFF(9),MZMSTR  SUPPLY THE ZOOM COMMAND STRING.
         MVC   INBUFF+9(8),0(R7) LOAD BROWSE ADDRESS.
         MVI   TGETLEN+1,17      SUPPLY "INPUT" DATA LENGTH.
         LNR   R0,R11            MAKE REGISTER 0 NEGATIVE FOR PARSE.
         CLI   INBUFF+9,C'0'     LEADING DECIMAL DIGIT?
         BNL   GETSCRNM          YES, PROCEED.
         TR    INBUFF+9(1),MSIGNOFF-C'A'   RESET SIGN BIT.
         B     GETSCRNM          ZOOM TO OPTION "VB".
GIVEHLPM MVC   INBUFF(8),SBLST   REQUEST SUBCOMMAND LIST FROM TUTORIAL.
         MVI   TGETLEN+1,8       SUPPLY LENGTH OF INPUT TO PARSE.
         LNR   R0,R11            MAKE REGISTER 0 NEGATIVE FOR PARSE.
         B     GETSCRNM          GO DISPLAY HELP PANEL.
MSETSUBM CLI   MORSMODE,C'M'     ALREADY IN SUBFUNCTION "M"?
         JE    REDOMANS          YES, NO ADJUSTMENTS TO BE MADE.
         LA    R1,MCTOPLIN       ASSUME "MC".
         CLI   MORSMODE,C'C'     IS IT?
         BE    *+8               YES.
         LA    R1,MSTOPLIN       NO, "MS".
         MVI   MORSMODE,C'M'     FLAG NEW SUBFUNCTION.
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         MVC   0(4,R1),WINTOP    SAVE CURRENT SCROLL POSITION.
         MVC   WINTOP,MTOPLINE   RESTORE "MM" SCROLL POSITION.
         DROP  R15               WNDWMNGR.
         MVI   ENDDEPTH+1,0      MAKE PF3/15 FUNCTION AS '='.
         J     REDOMANS          GENERATE NEW DISPLAY.
MSETSUBC CLI   MORSMODE,C'C'     ALREADY IN SUBFUNCTION "C"?
         JE    REDOMANS          YES, NO ADJUSTMENTS TO BE MADE.
         TM    MODESW2,AUTH      APF AUTHORIZED?
         JZ    REDOMANS          NO, CAN'T DO SYSPLEX STUFF.
         TM    OSLEVEL+1,CVTH5510 EARLIER THAN MVS/SP5?
         JNO   REDOMANS          YES, CANNOT HAVE A CF.
         LA    R1,MTOPLINE       ASSUME "MM".
         CLI   MORSMODE,C'M'     IS IT?
         BE    *+8               YES.
         LA    R1,MSTOPLIN       NO, "MS".
         MVI   MORSMODE,C'C'     YES, FLAG NEW SUBFUNCTION.
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         MVC   0(4,R1),WINTOP    SAVE CURRENT SCROLL POSITION.
         MVC   WINTOP,MCTOPLIN   RESTORE "MC" SCROLL POSITION.
         DROP  R15               WNDWMNGR.
         CLC   MSTRCTNM,BLANKS   LOOKING AT A SPECIFIC STRUCTURE?
         JE    REDOMANS          NO, PF3/15 IS TO FUNCTION AS '='.
         MVI   ENDDEPTH+1,1      YES, PF3/15 STAYS IN "MC".
         J     REDOMANS          GENERATE NEW DISPLAY.
MSETSUBS CLC   MORSMODE,INCHARS  ALREADY IN REQUESTED SUBFUNCTION?
         JE    REDOMANS          YES, NO ADJUSTMENTS TO BE MADE.
         TM    MODESW2,AUTH      APF AUTHORIZED?
         JZ    REDOMANS          NO, CAN'T DO SYSPLEX STUFF.
         TM    OSLEVEL+1,CVTH4430 SP4.3 OR LATER?
         JNO   REDOMANS          YES, CANNOT HAVE A SYSPLEX.
         LA    R1,MTOPLINE       ASSUME "MM".
         CLI   MORSMODE,C'M'     IS IT?
         BE    MSGOTOPT          YES.
         LA    R1,MCTOPLIN       ASSUME "MC".
         CLI   MORSMODE,C'C'     IS IT?
         BE    MSGOTOPT          YES.
         LA    R1,MSTOPLIN       NO.
MSGOTOPT MVC   MORSMODE,INCHARS  YES, FLAG NEW SUBFUNCTION.
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         MVC   0(4,R1),WINTOP    SAVE CURRENT SCROLL POSITION.
         LA    R0,1
         ST    R0,WINTOP         START NEW DISPLAY FROM FIRST LINE.
         ST    R0,MSTOPLIN
         DROP  R15               WNDWMNGR.
         MVI   ENDDEPTH+1,0      MAKE PF3/15 FUNCTION AS '='.
         J     REDOMANS          GENERATE NEW DISPLAY.
         SPACE
TCASEDIT CVD   R0,WORK           FORMAT COUNT DATA.
         MVC   0(6,R3),ED5
         ED    0(6,R3),WORK+5
         BR    R1
         SPACE
MCCFUSPC L     R0,4(,R4)         SHOW FREE SPACE SIZE.
         CVD   R0,WORK
         MVC   0(8,R6),ED7
         ED    0(8,R6),WORK+4
         MVI   8(R6),C'K'
         L     R15,0(,R4)        SHOW TOTAL ALLOCATED SPACE SIZE.
         CVD   R15,WORK
         MVC   9(8,R6),ED7
         ED    9(8,R6),WORK+4
         MVI   17(R6),C'K'
         LTR   R15,R15           ANY SPACE PRESENT?
         BZR   R14               NO, DO NOT DIVIDE BY ZERO.
         LR    R1,R15            COPY ALLOCATED SPACE SIZE.
         SR    R1,R0             SUBTRACT FREE SPACE SIZE.
         M     R0,AHUNDRED       SHOW PERCENTAGE.
         DR    R0,R15
         CVD   R1,WORK
         MVC   18(4,R6),ED3
         ED    18(4,R6),WORK+6
         MVI   22(R6),C'%'
         BR    R14
         SPACE
MCSTUSPC L     R15,0(,R4)        SHOW AVAILABILITY.
         CVD   R15,WORK
         MVC   0(8,R6),ED7
         ED    0(8,R6),WORK+4
         L     R1,4(,R4)         SHOW CONSUMPTION.
         CVD   R1,WORK
         MVC   10(8,R6),ED7
         ED    10(8,R6),WORK+4
         LTR   R15,R15           ANY SPACE PRESENT?
         BZR   R14               NO, DO NOT DIVIDE BY ZERO.
         M     R0,AHUNDRED       SHOW PERCENTAGE.
         DR    R0,R15
         CVD   R1,WORK
         MVC   20(4,R6),ED3
         ED    20(4,R6),WORK+6
         MVI   24(R6),C'%'
         BR    R14
         SPACE
MCFP7    LR    R0,R1             COPY INPUT VALUE.
         LA    R1,0(,R1)         RESET SIGN BIT.
         CVD   R1,WORK
         LTR   R0,R0
         BNM   MCFP7POS
         AP    WORK,=P'2147483648'
MCFP7POS ICM   R0,15,WORK        ARE 7 DIGITS SUFFICIENT?
         BNZ   MCFP7SCL          NO, MUST EMPLOY SCALING.
         MVC   0(8,R15),ED7      YES.
         ED    0(8,R15),WORK+4
         BR    R14
MCFP7SCL LA    R1,=C'KMGT'       POINT TO SCALING LABELS.
MCFP7SLP SRP   WORK,64-3,0       DIVIDE BY ONE THOUSAND.
         OC    WORK(5),WORK      ARE 5 DIGITS SUFFICIENT?
         BZ    MCFP7SDN          YES.
         LA    R1,1(,R1)         NO, POINT TO NEXT SCALING INDICATOR.
         B     MCFP7SLP
MCFP7SDN MVC   1(6,R15),ED5
         ED    1(6,R15),WORK+5
         MVC   7(1,R15),0(R1)
         BR    R14
         SPACE
MADDLINE TR    LL-79(79,R2),XLATETBL
MSPCLINE LA    R2,LL(,R2)        ADJUST BUFFER POINTER.
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         LA    R0,1
         A     R0,WINLINES       INCREMENT LINE COUNTER.
         ST    R0,WINLINES
         MVC   0(2,R2),WINFULL   PREPARE FOR FULL WINDOW.
         C     R2,WINEND         SEE IF THE BUFFER IS FULL YET.
         BNL   PUTSCRNM          IF YES, THEN FORGET SUMMARY LINE.
MFSTLINE MVC   0(LL-79,R2),LOWX  SUPPLY ATTRIBUTE BYTES.
         MVI   LL-79(R2),C' '    BLANK A LINE.
         MVC   LL-78(78,R2),LL-79(R2)
         BR    R14
         DROP  R15               WNDWMNGR.
         SPACE 2
         DROP  R11,R10,R8        MSSCTEND.
         TITLE 'MANAGEMENT STATUS MONITOR - VARIABLES AND CONSTANTS'
MTOPLINE DC    F'1'              TOP-OF-SCREEN LINE NUMBER FOR "MM".
MCTOPLIN DC    F'1'              TOP-OF-SCREEN LINE NUMBER FOR "MC".
MSTOPLIN DC    F'1'              TOP-OF-SCREEN LINE NUMBER FOR "MS".
SIXTNMIL DC    F'16000000'       SIXTEEN MILLION.
MONEMILL DC    F'1000000'        ONE MILLION.
CSRSIRQ# DC    A(CSRSI_REQUEST_V1CPC_MACHINE)
CSRSIWKL DC    A(SIV1_LEN)       CSRSI RETURN AREA LENGTH.
CFLOOPCT DC    F'0'              LOOP COUNTER SAVE AREA.
MCFLTIMN DC    F'0'              TIME OF LATEST CF STATUS.
MCFLTIMO DC    F'0'              TIME OF PREVIOUS CF STATUS.
CFLSTPRM DC    A(MSTRCTNM)       PLIST FOR IMCFLIST ROUTINE.
MSTRCTNM DC    CL16' ' \_______  STRUCTURE NAME PARAMETER.
MCFLAREA DC    A(0)    /         ADDRESS OF RETURNED AREA.
MPQRYLEN DC    F'4096' \_______  POLICY QUERY AREA LENGTH.
MPQRYPTR DC    A(0)    /         POLICY QUERY AREA POINTER.
MPQRETLN DC    F'0'              RETURNED AREA SIZE REQUIREMENT.
MCCFLNCT DC    F'0'              NUMBER OF LINES TO REPORT CF.
MCCFLNAD DC    A(0)              ADDRESS OF FIRST DISPLAY LINE FOR CF.
         IWMPQRY MF=(L,MPQRYLST) POLICY QUERY PARAMETER LIST.
MMTKNRC  DC    F'0'
MMTKNLV  DC    A(IEANT_SYSTEM_LEVEL)
MMTOKEN  DC    CL16' '
         IFBNTASM
IMPXA    CSECT
CLPA     DC    CL12'COLD (CLPA) '
CVIO     DC    CL12'QUICK (CVIO)'
CRLABELS DC    C'CR 0-3:CR 4-7:CR 8-B:CR C-F:'
GOALABEL DC    CL12'PERCENTILE  '
         DC    CL12'AV-RESP-TIME'
         DC    CL12'VELOCITY    '
         DC    CL12'DISCRETIONRY'
         DC    CL12'SYSTEM      '
         DC    CL12'**UNKNOWN** '
MRTUNITS DC    C'    MS  SECSMINSHRS '
MSIGNOFF DC    C'234567'         TOP HEX DIGITS FOR POSITIVE NUMBER.
AVAILTXT DC    C'UNAVAILABLE  '
MORSMODE DC    C'M'
MZMSTR   DC    X'7D40C11140C1'   READ HEADER FOR ZOOM.
         DC    C'=VB'            CHARACTER STRING FOR ZOOM.
MANDSHDG DC    CL79'SMF DATA SET   VOLUME   SIZE(BLKS)   USED(BLKS)   %+
               FULL   STATUS               '
MANLINH1 DC    CL79'VER SERIAL TYPE   PRODUCT (FMID)  VERSION          +
                RELNO    DFP   VTAM  TSO/E '
MANLINE1 EQU   *,79
         DC    CL1' '
MANVER   DC    CL2' '
         DC    CL1' '
MANSER   DC    CL6' '
         DC    CL1' '
MANMODEL DC    CL4' '
         DC    CL3' '
MANPRDCT DC    CL32' '
         DC    CL2' '
MANRELNO DC    CL5' '
         DC    CL3' '
MANDFP   DC    CL5'¬INST'
         DC    CL2' '
MANVTAM  DC    CL4'¬ACT'
         DC    CL2' '
MANTSOE  DC    CL6'¬INST '
MANLINH2 DC    CL79'SMFID  SYS-NAME  LOADPARM  NUCID  SYSRES-DEV#  IPL-+
               DATE  IPL-TIME  IPL-TYPE    '
MANLINE2 EQU   *,79
         DC    CL1' '
MANSYSID DC    CL4'IPO1'
         DC    CL2' '
MANSNAME DC    CL8' '
         DC    CL2' '
MANLDPRM DC    CL8' '
         DC    CL4' '
MANNUCID DC    CL1' '
         DC    CL4' '
MANSYSRS DC    CL6' '
         DC    CL1' '
MANIPLAD DC    CL3' '
         DC    CL2' '
MANIPLDT DC    CL9'YYYY.DDD'
         DC    CL2' '
MANIPLTM DC    CL8'HH:MM:SS'
         DC    CL2' '
MANIPLTP DC    CL12'WARM'
MANLINE4 EQU   *,79
         DC    CL5'IOCID',X'25'
MANIOCID DC    CL2' '
         DC    CL1' ',X'26',C'EDT',X'25'
MANEDTID DC    CL2' '
         DC    CL2' ',X'26',C'ICS',X'25'
MANICSID DC    CL2' '
         DC    CL2' ',X'26',C'IPS',X'25'
MANIPSID DC    CL2' '
         DC    CL2' ',X'26',C'OPT',X'25'
MANOPTID DC    CL2' '
         DC    CL2' ',X'26',C'GTF',X'25'
         DC    CL3'IS '
MANGTFST DC    CL8' '
         DC    CL4' ',X'26'
         DC    CL6'MAXCAD',X'25'
MANMXCAD DC    CL4' '
         DC    CL2' '
MANLINE5 EQU   *,79
         DC    CL7'CPU(S):',X'25'
MANCPUCT DC    CL3' '
         DC    CL13' CP''S ACTIVE:'
MANCPIDS DC    CL32' '
         DC    CL13' CURRENT CP: '
MANCPNUM DC    CL1'?'
         DC    CL9' '
MANLINE6 EQU   *,79
         DC    CL9'CPU RATE:',X'25'
MANCPURT DC    CL10' '
         DC    CL34' SERVICE UNITS PER CPU SECOND     '
         DC    X'26',CL7'RSVSTRT',X'25'
MANRSTRT DC    CL4' '
MANFSTRT DC    CL4' '
         DC    CL8' FREE)  '
MANLINE7 EQU   *,79
         DC    CL14'MAX ASID VALUE',X'25'
MANMAXAS DC    CL6' '
         DC    X'26',CL10'   MAXUSER',X'25'
MANMUSER DC    CL6' '
MANFUSER DC    CL6' '
         DC    CL9' FREE)   ',X'26',CL7'RSVNONR',X'25'
MANRNONR DC    CL4' '
MANFNONR DC    CL4' '
         DC    CL8' FREE)  '
MANLINE8 EQU   *,79
         DC    CL12'CURRENT DATE',X'25'
MANCVJUL DC    CL9' YYYY.DDD'
         DC    X'26',CL9'TIME ZONE',X'25'
TZSIGN   DC    CL1'S'
TZSIZE   DC    CL8'HH:MM:SS'
         DC    X'26',CL11' SMF STATUS',X'25'
MANSMFST DC    CL8' '
         DC    CL1' ',X'26'
MANACFNM DC    CL4'RACF'
         DC    X'25'
MANACFST DC    CL8'NOT INST'
         DC    CL1' '
MANLINE9 EQU   *,79
         DC    CL12'CURRENT DATE',X'25',C' '
MANCVYMD DC    CL8'YY/MM/DD'
         DC    X'26',CL9' IPL DATE',X'25',C' '
MANIPYMD DC    CL8'YY/MM/DD'
         DC    X'26',CL19' PRIMARY SUBSYSTEM ',X'25'
MANPRISS DC    CL4'JES?'
         DC    CL1' '
MANPRISP DC    CL8' '
         DC    CL3' '
MANLINEA EQU   *,79
         DC    CL4'SMF:',X'25',CL5' JWT('
MANJWT   DC    CL4'HHMM'
         DC    CL11')  MAXDORM('
MANMXDRM DC    CL4'MMSS'
         DC    CL10')  STATUS('
MANSTTUS DC    CL6'HHMMSS'
         DC    CL2') '
MANBFWRT DC    CL12' '
         DC    CL16' BUFFERS WRITTEN'
         DC    CL4' '
MANLINEG EQU   *,79
         DC    CL4'SMF:',X'25',CL8' INTVAL('
MANINTVL DC    CL2' '
         DC    CL11')  SYNCVAL('
MANSYNCV DC    CL2' '
         DC    CL12')  MEMLIMIT('
MANMEMLM DC    CL6' '
         DC    CL8')   REC('
MANREC17 DC    CL5' '
MANASRES DC    CL6' '
         DC    CL14' SMF RESTARTS '
MANLINEH EQU   *,79
         DC    CL4'SMF:',X'25',CL11' RECORDING('
MANRECOR DC    CL10' '
         DC    CL53' '
MANLINEB EQU   *,79
         DC    CL4'SMF:',X'25',CL5' SMF='
MANSMFID DC    CL2' '
         DC    CL5' '
MANRCLST DC    CL12' '
         DC    CL13' RECORDS LOST'
         DC    CL5' '
MANRCWRT DC    CL12' '
         DC    CL16' RECORDS WRITTEN'
         DC    CL6' '
MANLINEC EQU   *,79
         DC    CL44'APF AUTHORIZED LIBRARY LIST UPDATED LAST ON '
MALTDATE DC    CL8'YY/MM/DD'
         DC    CL4' AT '
MALTTIME DC    CL8'HH:MM:SS'
         DC    CL4' BY '
MALTUSER DC    CL8'TSOUSER '
         DC    CL3' '
MANLINED EQU   *,79
         DC    CL4'TSO:',X'25'
         DC    CL11' LOGGED-ON='
TSUSERCT DC    CL6' '
         DC    CL13'    RECONLIM='
TSRECNLM DC    CL6' '
         DC    CL13'    BUFRSIZE='
TSBUFSIZ DC    CL6' '
         DC    CL13'    LOBFREXT='
TSLOBEXT DC    CL6' '
MANLINEE EQU   *,79
         DC    CL4'TSO:',X'25'
         DC    CL11'   USERMAX='
TSUSERMX DC    CL6' '
         DC    CL13'      CHNLEN='
TSCHNLEN DC    CL6' '
         DC    CL13'     SCRSIZE='
TSSCRSIZ DC    CL6' '
         DC    CL13'    HIBFREXT='
TSHIBEXT DC    CL6' '
MANLINEF EQU   *,79
         DC    CL7'LOGREC:',X'25'
MANLOGRC DC    CL11' '
         DC    X'26',CL6' TCAM ',X'25'
MANTCAM  DC    CL8' '
         DC    X'26',CL7'  BCLMT',X'25'
MANBCLMT DC    CL6' '
         DC    X'26',CL8' LOGCLS ',X'25'
MANLOGCL DC    CL1'?'
         DC    X'26',CL8'  LOGLMT',X'25'
MANLOGLM DC    CL10'0 '
         DC    CL2'  '
MSRVCLHD DC    CL79' SRVCLASS  DESCRIPTION                       PERIOD+
               S  WORKLOAD  RESOURCE-GROUP '
MPERODHD DC    CL79' SRVCLASS  PERIOD  GOAL-TYPE   %ILE  I-LVL  VELOCIT+
               Y  RESP-TIME  DURATION-(SU) '
MRSGRPHD DC    CL79' RESGROUP  DESCRIPTION                       MINIMU+
               M  MAXIMUM  (CPU-SRV/SEC)   '
HEADNGMM DC    CL79'                         MVS MANAGEMENT STATUS DISP+
               LAY                         '
HEADNGMC DC    CL79'                           COUPLING FACILITY DISPLA+
               Y                           '
MCCF1HDG DC    CL79'CF-NAME   STATUS   POLICY    | SYSNAMES |   STRUCTU+
               RE-NAMES  STRUCTURE-STATUS  '
MCCF2HD1 DC    CL79'         ----FACILITY-SPACE----  ----CONTROL--SPACE+
               ----  ----DUMPING--SPACE----'
MCCF2HD2 DC    CL79'CF-NAME   UNUSED  MAXIMUM  FULL   UNUSED  MAXIMUM  +
               FULL   UNUSED  MAXIMUM  FULL'
MCCF3HDG DC    CL79'CF-NAME  BAD-IO NOPATH SUBCHAN DEV#  STATUS  DEVBUS+
               Y ALLPATH UTILCNT   IO/SEC  '
MCST1HDG DC    CL79'STRUCTURE NAME    TYPE    STATUS          CF-NAME  +
                    SIZE      USED   FULL  '
MCST2HDG DC    CL79'CONNECTOR NAME      SYSTEM    JOB NAME    CONNECTOR+
                STATUS                     '
MMSFORMC DC    CL36'ENTER "C" FOR COUPLING FACILITY DATA'
MMSFORMS DC    CL79'ENTER "S" FOR SYSPLEX SYSTEMS, "P" FOR SYSPLEX PATH+
               S OR "G" FOR SYSPLEX GROUPS '
MSPF3MSG DC    CL48'PRESS PF3/15 FOR COUPLING FACILITY OVERVIEW DATA'
MCSTRMSG DC    CL79' PLACE CURSOR ON LINE CONTAINING STRUCTURE NAME AND+
                PRESS <ENTER> FOR DETAILS  '
MNOTALOC DC    C'NOT '
MISALLOC DC    C'ALLOCATED'
MSUBRMSG DC    CL25'SUBROUTINE RETURN CODE IS'
CFSTATAB EQU   *                 COUPLING FACILITY STATUS LABEL TABLE.
         DC    CL9' ACTIVE  '
         DC    CL9' FAILED  '
         DC    CL9' PENDING '
         DC    CL9'RECONCILE'
         DC    CL9' UNKNOWN '
STSTATAB EQU   *                 STRUCTURE STATUS LABEL TABLE.
         DC    CL12'ACTIVE      '
         DC    CL12'FAILED      '
         DC    CL12'REBUILD/OLD '
         DC    CL12'REBUILD/NEW '
         DC    CL12'TRANSITIONAL'
         DC    CL12'UNKNOWN     '
SCSTATAB EQU   *                 SUBCHANNEL STATUS LABEL TABLE.
         DC    CL8'NOT OPER'
         DC    CL8'NOT USED'
         DC    CL8' ACTIVE '
         DC    CL8'UNKNOWN '
STTYPTAB EQU   *                 STRUCTURE TYPE LABEL TABLE.
         DC    CL5'LIST '
         DC    CL5'LOCK '
         DC    CL5'CACHE'
         DC    CL5'UNKN '
CNSTATAB EQU   *                 CONNECTOR STATUS LABEL TABLE.
         DC    CL17'ACTIVE  '
         DC    CL17'FAILED PERSISTENT'
         DC    CL17'FAILING '
         DC    CL17'DISCONNECTING'
         DC    CL17'UNKNOWN '
         SPACE
         LTORG
         SPACE
         DS    0H
MICATCTB DC    4XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'  00->3F
         DC    2XL16'00FFFFFFFFFFFFFFFFFF000000000000'  40->5F
         DC    1XL16'0000FFFFFFFFFFFFFFFF000000000000'  60->6F
         DC    1XL16'0000FFFFFFFFFFFFFF00000000000000'  70->7F
         DC    3XL16'FF000000000000000000FFFFFFFFFFFF'  80->AF
         DC    1XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'  B0->BF
         DC    2XL16'00000000000000000000FFFFFFFFFFFF'  C0->DF
         DC    1XL16'00FF0000000000000000FFFFFFFFFFFF'  E0->EF
         DC    1XL16'00000000000000000000FFFFFFFFFFFF'  F0->FF
         TITLE 'SYSPLEX STATUS MONITOR SUBROUTINE'
         USING MSSCTEND,R11,R10,R8,R9
MSYSPLEX DS    0H
         LA    R9,2048(,R8)      INITIALIZE FOURTH
         LA    R9,2048(,R9)                        BASE REGISTER.
         SPACE
         CLI   MORSMODE,C'S'     SHOW SYSPLEX SYSTEM DETAILS?
         BNE   MPTHPLEX          NO.
         MVC   LL-79(79,R2),HEADNGMS
         BAS   R14,MADDLINE      LINE NOW COMPLETE.
         BAS   R14,MSPCLINE      INSERT A BLANK LINE.
         MVI   XCFFNCTN,C'S'     REQUEST SYSTEM ACTIVITY.
         LA    R1,XCFPLIST       POINT TO XCF LIST ROUTINE PARAMETER.
         L     R15,=V(IMXCF)     GET XCF LIST ROUTINE ENTRY POINT.
         BASR  R14,R15           INVOKE IT.
         LTR   R15,R15           SUCCESSFUL CALL?
         BNZ   MSXCFBAD          NO.
         SPACE
         MVC   0(LL-79,R2),HIGHX HIGH INTENSITY FOR HEADING.
         MVC   LL-79(79,R2),MSXSHDG1
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         MVC   0(LL-79,R2),HIGHX HIGH INTENSITY FOR HEADING.
         MVC   LL-79(79,R2),MSXSHDG2
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         L     R3,XCFRAREA       POINT TO RETURNED AREA.
         USING INFTXD1,R3
         LA    R5,TXD1SYSA       POINT TO FIRST SYSTEM RECORD.
         L     R7,TXD1SYS#       GET NUMBER OF SYSTEM ENTRIES.
         USING TXD1SYS,R5
         USING MSLINE1,R2
MXCFSLP1 MVC   MSL1SYSN,TXD1SYSN SHOW SYSTEM NAME.
         ICM   R1,8,TXD1FLG1     GET SYSTEM STATUS.
         LA    R0,6              GET KNOWN STATUS COUNT.
         LA    R15,XSSTATAB      POINT TO STATUS LABEL TABLE.
XSSTATLP LTR   R1,R1             STATUS FLAG BIT ON?
         BM    MSXSSTAT          YES.
         SLL   R1,1              NO, PROMOTE NEXT BIT.
         LA    R15,8(,R15)       POINT TO NEXT STATUS LABEL.
         BCT   R0,XSSTATLP       TEST NEXT BIT.
MSXSSTAT MVC   MSL1STAT,0(R15)   SHOW SYSTEM STATUS.
         ICM   R1,8,TXD1FLG2     GET DIRECTION INDICATOR.
         LA    R0,3              GET KNOWN DIRECTION COUNT.
         LA    R15,XSDIRTAB      POINT TO DIRECTION LABEL TABLE.
XSDIR1LP LTR   R1,R1             STATUS FLAG BIT ON?
         BM    MSXSDIR1          YES.
         SLL   R1,1              NO, PROMOTE NEXT BIT.
         LA    R15,3(,R15)       POINT TO NEXT DIRECTION LABEL.
         BCT   R0,XSDIR1LP       TEST NEXT BIT.
MSXSDIR1 MVC   MSL1DIRN,0(R15)   SHOW DIRECTION.
         MVC   MSL1TCLS,TXD1TCLS SHOW TRANSPORT CLASS.
         L     R0,TXD1#PTH       SHOW NUMBER OF PATHS.
         CVD   R0,WORK
         MVC   MSL1#PTH,ED5
         ED    MSL1#PTH,WORK+5
         L     R1,TXD1#NOP       SHOW NUMBER OF NO PATH OCCURRENCES.
         LA    R15,MSL1#NOP      POINT TO OUTPUT AREA.
         BAS   R14,MCFP7
         L     R1,TXD1#BSY       SHOW NUMBER OF NO BUFFER OCCURRENCES.
         LA    R15,MSL1#BSY      POINT TO OUTPUT AREA.
         BAS   R14,MCFP7
         LA    R4,TXD1#MXB       POINT TO BUFFER SPACE SIZES.
         LA    R6,MSL1BFMX       POINT TO BUFFER SPACE DISPLAY AREA.
         BAS   R14,MCSTUSPC      SHOW BUFFER SPACE SIZE AND USAGE.
         MVI   MSL1BFMX+8,C'K'   DENOTE KILOBYTES.
         MVI   MSL1BFUS+8,C'K'   DENOTE KILOBYTES.
         BAS   R14,MADDLINE      LINE NOW COMPLETE.
         A     R5,TXD1SYSL       POINT TO THE NEXT SYSTEM RECORD.
         BCT   R7,MXCFSLP1       PROCESS NEXT SYSTEM ENTRY.
         DROP  R2                MSLINE1.
         BAS   R14,MSPCLINE      INSERT A BLANK LINE.
         SPACE
         MVC   0(LL-79,R2),HIGHX HIGH INTENSITY FOR HEADING.
         MVC   LL-79(79,R2),MSXSHDG3
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         MVC   0(LL-79,R2),HIGHX HIGH INTENSITY FOR HEADING.
         MVC   LL-79(79,R2),MSXSHDG4
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         LA    R5,TXD1SYSA       POINT TO FIRST SYSTEM RECORD.
         L     R7,TXD1SYS#       GET NUMBER OF SYSTEM ENTRIES.
         USING MSLINE2,R2
MXCFSLP2 MVC   MSL2SYSN,TXD1SYSN SHOW SYSTEM NAME.
         ICM   R1,8,TXD1FLG2     GET DIRECTION INDICATOR.
         LA    R0,3              GET KNOWN DIRECTION COUNT.
         LA    R15,XSDIRTAB      POINT TO DIRECTION LABEL TABLE.
XSDIR2LP LTR   R1,R1             STATUS FLAG BIT ON?
         BM    MSXSDIR2          YES.
         SLL   R1,1              NO, PROMOTE NEXT BIT.
         LA    R15,3(,R15)       POINT TO NEXT DIRECTION LABEL.
         BCT   R0,XSDIR2LP       TEST NEXT BIT.
MSXSDIR2 MVC   MSL2DIRN,0(R15)   SHOW DIRECTION.
         MVC   MSL2TCLS,TXD1TCLS SHOW TRANSPORT CLASS.
         L     R1,TXD1#BIG       MSG COUNT: LEN TOO BIG FOR CLASS BUFR.
         LA    R15,MSL2#BIG      POINT TO OUTPUT AREA.
         BAS   R14,MCFP7
         L     R1,TXD1#FIT       MSG COUNT: LEN FITTED IN CLASS BUFR.
         LA    R15,MSL2#FIT      POINT TO OUTPUT AREA.
         BAS   R14,MCFP7
         L     R1,TXD1#SML       MSG COUNT: LEN LESS THAN CLASS BUFR.
         LA    R15,MSL2#SML      POINT TO OUTPUT AREA.
         BAS   R14,MCFP7
         L     R1,TXD1#OVR       MSG COUNT: LEN OVER OPTIMAL LENGTH.
         LA    R15,MSL2#OVR      POINT TO OUTPUT AREA.
         BAS   R14,MCFP7
         L     R1,TXD1#TCL       LONGEST LENGTH FITTING IN BUFFER.
         LA    R15,MSL2#TCL      POINT TO OUTPUT AREA.
         BAS   R14,MCFP7
         L     R0,TXD1#SMX       SHOW DEFAULT MESSAGE BUFFER SIZE.
         CVD   R0,WORK
         MVC   MSL2#SMX,ED7
         ED    MSL2#SMX,WORK+4
         MVI   MSL2#SMX+8,C'K'   DENOTE KILOBYTES.
         BAS   R14,MADDLINE      LINE NOW COMPLETE.
         A     R5,TXD1SYSL       POINT TO THE NEXT SYSTEM RECORD.
         BCT   R7,MXCFSLP2       PROCESS NEXT SYSTEM ENTRY.
         DROP  R2,R3,R5          MSLINE2, INFTXD1, TXD1SYS.
         BAS   R14,MSPCLINE      INSERT A BLANK LINE.
         L     R1,XCFRAREA       POINT TO RETURNED AREA.
         L     R0,0(,R1)         GET SIZE OF RETURNED AREA.
         FREEMAIN RU,LV=(0),A=(1),SP=130
         ST    R15,XCFRAREA      RESET AREA POINTER.
         B     MSUMMARY          COMPLETED OUTPUT FOR "MS".
         SPACE
MPTHPLEX CLI   MORSMODE,C'P'     SHOW SYSPLEX PATH DETAILS?
         BNE   MGRPPLEX          NO, IT BETTER BE SYSPLEX GROUPS.
         MVC   LL-79(79,R2),HEADNGMP
         BAS   R14,MADDLINE      LINE NOW COMPLETE.
         BAS   R14,MSPCLINE      INSERT A BLANK LINE.
         MVI   XCFFNCTN,C'P'     REQUEST PATH ACTIVITY.
         LA    R1,XCFPLIST       POINT TO XCF LIST ROUTINE PARAMETER.
         L     R15,=V(IMXCF)     GET XCF LIST ROUTINE ENTRY POINT.
         BASR  R14,R15           INVOKE IT.
         LTR   R15,R15           SUCCESSFUL CALL?
         BNZ   MSXCFBAD          NO.
         SPACE
         L     R3,XCFRAREA       POINT TO RETURNED AREA.
         USING INFTXD2,R3
         LA    R5,TXD2PTHA       POINT TO FIRST SYSTEM RECORD.
         L     R7,TXD2PTH#       GET NUMBER OF SYSTEM ENTRIES.
         LTR   R7,R7             ANY PATHS?
         BNP   MPATHSOK          NO.
         USING TXD2PTH,R5
         MVC   0(LL-79,R2),HIGHX HIGH INTENSITY FOR HEADING.
         MVC   LL-79(79,R2),MSXPHDG1
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         MVC   0(LL-79,R2),HIGHX HIGH INTENSITY FOR HEADING.
         MVC   LL-79(79,R2),MSXPHDG2
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         USING MPLINE1,R2
MXCFPLP1 MVC   MPL1PDEV,TXD2PDEV SHOW CTC DEVICE NUMBER.
         MVC   MPL1PSYS,TXD2PSYS SHOW SYSTEM NAME.
         ICM   R1,12,TXD2FLG1    GET STATUS INDICATOR.
         LA    R0,10             GET KNOWN STATUS COUNT.
         LA    R15,XPSTATAB      POINT TO STATUS LABEL TABLE.
XPSTATLP LTR   R1,R1             STATUS FLAG BIT ON?
         BM    MSXPSTAT          YES.
         SLL   R1,1              NO, PROMOTE NEXT BIT.
         LA    R15,10(,R15)      POINT TO NEXT STATUS LABEL.
         BCT   R0,XPSTATLP       TEST NEXT BIT.
MSXPSTAT MVC   MPL1STAT,0(R15)   SHOW PATH STATUS.
         ICM   R1,8,TXD2FLG3     GET DIRECTION INDICATOR.
         LA    R0,2              GET KNOWN DIRECTION COUNT.
         LA    R15,XPDIRTAB      POINT TO DIRECTION LABEL TABLE.
XPDIR1LP LTR   R1,R1             STATUS FLAG BIT ON?
         BM    MSXPDIR1          YES.
         SLL   R1,1              NO, PROMOTE NEXT BIT.
         LA    R15,3(,R15)       POINT TO NEXT DIRECTION LABEL.
         BCT   R0,XPDIR1LP       TEST NEXT BIT.
MSXPDIR1 MVC   MPL1DIRN,0(R15)   SHOW PATH DIRECTION.
         MVC   MPL1TCLS,TXD2TCLS SHOW TRANSPORT CLASS.
         MVC   MPL1TDEV,TXD2TDEV SHOW TARGET DEVICE NUMBER.
         MVC   MPL1TSYS,TXD2TSYS SHOW TARGET SYSTEM NAME.
         L     R1,TXD2MXMS       SHOW PATH MAXIMUM MESSAGE LIMIT.
         LA    R15,MPL1MXMS      POINT TO OUTPUT AREA.
         BAS   R14,MCFP7
         L     R1,TXD2#USE       SHOW BUFFER SPACE CURRENTLY IN USE.
         LA    R15,MPL1#USE      POINT TO OUTPUT AREA.
         BAS   R14,MCFP7
         MVI   MPL1#USE+8,C'K'   DENOTE KILOBYTES.
         L     R1,TXD2#IBR       SHOW REFUSED MSG BUFFER RQST COUNT.
         LA    R15,MPL1#IBR      POINT TO OUTPUT AREA.
         BAS   R14,MCFP7
         BAS   R14,MADDLINE      LINE NOW COMPLETE.
         A     R5,TXD2PTHL       POINT TO THE NEXT PATH RECORD.
         BCT   R7,MXCFPLP1       PROCESS NEXT PATH ENTRY.
         DROP  R2                MPLINE1.
         BAS   R14,MSPCLINE      INSERT A BLANK LINE.
         SPACE
         MVC   0(LL-79,R2),HIGHX HIGH INTENSITY FOR HEADING.
         MVC   LL-79(79,R2),MSXPHDG3
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         MVC   0(LL-79,R2),HIGHX HIGH INTENSITY FOR HEADING.
         MVC   LL-79(79,R2),MSXPHDG4
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         LA    R5,TXD2PTHA       POINT TO FIRST SYSTEM RECORD.
         L     R7,TXD2PTH#       GET NUMBER OF SYSTEM ENTRIES.
         USING MPLINE2,R2
MXCFPLP2 MVC   MPL2PDEV,TXD2PDEV SHOW CTC DEVICE NUMBER.
         ICM   R1,8,TXD2FLG3     GET DIRECTION INDICATOR.
         LA    R0,2              GET KNOWN DIRECTION COUNT.
         LA    R15,XPDIRTAB      POINT TO DIRECTION LABEL TABLE.
XPDIR2LP LTR   R1,R1             STATUS FLAG BIT ON?
         BM    MSXPDIR2          YES.
         SLL   R1,1              NO, PROMOTE NEXT BIT.
         LA    R15,3(,R15)       POINT TO NEXT DIRECTION LABEL.
         BCT   R0,XPDIR2LP       TEST NEXT BIT.
MSXPDIR2 MVC   MPL2DIRN,0(R15)   SHOW PATH DIRECTION.
         MVC   MPL2TDEV,TXD2TDEV SHOW TARGET DEVICE NUMBER.
         MVC   MPL2TSYS,TXD2TSYS SHOW TARGET SYSTEM NAME.
         L     R1,TXD2MRET       SHOW MAXIMUM PATH RETRY LIMIT.
         LA    R15,MPL2MRET      POINT TO OUTPUT AREA.
         BAS   R14,MCFP7
         L     R1,TXD2#RET       SHOW CURRENT PATH RETRY COUNT.
         LA    R15,MPL2#RET      POINT TO OUTPUT AREA.
         BAS   R14,MCFP7
         L     R1,TXD2#RST       SHOW CUMULATIVE NUMBER OF RESTARTS.
         LA    R15,MPL2#RST      POINT TO OUTPUT AREA.
         BAS   R14,MCFP7
         L     R1,TXD2#SIG       SHOW SIGNAL TRANSFER COUNT.
         LA    R15,MPL2#SIG      POINT TO OUTPUT AREA.
         BAS   R14,MCFP7
         L     R1,TXD2#ACT       SHOW SIGNAL PENDING TRANSFER COUNT.
         LA    R15,MPL2#ACT      POINT TO OUTPUT AREA.
         BAS   R14,MCFP7
         L     R1,TXD2#SUS       SHOW SIGNAL REQUESTS WHILE NOT BUSY.
         LA    R15,MPL2#SUS      POINT TO OUTPUT AREA.
         BAS   R14,MCFP7
         L     R1,TXD2#APP       SHOW SIGNAL REQUESTS WHILE BUSY.
         LA    R15,MPL2#APP      POINT TO OUTPUT AREA.
         BAS   R14,MCFP7
         BAS   R14,MADDLINE      LINE NOW COMPLETE.
         A     R5,TXD2PTHL       POINT TO THE NEXT PATH RECORD.
         BCT   R7,MXCFPLP2       PROCESS NEXT PATH ENTRY.
         DROP  R2,R3,R5          MPLINE1, INFTXD2, TXD2PTH.
         BAS   R14,MSPCLINE      INSERT A BLANK LINE.
MPATHSOK L     R1,XCFRAREA       POINT TO RETURNED AREA.
         L     R0,0(,R1)         GET SIZE OF RETURNED AREA.
         FREEMAIN RU,LV=(0),A=(1),SP=130
         ST    R15,XCFRAREA      RESET AREA POINTER.
         B     MSUMMARY          COMPLETED OUTPUT FOR "MP".
         SPACE
MGRPPLEX MVC   LL-79(79,R2),HEADNGMG
         BAS   R14,MADDLINE      LINE NOW COMPLETE.
         BAS   R14,MSPCLINE      INSERT A BLANK LINE.
         MVI   XCFFNCTN,C'G'     REQUEST GROUP ACTIVITY.
         LA    R1,XCFPLIST       POINT TO XCF LIST ROUTINE PARAMETER.
         L     R15,=V(IMXCF)     GET XCF LIST ROUTINE ENTRY POINT.
         BASR  R14,R15           INVOKE IT.
         LTR   R15,R15           SUCCESSFUL CALL?
         BNZ   MSXCFBAD          NO.
         SPACE
         L     R3,XCFRAREA       POINT TO RETURNED AREA.
         USING INFTXD3,R3
         LA    R5,TXD3GRPA       POINT TO FIRST SYSTEM RECORD.
         L     R7,TXD3GRP#       GET NUMBER OF SYSTEM ENTRIES.
         LTR   R7,R7             ANY GROUPS?
         BNP   MGROUPOK          NO.
         USING TXD3GRP,R5
         MVC   0(LL-79,R2),HIGHX HIGH INTENSITY FOR HEADING.
         MVC   LL-79(79,R2),MSXGHDG1
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         MVC   0(LL-79,R2),HIGHX HIGH INTENSITY FOR HEADING.
         MVC   LL-79(79,R2),MSXGHDG2
         BAS   R14,MSPCLINE      LINE NOW COMPLETE.
         USING MGLINE1,R2
MXCFGLP1 MVC   MGL1GRPN,TXD3GRPN SHOW GROUP NAME.
         MVC   MGL1MEMN,TXD3MEMN SHOW MEMBER NAME.
         SLR   R1,R1
         CLI   TXD3FLG1,5        KNOWN STATUS TYPE?
         BH    *+8               NO.
         IC    R1,TXD3FLG1       YES, LOAD IT.
         LA    R1,XGSTATAB(R1)   POINT TO STATUS LABEL.
         MVC   MGL1STAT,0(R1)    SHOW MEMBER STATUS.
         MVC   MGL1SYSN,TXD3SYSN SHOW SYSTEM NAME.
         UNPK  MGL1SSLT(3),TXD3SSLT(2)
         TR    MGL1SSLT,HEX-C'0' SHOW SYSTEM SLOT NUMBER.
         MVI   MGL1SSLT+2,C' '
         CLI   MGL1SSLT,C'0'     LEADING ZERO?
         BNE   *+8               NO.
         MVI   MGL1SSLT,C' '     YES, SUPPRESS IT.
         MVC   MGL1JJOB,TXD3JJOB SHOW JOB NAME CURRENT AT JOIN TIME.
         L     R1,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R1
         L     R1,CVTEXT2        POINT TO THE CVT VS1/VS2 COMMON EXTN.
         DROP  R1                CVT.
         USING CVTXTNT2,R1
         LM    R14,R15,CVTLDTO   GET LOCAL DATE/TIME OFFSET.
         DROP  R1                CVTXTNT2.
         LA    R0,1              PREPARE FOR CARRY.
         AL    R15,TXD3TOD+4     GET LOW ORDER LOCAL TIME.
         BC    12,MSCARIED       NO CARRY.
         AR    R14,R0            DO CARRY.
MSCARIED AL    R14,TXD3TOD       GET HIGH ORDER LOCAL TIME.
         STM   R14,R15,TXD3TOD   STORE LOCALIZED TIME.
         STCKCONV STCKVAL=TXD3TOD, POINT TO INPUT STCK VALUE.          +
               CONVVAL=WORK,       POINT TO OUTPUT FOUR WORDS.         +
               TIMETYPE=DEC,       GET TIME DECIMAL DIGITS (DEFAULT).  +
               DATETYPE=YYYYMMDD,  SPECIFY DATE FORMAT.                +
               MF=(E,STCKCNVL)     SPECIFY PARAMETER LIST.
         UNPK  MGL1TOD(7),WORK2+1(4)            SHOW YYMMDD.
         UNPK  MGL1TOD+7(7),WORK(4)             SHOW HHMMSS.
         TR    MGL1TOD,HEX-C'0'  SUPERFLUOUS.
         MVI   MGL1TOD+6,C' '
         MVI   MGL1TOD+13,C' '
         L     R1,TXD3SCNT       SHOW SENT SIGNAL COUNT.
         LA    R15,MGL1SCNT      POINT TO OUTPUT AREA.
         BAS   R14,MCFP7
         L     R1,TXD3RCNT       SHOW RECEIVED SIGNAL COUNT.
         LA    R15,MGL1RCNT      POINT TO OUTPUT AREA.
         BAS   R14,MCFP7
         BAS   R14,MADDLINE      LINE NOW COMPLETE.
         A     R5,TXD3GRPL       POINT TO THE NEXT GROUP RECORD.
         BCT   R7,MXCFGLP1       PROCESS NEXT GROUP ENTRY.
         DROP  R2,R3,R5          MGLINE1, INFTXD3, TXD3GRP.
         BAS   R14,MSPCLINE      INSERT A BLANK LINE.
MGROUPOK L     R1,XCFRAREA       POINT TO RETURNED AREA.
         L     R0,0(,R1)         GET SIZE OF RETURNED AREA.
         FREEMAIN RU,LV=(0),A=(1),SP=130
         ST    R15,XCFRAREA      RESET AREA POINTER.
         B     MSUMMARY          COMPLETED OUTPUT FOR "MG".
         SPACE
MSXCFBAD MVI   4(R2),X'F8'       NO, HIGH INTENSITY FOR ERROR.
         MVI   LL-80(R2),X'F2'   RED FOR ERROR.                 (I3279)
         CVD   R15,WORK
         MVC   LL-10(6,R2),ED5
         ED    LL-10(6,R2),WORK+5
         MVC   LL-35(25,R2),MSUBRMSG
         MVC   LL-50(8,R2),=C'ERROR  -'
         BAS   R14,MADDLINE      LINE NOW COMPLETE.
         BAS   R14,MSPCLINE      INSERT A BLANK LINE.
         B     MSUMMARY          REPORT FAILURE.
         SPACE 2
         DROP  R11,R10,R8,R9     MSSCTEND.
         TITLE 'SYSPLEX STATUS MONITOR - VARIABLES AND CONSTANTS'
XCFPLIST DC    A(XCFFNCTN)       PLIST FOR IMXCF ROUTINE.
XCFFNCTN DC    CL4'?A  '  \____  FUNCTION NAME.
XCFRAREA DC    A(0)       /      ADDRESS OF RETURNED AREA.
HEADNGMS DC    CL79'                            SYSPLEX SYSTEM DISPLAY +
                                           '
HEADNGMP DC    CL79'                             SYSPLEX PATH DISPLAY  +
                                           '
HEADNGMG DC    CL79'                            SYSPLEX GROUP DISPLAY  +
                                           '
MSXSHDG1 DC    CL79'-------SYSTEM--------  TRANSPORT PATHS NO-PATH NO-B+
               UFR -----BUFFER---SPACE-----'
MSXSHDG2 DC    CL79'NAME     STATUS   DIR  CLASS    IN-USE   COUNT   CO+
               UNT  MAXIMUM   CURRENT  USED'
MSXSHDG3 DC    CL79'SYSTEM        TRANSPORT --------MESSAGE---COUNTS---+
               -----   LONGEST   DFLT MSG  '
MSXSHDG4 DC    CL79'NAME     DIR  CLASS      TOO-BIG  FITTED   SMALL >O+
               PTIML  FIT-SIZE   BUFRSIZE  '
MSXPHDG1 DC    CL79'PATH SYSTEM   PATH          TRANSPORT PATH-TARGET  +
                MAXIMUM   IN-USE    MSG-LIM'
MSXPHDG2 DC    CL79'DEV# NAME     STATUS-----DIR CLASS    DEV# SYSTEM  +
                MSG-LIM  BUFRSPC   REFUSALS'
MSXPHDG3 DC    CL79'PATH     PATH-TARGET   MAXIMUM CURRENT RESTART ----+
               ----SIGNAL--REQUESTS--------'
MSXPHDG4 DC    CL79'DEV# DIR DEV# SYSTEM  RETRYLIM RETRYCT   TOTAL XFER+
               RED PENDING WHN¬BSY WHEN-BSY'
MSXGHDG1 DC    CL79'GROUP    ------------MEMBER------------ JOINTIME ST+
               ATUS-CHANGE  -SIGNAL-COUNTS-'
MSXGHDG2 DC    CL79'NAME     NAME        STATUS SYSTEM+SLOT JOB-NAME YY+
               MMDD HHMMSS     SENT RECEIVD'
XSSTATAB EQU   *                 SYSTEM SYSPLEX STATUS LABEL TABLE.
         DC    CL8'RESERVED'
         DC    CL8'ACTIVE  '
         DC    CL8'MISSING '
         DC    CL8'PARTING '
         DC    CL8'XCFLOCAL'
         DC    CL8'CLEAN-UP'
         DC    CL8'UNKNOWN '
XSDIRTAB EQU   *                 SYSTEM SYSPLEX DIRECTION LABEL TABLE.
         DC    CL3'IN '
         DC    CL3'OUT'
         DC    CL3'LCL'
         DC    CL3' ? '
XPSTATAB EQU   *                 SYSPLEX PATH STATUS LABEL TABLE.
         DC    CL10'STARTING  '
         DC    CL10'RESTARTING'
         DC    CL10'ACTIVE    '
         DC    CL10'STOPPING  '
         DC    CL10'COMMS WAIT'
         DC    CL10'NOT OPER  '
         DC    CL10'STOP FAILD'
         DC    CL10'REBUILDING'
         DC    CL10'QUIESCING '
         DC    CL10'QUIESCED  '
         DC    CL10'UNKNOWN   '
XPDIRTAB EQU   *                 SYSPLEX PATH DIRECTION LABEL TABLE.
         DC    CL3'IN '
         DC    CL3'OUT'
         DC    CL3' ? '
XGSTATAB EQU   *                 SYSPLEX GROUP STATUS LABEL TABLE.
         DC    CL1'?'            UNKNOWN
         DC    CL1'?'            UNKNOWN
         DC    CL1'C'            CREATED
         DC    CL1'A'            ACTIVE
         DC    CL1'Q'            QUIESCED
         DC    CL1'F'            FAILED
         LTORG
         SPACE
         DS    0H
         TITLE 'MVS DYNAMIC EXIT DISPLAY'
         USING MSSCTEND,R11,R10,R8
MDYNEXIT LARL  R9,MDXWORK        POINT TO WORKING STORAGE.
         USING MDXWORK,R9
         JAS   R14,MSPCLINE      INSERT A BLANK LINE.
         MVC   0(LL-79,R2),HIGHX LOAD HEADING ATTRIBUTES.
         ICM   R1,15,DYNEXADR    ALREADY HAVE STORAGE?
         JNZ   MDXSTGOK          YES, REUSE IT.
         LHI   R0,15384          PICK A SIZE.
         ST    R0,DYNEXSIZ       SAVE IT.
         GETMAIN RC,LV=(0),LOC=(31,64)
         LTR   R15,R15           SUCCESS?
         JZ    MDXSTGOK          YES.
         JAS   R14,MSPCLINE      MESSAGE LINE NOW COMPLETE.
         LH    R15,WORK+2
         CHI   R15,4
         JH    MPOLQERY
MDXSTGOK ST    R1,DYNEXADR       SAVE STORAGE ADDRESS.
         LR    R3,R1             POINT TO RETURN AREA.
         CSVDYNEX REQUEST=LIST,                                        +
               EXITNAME=ALL_EXITS,                                     +
               ANSAREA=(R3),                                           +
               ANSLEN=DYNEXSIZ,                                        +
               EXAAVER=1,                                              +
               EXITTYPE=ANY,                                           +
               MF=(E,DYNEXLST)
         LTR   R15,R15           SUCCESS?
         JZ    MDXGOOD           YES.
         STM   R15,R0,WORK       NO, SAVE RETURN AND REASON CODES.
         MVC   LL-55(12,R2),=CL12'CSVDYNEX RC='
         UNPK  LL-43(3,R2),WORK+3(2)
         TR    LL-43(2,R2),HEX-C'0'
         MVC   LL-41(8,R2),=CL8' REASON='
         UNPK  LL-33(9,R2),WORK+4(5)
         TR    LL-33(8,R2),HEX-C'0'
         MVI   LL-25(R2),C' '
         JAS   R14,MSPCLINE      MESSAGE LINE NOW COMPLETE.
         L     R15,WORK          RELOAD RETURN CODE.
         CHI   R15,4             ANY DATA RETURNED?
         JH    MPOLQERY          NO, RETURN.
         MVC   0(LL-79,R2),HIGHX LOAD HEADING ATTRIBUTES.
         USING EXAAHDR,R3
         USING MDXLINE,R2
MDXGOOD  ICM   R6,15,EXAAH#REC   GET EXAAE COUNT.
         JNP   MPOLQERY          RETURN IF NONE.
         MVC   MDXNAME,=CL16'EXIT POINT NAME'
         MVC   MDXMODNM,=CL8'MODULE'
         MVC   MDXFLAGS,=CL3'FLG'
         MVC   MDXENTRY,=CL8'ENTRY-PT'
         MVC   MDXLDPNT,=CL8'LOAD-PNT'
         MVC   MDXLEN,=CL6'LENGTH'
         MVC   MDXJOB,=CL8'JOB-NAME'
         JAS   R14,MSPCLINE      HEADING NOW COMPLETE.
         L     R3,EXAAHFIRST@    POINT TO THE FIRST ONE.
         DROP  R3                EXAAHDR.
         USING EXAAE,R3
MDXAAELP LH    R4,EXAAE#ENT      GET EXAAM1 COUNT.
         LTR   R4,R4             ARE THERE ANY?
         JNP   MDXNXAAM          NO.
         L     R5,EXAAEFIRSTENT@ POINT TO THE FIRST ONE.
         USING EXAAM1,R5
MDXAAMLP MVC   MDXNAME,EXAAENAME
         MVC   MDXMODNM,EXAAM1NAME
         UNPK  MDXFLAGS,EXAAM1FLAGS(2)
         TR    MDXFLAGS(2),HEX-C'0'
         MVI   MDXFLAGS+2,C' '
         TM    EXAAM1FLAGS,EXAAM1JOBNAMEPROVIDED
         JNO   MDXJOBOK
         MVC   MDXJOB,EXAAM1JOBNAME
MDXJOBOK UNPK  MDXENTRY(9),EXAAM1EPADDR(5)
         TR    MDXENTRY,HEX-C'0'
         MVI   MDXENTRY+8,C' '
         ICM   R0,15,EXAAM1LOADPT
         JZ    MDXLDPTX          LOAD POINT NOT KNOWN.
         UNPK  MDXLDPNT(9),EXAAM1LOADPT(5)
         TR    MDXLDPNT,HEX-C'0'
         MVI   MDXLDPNT+8,C' '
MDXLDPTX ICM   R0,15,EXAAM1MODLEN
         JZ    MDXSIZEX          LENGTH NOT KNOWN.
         UNPK  MDXLEN(7),EXAAM1MODLEN+2(4)
         TR    MDXLEN,HEX-C'0'
         MVI   MDXLEN+6,C' '
MDXSIZEX JAS   R14,MADDLINE      DETAIL LINE NOW COMPLETE.
         L     R5,EXAAM1NEXT@    POINT TO NEXT EXAAM1.
         JCT   R4,MDXAAMLP       PROCESS IT.
         DROP  R5                EXAAM1.
MDXNXAAM L     R3,EXAAENEXT@     POINT TO NEXT EXAAE.
         JCT   R6,MDXAAELP       PROCESS IT.
         DROP  R2                MDXLINE.
         DROP  R3                EXAAE.
         LM    R0,R1,DYNEXSIZ    FREE CSVDYNEX STORAGE DETAILS.
         FREEMAIN RU,LV=(0),A=(1)
         SR    R15,R15
         ST    R15,DYNEXADR      ZERO STORAGE POINTER.
         J     MPOLQERY
         DROP  R9                MDXWORK.
         DROP  R11,R10,R8        MSSCTEND.
         TITLE 'MVS DYNAMIC EXIT DISPLAY - WORKING STORAGE'
MDXWORK  DC    0D
         CSVDYNEX MF=(L,DYNEXLST)    CSVDYNEX PARAMETER LIST.
DYNEXSIZ DC    F'0'              SIZE OF CSVDYNEX AREA.
DYNEXADR DC    A(0)              ADDRESS OF CSVDYNEX AREA.
MDXAAE#  DC    F'0'              EXAAE COUNT.
         LTORG
         SPACE
         DS    0H
