         TITLE 'S P Y --  MVS CONSOLE SPY PROGRAM  --  VERSION 2.5'
***********************************************************************
*                                                                     *
*                                 S P Y                               *
*                                                                     *
*                               22/05/79                              *
*                                                                     *
*                       OPERATOR CONSOLE MONITOR                      *
*                                                                     *
*     THIS PROGRAM DISPLAYS ALL ACTIVE OPERATORS CONSOLES ON          *
*     A 3270 TSO TERMINAL. SINCE THIS BUFFER CAN BE 35 LINES LONG,    *
*     IT MUST BE DISPLAYED IN TWO 'PAGES'. VARIOUS CONTROL            *
*     COMMANDS ARE AVAILABLE AND ARE DESCRIBED BELOW.                 *
*                                                                     *
*     COMMAND      DESCRIPTION                                        *
*                                                                     *
*        ?         DISPLAYS HELP FOR SPY                              *
*        Z         END; END THE PROGRAM                               *
*        Wnn       AUTOMATICALLY REFRESH THE SCREEN                   *
*                  nn TIMES, THEN RETURN TO NORMAL MODE.              *
*                  IF nn IS NOT ENTERED, 30 ITERATIONS IS ASSUMED.    *
*                  IF NN = 0, TIMER WILL CONTINUE UNTIL INTERRUPT     *
*                  IS PRESSED.                                        *
*        Cnn       SWITCH DISPLAY TO SYSTEM CONSOLE nn                *
*                  IF nn IS NOT A VALID CONSOLE, '1' IS ASSUMED       *
*        Dnn       SET DELAY TIME BETWEEN REFRESHES TO nn TENTHS      *
*                  OF A SECOND.                                       *
*        Knn       ISSUE DELETE OPERATOR MESSAGE (DOM) FOR MESSAGE    *
*                  ON LINE NO. nn OF THIS CONSOLE.  (OF COURSE, THIS  *
*                  MESSAGE WILL REVERT TO LOW INTENSITY ON ALL        *
*                  CONSOLES ON WHICH IT APPEARS.) (USER MUST BE A VIP)*
*                  (NOTE THAT /K E,nn IS "INVALID FROM SUBSYSTEM      *
*                  CONSOLE".)                                         *
*        N         NOTIFY OPERATOR VIA ACTION MESSAGE (FOR VIPS)      *
*                                                                     *
*     PROGRAM FUNCTION KEY SUPPORT ADDED 08/10/82 WITH EXTRA HELP.    *
*                                                                     *
*     TERMINAL (IF APF AUTH), USERID, DATE AND TIME ADDED 26/08/83.   *
*                                                                     *
*     HITTING THE ATTENTION KEY WHILE IN TIMER MODE WILL CAUSE        *
*     THE TIMER TO BE RESET TO ZERO AND WAIT MODE TERMINATED.         *
*                                                                     *
*     SPY GIVES A TSO USER THE CAPABILITY TO ENTER SYSTEM AND JES     *
*     OPERATOR COMMANDS. THIS FACILITY IS PROTECTED BY A SIMPLE       *
*     3 CHARACTER PASSWORD (IN VARIABLE VIPWORD) TO PREVENT YOU       *
*     FROM ACCIDENTALLY ENTERING AN OPERATOR COMMAND. THE SYNTAX IS   *
*                                                                     *
*     JES COMMAND:  $...  ANY JES2 COMMAND ...                        *
*     OPER COMMAND: /...  ANY OPER COMMAND ...                        *
*                                                                     *
*     TYPING THE 3-LETTER VIP PASSWORD 'TOGGLES' THE VIP FLAG.        *
*     THE AUTHORIZATION LEVEL OF COMMANDS YOU CAN ISSUE DEPENDS ON    *
*     HOW YOUR INSTALLATION HAS SYSGENED ITS INTERNAL READERS.        *
*     ACCOUNT AUTHORIZED USERS DEFAULT TO VIP MODE UPON ENTRY.        *
*     THIS FACILITY WORKS BY DYNAMICALLY ALLOCATING AN INTERNAL       *
*     READER AND THROWING THE COMMAND THROUGH IT.                     *
*                                                                     *
*     MODIFIED ON 11/10/82 BY GP@SECV SO THAT WHEN AUTHORIZED,        *
*     COMMANDS ARE ISSUED THROUGH SVC 34 WHICH IS FASTER THAN INTRDR. *
*     MODIFIED ON 27/05/83 BY GP@SECV SO THAT WHEN NOT AUTHORIZED,    *
*     COMMANDS ARE ISSUED THROUGH SVC 241 WHICH ISSUES SVC 34.        *
*     MODIFIED ON 09/08/84 BY GP@SECV SO THAT SYSPARM CAN BE USED     *
*     TO DETERMINE UNAUTHORIZED COMMAND ISSUING MODE.                 *
*     MODIFIED ON 17/02/86 BY GP@SECV SO USER SVC 213 WHICH FLIPS     *
*     JSCBAUTH BIT IS USED, ALLOWING NORMAL SVC 34 PROCESSING.        *
*     LINK TO SWAP REMOVED.                                           *
*                                                                     *
*     IMPXASPY: COPIED FROM THE FAMOUS SPY PROGRAM.  NOW LOADED       *
*     INTO CSA BY AND CALLED FROM IMP/XA.  REMOVED SUPPORT FOR 3066   *
*     INTEGRATED CONSOLES AND TSO HARDCOPY TERMINALS.  NOW ONLY       *
*     SUPPORT 3270 TSO SCREENS SPYING ON 3270 CONSOLES.  PFK USAGE    *
*     NOW CHANGED TO BE CONSISTENT WITH IMP/XA.  TGET NOWAIT          *
*     PROCESSING WITH REFRESH-ONLY-IF-UPDATED LOGIC ADDED.  NON-APF   *
*     SUPPORT (USERSVC/INTRDR) HAS BEEN DROPPED.  XMS CODE ADDED      *
*     FOR CONSOLE ADDRESS SPACE.  IMPXASPY IS NOT REALLY RE-ENTRANT   *
*     BUT MUST BE LINK-EDITED AS SUCH.  LOGGING OF "N" COMMAND        *
*     NOW SUPPRESSED BUT ADDED "B" COMMAND.  DELETED "D", "W", "1"    *
*     AND "2" COMMANDS.  AOF (#) COMMANDS ALSO DROPPED FOR MVS.       *
*     LATEST OS SUPPORT IS MVS/SP VERSIONS 2 (XA) AND 3 (ESA).        *
*     NOW PERFORM 3270 DATA STREAM POST-PROCESSING BASED ON CB3270.   *
*     SP5-OS/390-SYSPLEX SUPPORT ADDED 08 JULY 1997.      GP@P6       *
*                                                                     *
*     THIS PROGRAM WILL PROBABLY REQUIRE BOTH THE SYS1.AMODGEN AND    *
*     SYS1.APVTMACS MACRO LIBRARIES TO ASSEMBLE PROPERLY.             *
*     SPY WAS DEVELOPED ON A 370/168 MVS RELEASE 3.7; IT WILL         *
*     PROBABLY *NOT* WORK ON ANYTHING BUT MVS...                      *
*                                                                     *
*                        STEVE LANGLEY                                *
*                        SOUTHERN CALIF. EDISON                       *
*                        ROSEMEAD, CALIF   91770                      *
*                        213-572-3521                                 *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
IMPXASPY CSECT
         B     28(,R15)           BRANCH AROUND EYE-CATCHER
         DC    AL1(23)
         DC    CL9'IMPXASPY'      IDENTIFIER
         DC    CL9'&SYSDATE'
         DC    CL5'&SYSTIME'
         STM   R14,R12,12(R13)    SAVE REGISTERS
         LR    R12,R15            R12 = ADDR OF ENTRY POINT
         USING IMPXASPY,R12,R11   ADDRESABILITY TO CSECT
         LA    R11,4095(R12)      R11 WILL BE
         LA    R11,1(R11)         SECOND BASE REGISTER
         LR    R2,R1              SAVE PARAMETER ADDRESS
         SPACE 3
***********************************************************************
*                                                                     *
*                       PROGRAM INITIALIZATION                        *
*                                                                     *
***********************************************************************
         MODESET MF=(E,MDSTSUP0)                                GP@P6
         ST    R13,SAVE+4         SAVE AREA BACKWARD POINTER
         LA    R1,SAVE            LOAD NEW SAVE AREA ADDRESS
         ST    R1,8(,R13)         SAVE AREA FORWARD POINTER
         LR    R13,R1             POINT TO NEW SAVE AREA
         STC   R0,FREEZE          COPY FREEZE MODE FLAG               *
         STCM  R0,2,VIPFLAG       COPY COMMAND MODE FLAG              *
         MVI   TGETFLAG,TGETFLGN  DON'T WAIT FOR INPUT                *
         CLI   FREEZE,C'F'        REALLY FROZEN?                      *
         BNE   FRZINIT            NO, CORRECT TGET FLAG BYTE          *
         MVI   TGETFLAG,TGETFLGW  YES, WAIT FOR INPUT                 *
FRZINIT  EQU   *                                                      *
         USING PSA,0                                            GP@SECV
         L     R1,PSATOLD         POINT TO TCB
         USING TCB,R1
         ICM   R1,7,TCBJSCBB      POINT TO JSCB
         DROP  R1                 TCB
         USING IEZJSCB,R1
         ICM   R1,15,JSCBPSCB     POINT TO PSCB
         BZ    INITFAIL           NOT TIME SHARING USER SO EXIT
         DROP  R1                 JSCB
         B     OPEROK             ************                    JUL01
         USING PSCB,R1                                          GP@SECV
         TM    PSCBATR1,PSCBCTRL  OPERATOR PRIVILEGED TSO USER? GP@SECV
         BO    ACCTCHK            YES, CONTINUE                 GP@SECV
         B     INITFAIL                                         GP@SECV
ACCTCHK  TM    PSCBATR1,PSCBACCT  ACCOUNT PRIVILEGED TSO USER?  GP@SECV
         BNO   OPEROK             NO                            GP@SECV
         DROP  R1                 PSCB
         ICM   R0,15,CONSOLE      YES, BEEN HERE BEFORE?        GP@P6
         BNZ   OPEROK             YES, LEAVE VIPFLAG ALONE      GP@P6
         MVI   BADJUMP1+1,0       ALLOWED TO ISSUE              GP@SECV
         MVI   BADJUMP2+1,0            AN OS RESET COMMAND      GP@SECV
*        MVI   VIPFLAG,C'*'       AUTOMATIC VIP MODE            GP@SECV
OPEROK   L     R1,PSAAOLD         POINT TO ASCB                 GP@SECV
         USING ASCB,R1                                          GP@SECV
         MVC   HOMEASID,ASCBASID  REMEMBER CURRENT ASID
         ICM   R4,15,ASCBTSB      POINT TO TSB                  GP@SECV
         BZ    INITFAIL           NOT TIME SHARING USER SO EXIT GP@SECV
         DROP  R1                 ASCB
         SPACE
         GTSIZE
         LTR   R0,R0              R0 = NUMBER OF LINES PER SCREEN
         BZ    INITFAIL           HARDCOPY NO LONGER SUPPORTED
         STH   R0,LPSCREEN        R0 = LINES PER SCREEN
         STH   R1,CPLINE          R1 = CHARACTERS PER LINE
         MH    R1,LPSCREEN        GET TSO SCREEN SIZE
         STH   R1,SCRNSIZE        SAVE IT FOR LATER
         SPACE
         LA    R3,STAXLIST        R3 = ADDRESS OF STAX LIST MACRO
         STAX  ATTNEXIT,MF=(E,(3)) ATTN EXIT TRAP
*        STTMPMD ON,KEYS=ALL      TRAP PA1 AND CLEAR            GP@P6
         ST    R2,PARMADDR        SAVE PARAMETER ADDRESS        GP@P6
         USING TSB,R4                                           GP@SECV
         MVC   TERMINAL,TSBTRMID  MOVE IN VTAM TERMINAL NAME    GP@SECV
         DROP  R4                 TSB                           GP@SECV
         L     R1,PSATOLD         FIND CURRENT TCB              GP@SECV
         USING TCB,R1                                           GP@SECV
         L     R1,TCBTIO          POINT TO TIOT                 GP@SECV
         DROP  R1                 TCB                           GP@SECV
         MVC   USERID,0(R1)       MOVE IN USERID                GP@SECV
         SPACE 2
         TM    PARMADDR,X'80'     "SNAZZY" TERMINAL?
         BZ    INIT12BT           NO, USE 12-BIT ADDRESSING
         LA    R1,80
         LR    R0,R1
         MH    R1,LPSCREEN
         SR    R1,R0
         STCM  R1,3,INPUTADR      POINT TO START OF LAST LINE
         SR    R1,R0
         STCM  R1,3,PHEADING      POINT TO START OF SECOND LAST LINE
         SR    R1,R0
         STCM  R1,3,CMDCNTRL      POINT TO START OF THIRD LAST LINE
         LH    R1,CPLINE          NOW FOR ORDERS WHICH DO NOT GO
         LR    R0,R1                  THROUGH OPT3270 - AND THEREFORE
         MH    R1,LPSCREEN            GET RESCALED FOR WIDE SCREENS
         SR    R1,R0
         STCM  R1,3,DUPLCIN       POINT TO START OF LAST LINE
         SR    R1,R0
         STCM  R1,3,DUPLCOUT      POINT TO START OF SECOND LAST LINE
         B     FLSCRN14
INIT12BT MVC   CMDCNTRL,R22C1     ROW 22, COL 1
         MVC   PHEADING,R23C1     ROW 23, COL 1
         MVC   INPUTADR,R24C1     ROW 24, COL 1
         CLI   LPSCREEN+1,43      3278-4?
         BNE   MOD3CHK            NO
         MVC   CMDCNTRL,R41C1     ROW 41, COL 1
         MVC   PHEADING,R42C1     ROW 42, COL 1
         MVC   INPUTADR,R43C1     ROW 43, COL 1
MOD3CHK  CLI   LPSCREEN+1,32      3278-3?
         BNE   FLSCREEN           NO
         MVC   CMDCNTRL,R30C1     ROW 30, COL 1
         MVC   PHEADING,R31C1     ROW 31, COL 1
         MVC   INPUTADR,R32C1     ROW 32, COL 1
FLSCREEN MVC   DUPLCOUT,PHEADING  INITIALIZE DUPLICATE DATA STREAM
         MVC   DUPLCIN,INPUTADR
FLSCRN14 MVC   LASPCOUT,DUPLCOUT  INITIALIZE LASP ERROR DATA STREAM
         MVC   LASPCIN,DUPLCIN
         LA    R1,CLR
         CLI   LPSCREEN+1,24      MODEL-2?
         BE    CLROK              YES, USE PRIMARY SCREEN SIZE
         LA    R1,CLRALT          NO, USE ALTERNATE SCREEN SIZE
CLROK    LA    R0,CLRLEN
         ICM   R1,8,FULLSCR
         TPUT  (1),(0),R          CLEAR THE SCREEN FOR 4-COLOUR MODE
         MVC   REPLY,BLANKS       ERASE RESIDUAL INPUT
         SPACE 2
         ICM   R0,15,CONSOLE      BEEN HERE BEFORE?
         BNZ   PARMPASS           YES, USE SAME CONSOLE ID
         SPACE 2
***********************************************************************
*                                                                     *
*          BUILD A TABLE OF UCM ADDRESSES (ONE PER CONSOLE)           *
*                                                                     *
***********************************************************************
         L     R4,16              R4 = ADDR OF CVT
         USING CVT,R4
         L     R5,CVTSMCA         R5 = ADDR OF SMF COMMUNICATION AREA *
         MVC   SYSID,16(R5)       COPY THE SYSTEM IDENTIFIER          *
         L     R4,CVTCUCB         R4 = ADDR OF 'CUCB' (UCM BASE)
         DROP  R4                 CVT
         USING UCM,R4
         MVC   CNSLASID,UCMCTID   COPY THE ASID OF COMMTASK      GP@P6*
         CLI   UCMVRSN,3          MVS/SP 2.2 OR LATER?                *
         BL    DOMSIZOK           NO, DOM TABLE ENTRY SIZE IS EIGHT   *
         MVI   DOMESIZE+1,18      YES, ADD TEN TO SIZE                *
DOMSIZOK DS    0H                 ESA UPGRADE 04 MAY 1989        GP@P6*
         L     R5,UCMVEA          R5 = ADDR OF FIRST UCM ENTRY
         L     R6,UCMVEZ          R6 = LENGTH OF EACH UCM ENTRY
         L     R7,UCMVEL          R7 = ADDR OF LAST UCM ENTRY
         LA    R8,UCMTAB+4        R8 = ADDR OF UCMTAB
         LA    R9,UCMTABL-4(,R8)  R9 = ADDR OF END OF UCMTAB    08JUL97
         XR    R10,R10            R10 = 0 (NUMBER OF VALID UCMS)
UCMLOOP  ST    R5,0(R8)           SAVE UCM ADDRESS IN UCMTAB
         LA    R10,1(,R10)        R10 = R10 + 1  (ONE MORE UCM)
         USING UCMLIST,R5
         TM    UCMDISP2,UCMDISPL  DEDICATED TO COMPONENT?
         BO    NOTHERE            YES, NOT *THE* MASTER
*****    TM    UCMDISP1,UCMDISPA  IS THIS THE MASTER CONSOLE?
         TM    UCMDISP1,UCME_DwnLvl_MC                          APR2008
         BZ    NOTMSTR            NO
         ST    10,OLDCONS         YES, SAVE IT          SYSPLEX 08JUL97
         B     ISMSTR             USE IF ACTIVE HERE    SYSPLEX 08JUL97
NOTMSTR  ICM   R0,15,CONSOLE      GOT AN ACTIVE YET?    SYSPLEX 08JUL97
         BNZ   NOTHERE            YES, DO NOT OVERLAY   SYSPLEX 08JUL97
ISMSTR   TM    UCMDIDCS,UCMAHERE  ACTIVE ON THIS OS?    SYSPLEX 08JUL97
         BNO   NOTHERE            NO, DO NOT OVERLAY    SYSPLEX 08JUL97
         ST    10,CONSOLE         YES, DEFAULT UNIT TO DISPLAY
NOTHERE  LA    R8,4(,R8)          R8 = ADDR OF NEXT UCMTAB ENTRY
         CR    R8,R9              DOES R8 POINT PAST END OF UCMTAB?
         BNL   UCMDONE            YES; LEAVE LOOP
         AR    R5,R6              R5 = ADDR OF NEXT UCM ENTRY
         CR    R5,R7              DOES R5 POINT PAST UCM ENTRIES?
         BNH   UCMLOOP            NOPE; KEEP GOING
UCMDONE  STH   R10,NUMUCMS        SAVE NUMBER OF UCMS FOUND
         DROP  R4,R5              UCM, UCMLIST
         ICM   R0,15,CONSOLE      FOUND A CONSOLE?      SYSPLEX 08JUL97
         BZ    INITFAIL           NO, CAN'T WORK NOW    SYSPLEX 08JUL97
PARMPASS L     R1,PARMADDR        RESTORE PARAMETER POINTER
         MVC   TGETCNTL(46),0(R1) LOAD COMMAND INPUT FROM PARAMETER
         B     PARSCHAR           EXAMINE PARAMETER BEFORE DISPLAY
         SPACE 3
***********************************************************************
*                                                                     *
*                            TOP OF LOOP                              *
*              LOCATE SCREEN BUFFER AND PREPARE TO TPUT               *
*                                                                     *
***********************************************************************
NEXTPAGE CLI   ATTNFLG,X'00'      WAS ATTN HIT?
         BE    NOATTN             NO
*                                 ATTENTION KEY HIT; PROCESS IT
         MVI   ATTNFLG,X'00'      YES, RESET FLAG
         STFSMODE ON,NOEDIT=YES   RESTORE VTAM FULL SCREEN MODE
CNSLREPT LA    R1,DUPLSTRM        POINT TO REPEAT DATA STREAM
         LA    R0,DUPLCLEN        GET DATA LENGTH
         SH    R0,=H'80'          ADJUST LINE LENGTH  WIDE-SCRN 18NOV99
         AH    R0,CPLINE                              WIDE-SCRN 18NOV99
LASPERRM ICM   R1,8,FULLSCR       LOAD TPUT FULLSCREEN FLAG BYTE
         TPUT  (1),(0),R          DISPLAY PROMPT
         LA    R1,TGETCNTL        GET ADDRESS OF INPUT BUFFER
         LA    R0,165             GET MAXIMUM INPUT SIZE
         ICM   R1,8,TGETWAIT      SUPPLY TGET FLAG BYTE
         TGET  (1),(0),R          GET 79 CHARACTERS FROM TERMINAL
         B     TGOTSOME           PROCESS INPUT
NOATTN   EQU   *
         CLI   TGETCNTL,X'6D'     CLEAR BUTTON SELECTED?         GP@P6*
         BNE   CLEAROK            NO, PROCEED                         *
         CLI   LPSCREEN+1,24      YES, IN PRIMARY SCREEN SIZE?        *
         BE    CLEAROK            YES, PROCEED                        *
         LA    R1,CLRALT          NO, USE ALTERNATE SCREEN SIZE       *
         LA    R0,CLRLEN                                              *
         ICM   R1,8,FULLSCR                                           *
         TPUT  (1),(0),R                                         GP@P6*
CLEAROK  EQU   *
         LA    R5,UCMTAB          R5 = ADDR OF UCMTAB
         L     R4,CONSOLE         R4 = CONSOLE TO BE DISPLAYED
         BAS   R14,COMMTASK       PERFORM ADDRESS SPACE SWITCH
         CH    R4,NUMUCMS         IS NUMBER TOO HIGH?
         BNH   GETUCM             NO, CONTINUE
         LA    R1,1               CONSOLE NUMBER INVALID        08JUL97
         BAS   R14,GETERMSG       LOAD ERROR MESSAGE            08JUL97
RESETCN  L     R4,OLDCONS         RESET TO OLD CONSOLE
         ST    R4,CONSOLE         AND SAVE IT
GETUCM   SLL   R4,2               MULTIPLY BY 4
         LA    R5,0(R5,R4)        R5 = ADDR OF ADDR OF UCM
         L     R5,0(R5)           R5 = ADDR OF UCM
         USING UCMLIST,R5
         L     R6,UCMXB           R6 = ADDR OF RDCM
         LTR   R6,R6              IS THIS A GRAPHICS CONSOLE?
         BP    GRAPHICS           YES
         LA    R5,UCMTAB          R5 = ADDR OF UCMTAB
         LA    R1,4               NON-GRAPHIC CONSOLE           08JUL97
         BAS   R14,GETERMSG       LOAD ERROR MESSAGE            08JUL97
         B     RESETCN            RESET THE CONSOLE NUMBER
         SPACE
DEADCNSL LA    R5,UCMTAB          R5 = ADDR OF UCMTAB
         LA    R1,5               INACTIVE CONSOLE              08JUL97
         BAS   R14,GETERMSG       LOAD ERROR MESSAGE            08JUL97
         B     RESETCN            RESET THE CONSOLE NUMBER
         SPACE
GRAPHICS EQU   *
         MVC   CTYPE,BLANKS       BLANK OUT CONSOLE TYPE FIELD
         TM    UCMDISP2,UCMDISPM  PSEUDO MASTER CONSOLE?    SP5 08JUL97
         BNO   AUTH0              NO                        SP5 08JUL97
         MVC   MASTER(4),=CL4'PMST' YES                     SP5 08JUL97
*****    TM    UCMDISP1,UCMDISPA  IS THIS A MASTER CONSOLE?
AUTH0    TM    UCMDISP1,UCME_DwnLvl_MC                          APR2008
         BNO   AUTH               NO
         MVC   MASTER(4),=CL4'MSTR' YES
AUTH     TM    UCMAUTHA,UCMAUTH1  IS THIS CONSOLE SYSTEM AUTHORIZED?
         BNO   AUTH1              NO
         MVC   SYS(3),=CL3'SYS'   YES
AUTH1    TM    UCMAUTHA,UCMAUTH2  IS IT I/O AUTHORIZED?
         BNO   AUTH2              NO
         MVC   IO(3),=CL3'I/O'    YES
AUTH2    TM    UCMAUTHA,UCMAUTH3  IS IT CONS AUTHORIZED?
         BNO   AUTHDONE           NO
         MVC   CONS(4),=CL4'CONS' YES
AUTHDONE EQU   *
         L     R7,UCMUCB          R7 = ADDR OF UCB
         UNPK  UNIT,4(3,R7)       SHOW 4 DIGITS OF UCBCHAN  SP5 08JUL97
         TR    UNIT(4),HEX-C'0'                             SP5 08JUL97
         MVI   UNIT+4,C' '                                  SP5 08JUL97
         UNPK  DEVX(3),UCMEDEVX(2)                          SP5 08JUL97
         TR    DEVX,HEX-C'0'      SHOW DEVICE TYPE INDEX    SP5 08JUL97
         SLR   R7,R7                                        SP5 08JUL97
         IC    R7,UCMID           SHOW UNIQUE ENTRY ID      SP5 08JUL97
         CVD   R7,WORK                                      SP5 08JUL97
         MVC   DEVID,=X'40202120'                           SP5 08JUL97
         ED    DEVID,WORK+6                                 SP5 08JUL97
         ICM   R0,3,DEVX                                    SP5 08JUL97
         STCM  R0,3,DEVX+1        LEAVE BLANK AFTER SYSID   SP5 08JUL97
         MVI   DEVX,C' '                                    SP5 08JUL97
         ICM   R7,15,0(R6)        R7 = ADDR OF TDCM (LOAD DCMADTRN)
         BZ    DEADCNSL           CONSOLE MUST BE INACTIVE
*****    USING STRTDCM,R7                                       GP@SECV
         USING DCMSTRT,R7                                       APR2008
         SPACE
***********************************************************************
*                                                                     *
*                 FILLIN TRAILER AT BOTTOM OF SCREEN                  *
*                                                                     *
***********************************************************************
         L     R3,CONSOLE         LOAD THE CONSOLE NUMBER
         CVD   R3,WORK            CONVERT TO DECIMAL IN WORK
         OI    WORK+7,X'0F'       MAKE RESULT NUMERIC CHARACTERS
         UNPK  CONNUM,WORK+6(2)   DISPLAY CONSOLE NUMBER
         MVC   LASTLINE(79),DCMINPUT   MOVE IN INPUT BUFFER LINE
         MVC   MODE,VIPFLAG       LOAD VIP INDICATOR
         SPACE 1
FINDSCRN ICM   R8,15,DCMASCRN     R8 = ADDR OF SCREEN BUFFER
         BZ    DEADCNSL           CONSOLE MUST BE INACTIVE
         LA    R4,BUF             R4 = ADDR OF OUTPUT BUFFER
         SPACE
*        SH    R8,=H'6'           SUBTRACT THE FUDGE FACTOR     GP@SECV
*        CLI   0(R8),X'11'        3270 SBA ORDER?               GP@SECV
*        BE    CNSL3270           YES, LOOKING OKAY             GP@SECV
*        SH    R8,=H'6'           SUBTRACT THE FUDGE FACTOR     GP@SECV
         AH    R8,DCMLGNTH        POINT PAST LINE'S DATA        18NOV99
         SH    R8,DCMCORLN        POINT TO LINE'S ORDERS        18NOV99
         CLI   0(R8),X'11'        3270 SBA ORDER?               GP@SECV
         BE    CNSL3270           YES, LOOKING OKAY             GP@SECV
         MVI   TGETCNTL,X'7C'     NO, CAN'T USE OPTION "O"      GP@P6**
         B     DONE               CAN'T HANDLE NON-3270               *
CNSL3270 L     R9,DCMAWARN        POINT TO WARNING LINE               *
         AH    R9,DCMLGNTH        POINT PAST IT                       *
         SR    R9,R8              GET SCREEN DATA LENGTH              *
         LR    R5,R9              COPY THE LENGTH                     *
         CLI   TGETCNTL,0         ANY INPUT RECEIVED?                 *
         BNE   MOVEBUFF           YES, RE-DISPLAY UNCONDITIONALLY     *
         LH    R1,DCMMSGAL        GET NUMBER OF LINES IN MESSAGE AREA *
         LA    R1,5(,R1)          COUNT POSSIBLE EXTRA LINES          *
         CH    R1,LPSCREEN        COMPARE WITH TSO SCREEN LINE COUNT  *
         BL    TESTBUFF           TSO SCREEN IS BIGGER SO NO PROBLEM  *
         S     R9,DCMAWARN        TSO SCREEN IS NOT BIGGER SO TRIM    *
         A     R9,DCMAINS             OFF THREE CONSOLE IMAGE LINES   *
         LR    R5,R9              EQUATE TARGET AND SOURCE LENGTHS    *
TESTBUFF STM   R4,R5,WORK         SAVE TARGET REGISTERS               *
         STM   R8,R9,SCRATCH      SAVE SOURCE REGISTERS               *
         CLCL  R4,R8              HAS ANYTHING CHANGED?               *
         BE    NOCHANGE           NO, DON'T RE-DISPLAY                *
         LM    R4,R5,WORK         YES, RE-LOAD TARGET REGISTERS       *
         LM    R8,R9,SCRATCH      RE-LOAD SOURCE REGISTERS            *
MOVEBUFF MVCL  R4,R8              MOVE CONSOLE BUFFER TO OUTPUT BUFFER*
         L     R0,DCMDOMPK        SAVE DOM TABLE ADDRESS        GP@SECV
         ST    R0,DOM#ADDR             FOR THIS CONSOLE         GP@SECV
         MVC   MAXLINES,DCMMSGAL  COPY MESSAGE AREA LINE COUNT  GP@P6**
         BAS   R14,HOMETASK       PERFORM ADDRESS SPACE SWITCH        *
         TIME  DEC                GET DATE AND TIME             GP@SECV
         ST    R1,WORK+4          STORE YYDDDF                  GP@SECV
         MVC   DECDATE,=X'4021204B202020'                       GP@SECV
         ED    DECDATE,WORK+5     EDIT DATE TO YY.DDD           GP@SECV
         SLR   R1,R1              ERASE CONTENTS FOR SHIFT      GP@SECV
         SRDL  R0,28              SHIFT TO CORRECT POSITION     GP@SECV
         STM   R0,R1,WORK         STORE 0000000HHMMSSS0         GP@SECV
         OI    WORK+7,X'0F'       ENSURE 0HHMMSSSSF             GP@SECV
         MVC   DECTIME,=X'402120207A20207A20204B2020'           GP@SECV
         ED    DECTIME,WORK+3     DISPLAY HH:MM:SS.SS           GP@SECV
         MVC   0(TRAILEN,R4),TRAILER  MOVE IN TRAILER
         DROP  R5,R7              UCMLIST, STRTDCM=DCMSTRT
         EJECT
***********************************************************************
*                                                                     *
*               DISPLAY THE OPERATORS SCREEN ON A 3270                *
*                                                                     *
***********************************************************************
         SPACE
         LA    R2,HEADER          R2 = ADDR OF OUTPUT STREAM
         CLI   WCC,X'40'          NULL WCC?                     GP@P6**
         BNE   FULLTPUT           NO, RESET AND REFRESH EVERYTHING    *
         LH    R1,MAXLINES        GET CONSOLE MESSAGE LINE COUNT      *
         LA    R1,4(,R1)          GET CONSOLE SCREEN LINE COUNT       *
         CH    R1,LPSCREEN        COMPARE WITH TSO SCREEN LINE COUNT  *
         BH    FULLTPUT           CONSOLE LARGER THAN TSO TERMINAL    *
         LA    R4,ASINKLEN(,R4)   DON'T OVERWRITE TSO INPUT AREA      *
         B     SIZETPUT           GO DETERMINE TPUT DATA LENGTH GP@P6**
FULLTPUT LA    R4,TRAILEN(,R4)    POINT PAST END OF TRAILER
SIZETPUT SR    R4,R2              R4 = LENGTH OF TPUT
         BAS   R14,OPT3270        OPTIMIZE 3270 DATA STREAM           *
         TPUT  (2),(4),NOEDIT,WAIT,MF=(E,TPUTNOED)                    *
         MVC   USERLINE,BLANKS    BLANK OUT REPLY LINE          GP@SECV
         XC    ERROR,ERROR        LEAVE NULLS FOR INSERT MODE   GP@SECV
         B     READTERM           READ INPUT FROM TERMINAL
         EJECT
***********************************************************************
*                                                       CB3270 COPIED *
*         OPTIMIZE 3270 DATA STREAM FOR TSO TERMINAL         17/07/89 *
*                                                            BY GP@P6 *
***********************************************************************
OPT3270  STM   R14,R12,12(R13)
         LR    R9,R2                   LOAD INPUT ADDRESS
         LA    R5,0(R4,R9)             GET END OF INPUT ADDRESS
         BCTR  R5,0
         ICM   R8,15,OUTBUFAD          LOAD OUTPUT AREA ADDRESS
         BNZ   GOTOUTBF
         L     R0,OUTBUFSZ             BUFFER NOT YET ACQUIRED
         GETMAIN R,LV=(0)              GET BELOW-THE-LINE TPUT BUFFER
         ST    R1,OUTBUFAD             SAVE ADDRESS ACROSS CALLS
         LR    R8,R1                   COPY OUTPUT AREA ADDRESS
GOTOUTBF LR    R10,R8                  SAVE ADDRESS FOR THIS CALL
         LH    R2,SCRNSIZE             LOAD SCREEN BUFFER SIZE
         SLR   R6,R6                   INITIALIZE SCREEN ADDRESS
         SLR   R15,R15
TESTORDR CLI   0(R9),IC                TEST FOR INSERT CURSOR
         BE    COPY1
         CLI   0(R9),SF                TEST FOR START FIELD
         BE    COPY2
         CLI   0(R9),SFE               TEST FOR START FIELD EXTENDED
         BE    SFEORNOT
         CLI   0(R9),SBA               TEST FOR SET BUFFER ADDRESS
         BE    COPY3
         CLI   0(R9),EUA               TEST FOR ERASE UNPROTECTED
         BE    COPY3
         CLI   0(R9),RA                TEST FOR REPEAT TO ADDRESS
         BE    COPY4
         SPACE
         LA    R4,1                    SET INCREMENT TO 1
         LR    R7,R9                   SAVE ADDRESS OF FIRST CHAR
TESTNEXT LA    R6,1(R6)                INCREMENT SCREEN ADDRESS
         BXH   R9,R4,ENDBUF            INCREMENT TO NEXT CHAR
         CLC   0(1,R7),0(R9)           SEE IF SAME CHARACTER
         BE    TESTNEXT                IF SAME, LOOP
         SPACE
ENDBUF   LR    R1,R9                   ADDRESS OF CURRENT CHAR
         SR    R1,R7                   NUMBER OF SAME CHARACTERS
         CH    R1,=H'4'                AT LEAST 4 FOR RA
         BH    BUILDRA
         BCTR  R1,0                    SUBTRACT 1 FOR EXECUTE
         EX    R1,COPY                 COPY TO OUTPUT AREA
         LA    R8,1(R1,R8)             INCREMENT OUTPUT ADDRESS
         CR    R9,R5                   SEE IF ANY MORE
         BH    OUT
         B     TESTORDR
         SPACE
BUILDRA  MVC   3(1,R8),0(R7)           COPY CHARACTER
         MVI   0(R8),RA                MOVE IN RA ORDER CODE
         CR    R6,R2
         BL    GETADDR
         SR    R6,R2
GETADDR  SR    R14,R14                 CONVERT SCREEN ADDRESS TO
         LR    R15,R6                       3270 ADDRESS CODE
         STCM  R15,3,1(R8)             14-BIT ADDRESS
         CH    R2,=H'4095'             SCREEN HAS 4K OR MORE BYTES?
         BH    GOTADDR                 YES, SO 14-BIT MUST BE SUPPORTED
         SLDL  R14,26
         SRL   R15,26
         IC    R14,TBL3270(R14)
         IC    R15,TBL3270(R15)
         STC   R14,1(,R8)              12-BIT ADDRESS
         STC   R15,2(,R8)
GOTADDR  LA    R8,4(,R8)               INCREMENT OUTPUT AREA ADDRESS
         CR    R9,R5                   SEE IF ANY MORE
         BH    OUT
         B     TESTORDR
         SPACE
SFEORNOT SLR   R4,R4                   YES, CLEAR DATA COUNT
         IC    R4,1(,R9)               LOAD ATTRIBUTE PAIR COUNT
         LA    R4,1(,R4)               INCREMENT FOR SFE,COUNT
         SLL   R4,1                    GET BYTE COUNT
         LA    R6,1(,R6)               INCREMENT SCREEN ADDR FOR ATTR
         TM    PARMADDR,X'80'          "SNAZZY" TERMINAL?
         BO    COPYDATA                YES, JUST COPY THE DATA
         MVI   0(R8),SF                NO, JUST USE A NORMAL SF
         MVC   1(1,R8),3(R9)           COPY FIELD ATTRIBUTE
         LA    R8,2(,R8)               ADJUST OUTPUT COUNTER
         B     INCRPTR
COPY1    LA    R4,1                    SET COUNT
         B     COPYDATA
COPY2    LA    R4,2                    SET COUNT
         LA    R6,1(,R6)               INCREMENT SCREEN ADDR FOR ATTR
         B     COPYDATA
COPY3    LA    R4,3                    SET COUNT
         B     UPDATADR
COPY4    LA    R4,4                    SET COUNT
UPDATADR ICM   R15,3,1(R9)             CONVERT ADDRESS TO SCREEN POS
         TM    1(R9),X'40'             14-BIT ADDRESS FORMAT?
         BZ    UPDT14AD                YES
         SLDL  R14,24
         SLL   R15,2
         SRDL  R14,6
         SRL   R15,20
UPDT14AD LR    R0,R15                  SAVE NEW SCREEN ADDRESS
         CLI   CPLINE+1,80             80-COLUMN TSO TERMINAL?
         BNH   KEEPADDR                YES, KEEP BUFFER ADDRESS
         SLR   R14,R14
         D     R14,FW80
         LTR   R14,R14                 COLUMN 1 FOR 80-COLUMN CONSOLE?
         BNZ   KEEPADDR                NO, KEEP BUFFER ADDRESS
         MH    R15,CPLINE              YES, RESCALE FOR WIDE TERMINAL
         LR    R0,R15                  UPDATE SAVED SCREEN ADDRESS
KEEPADDR LR    R15,R0                  GET NEW SCALED SCREEN ADDRESS
         CR    R6,R15                  SEE IF ALREADY AT THIS ADDRESS
         BNE   RESETADR
         CLI   0(R9),SBA               IF ORDER IS SBA, SKIP IT
         BE    INCRPTR
RESETADR LR    R6,R15                  UPDATE CURRENT SCREEN ADDRESS
         BCTR  R4,0                    COPY AND EDIT OUTPUT
         LR    R7,R9                   COPY SOURCE ADDRESS
         EX    R4,COPY                 COPY TO OUTPUT AREA
         CR    R6,R2                   WRAP-AROUND REQUIRED?
         BL    WRAPOKAY                NO
         SR    R6,R2                   YES
         LR    R15,R6
WRAPOKAY STCM  R15,3,1(R8)             STORE 14-BIT ADDRESS
         CH    R2,=H'4095'             SCREEN HAS 4K OR MORE BYTES?
         BH    COPYDONE                YES, SO 14-BIT MUST BE SUPPORTED
         SRL   R15,6                   NO, PLAY IT SAME AND USE 12-BIT
         STC   R15,1(,R8)              SUPPLY HIGH-ORDER 6 BITS
         NI    2(R8),X'3F'             SUPPLY LOW-ORDER 6 BITS
         TR    1(2,R8),TBL3270         SUPPLY "PARITY" BITS
         B     COPYDONE
         SPACE
COPYDATA BCTR  R4,0                    DECREMENT COUNT FOR EXECUTE
         LR    R7,R9                   COPY SOURCE ADDRESS
         EX    R4,COPY                 COPY TO OUTPUT AREA
COPYDONE LA    R4,1(,R4)               RESTORE COUNT
         LA    R8,0(R4,R8)             UPDATE OUTPUT AREA ADDRESS
INCRPTR  BXLE  R9,R4,TESTORDR          INCREMENT ADDRESS AND LOOP
         SPACE
OUT      SR    R8,R10                  CALCULATE OUTPUT LENGTH
         ST    R8,36(0,R13)            STORE NEW LENGTH IN R4 SLOT
         LR    R8,R10                  LOAD OUTPUT ADDRESS
         ST    R8,28(0,R13)            STORE NEW ADDRESS IN R2 SLOT
         SR    R15,R15                 CLEAR RETURN CODE
         LM    R14,R12,12(R13)
         BR    R14
         SPACE
COPY     MVC   0(0,R8),0(R7)           <<< EXECUTED INSTRUCTION >>>
         SPACE
IC       EQU   X'13'
SF       EQU   X'1D'
SFE      EQU   X'29'
SBA      EQU   X'11'
EUA      EQU   X'12'
RA       EQU   X'3C'
         EJECT
***********************************************************************
*                                                                     *
*                       READ COMMAND FROM USER                        *
*                                                                     *
***********************************************************************
NOCHANGE BAS   R14,HOMETASK       PERFORM ADDRESS SPACE SWITCH        *
READTERM XC    TGETCNTL(86),TGETCNTL   ERASE PREVIOUS REPLY     GP@SECV
         MVI   REPLY,C' '         JUST FOR BLANK TEST           GP@SECV
         LA    R2,3               DO UP TO 3 TERMINAL READS     GP@P6**
READLOOP LA    R1,TGETCNTL        GET ADDRESS OF INPUT BUFFER         *
         LA    R0,85              GET MAXIMUM INPUT SIZE              *
         ICM   R1,8,TGETFLAG      SUPPLY TGET FLAG BYTE               *
         TGET  (1),(0),R          GET 79 CHARACTERS FROM TERMINAL     *
         CH    R15,=H'4'          ANY INPUT?                          *
         BNE   TGOTSOME           YES                                 *
         BCT   R2,READWAIT        NO, LOOP THROUGH READ AGAIN         *
         MVI   WCC,X'40'          NULL WCC - DON'T ERASE AID          *
         B     NEXTPAGE           TIMED OUT FOR REFRESH               *
READWAIT STIMER WAIT,BINTVL=DELAY WAIT HALF A SECOND                  *
         B     READLOOP           ISSUE ANOTHER TGET                  *
TGOTSOME CLI   TGETCNTL,X'6C'     PA1?                                *
         BE    CNSLREPT           YES, PERFORM REPEAT FUNCTION        *
         MVI   WCC,X'C3'          WCC TO RESET AID/MDT, UNLOCK KEYBD  *
         CH    R1,=H'1'           ONLY AID RETURNED? (PA2/PA3/CLEAR?) *
         BE    NEXTPAGE           YES, DO CNCL FOR VTAM SHORT READ    *
         CH    R15,=H'12'         WAS BUFFER TOO SMALL?               *
         BE    TGETCLRQ           YES, FLUSH REMAINING DATA           *
         CH    R15,=H'16'         INVALID TGET PARAMETERS?            *
         BE    DONE               YES, EXIT                           *
         CH    R15,=H'20'         TERMINAL LOGGED OFF?                *
         BE    DONE               YES, EXIT                           *
         CH    R15,=H'28'         WAS BUFFER TOO SMALL?               *
         BNE   PARSCHAR           NO, RECEIVED ALL THE INPUT          *
TGETCLRQ EQU   *                                                      *
         TCLEARQ INPUT            YES, FLUSH UNWANTED DATA            *
PARSCHAR CLI   TGETCNTL,X'7A'     PF10?                               *
         BE    PF1022             YES, RELEASE                        *
         CLI   TGETCNTL,X'4A'     PF22?                               *
         BE    PF1022             YES, RELEASE                        *
         CLI   TGETCNTL,X'7B'     PF11?                               *
         BE    PF1123             YES, FREEZE                         *
         CLI   TGETCNTL,X'4B'     PF23?                               *
         BE    PF1123             YES, FREEZE                         *
         CLI   TGETCNTL,X'7D'     ENTER OR OTHER PFK?                 *
         BNE   DONE               CALLER MUST HANDLE OTHER PFK  GP@P6**
         CLI   REPLY,C' '         JUST A BLANK?
         BE    NEXTPAGE           YES, JUST GO REFRESH
         MVC   OLDREPLY,REPLY     SAVE LAST COMMAND             GP@SECV
         OC    REPLY,BLANKS       CONVERT CHARS TO UPPER CASE
         EJECT
***********************************************************************
*                                                                     *
*                    C  --  SET CONSOLE NUMBER                        *
*                                                                     *
***********************************************************************
         CLI   REPLY,C'C'         DO WE CHANGE CONSOLES?
         BNE   KCONTROL           NO, SO CONTINUE
         L     R2,CONSOLE         SET DEFAULT CONSOLE
         ST    R2,OLDCONS         SAVE OLD CONSOLE #
         LA    R15,CONVBIN        BRANCH TO
         BASR  R14,R15            EBCDIC->BINARY CONVERTOR
         ST    R2,CONSOLE         STORE R2 AWAY AS CONSOLE NUMBER
         B     NEXTPAGE           CONTINUE
***********************************************************************
*                                                       THIS FUNCTION *
*        K  --  DELETE A HIGH INTENSITY MESSAGE         ADDED 17/9/82 *
*                                                          BY GP@SECV *
***********************************************************************
KCONTROL CLI   REPLY,C'K'         DO WE DOM A MESSAGE?
         BNE   NTFYOPER           NO, SO CONTINUE
         CLI   VIPFLAG,C'*'       ARE WE IN VIP MODE?
         BNE   MAYBECMD           NO, SO SKIP IT
         LA    R2,1               MAKE R2 NON-ZERO
         LNR   R2,R2              MAKE R2 NEAGATIVE
         LA    R15,CONVBIN        BRANCH TO
         BASR  R14,R15            EBCDIC->BINARY CONVERTOR
         LTR   R2,R2              IS R2 POSITIVE?
         BM    NEXTPAGE           NEGATIVE ==> CONVBIN FOUND ERROR
         BZ    BADCMD             ZERO ==> INVALID COMMAND
         CH    R2,MAXLINES        IS THE LINE NUMBER TOO LARGE?
         BH    BADCMD             YES, SO SKIP IT
         BCTR  R2,0               PREPARE R2 AS INDEX
         MH    R2,DOMESIZE        MULTIPLY BY CONSOLE LINE ENTRY SIZE
         A     R2,DOM#ADDR        GET ADDR OF ENTRY FOR THIS LINE
         BAS   R14,COMMTASK       PERFORM ADDRESS SPACE SWITCH
         ICM   R2,15,4(R2)        LOAD R2 WITH MESSAGE NO. FOR DOM
         BAS   R14,HOMETASK       PERFORM ADDRESS SPACE SWITCH
         LTR   R1,R2              LOAD R1 WITH MESSAGE NO. FOR DOM
         BZ    NEXTPAGE           SKIP DOM IF NO MESSAGE ON THIS LINE
*        DOM   MSG=(1)
         SLR   0,0                ONE ID NUMBER AND NO REPLY=YES
         SVC   87                 THIS WILL KILL A WTOR ON MVS/SP2.2
         B     NEXTPAGE           CONTINUE
***********************************************************************
*                                                       THIS FUNCTION *
*        N  --  DISPLAY A HIGH INTENSITY MESSAGE        ADDED 17/9/82 *
*                                                          BY GP@SECV *
***********************************************************************
NTFYOPER CLI   REPLY,C'N'         DO WE WRITE A MESSAGE?
         BNE   NTFYOPRS           NO, SO CONTINUE
         CLI   VIPFLAG,C'*'       ARE WE IN VIP MODE?
         BNE   MAYBECMD           NO, SO SKIP IT
         MVC   WTOMSG(64),REPLY+1 PREPARE MESSAGE TEXT          GP@P6
         XC    WTOROUT,WTOROUT    RESET ROUTING CODES           GP@P6
         MVI   SPYWTO+2,X'C0'     SPECIFY DESC/ROUT AND REG0    GP@P6
         MVI   SPYWTO+3,X'04'     SPECIFY NOCPY                 GP@P6
         L     R0,CONSOLE         LOAD CONSOLE SOURCE ID        GP@P6
         WTO   MF=(E,SPYWTO)      DISPLAY HIGH INTENSITY MESSAGE
         B     NEXTPAGE           CONTINUE
***********************************************************************
*                                                       THIS FUNCTION *
*        B  --  BROADCAST A HIGH INTENSITY MESSAGE      ADDED 4/12/87 *
*                                                            BY GP@P6 *
***********************************************************************
NTFYOPRS CLI   REPLY,C'B'         DO WE WRITE A MESSAGE?
         BNE   HALT               NO, SO CONTINUE
         CLI   VIPFLAG,C'*'       ARE WE IN VIP MODE?
         BNE   MAYBECMD           NO, SO SKIP IT
         MVC   WTOMSG(64),REPLY+1 PREPARE MESSAGE TEXT          GP@P6
         MVI   WTOROUT,X'40'      SPECIFY ROUTCDE=(2)           GP@P6
         MVI   SPYWTO+2,X'84'     SPECIFY DESC/ROUT AND BRDCST  GP@P6
         MVI   SPYWTO+3,X'00'     RESET OTHER MCS FLAGS         GP@P6
         WTO   MF=(E,SPYWTO)      DISPLAY HIGH INTENSITY MESSAGE
         B     NEXTPAGE           CONTINUE
         EJECT
***********************************************************************
*                                                                     *
*                        Z  --  TERMINATE IMPXA                       *
*                                                                     *
***********************************************************************
HALT     CLI   REPLY,C'Z'         IS IT A 'Z'?
         BE    DONE               YES, SO QUIT
         CLI   REPLY,C'='         IS IT A '='?
         BE    DONE               YES, SO QUIT
         CLI   REPLY,C'T'         IS IT A 'T'?
         BE    DONE               YES, SO QUIT
         CLI   REPLY,C'L'         IS IT A 'L'?
         BE    DONE               YES, SO QUIT
***********************************************************************
*                                                                     *
*               F  --  FREEZE DISPLAY ON CURRENT PAGE                 *
*                                                                     *
***********************************************************************
F        CLI   REPLY,C'F'         IS IT AN 'F'?
         BNE   R                  NO, SO CONTINUE ON
PF1123   MVI   FREEZE,C'F'        TURN ON FREEZE INDICATOR
         MVI   TGETFLAG,TGETFLGW  WAIT FOR INPUT ON TERMINAL READ
         B     NEXTPAGE           CONTINUE
***********************************************************************
*                                                                     *
*           R  --  RELEASE FREEZE ON CURRENT PAGE DISPLAY             *
*                                                                     *
***********************************************************************
R        CLI   REPLY,C'R'         IS IT AN 'R'?
         BNE   HELP               NO, SO CONTINUE ON
PF1022   MVI   FREEZE,C'R'        TURN OFF FREEZE INDICATOR
         MVI   TGETFLAG,TGETFLGN  DON'T WAIT FOR INPUT ON TERMINAL READ
         B     NEXTPAGE           CONTINUE
         EJECT
***********************************************************************
*                                                                     *
*           ?  --  LIST HELP FOR SPY COMMANDS ON TERMINAL             *
*                                                                     *
***********************************************************************
HELP     CLI   REPLY,C'?'         IS HE ASKING FOR HELP?
         BE    DONE               YES
         CLI   REPLY,C'!'         IS HE ASKING FOR GLOSSARY?
         BE    DONE               YES
         EJECT
***********************************************************************
*                                                                     *
*                       CHECK FOR VIP PASSWORD                        *
*                                                                     *
***********************************************************************
         CLC   REPLY(3),VIPWORD   WAS VIP PASSWORD ENTERED?
         BNE   OPER               NO, CONTINUE
         XI    VIPFLAG,C'*'-C' '  TOGGLE VIP FLAG
         B     NEXTPAGE
***********************************************************************
*                                                                     *
*                      SYSTEM OPERATOR COMMANDS                       *
*                                                                     *
***********************************************************************
OPER     CLI   REPLY,C'/'         IS THIS AN OPERATOR COMMAND?
         BE    MGCR               YES
         EJECT
***********************************************************************
*                                                                     *
*                       JES OPERATOR COMMANDS                         *
*                                                                     *
***********************************************************************
         CLI   REPLY,C'$'         IS THIS A JES COMMAND?
         BE    MGCR               YES
***********************************************************************
*                                                                     *
*                      COMMAND WAS INVALID                            *
*                                                                     *
***********************************************************************
BADCMD   LA    R1,3               COMMAND WAS INVALID           08JUL97
         BAS   R14,GETERMSG       LOAD ERROR MESSAGE            08JUL97
         B     NEXTPAGE
MAYBECMD LA    R1,6               COMMAND WAS INVALID FOR NON-VIP MODE
         BAS   R14,GETERMSG       LOAD ERROR MESSAGE            08JUL97
         B     NEXTPAGE
         EJECT
DONE     DS    0H                 PROGRAM TERMINATION
         L     R1,PARMADDR        RESTORE PARAMETER POINTER
         MVC   0(46,R1),TGETCNTL  PASS BACK COMMAND INPUT
         L     R13,4(,R13)        POINT BACK TO OLD SAVE AREA
         MVC   23(1,R13),FREEZE   PASS BACK DISPLAY MODE        GP@P6
         MVC   22(1,R13),VIPFLAG  PASS BACK VIP FLAG            GP@P6
         LM    R0,R1,OUTBUFSZ     GET OUTPUT BUFFER DETAILS
         LTR   R1,R1              WAS BUFFER ALLOCATED?
         BZ    NOOUTBUF           NO
         FREEMAIN R,LV=(0),A=(1)  YES, FREE IT
         SLR   R15,R15
         ST    R15,OUTBUFAD       FLAG REACQUISITION REQUIRED FOR REUSE
NOOUTBUF DS    0H
         MODESET MF=(E,MDSTPROB)
*        STTMPMD OFF              RESTORE PA1 AND CLEAR         GP@P6
         STAX
         LM    R14,R12,12(R13)    RESTORE REGISTERS
         SLR   R15,R15            INDICATE INITIALIZATION SUCCESS
         BR    R14                RETURN TO CALLER
         SPACE
INITFAIL DS    0H                 PROGRAM TERMINATION
         L     R13,4(,R13)        POINT BACK TO OLD SAVE AREA
         MODESET MF=(E,MDSTPROB)
         LM    R14,R12,12(R13)    RESTORE REGISTERS
         LA    R15,8              INDICATE INITIALIZATION FAILURE
         BR    R14                RETURN TO CALLER
         EJECT
***********************************************************************
*                                                            ADDED BY *
*                  USE SVC 34 FOR COMMANDS                   GP@SECV  *
*                                                            11/10/82 *
***********************************************************************
MGCR     CLI   VIPFLAG,C'*'       ARE WE IN VIP MODE?
         BNE   MAYBECMD           NO, SO CANNOT ISSUE COMMANDS
         CLI   REPLY,C'/'         MVS COMMAND?
         BE    SVC34OS            YES
         MVC   CMDBUF,REPLY       LOAD COMMAND BUFFER WITH JES COMMAND
         B     SVC34JES
SVC34OS  MVC   CMDBUF,REPLY+1     LOAD COMMAND BUFFER WITH MVS COMMAND
SVC34JES LA    R3,79              AVOID INFINITE LOOP
BLNKLOOP CLI   CMDBUF,C' '        LEADING BLANK(S)?
         BNE   CHECKCMD           NO, CHECK COMMAND TEXT
         MVC   CMDBUF(L'CMDBUF-1),CMDBUF+1  SHIFT COMMAND TEXT LEFT
         MVI   CMDEND,C' '        BLANK OUT OLD LAST CHARACTER
         BCT   R3,BLNKLOOP        CHECK FOR ANOTHER BLANK
CHECKCMD CLC   =C'E ',CMDBUF      RESET COMMAND?
BADJUMP1 NOP   BADCMD             YES, NOT ALLOWED TO DO IT  **** JUL01
         CLC   =C'RESET ',CMDBUF  RESET COMMAND?
BADJUMP2 NOP   BADCMD             YES, NOT ALLOWED TO DO IT  **** JUL01
         LA    R3,CMDEND
         LA    R2,L'CMDBUF+1                          WIDE-SCRN 18NOV99
PARSLOOP CLI   0(R3),C' '         BLANK CHARACTER?
         BNE   STORELEN           NO, FOUND LAST CHARACTER OF COMMAND
         BCTR  R3,0               YES, POINT TO PREVIOUS CHARACTER
         BCT   R2,PARSLOOP        IF R2 IS 0 ONLY / WAS ENTERED
         B     BADCMD             TRY AGAIN
STORELEN LA    R2,4(0,R2)         MAKE THE LAST CHARACTER A BLANK
         STH   R2,CMDLEN
         SPACE
         LA    R1,CMDLEN          COMMAND BUFFER ADDRESS
         L     R0,CONSOLE         CONSOLE ID
         SVC   34
         B     NEXTPAGE
ECHOLOAD MVC   WTOMSG(0),CMDBUF
         EJECT
***********************************************************************
*                                                                     *
*            CONVERT EBCDIC NUMBERS FROM USER INTO BINARY             *
*                                                                     *
***********************************************************************
CONVBIN  CVD   R2,WORK            CONVERT TO DECIMAL
         CLI   REPLY+1,C' '       DID HE ENTER A NUMBER?
         BE    RTRN               NO, USE THE DEFAULT
         CLI   REPLY+1,C'0'       IS THE HEX CODE < 'F0' ?
         BL    BADCHAR            YES, ERROR
         CLI   REPLY+1,C'9'       IS THE HEX CODE > 'F9' ?
         BH    BADCHAR            YES, ERROR
         PACK  WORK(8),REPLY+1(1) PACK EBCDIC (ASSUME 1 DIGIT)
         CLI   REPLY+2,C' '       DID HE ENTER 2 DIGITS?
         BE    CVB                NO, DONT DO THE 2 DIGIT PACK
         CLI   REPLY+2,C'0'       IS THE HEX CODE < 'F0' ?
         BL    BADCHAR            YES, ERROR
         CLI   REPLY+2,C'9'       IS THE HEX CODE > 'F9' ?
         BH    BADCHAR            YES, ERROR
         PACK  WORK(8),REPLY+1(2) PACK AGAIN, WITH 2 DIGITS THIS TIME
CVB      CVB   R2,WORK            GET BINARY
RTRN     BR    R14                RETURN TO MAINLINE
BADCHAR  LA    R1,2               CONSOLE NUMBER ERROR          08JUL97
         B     GETERMSG           LOAD ERROR MESSAGE    18NOV99 08JUL97
         EJECT
***********************************************************************
*                                                          XA UPGRADE *
*            GET INTO COMMTASK'S ADDRESS SPACE               27/11/87 *
*                                                            BY GP@P6 *
***********************************************************************
COMMTASK L     R1,PSAAOLD         POINT TO ASCB
         USING ASCB,R1
         L     R1,ASCBOUCB        POINT TO OUCB
         DROP  R1                 ASCB
         USING OUCB,R1
         TM    OUCBSFL,OUCBNSW    ALREADY NON-SWAPPABLE?
         BO    DNTSWPOK           YES, FORGET ABOUT SYSEVENT
         DROP  R1                 OUCB
         LA    0,X'29'            LOAD DONTSWAP SYSEVENT CODE
         SVC   95                 ISSUE SYSEVENT SVC
DNTSWPOK DS    0H                 NOW NON-SWAPPABLE
         STATUS SET,MC,STEP       STOP ALL OTHER TASKS
         LA    R0,1               GET NEW AX VALUE
         AXSET AX=(0)             SET IT
         ST    R0,AXVALUE         SAVE PREVIOUS VALUE FOR RESTORE
**       XC    WORK,WORK          CLEAR ADDRESS SPACE PARAMETERS
**       MVC   WORK+2(2),CNSLASID LOAD SECONDARY ASID
**       MVC   WORK+6(2),HOMEASID LOAD PRIMARY ASID
**       LASP  WORK,1             SWITCH TO CONSOLE'S ADDRESS SPACE
**       BNZ   LASPFAIL           HANDLE UNSUCCESSFUL LASP
         LH    R1,CNSLASID        LOAD CONSOLE ASID             APR2008
         SSAR  R1                 ACTIVATE IT AS SECONDARY      APR2008
         SAC   X'100'             GET INTO SECONDARY SPACE MODE
         BR    R14                RETURN TO CALLER
LASPFAIL BAS   R14,HOMETASK       ENSURE STATUS QUO IS MAINTAINED
         LA    R1,LASPSTRM        POINT TO REPEAT DATA STREAM
         LA    R0,LASPCLEN        GET DATA LENGTH
         B     LASPERRM           NOTIFY USER OF LASP FAILURE
         EJECT
***********************************************************************
*                                                         SP5 UPGRADE *
*            LOAD ERROR MESSAGE                              08/07/97 *
*                                                            BY GP@P6 *
***********************************************************************
GETERMSG SLL   R1,5               GET ERROR MESSAGE INDEX
         LA    R1,ERRMSG1-32(R1)  POINT TO ERROR MESSAGE TEXT
         MVC   ERROR(32),0(R1)    LOAD IT
         BR    R14                RETURN TO CALLER
         EJECT
***********************************************************************
*                                                          XA UPGRADE *
*            GET INTO TSO USER'S ADDRESS SPACE               27/11/87 *
*                                                            BY GP@P6 *
***********************************************************************
HOMETASK SAC   X'000'             REVERT TO PRIMARY SPACE MODE
**       XC    WORK,WORK          CLEAR ADDRESS SPACE PARAMETERS
**       MVC   WORK+2(2),HOMEASID LOAD SECONDARY ASID
**       MVC   WORK+6(2),HOMEASID LOAD PRIMARY ASID
**       LASP  WORK,1             SWITCH TO HOME ADDRESS SPACE
         LH    R1,HOMEASID        LOAD PRIMARY ASID             APR2008
         SSAR  R1                 MAKE IT THE SECONDARY ALSO    APR2008
         L     R0,AXVALUE         GET OLD AX VALUE
         AXSET AX=(0)             RESTORE IT
         STATUS RESET,MC,STEP     RESTART ALL OTHER TASKS
         L     R1,CVTPTR(,0)      POINT TO THE CVT
         USING CVT,R1
         L     R1,CVTOPCTP        POINT TO THE RMCT
         DROP  R1                 CVT
         L     R1,12(,R1)         POINT TO THE MCT
         TM    168(R1),X'C0'      ANY SQA SHORTAGE PROBLEMS?
         BNZR  R14                YES, STAY NON-SWAPPABLE
         TM    169(R1),X'C0'      ANY AUX STORAGE SHORTAGE PROBLEMS?
         BNZR  R14                YES, STAY NON-SWAPPABLE
         TM    171(R1),X'60'      ANY REAL STORAGE SHORTAGE PROBLEMS?
         BNZR  R14                YES, STAY NON-SWAPPABLE
         LA    0,X'2A'            LOAD OKSWAP SYSEVENT CODE
         SVC   95                 ISSUE SYSEVENT SVC
         BR    R14                RETURN TO CALLER
         DROP  R12,R11            IMPXASPY
         EJECT
***********************************************************************
*                                                                     *
*                          A T T N E X I T                            *
*                                                                     *
*         TRAP USERS ATTENTION INTERRUPTS AND FLAG FOR RESET          *
*                                                                     *
***********************************************************************
ATTNEXIT LR    R7,R15             ESTABLISH
         USING ATTNEXIT,R7        ADDRESSABILITY
         MVI   ATTNFLG,X'FF'      SET ATTN FLAG
         BR    R14                RETURN TO CALLER
         DROP  R7                 ATTNEXIT
         EJECT
***********************************************************************
*                                                                     *
*                         C O N S T A N T S                           *
*                                                                     *
***********************************************************************
WORK     DC    D'0'               WORK AREA FOR PACKS
SCRATCH  DC    D'0'               SCRATCH AREA FOR CHAR. MANIP
SAVE     DC    18F'0'             SAVE AREA
OUTBUFSZ DC    F'8192'            FINAL TPUT DATA STREAM BUFFER SIZE
OUTBUFAD DC    A(0)               FINAL TPUT DATA STREAM BUFFER ADDRESS
TBL3270  DC    X'40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F'
         DC    X'50D1D2D3D4D5D6D7D8D95A5B5C5D5E5F'
         DC    X'6061E2E3E4E5E6E7E8E96A6B6C6D6E6F'
         DC    X'F0F1F2F3F4F5F6F7F8F97A7B7C7D7E7F'
HEX      DC    C'0123456789ABCDEF'
DOM#ADDR DC    F'0'               ADDRESS OF DOM # TABLE FOR THIS CNSL
OLDCONS  DC    F'1'               PREVIOUS CONSOLE NUMBER
CONSOLE  DC    F'0'               CONSOLE TO BE LOOKED AT
AXVALUE  DC    F'0'               AX VALUE SAVE AREA
PARMADDR DC    A(0)               ADDRESS OF INPUT PARAMETER
LPSCREEN DC    H'0'               LINES PER SCREEN
CPLINE   DC    H'0'               CHARACTERS PER LINE
HOMEASID DC    H'0'               ASID OF TSO USER
CNSLASID DC    H'8'               ASID OF COMMTASK  2.1:6 2.2:7 3.1:8
DELAY    DC    F'50'              DELAY FOR 50 HUNDREDTHS OF A SECOND
FW80     DC    F'80'
HW80     EQU   FW80+2,2
SCRNSIZE DC    H'1920'            NUMBER OF TSO SCREEN LOCATIONS GP@P6
CMDLEN   DC    2H'0'              HALFWORD LENGTH INDICATOR     GP@SECV
CMDBUF   DC    CL158' '           SVC 34 COMMAND BUFFER         GP@SECV
CMDEND   DC    CL2' '             END OF COMMAND BUFFER         GP@SECV
MAXLINES DC    H'0'               NUMBER OF LINES IN MESSAGE AREA
DOMESIZE DC    H'8'               SIZE OF DOM ENTRY (OS DEPT)   GP@P6
TGETCNTL DC    CL6' '             TGET ASIS CONTROL BYTES       GP@SECV
REPLY    DC    CL160' '           USERS COMMAND INPUT FIELD
DUPLSTRM DC    X'C7'              WCC -- ALARM, RESET AID/MDT, UNLOCK
         DC    X'11'              SBA
DUPLCOUT DC    X'5B60'            SECOND LAST LINE
         DC    X'1DE8'            ATTR BYTE - PROTECTED, HIGH INTENSITY
         DC    CL79'IEE150I CHANGE OPTIONS IF DESIRED: (ENTER TO ISSUE +
               COMMAND; PA2 TO CANCEL IT.) '
         DC    X'11'              SBA
DUPLCIN  DC    X'5CF0'            LAST/INPUT LINE
         DC    X'1DC1'            ATTR BYTE - UNPROT, LOW INTENS, UPDTD
         DC    X'13'              INSERT CURSOR
OLDREPLY EQU   *,160              PREVIOUS REPLY
         DC    CL80' '            PREVIOUS REPLY                GP@SECV
DUPLCLEN EQU   *-DUPLSTRM-1       LENGTH OF DUPLICATE DATA STREAM
         DC    CL80' '            PREVIOUS REPLY      WIDE-SCRN 18NOV99
LASPSTRM DC    X'C7'              WCC -- ALARM, RESET AID/MDT, UNLOCK
         DC    X'11'              SBA
LASPCOUT DC    X'5B60'            SECOND LAST LINE
         DC    X'1DE8'            ATTR BYTE - PROTECTED, HIGH INTENSITY
         DC    CL79'IMP/XA ERROR - LASP TO CONSOLE ADDRESS SPACE FAILED+
                - ENTER=RETRY - PF12=CANCEL'
         DC    X'11'              SBA
LASPCIN  DC    X'5CF0'            LAST/INPUT LINE
         DC    X'1DC1'            ATTR BYTE - UNPROT, LOW INTENS, UPDTD
         DC    X'133C404000'      INSERT CURSOR, NULL INPUT LINE
LASPCLEN EQU   *-LASPSTRM         LENGTH OF DUPLICATE DATA STREAM
TGETFLAG DC    X'91'              TGET FLAG BYTE                GP@P6
TGETFLGW EQU   X'81'              TGET ASIS,WAIT FLAG           GP@P6
TGETFLGN EQU   X'91'              TGET ASIS,NOWAIT FLAG         GP@P6
ATTNFLG  DC    X'00'              X'FF' INDICATES ATTN WAS TRAPPED
VIPFLAG  DC    X'40'              X'5C' INDICATES VIP MODE
FULLSCR  DC    X'03'              TPUT FULLSCR,WAIT FLAG
TGETWAIT DC    X'81'              TGET ASIS,WAIT FLAG           GP@P6
VIPWORD  DC    C'GAK'             VIP PASSWORD
R22C1    DC    X'5A50'            3278-2  --  ROW 22, COL 1
R23C1    DC    X'5B60'            3278-2  --  ROW 23, COL 1
R24C1    DC    X'5CF0'            3278-2  --  ROW 24, COL 1
R30C1    DC    X'E450'            3278-3  --  ROW 30, COL 1
R31C1    DC    X'E560'            3278-3  --  ROW 31, COL 1
R32C1    DC    X'E6F0'            3278-3  --  ROW 32, COL 1
R41C1    DC    X'F240'            3278-4  --  ROW 41, COL 1
R42C1    DC    X'F350'            3278-4  --  ROW 42, COL 1
R43C1    DC    X'F460'            3278-4  --  ROW 43, COL 1
PATTERN  DC    X'40202020'        EDIT PATTERN FIELD
DPATTRN  DC    X'4021204B20'      EDIT PATTERN FIELD
STAXLIST STAX  ATTNEXIT,REPLACE=NO,MF=L                         GP@P6
MDSTSUP0 MODESET KEY=ZERO,MODE=SUP,MF=L                         GP@P6
MDSTPROB MODESET KEY=NZERO,MODE=PROB,MF=L                       GP@P6
SPYWTO   WTO   '123456789.123456789.123456789.123456789.123456789.12345+
               6789.1234',MF=L,DESC=(2)                         GP@P6
         ORG   SPYWTO+4                                         GP@P6
WTOMSG   DS    CL64                                             GP@P6
WTODESC  DS    XL2                                              GP@P6
WTOROUT  DS    XL2                                              GP@P6
         ORG
TPUTNOED TPUT  0,0,NOEDIT,WAIT,MF=L
BLANKS   DC    CL160' '
         SPACE 5
***********************************************************************
*                                                                     *
*               327X SCREEN CLEAR CONTROL CHARACTERS                  *
*                                                                     *
***********************************************************************
CLR      DC    X'27F5C113'        ESCAPE, VTAM ERASE/WRITE, WCC, IC
CLRLEN   EQU   *-CLR
CLRALT   DC    X'277EC113'        ESCAPE, VTAM ERASE/WRT ALT, WCC, IC
         SPACE 2
***********************************************************************
*                                                                     *
*               DISPLAY SCREEN - TRAILER SECTION                      *
*                                                                     *
***********************************************************************
TRAILER  EQU   *
         DC    X'11'              SBA
CMDCNTRL DC    X'5A50'                TO ROW 22, COL 1
         DC    X'1DE8'            ATTR BYTE - PROTECTED, HIGH INTENSITY
LASTLINE DC    CL79' '            SYSTEM OPERATOR'S COMMAND INPUT LINE
         DC    X'11'              SBA
PHEADING DC    X'5B60'                TO ROW 23, COL 1
         DC    X'1DE8'            ATTR BYTE - PROTECTED, HIGH INTENSITY
         DC    C'CN('
CONNUM   DC    C'00'
         DC    C')-'
UNIT     DC    C'DEV# '
CTYPE    EQU   *,19
MASTER   DC    CL5' '
SYS      DC    CL4' '
IO       DC    CL4' '
CONS     DC    CL4' '
DECDATE  DC    CL7' '              YY/DDD
DECTIME  DC    CL13' '             HH:MM:SS.SSIM O
         DC    CL1' '
USERID   DC    CL8' '
TERMINAL DC    CL8' '
         DC    CL1' '
FREEZE   DC    C'R'
MODE     DC    C' '
SYSID    DC    CL4' '
DEVX     DC    C'  '              DEVICE TYPE INDEX NUMBER
DEVID    DC    C' 999'            UCM ENTRY IDENTIFIER
ASINKLEN EQU   *-TRAILER          TRAILER SIZE FOR ASYNCH UPDATES
         DC    X'11'              SBA
INPUTADR DC    X'5CF0'                TO ROW 24, COL 1
         DC    X'1D40'            ATTR BYTE - UNPROTECTED, LOW INTENS.
         DC    X'13'              INSERT CURSOR
USERLINE DC    CL13' '            USERS COMMAND INPUT LINE
ERROR    DC    XL32'00'           ERROR MSG FIELD  (NULLS FOR INSERTS)
         DC    X'3C404000'        NULLS TO END        WIDE-SCRN 18NOV99
ENDTRAIL EQU   *
TRAILEN  EQU   ENDTRAIL-TRAILER LENGTH OF TRAILER
         SPACE 2
         LTORG
         SPACE 2
NUMUCMS  DS    H
         DS    0F
UCMTAB   DS    F
         DS    99F                PROVIDE SPACE FOR UP TO CN(99)
UCMTABL  EQU   *-UCMTAB                                         08JUL97
         SPACE 2
ERRMSG1  DC    CL32'ERROR - Console ID invalid      '
ERRMSG2  DC    CL32'ERROR - Non-numeric value       '
ERRMSG3  DC    CL32'ERROR - Invalid command         '
ERRMSG4  DC    CL32'ERROR - Non-CRT console         '
ERRMSG5  DC    CL32'ERROR - Console not active      '
ERRMSG6  DC    CL32'ERROR - Not in command mode     '
         SPACE 2
         DS    0D
         DC    XL6'00'
***********************************************************************
*                                                                     *
*                  DISPLAY SCREEN - HEADER SECTION                    *
*                                                                     *
***********************************************************************
HEADER   EQU   *
         DC    X'F1'              WRITE
WCC      DC    X'C3'              WCC
***********************************************************************
*                                                                     *
*               DISPLAY SCREEN - IMAGE BUFFER SECTION                 *
*                                                                     *
***********************************************************************
BUF      DS    0D                 END OF CSECT
SPYBUFR  COM
         DS    8192X
         EJECT
***********************************************************************
*                                                                     *
*                           D S E C T S                               *
*                                                                     *
***********************************************************************
         PRINT NOGEN
         SPACE 2
         CVT   DSECT=YES
         SPACE 2
         IKJTCB                                                 GP@SECV
         SPACE 2
         IEZJSCB                                                GP@SECV
         SPACE 2
         IHAPSA                                                 GP@SECV
         SPACE 2
         IKJTSB                                                 GP@SECV
         SPACE 2
         IHAASCB                                                GP@SECV
         SPACE 2
         IHAASVT                                                GP@P6
         SPACE 2
         IRAOUCB                                                GP@P6
         PRINT GEN
         EJECT
*****    IEECDCM                                                GP@SECV
         IEETDCM                                                APR2008
         EJECT
         IEECUCM FORMAT=NEW                                     GP@SECV
         EJECT
         IKJPSCB                                                GP@SECV
         END   IMPXASPY
