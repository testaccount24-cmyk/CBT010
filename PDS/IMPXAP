*        COPYRIGHT (C) 1986,1994  PRYCROFT SIX PTY LTD
         TITLE 'PAGE DATA SET MONITOR DISPLAY LINE MAPPING'
PGDSLINE DSECT
PAGENTRY DS    XL(L'LOWX)
PAGEDSN  DS    CL26
PAGDSBAD DS    CL1
PAGETYPE DS    CL3
PGDSDPTH DS    CL4
PGDSXFER DS    CL7
PGDSIORT DS    CL7
         DS    CL1
PAGEDASD DS    CL6
ALCSLOTS DS    CL8
BADSLOTS DS    CL4
USDSLOTS DS    CL7
SLOTUSE  DS    CL4
SLOTPCNT DS    CL1
         TITLE 'PAGE DATA SET MONITOR SUBROUTINE'
IMPXA    CSECT
         USING PAGEDS,R11
PAGEDS   DS    0H
REDOPGDS L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         L     R2,WINBUFF        GET WINDOW BUFFER START ADDRESS.
         SLR   R0,R0             CLEAR FOR DIVIDE.
         ST    R0,WINLINES       INITIALIZE LINE COUNTER.
         DROP  R15               WNDWMNGR.
         SPACE
         MVC   0(LL-79,R2),HIGHX SUPPLY HEADING ATTRIBUTES.
         MVI   8(R2),X'F7'       SHOW HEADING IN WHITE.         (I3279)
         MVI   2(R2),X'F4'       USE UNDERSCORE FOR HEADING.    (I3279)
         MVI   5(R2),X'C4'       SUPPLY UNDERLINE ALSO.         (F9526)
         MVC   LL-79(79,R2),HEADINGP  LOAD HEADING.
         BAS   R14,PADDLINE      LINE NOW COMPLETE.
         L     R5,PARTADDR       POINT TO PAGING ACTIVITY REF. TABLE.
         L     R7,24(,R5)        POINT TO THE PAGE DATA SET NAME LIST.
         LA    R8,80(,R5)        POINT TO THE FIRST PARTE.
         L     R3,IMCOMADR       POINT TO THE IMP/XA COMMON AREA.
         USING IMPXACOM,R3
         LA    R3,PGDSTABL       POINT TO FIRST IMPXA TABLE ENTRY.
         DROP  R3                IMPXACOM.
         SLR   R4,R4             ZERO DATA SET COUNTER.
         ST    R4,TOTLUSE        ZERO TOTAL USED SLOTS.
         ST    R4,TOTLALC        ZERO TOTAL ALLOCATED SLOTS.
         ST    R4,TOTLBAD        ZERO TOTAL BAD SLOTS.
         TIME  BIN               GET TIME-OF-DAY.
         ST    R0,PGCURTIM       SAVE IT.
         MVC   WORK2(4),4(R5)    COPY USED AND UNUSED PARTE COUNT.
         B     FSTPARTE
         USING PGDSLINE,R2
NXTPARTE AH    R8,PARTELEN       POINT TO NEXT PART ENTRY.
         LA    R7,44(,R7)        POINT TO NEXT PAGE DATA SET NAME.
         LA    R3,12(,R3)        POINT TO NEXT COUNTER SAVE AREA ENTRY.
FSTPARTE LA    R4,1(,R4)         INCREMENT USED PARTE COUNTER.
         C     R4,WORK2          END OF USED PART ENTRIES?
         BH    PUTALLPG          YES, SHOW WHAT WE HAVE GOT.
         TM    9(R8),X'80'       IS THIS PARTE IN USE?
         BO    NXTPARTE          NO, GET THE NEXT ONE.
         MVI   PAGEDSN,C' '      BLANK OUT DETAIL LINE.
         MVC   PAGEDSN+1(77),PAGEDSN
         MVC   PAGEDSN,0(R7)     LOAD PAGE DATA SET NAME.
         LH    R1,62(,R8)        LOAD OUTSTANDING I/O REQUEST COUNT.
         CVD   R1,WORK
         MVC   PGDSDPTH,ED3Z     SHOW REQUEST QUEUE DEPTH.
         ED    PGDSDPTH,WORK+6
NOPAGQLN L     R15,28(,R8)       POINT TO FIRST IORB.
         USING IORB,R15
         LM    R0,R1,0(R3)       GET PREVIOUS I/O COUNTERS.
         LM    R9,R10,IORTREQ    GET CURRENT I/O COUNTERS.
         STM   R9,R10,0(R3)      SAVE CURRENT FIGURES.
         SLR   R9,R0             GET PAGE TRANSFER COUNT DIFFERENCE.
         SLR   R10,R1            GET SSCH + RSCH COUNT DIFFERENCE.
         BH    GETXFERT  (IE.BZ) IF ZERO GO GET PAGE TRANSFER RATE.
         DROP  R15               IORB.
         L     R15,PGCURTIM      GET CURRENT TIME.
         S     R15,8(,R3)        SUBTRACT PREVIOUS T-O-D.
         LR    R1,R10            GET I/O COUNT CHANGE.
         M     R0,TENGRAND       2 DEC. PLACES PLUS 2 FOR CENTISECS.
         DR    R0,R15
         CVD   R1,WORK
         MVC   PGDSIORT,=X'402021204B2020'
         ED    PGDSIORT,WORK+5
GETXFERT L     R15,PGCURTIM      GET CURRENT TIME.
         S     R15,8(,R3)        SUBTRACT PREVIOUS T-O-D.
         LTR   R1,R9             GET TRANSFER COUNT CHANGE.
         BZ    SAVETIME
         M     R0,TENGRAND       2 DEC. PLACES PLUS 2 FOR CENTISECS.
         DR    R0,R15
         CVD   R1,WORK
         MVC   PGDSXFER,=X'402021204B2020'
         ED    PGDSXFER,WORK+5
SAVETIME MVC   8(4,R3),PGCURTIM  SAVE CURRENT TIME FOR NEXT TIME.
         NI    MODESW2,255-LFLG  RESET GOOD LOCAL PAGE DATA SET FLAG.
         MVC   PAGENTRY,MEDX     MEDIUM INTENSITY ATTRIBUTES.
         MVC   PAGETYPE,=C'DEL'  TEST FOR PAGE DATA SET BEING DELETED.
         TM    8(R8),X'02'       PAGEDEL DELETE IN PROGRESS?
         BO    GOTPGTYP          YES.
         MVC   PAGETYPE,=C'DRN'  TEST FOR PAGE DATA SET BEING DRAINED.
         TM    8(R8),X'01'       PAGEDEL DRAIN IN PROGRESS?
         BO    GOTPGTYP          YES.
         MVC   PAGENTRY,LOWX     LOW INTENSITY ATTRIBUTES.
         TM    8(R8),X'80'       DETERMINE PAGE DATA SET TYPE.
         BZ    TRYCMN
         MVC   PAGETYPE,=C'LPA'  PLPA PAGE DATA SET.
         TM    8(R8),X'20'       DETERMINE IF DUPLEX.
         BZ    GOTPGTYP
         MVC   PAGETYPE,=C'DUP'  DUPLEX PLPA PAGE DATA SET.
         B     GOTPGTYP
TRYCMN   TM    8(R8),X'40'
         BZ    TRYLCL
         MVC   PAGETYPE,=C'CMN'  COMMON PAGE DATA SET.
         TM    8(R8),X'20'       DETERMINE IF DUPLEX.
         BZ    GOTPGTYP
         MVC   PAGETYPE,=C'DUC'  DUPLEX COMMON PAGE DATA SET.
         B     GOTPGTYP
TRYLCL   TM    8(R8),X'10'
         BZ    UNKNTYPE
         OI    MODESW2,LFLG      TURN ON GOOD LOCAL PAGE DATA SET FLAG.
         MVC   PAGETYPE,=C'LCL'  LOCAL PAGE DATA SET.
         TM    8(R8),X'20'       DETERMINE IF DUPLEX.
         BZ    TRYNVIO
         MVC   PAGETYPE,=C'DUL'  DUPLEX LOCAL PAGE DATA SET.
TRYNVIO  TM    9(R8),X'10'       IS VIO ALLOWED ON THIS PAGE DATA SET?
         BZ    GOTPGTYP          YES.
         MVC   PAGETYPE,=C'LNV'  NO, LOCAL PAGE DATA SET WITH NO VIO.
         TM    8(R8),X'20'       DETERMINE IF DUPLEX.
         BZ    GOTPGTYP
         MVC   PAGETYPE,=C'DUN'  DUPLEX LOCAL NON-VIO PAGE DATA SET.
         B     GOTPGTYP
UNKNTYPE MVC   PAGETYPE,=C'???'  UNKNOWN PAGE DATA SET TYPE.
         TM    8(R8),X'20'       DETERMINE IF DUPLEX.
         BZ    GOTPGTYP
         MVC   PAGETYPE,=C'DU?'  DUPLEX UNKNOWN PAGE DATA SET TYPE.
GOTPGTYP TM    9(R8),X'40'       IS DATA SET FLAGGED AS BAD?
         BZ    NOTBADDS          NO, IT IS USEABLE.
         MVI   PAGDSBAD,C'B'     YES, ASM DETECTED ERRORS.
         MVC   PAGENTRY,HIGHX    HIGH INTENSITY ATTRIBUTES.
         MVI   PAGENTRY+8,X'F2'  RED ATTR BYTE.                 (I3279)
         NI    MODESW2,255-LFLG  RESET GOOD LOCAL PAGE DATA SET FLAG.
NOTBADDS L     R10,44(,R8)       POINT TO THE DATA SET'S UCB.
         USING UCBOB,R10
         MVC   PAGEDASD,UCBVOLI  GET VOLUME SERIAL NUMBER.
         DROP  R10
         L     R1,16(,R8)        GET NUMBER OF SLOTS IN THE DATASET.
         CVD   R1,WORK
         TM    MODESW2,LFLG      IS THIS A GOOD LOCAL (& NOT DUPLEX)?
         BZ    NOTLCL1           NO, DON'T TOTAL COUNTER VALUE.
         LR    R9,R1
         A     R9,TOTLALC        TOTAL ALLOCATED SLOTS.
         ST    R9,TOTLALC
NOTLCL1  MVC   ALCSLOTS,ED7
         ED    ALCSLOTS,WORK+4
         S     R1,20(,R8)        SUBTRACT THE NUMBER OF UNUSED SLOTS
         CVD   R1,WORK               TO GET THE NUMBER OF USED SLOTS.
         TM    MODESW2,LFLG      IS THIS A GOOD LOCAL (& NOT DUPLEX)?
         BZ    NOTLCL2           NO, DON'T TOTAL COUNTER VALUE.
         LR    R9,R1
         A     R9,TOTLUSE        TOTAL USED SLOTS.
         ST    R9,TOTLUSE
NOTLCL2  MVC   USDSLOTS-1(8),ED7
         ED    USDSLOTS-1(8),WORK+4
         M     R0,AHUNDRED       GET
         LA    R1,50(,R1)            SLOT
         D     R0,16(,R8)                 USAGE
         CVD   R1,WORK                          PERCENTAGE.
         MVC   SLOTUSE,ED3
         ED    SLOTUSE,WORK+6
         MVI   SLOTPCNT,C'%'     INDICATE PERCENTAGE.
         L     R1,24(,R8)        GET THE NUMBER OF BAD SLOTS.
         CVD   R1,WORK
         TM    MODESW2,LFLG      IS THIS A GOOD LOCAL (& NOT DUPLEX)?
         BZ    NOTLCL3           NO, DON'T TOTAL COUNTER VALUE.
         A     R1,TOTLBAD        TOTAL BAD SLOTS.
         ST    R1,TOTLBAD
NOTLCL3  MVC   BADSLOTS,ED3
         ED    BADSLOTS,WORK+6
         BAS   R14,PADDLINE      LINE NOW COMPLETE.
         B     NXTPARTE          PROCESS NEXT PART ELEMENT.
PUTALLPG DS    0H
         MVC   PAGENTRY,HIGHX    HIGH INTENSITY ATTRIBUTES.
         MVI   PAGENTRY+2,X'F4'  UNDERSCORE.                    (I3279)
         MVI   PAGENTRY+5,X'C4'  UNDERLINE.                     (F9526)
         MVI   PAGEDSN,C' '      BLANK OUT DETAIL LINE.
         MVC   PAGEDSN+1(77),PAGEDSN
         L     R1,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R1
         L     R1,CVTASMVT       POINT TO THE ASMVT.
         DROP  R1                CVT.
         USING ASMVT,R1
         L     R0,ASMIORQR       GET I/O REQUEST RECEIVED COUNT.
         SL    R0,ASMIORQC       SUBTRACT I/O REQUEST COMPLETED COUNT.
         AL    R0,ASMSWRQR       ADD SWAP REQUEST RECEIVED COUNT.
         SL    R0,ASMSWRQC       SUBTRACT SWAP REQUEST COMPLETED COUNT.
         DROP  R1                ASMVT.
         CVD   R0,WORK           DISPLAY ASM UNCOMPLETED WORK COUNT.
         MVC   PAGEDSN+5(6),ED5
         ED    PAGEDSN+5(6),WORK+5
         MVC   PAGEDSN(5),=C'ASMQ='
         L     R1,TOTLALC        GET THE NUMBER OF ALLOCATED SLOTS.
         CVD   R1,WORK
         MVC   ALCSLOTS,ED7
         ED    ALCSLOTS,WORK+4
         L     R1,TOTLUSE        GET THE NUMBER OF USED SLOTS.
         CVD   R1,WORK
         MVC   USDSLOTS-1(8),ED7
         ED    USDSLOTS-1(8),WORK+4
         M     R0,AHUNDRED       GET
         LA    R1,50(,R1)            SLOT
         D     R0,TOTLALC                 USAGE
         CVD   R1,WORK                          PERCENTAGE.
         MVC   SLOTUSE,ED3
         ED    SLOTUSE,WORK+6
         MVI   SLOTPCNT,C'%'     INDICATE PERCENTAGE.
         ICM   R1,15,TOTLBAD     GET THE TOTAL NUMBER OF BAD SLOTS.
         BZ    BADSLOT0          SUPPRESS TOTAL IF ZERO.
         CVD   R1,WORK
         MVC   BADSLOTS,ED3
         ED    BADSLOTS,WORK+6
BADSLOT0 MVC   PAGEDSN+18(5),=C'TOTAL'
         MVC   PAGETYPE-1(14),=C'(LCL+LNV ONLY)'
         BAS   R14,PADDLINE      LINE NOW COMPLETE.
         DROP  R2                PGDSLINE.
         MVC   0(LL-79,R2),MEDX  MEDIUM INTENSITY.
         MVI   9(R2),C' '        BLANK OUT THE
         MVC   10(78,2),9(2)                   NEXT SCREEN LINE.
         L     R3,RCEADDR        POINT TO RSM CNTRL & ENUMERATION AREA.
         USING RCE,R3
         L     R15,RCEAFC        GET AVAILABLE FRAME COUNT.
         MVC   9(8,R2),ED7
         CVD   R15,WORK
         ED    9(8,R2),WORK+4
         MVC   9(8,R2),10(R2)
         L     R1,PGCURTIM       GET CURRENT TIME.
         S     R1,PGPRVTIM       GET TIME INTERVAL.
         L     R15,RCETOTPI      GET CURRENT NON-VIO PAGE-IN COUNT.
         LR    R14,R15           SAVE IT.
         SL    R15,NPIN          GET COUNT CHANGE.
         ST    R14,NPIN          STORE NEW COUNTER VALUE.
         M     R14,TENGRAND      CENTISECONDS AND 2 DECIMAL PLACES.
         DR    R14,R1            GET RATE.
         MVC   18(7,R2),=X'402021204B2020'
         CVD   R15,WORK
         ED    18(7,R2),WORK+5
         L     R15,RCETOTPO      GET CURRENT NON-VIO PAGE-OUT COUNT.
         LR    R14,R15           SAVE IT.
         SL    R15,NPOUT         GET COUNT CHANGE.
         ST    R14,NPOUT         STORE NEW COUNTER VALUE.
         M     R14,TENGRAND      CENTISECONDS AND 2 DECIMAL PLACES.
         DR    R14,R1            GET RATE.
         MVC   27(7,R2),=X'402021204B2020'
         CVD   R15,WORK
         ED    27(7,R2),WORK+5
         L     R15,RCEVIOPI      GET CURRENT VIO PAGE-IN COUNT.
         LR    R14,R15           SAVE IT.
         SL    R15,VAMI          GET COUNT CHANGE.
         ST    R14,VAMI          STORE NEW COUNTER VALUE.
         M     R14,TENGRAND      CENTISECONDS AND 2 DECIMAL PLACES.
         DR    R14,R1            GET RATE.
         MVC   36(7,R2),=X'402021204B2020'
         CVD   R15,WORK
         ED    36(7,R2),WORK+5
         L     R15,RCEVIOPO      GET CURRENT VIO PAGE-OUT COUNT.
         LR    R14,R15           SAVE IT.
         SL    R15,VAMO          GET COUNT CHANGE.
         ST    R14,VAMO          STORE NEW COUNTER VALUE.
         M     R14,TENGRAND      CENTISECONDS AND 2 DECIMAL PLACES.
         DR    R14,R1            GET RATE.
         MVC   45(7,R2),=X'402021204B2020'
         CVD   R15,WORK
         ED    45(7,R2),WORK+5
         L     R15,RCESWPPI      GET CURRENT SWAP-IN PAGE COUNT.
         LR    R14,R15           SAVE IT.
         SL    R15,SPIN          GET COUNT CHANGE.
         ST    R14,SPIN          STORE NEW COUNTER VALUE.
         M     R14,TENGRAND      CENTISECONDS AND 2 DECIMAL PLACES.
         DR    R14,R1            GET RATE.
         MVC   54(7,R2),=X'402021204B2020'
         CVD   R15,WORK
         ED    54(7,R2),WORK+5
         L     R15,RCESWPPO      GET CURRENT SWAP-OUT PAGE COUNT.
         LR    R14,R15           SAVE IT.
         SL    R15,SPOUT         GET COUNT CHANGE.
         ST    R14,SPOUT         STORE NEW COUNTER VALUE.
         M     R14,TENGRAND      CENTISECONDS AND 2 DECIMAL PLACES.
         DR    R14,R1            GET RATE.
         MVC   63(7,R2),=X'402021204B2020'
         CVD   R15,WORK
         ED    63(7,R2),WORK+5
         L     R15,RCEPAGMV      GET CURRENT PAGE MOVEMENT COUNT.
         LR    R14,R15           SAVE IT. (PAGE MOVED TO OTHER FRAME.)
         SL    R15,NPMOV         GET COUNT CHANGE.
         ST    R14,NPMOV         STORE NEW COUNTER VALUE.
         M     R14,TENGRAND      CENTISECONDS AND 2 DECIMAL PLACES.
         DR    R14,R1            GET RATE.
         MVC   72(7,R2),=X'402021204B2020'
         CVD   R15,WORK
         ED    72(7,R2),WORK+5
         L     R15,RCETOTRC      GET RECLAIMED PAGE COUNT.
         LR    R14,R15           SAVE IT.
         SL    R15,NPREC         GET COUNT CHANGE.
         ST    R14,NPREC         STORE NEW COUNTER VALUE.
         M     R14,TENGRAND      CENTISECONDS AND 2 DECIMAL PLACES.
         DR    R14,R1            GET RATE.
         MVC   81(7,R2),=X'402021204B2020'
         CVD   R15,WORK
         ED    81(7,R2),WORK+5
         MVC   PGPRVTIM,PGCURTIM CURRENT TIME IS NOW PREVIOUS TIME.
         BAS   R14,PADDLINE      LINE NOW COMPLETE.
         DROP  R3                RCE.
         MVC   0(LL-79,R2),MEDX  MEDIUM INTENSITY.
         MVC   LL-79(79,R2),PTRAILER
         BAS   R14,PADDLINE      LINE NOW COMPLETE.
         BAS   R1,SYSUMMRY       PRODUCE & SHOW SYSTEM SUMMARY LINE.
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         LA    R1,1
         A     R1,WINLINES       INCREMENT LINE COUNTER.
         ST    R1,WINLINES
         MVC   0(2,R2),FFFF+2    SET FINAL LINE FLAG FOR WINDOW DATA.
         DROP  R15               WNDWMNGR.
PUTSCRNP LA    R0,LL             MAKE REGISTER 0 POSITIVE FOR OUTPUT.
GETSCRNP L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         BASR  R14,R15           CALL WINDOW MANAGER.
         CLI   DOWNCNTR,C' '     ARE WE IN AUTO REFRESH MODE?
         BH    REDOPGDS          YES, BRANCH TO NEW PARTE LOGIC.
         CLI   INCHARS,C' '      CONTINUE REQUESTED?
         BE    REDOPGDS          YES, START OVER.
GIVEHLPP MVC   INBUFF(8),SBLST   REQUEST SUBCOMMAND LIST FROM TUTORIAL.
         MVI   TGETLEN+1,8       SUPPLY LENGTH OF INPUT TO PARSE.
         LNR   R0,R11            MAKE REGISTER 0 NEGATIVE FOR PARSE.
         B     GETSCRNP          GO DISPLAY HELP PANEL.
         SPACE
PADDLINE TR    LL-79(79,R2),XLATETBL
         LA    R2,LL(,R2)        ADJUST BUFFER POINTER.
         L     R15,WINMANAD      POINT TO THE WINDOW MANAGER.
         USING WNDWMNGR,R15
         LA    R0,1
         A     R0,WINLINES       INCREMENT LINE COUNTER.
         ST    R0,WINLINES
         MVC   0(2,R2),WINFULL   PREPARE FOR FULL WINDOW.
         C     R2,WINEND         SEE IF THE BUFFER IS FULL YET.
         BNL   PUTSCRNP          IF YES, THEN FORGET SUMMARY LINE.
         BR    R14
         SPACE
         DROP  R11,R15           PAGEDS, WNDWMNGR.
         TITLE 'PAGE DATASET MONITOR - VARIABLES AND CONSTANTS'
TOTLALC  DC    F'0'
TOTLBAD  DC    F'0'
TOTLUSE  DC    F'0'
SAVEALC  DC    F'0'
FREESLOT DC    F'0'
PGCURTIM DC    F'0'
PGPRVTIM DC    F'0'
NPIN     DC    F'0'
NPOUT    DC    F'0'
VAMI     DC    F'0'
VAMO     DC    F'0'
VAMR     DC    F'0'
SPIN     DC    F'0'
SPOUT    DC    F'0'
NPREC    DC    F'0'
NPMOV    DC    F'0'
PTRAILER DC    CL79'    AFC  PG-IN/S  PG-OT/S  VIOIN/S  VIOOT/S  SW-PI/+
               S  SW-PO/S  MOVES/S  RECLM/S'
HEADINGP DC    CL79'   PAGE DATA SET NAME      TYP QLN XFR-RT I/O-RT VO+
               LUME   ALLOC ERROR USED FULL'
         SPACE
         LTORG
         SPACE
         DS    0H
