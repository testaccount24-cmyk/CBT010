IMCFLIST CSECT
IMCFLIST AMODE 31
IMCFLIST RMODE ANY

*********************************************************************
*                                                                   *
*        Function: This module invokes XES services to obtain       *
*                  various coupling facility information.           *
*                                                                   *
*        Entry point : IMCFLIST                                     *
*                                                                   *
*        Input registers:                                           *
*          R0: N/A                                                  *
*          R1: Address of caller's parameter list pointer           *
*          R2-12: N/A                                               *
*          R13: Address of register save area                       *
*          R14: Return address                                      *
*          R15: Entry point address                                 *
*                                                                   *
*        Output registers:                                          *
*          R0-14: Same as on entry                                  *
*          R15: Return code                                         *
*               0 - IMCFLIST completed successfully                 *
*              12 - IMCFLIST parameter list error                   *
*              16 - IMCFLIST internal error                         *
*              20 - Structure not defined in CFRM policy            *
*              24 - Error accessing or reading CFRM policy          *
*              28 - No coupling facilities defined in CFRM policy   *
*                                                                   *
*        Register usage(internal):                                  *
*          R0-11: Work registers                                    *
*          R12: Base register                                       *
*          R13: Address of workarea                                 *
*          R14-15: Work and linkage registers                       *
*                                                                   *
*                                                                   *
*        Upon invocation of this routine, the caller must pass      *
*        the following parameter list:                              *
*                                                                   *
*        PARMLIST DS   0CL20                                        *
*        PARM1    DS   CL16 (structure name or blank)               *
*        PARM2    DS   A    (return information table address)      *
*                                                                   *
*        PARM1 is an input parameter and requests either            *
*        general information about all coupling facilities in the   *
*        sysplex or detailed information about a specified          *
*        stucture.  If coupling facility information is requested,  *
*        PARM1 must contain 16 blanks.  If structure information    *
*        is requested, the structure name may be a maximum length   *
*        of 16 and must be left left-justified and blank padded on  *
*        the right.                                                 *
*                                                                   *
*        PARM2 is an output parameter and contains the address of   *
*        the return information table that this routine acquires.   *
*        Storage for the table is acquired in E(PVT), subpool 130,  *
*        and the caller's psw key.  It is the caller's              *
*        responsibility to free storage for the table when finished *
*        with its use.  The format of the information table is      *
*        as follows:                                                *
*                                                                   *
*        INFTCD1  DS    0D      Format 1 - structure request        *
*        TCD1SIZE DS    F       Total table size                    *
*        TCD1FLG1 DS    XL1     Structure type flag                 *
*        LISTSTR  EQU   X'80'   List structure                      *
*        LOCKSTR  EQU   X'40'   Lock structure                      *
*        CACHESTR EQU   X'20'   Cache structure                     *
*        UNKNWSTR EQU   X'10'   Unknown type (not allocated)        *
*        TCD1FLG2 DS    XL1     Structure status flag               *
*        STRALOC  EQU   X'80'   Structure "allocated"               *
*        STRNALOC EQU   X'40'   Structure "not allocated"           *
*                 DS    XL2     Reserved                            *
*        TCD1CFNM DS    CL8     Structure coupling facility name    *
*        TCD1CNNM DS    CL16    Connector name                      *
*        TCD1SYSN DS    CL8     System name                         *
*        TCD1JOBN DS    CL8     Connecting jobname                  *
*        TCD1FLG3 DS    XL1     Connector status flag               *
*        CONACTV  EQU   X'80'   Connector "active"                  *
*        CONFAILP EQU   X'40'   Connector "failed persistent"       *
*        CONFAILG EQU   X'20'   Connector "failing"                 *
*        CONDISCN EQU   X'10'   Connector "disconnecting"           *
*                 DS    XL3     Reserved                            *
*        TCD1ASIZ DS    F       Allocated structure size 1k blocks  *
*        TCD1USIZ DS    F       Used structure size 1k blocks       *
*                               (list or lock, not valid for cache) *
*                               (If TCD1USIZ=0, then < 1k)          *
*        TCD1ELC  DS    F       # list elements or lock record data *
*                               elements available or cache entry   *
*                               count                               *
*        TCD1ELU  DS    F       # list elements or lock record data *
*                               elements used                       *
*        TCD1ENTA DS    F       # list entries available            *
*        TCD1ENTU DS    F       # list entries currently used       *
*        TCD1LKTA DS    F       # lock table entries available      *
*        TCD1LKTU DS    F       # lock table entries used           *
*        TCD1LKCT DS    F       # total lock contention requests    *
*        TCD1LKCF DS    F       # false lock contention requests    *
*        TCD1DEC  DS    F       Cache directory entry count         *
*        TCD1MXSC DS    XL1     Maximum cache storage class value   *
*        TCD1MXCC DS    XL2     Maximum cache castout class value   *
*        TCD1CNR# DS    F       Structure # connectors (32 maximum) *
*        TCD1CNRA EQU   *       Connectors area (32 maximum)        *
*                                                                   *
*        INFTCD2  DS    0D   Format 2 - coupling facility request   *
*        TCD2SIZE DS    F    Total table length                     *
*        TCD2CFR# DS    F    Number of CF records (10 maximum)      *
*        TCD2CFRL DS    F    CF record length                       *
*        TCD2CNRA EQU   *    CF records area (10 maximum)           *
*                                                                   *
*        Note that PARM1 and PARM2 must both be provided.           *
*                                                                   *
*        Environment: Amode 31, rmode any, supervisor state,        *
*                     psw key 0.                                    *
*                                                                   *
*                                                                   *
*        Author: Bob Break                                          *
*                                                                   *
*********************************************************************
*********************************************************************

***********************************************************************
*                                                                     *
*        Initialization.                                              *
*                                                                     *
***********************************************************************

R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15

         USING PSA,0
IMCF0000 BAKR  R14,0                    Save caller's environment
         LR    R12,R15                  Set base register
         USING IMCF0000,R12               and addressability
         B     IMCF0001                 Branch around module identifier
         DC    CL8'IMCFLIST'            Module name
         DC    C'&SYSDATE'              Assembly date
         DC    C'VERS01'                Version
IMCF0001 DS    0H
         MODESET MODE=SUP               Set supervisor state
         IPK   0(0)                     Get caller's psw key
         SPKA  0(0)                     Set psw key 0
         LA    R0,WORKSIZE              Get workarea size
         STORAGE OBTAIN,LENGTH=(R0),LOC=ANY
         LR    R3,R1                    Save workarea pointer
         LR    R14,R3                   Get pointer into work register
         LA    R15,WORKSIZE             Set move to length
         XR    R1,R1                    Set move from length and pad
         MVCL  R14,R0                   Clear workarea
         ST    R3,8(,R13)               Chain save areas
         ST    R13,4(,R3)               *
         LR    R13,R3                   Set workarea pointer
         USING WORKAREA,R13
         EREG  R0,R1                    Restore entry registers 0-1
         L     R1,0(,R1)                Point to input parm list
         ST    R1,PARMPTR               Save parm list pointer
         STC   R2,CALLKEY               Save caller's psw key

***********************************************************************
*                                                                     *
*        Extract the input parameters.                                *
*                                                                     *
***********************************************************************

IMCF0010 CLC   0(16,R1),=CL16' '         CF information request?
         BE    IMCF0011                  Yes - branch, continue
         MVC   STRNAME,0(R1)             Save structure name
         OC    STRNAME,=CL16' '          Assure str name is upper case
         L     R15,=A(IMCF0100)          Get str processing address
         BALR  R14,R15                   Branch - processs str request
         B     IMCFRET                   Branch - return
IMCF0011 L     R15,=A(IMCF0500)          Get CF processing address
         BALR  R14,R15                   Branch - process cf request
         B     IMCFRET                   Branch - return

***********************************************************************
*                                                                     *
*        Return to caller.                                            *
*                                                                     *
***********************************************************************

IMCFRET  L     R2,RETCODE                Get return code
         LA    R0,WORKSIZE               Get workarea size
         LR    R1,R13                    Get workarea pointer
         STORAGE RELEASE,LENGTH=(R0),ADDR=(R1)
         LR    R15,R2                    Set return code
         PR                              Return to caller

         LTORG


*********************************************************************
*********************************************************************
*                                                                   *
*        IMCF0100 - Invoke XCF/XES services to obtain information   *
*                   about the specified structure.                  *
*                                                                   *
*        Register usage:                                            *
*                                                                   *
*        Input           Output           Internal                  *
*        -----           ------           --------                  *
* R0-11  N/A             Unchanged        Work                      *
* R12    N/A             Unchanged        Base register             *
* R13    Workarea        Unchanged        Workarea                  *
* R14    BALR address    Return address   Work                      *
* R15    N/A             Unchanged        Work                      *
*                                                                   *
*        Environment - Internal IMCFLIST routine.  Invoked by BALR. *
*                                                                   *
*********************************************************************
*********************************************************************

IMCF0100 DS    0H
         BAKR  R14,0                Save caller's environment
         LR    R12,R15              Set up base register
         USING IMCF0100,R12           and addressability
         L     R1,=F'4096'          Get answer area length
IMCF0101 ST    R1,ANSWERL1          Set answer area length
         STORAGE OBTAIN,LENGTH=(R1),BNDRY=PAGE,LOC=ANY
         ST    R1,ANSWERA1          Save answer area address
         LR    R2,R1                Set area pointer in work register
         USING QUAHDR,R2
         MVC   IXCQWRK(IXCQLL1),IXCQLST1  Move IXCQUERY parm list
         IXCQUERY REQINFO=STR,      Request structure information      X
               STRNAME=STRNAME,     Structure name                     X
               ANSAREA=(R2),        Answer area                        X
               ANSLEN=ANSWERL1,     Answer area length                 X
               MF=(E,IXCQWRK)
         LTR   R15,R15              IXCQUERY successful?
         BZ    IMCF0140             Yes - branch, continue
         C     R15,=F'4'            IXCQUERY rc=4?
         BNE   IMCF0110             No - branch, continue
         CLC   QUAHTLEN,ANSWERL1    Answer area large enough?
         BNH   IMCF0130             Branch - internal error
         L     R3,QUAHTLEN          Get required answer area length
         L     R0,ANSWERL1          Get answer area length
         L     R1,ANSWERA1          Get answer area address
         STORAGE RELEASE,ADDR=(R1),LENGTH=(R0)
         LR    R1,R3                Reset required answer area length
         B     IMCF0101             Loop back to issue IXCQUERY again
IMCF0110 C     R15,=F'8'            IXCQUERY rc=8?
         BNE   IMCF0120             No - branch, continue
         LA    R1,QUAARSNSTRNOTFOUND  Was specified structure name
         CR    R0,R1                    defined in active CFRM policy?
         BNE   IMCF0130             No - branch, internal error
         MVC   RETCODE,=F'20'       Set error return code
         B     IMCF0160             Branch - continue
IMCF0120 C     R15,=F'12'           IXCQUERY rc=12?
         BNE   IMCF0130             No - branch, continue
         LA    R1,QUAARSNNOCFRMDSN  Get system access to CFRM code
         CR    R0,R1                System able to access CFRM?
         BNE   IMCF0121             Yes - branch, continue
         MVC   RETCODE,=F'24'       Set error return code
         B     IMCF0160             Branch - continue
IMCF0121 LA    R1,QUAARSNNOCFRMPOL  Get active CFRM policy code
         CR    R0,R1                Is there an active CFRM policy?
         BNE   IMCF0122             Yes - branch, continue
         MVC   RETCODE,=F'24'       Set error return code
         B     IMCF0160             Branch - continue
IMCF0122 LA    R1,QUAARSNFAILCFRMREAD  Get CFRM read failure code
         CR    R0,R1                CFRM read fail?
         BNE   IMCF0130             No - branch, continue
         MVC   RETCODE,=F'24'       Set error return code
         B     IMCF0160             Branch - continue
IMCF0130 MVC   RETCODE,=F'16'       Set error return code
         B     IMCF0160             Branch - continue
IMCF0140 ICM   R15,15,QUAH#REC      Get # structure records
         BZ    IMCF0142             No records - branch
         L     R1,QUAHSGOF          Get first structure record offset
         DROP  R2                   QUAHDR
         ALR   R2,R1                Point to first structure record
         USING QUASTR,R2
IMCF0141 CLC   QUASTRNAME,STRNAME   Structure name match?
         BE    IMCF0150             Yes - branch, continue
         TM    QUASTRTYP,QUATYPSTR_LAST  Last structure record?
         BO    IMCF0142             Yes - branch, error
         LH    R1,QUASTRLEN         Get structure record length
         ALR   R2,R1                Point to next structure record
         B     IMCF0141             Loop back to check next str rec
IMCF0142 MVC   RETCODE,=F'16'       Set error return code
         B     IMCF0160             Branch - continue
IMCF0150 MVC   STRSTAT,QUASTRSTATE  Save structure state flags
         MVC   STRINHDW,QUASTRINHDW  Save CF structure state flag
         TM    QUASTRINHDW,QUASTRINHDWON  Structure allocated?
         BZ    IMCF0160             No - branch, continue
         ICM   R15,15,QUASTRCF#     Get # coupling facility records
         BZ    IMCF0160             Branch - no CF records
         L     R3,QUASTRCFO         Get first CF record offset
         ALR   R3,R2                Point to first CF record
         USING QUASTRCF,R3
IMCF0151 TM    QUASTRCFFLG,QUASTRCFACT  Structure active in this CF?
         BZ    IMCF0152             No - branch, continue
         MVC   STRCFNAM,QUASTRCFNAME  Save structure CF name
         B     IMCF0153             Branch - continue
         TM    QUASTRCFTYP,QUATYPSTRCF_LAST  Last CF record?
         BO    IMCF0160             Yes - branch, continue
IMCF0152 LH    R1,QUASTRCFLEN       Get CF record length
         ALR   R3,R1                Point to next CF record
         B     IMCF0151             Loop back to check next CF record
         DROP  R3                   QUASTRCF
IMCF0153 ICM   R15,15,QUASTRUSER#   Get # structure connector records
         BZ    IMCF0160             Branch - no connector records
         MVC   STRCN#,QUASTRUSER#   Set #  connectors
         L     R3,QUASTRUSERO       Get first connector record offset
         ALR   R3,R2                Point to first connector record
         USING QUASTRUSER,R3
         LA    R15,STRCONNR         Point to connector records area
         USING STRCONN,R15
IMCF0154 MVC   STRCNNAM,QUASTRUSERCNAME  Save connect name
         MVC   STRCNSYS,QUASTRUSERSYS  Save connect system name
         MVC   STRCNJOB,QUASTRUSERJOB  Save connect jobname
         MVC   STRCNFL1,QUASTRUSERFLG1  Save connect flag # 1
         MVC   STRCNFL2,QUASTRUSERFLG2  Save connect flag # 1
         TM    QUASTRUSERTYP,QUATYPSTRU_LAST  Last connector record?
         BO    IMCF0160             Yes - branch, continue
IMCF0155 LH    R1,QUASTRUSERLEN     Get connector record length
         ALR   R3,R1                Point to next connector record
         LA    R15,STRCONNL(,R15)   Point to next record save area
         B     IMCF0154             Loop back to check next record
         DROP  R15                  STRCONN
         DROP  R3                   QUASTRUSER
IMCF0160 L     R0,ANSWERL1          Get answer area length
         L     R1,ANSWERA1          Get answer area address
         STORAGE RELEASE,ADDR=(R1),LENGTH=(R0)
         DROP  R2                   QUASTR
         CLC   RETCODE,=F'0'        Any errors previously detected?
         BNE   IMCF0499             Branch - return
         TM    STRINHDW,QUASTRINHDWON  Structure allocated?
         BZ    IMCF0190             No - branch, continue
IMCF0170 L     R1,=F'4096'          Get data area length
IMCF0171 ST    R1,DATAL1            Set data area length
         STORAGE OBTAIN,LENGTH=(R1),BNDRY=PAGE,SP=253,LOC=ANY
         ST    R1,DATAA1            Save data area address
         LR    R2,R1                Set area pointer in work register
         USING IXLYAMDAREA,R2
         MVC   IXLMGWRK(IXLMGLL1),IXLMGLS1  Move IXLMG parm list
         IXLMG CFNAME=STRCFNAM,     Coupling facility name             X
               DATAAREA=(R2),       Data area                          X
               DATALEN=DATAL1,      Data area length                   X
               MF=(E,IXLMGWRK)
         LTR   R15,R15              IXLMG successful?
         BZ    IMCF0172             Yes - branch, continue
         C     R15,=F'4'            IXLMG rc=4?
         BNE   IMCF0179             No - branch, internal error
         CLC   IXLYAMDAREA_TLEN,DATAL1  Data area large enough?
         BNH   IMCF0179             Yes - branch, internal error
         L     R3,IXLYAMDAREA_TLEN  Get required data area length
         L     R0,DATAL1            Get data area length
         L     R1,DATAA1            Get data area address
         STORAGE RELEASE,ADDR=(R1),LENGTH=(R0),SP=253
         LR    R1,R3                Reset required data area length
         B     IMCF0171             Loop back to issue IXLMG again
IMCF0172 ICM   R3,15,IXLYAMDAREA_CFENT@  Get CF entry address
         BZ    IMCF0179             Branch - internal error
         USING IXLYAMDCF,R3
         ICM   R4,15,IXLYAMDCF_STR@  Get first structure record
         BZ    IMCF0179             Branch - internal error
         DROP  R3                   IXLYAMDCF
         USING IXLYAMDHD,R4
IMCF0173 TM    IXLYAMDHD_TYPE,IXLYAMDA_TYPESTRC  Cache structure entry?
         BO    IMCF0176             Yes - branch, continue
         PUSH  USING                Save IXLYAMDHD addressability
         USING IXLYAMDSTRL,R4
         CLC   IXLYAMDSTRL_STRNAME,STRNAME  Structure name match?
         BNE   IMCF0178             No - branch, get next entry
         TM    IXLYAMDSTRL_TTY,IXLYAMDA_LOCK  Lock structure entry?
         BNO   IMCF0174             No - branch, must be list entry
         OI    STRTYPE,LOCKSTR      Set lock structure indicator
         MVC   STR#ELA,IXLYAMDSTRL_MLSEC  Set # lock elements available
         MVC   STR#ELU,IXLYAMDSTRL_LSEC  Set # lock elements used
         MVC   STRLKCHR,IXLYAMDSTRL_LTECH  Set lock table entry char.
         MVC   STR#LKTA,IXLYAMDSTRL_NLE  Set # lock table entries avail
         MVC   STR#LKTU,IXLYAMDSTRL_NLTEC Set # lock table entries used
         MVC   STR#LKCT,IXLYAMDSTRL_CONTCT Set total contention req. #
         MVC   STR#LKCF,IXLYAMDSTRL_FCONTCT Set false contention req. #
         B     IMCF0175             Branch - continue
IMCF0174 OI    STRTYPE,LISTSTR      Set list structure indicator
         MVC   STRDECHR,IXLYAMDSTRL_LELX  Set list element char.
         MVC   STR#ELU,IXLYAMDSTRL_LSELC  Set # list elements in use
         MVC   STR#ELA,IXLYAMDSTRL_MLSELC Set # list elements available
         MVC   STR#ENTU,IXLYAMDSTRL_LSEC  Set # list entries in use
         MVC   STR#ENTA,IXLYAMDSTRL_MLSEC  Set # list entries available
IMCF0175 MVC   STRDFLAG,IXLYAMDSTRL_DATAFLAGS  Set str control flag
         MVC   STRASIZE,IXLYAMDSTRL_SS  Set allocated structure size
         MVC   STRCSIZE,IXLYAMDSTRL_MRSS  Set structure control size
         MVC   STRDSIZE,IXLYAMDSTRL_DTS  Set structure dump table size
         MVC   STRSTFLG,IXLYAMDSTRL_STFLAGS  Set structure status flag
         B     IMCF0180             Branch - continue
         DROP  R4                   IXLYAMDSTRL
         USING IXLYAMDSTRC,R4
IMCF0176 CLC   IXLYAMDSTRC_STRNAME,STRNAME  Structure name match?
         BNE   IMCF0178             No - branch, get next entry
         MVC   STRDFLAG,IXLYAMDSTRC_DATAFLAGS  Set str control flag
         OI    STRTYPE,CACHESTR     Set cache structure indicator
         MVC   STRDECHR,IXLYAMDSTRC_DAEX  Set data element char.
         MVC   STRSCMAX,IXLYAMDSTRC_MSCV  Set max. storage class value
         MVC   STRCCMAX,IXLYAMDSTRC_MCCV  Set max. castout class value
         MVC   STR#ELC,IXLYAMDSTRC_TDAEC  Set data element count
         MVC   STR#DEC,IXLYAMDSTRC_TDEC  Set directory entry count
         MVC   STRASIZE,IXLYAMDSTRC_SS  Set allocated structure size
         MVC   STRCSIZE,IXLYAMDSTRC_MRSS  Set structure control size
         MVC   STRDSIZE,IXLYAMDSTRC_DTS  Set structure dump table size
         MVC   STRSTFLG,IXLYAMDSTRC_BITS Set structure status bits
         B     IMCF0180             Branch - continue
         DROP  R4                   IXLYAMDSTRC
         POP   USING                Restore IXLYAMDHD addressability
IMCF0178 ICM   R4,15,IXLYAMDHD_NEXT  Get next structure entry address
         BNZ   IMCF0173             Loop back to check next structure
IMCF0179 MVC   RETCODE,=F'16'       Set error return code
         DROP  R4                   IXLYAMDHD
IMCF0180 L     R0,DATAL1            Get data area length
         L     R1,DATAA1            Get data area address
         STORAGE RELEASE,ADDR=(R1),LENGTH=(R0),SP=253
         DROP  R2                   IXLYAMDAREA
         CLC   RETCODE,=F'0'        Any errors detected so far?
         BNE   IMCF0499             Branch - return
IMCF0190 LA    R0,(TCD1CNRA-INFTCD1)  Calculate partial INFTCD1 length
         LA    R1,TCD1CNRL          Get connector record length
         MH    R1,=H'32'            Times maximum number connectors
         ALR   R0,R1                Calculate total INFTCD1 length
         LR    R3,R0                Save INFTCD1 length
         IC    R5,CALLKEY           Get caller's psw key
         STORAGE OBTAIN,LENGTH=(R0),SP=130,KEY=(R5),LOC=ANY
         ST    R1,INFTABP           Save table pointer
         LR    R11,R1               Set table pointer
         LR    R14,R1               Get pointer into work register
         LR    R15,R3               Set move to length
         XR    R1,R1                Set move from length and pad
         MVCL  R14,R0               Clear table
         USING INFTCD1,R11
         ST    R3,TCD1SIZE          Set INFTCD1 size in table
         L     R1,PARMPTR           Get input parameter list pointer
         ST    R11,16(,R1)          Set table address for caller
         TM    STRINHDW,QUASTRINHDWON  Structure allocated?
         BO    IMCF0191             Yes - branch, continue
         OI    TCD1FLG1,UNKNWSTR    Set unknown structure type flag
         MVC   TCD1CFNM,=8C'*'      Set unknown CF name
         OI    TCD1FLG2,STRNALOC    Set "not allocated" flag
         B     IMCF0192             Branch - continue
IMCF0191 MVC   TCD1FLG1,STRTYPE     Set structure type flag
         MVC   TCD1CFNM,STRCFNAM    Set CF name
         OI    TCD1FLG2,STRALOC     Set "allocated" flag
         MVC   TCD1CNR#,STRCN#      Set # connectors
IMCF0192 CLC   STRCN#,=F'0'         Any connectors?
         BZ    IMCF0200             No - branch, continue
         LA    R2,STRCONNR          Point to connector records area
         USING STRCONN,R2
         L     R3,STRCN#            Get # connector records
         LA    R10,TCD1CNRA         Point to connector records area
         USING TCD1CNR,R10
IMCF0193 MVC   TCD1CNNM,STRCNNAM    Set connection name
         MVC   TCD1SYSN,STRCNSYS    Set connection system
         MVC   TCD1JOBN,STRCNJOB    Set connection jobname
         TM    STRCNFL1,QUASTRUSERACT  Is connection active?
         BZ    IMCF0194             No - branch, continue
         OI    TCD1FLG3,CONACTV     Set active flag
         B     IMCF0199             Branch - continue
IMCF0194 TM    STRCNFL1,QUASTRUSERFAIL  Failed persistent?
         BZ    IMCF0195             No - branch, continue
         OI    TCD1FLG3,CONFAILP    Set failed persistent flag
         B     IMCF0199             Branch - continue
IMCF0195 TM    STRCNFL1,QUASTRUSERTERM  Connection failing?
         BZ    IMCF0196             No - branch, continue
         OI    TCD1FLG3,CONFAILG    Set failing flag
         B     IMCF0199             Branch - continue
IMCF0196 TM    STRCNFL1,QUASTRUSERDISC  Connection disconnecting?
         BZ    IMCF0199             No - branch, continue
         OI    TCD1FLG3,CONDISCN    Set disconnecting flag
IMCF0199 LA    R2,STRCONNL(,R2)     Point to next connector area
         LA    R10,TCD1CNRL(,R10)   Bump to next connector record
         BCT   R3,IMCF0193          Loop back for next record
         DROP  R2,R10               STRCONN, TCD1CNR
IMCF0200 TM    STRINHDW,QUASTRINHDWON  Structure allocated?
         BZ    IMCF0499             No - branch, continue
         L     R1,STRASIZE          Get allocated size (4k blocks)
         SLL   R1,2                 Convert size to 1k blocks
         ST    R1,TCD1ASIZ          Set allocated structure size
         TM    STRTYPE,LOCKSTR      Lock structure?
         BO    IMCF0210             Yes - branch, continue
         TM    STRTYPE,CACHESTR     Cache structure?
         BO    IMCF0250             Yes - branch, continue
         TM    STRDFLAG,IXLYAMDSTRL_VALID  List control info valid?
         BZ    IMCF0499             No - branch, return
         LA    R15,1                Init element size multiplier = 1
         XR    R1,R1                Clear R1 for ICM
         ICM   R1,1,STRDECHR        Get list characteristic
         BZ    IMCF0202             Branch - characteristic = zero
IMCF0201 MH    R15,=H'2'            Reset element size multiplier
         BCT   R1,IMCF0201          Loop back for next power of 2
IMCF0202 MH    R15,=H'256'          Calculate element size
         L     R1,STR#ELU           Get count of used elements
         XR    R0,R0                Clear R0 for multiply
         MR    R0,R15               Calculate used storage (in bytes)
         TM    STRSTFLG,IXLYAMDSTRL_ST_AI  Adjunct areas present?
         BZ    IMCF0203             No - branch, continue
         L     R15,STR#ENTU         Get count of used entries
         MH    R15,=H'64'           Multiply by adjunct area size
         ALR   R1,R15               Add to total
IMCF0203 XR    R0,R0                Clear R0 for divide
         D     R0,=F'1024'          Convert to 1k blocks
         TM    STRDFLAG,IXLYAMDSTRL_DTSVALID  Dump table info valid?
         BZ    IMCF0204             No - branch, continue
         L     R15,STRDSIZE         Get dump table size (4k blocks)
         MH    R15,=H'4'            Convert to 1k blocks
         ALR   R1,R15               Add dump space to total used
IMCF0204 ST    R1,TCD1USIZ          Set used structure size
IMCF0210 TM    STRTYPE,LOCKSTR      Lock structure?
         BO    IMCF0220             Yes - branch, continue
         MVC   TCD1ELC,STR#ELA      Set # available list elements
         MVC   TCD1ELU,STR#ELU      Set # used list elements
         MVC   TCD1ENTA,STR#ENTA    Set # available list entries
         MVC   TCD1ENTU,STR#ENTU    Set # used list entries
         B     IMCF0499             Branch - return
IMCF0220 MVC   TCD1LKTA,STR#LKTA    Set # available lock table entries
         MVC   TCD1LKTU,STR#LKTU    Set # used lock table entries
         MVC   TCD1ELC,STR#ELA      Set # available
*                                   lock record data elements
         MVC   TCD1ELU,STR#ELU      Set # used
*                                   lock record data elements
         MVC   TCD1LKCT,STR#LKCT    Set # lock table
*                                   total contention requests
         MVC   TCD1LKCF,STR#LKCF    Set # lock table
*                                   false contention requests
         B     IMCF0499             Branch - return
IMCF0250 TM    STRDFLAG,IXLYAMDSTRC_VALID  Cache control info valid?
         BZ    IMCF0499             No - branch, return
         MVC   TCD1ELC,STR#ELC      Set data element count
         MVC   TCD1DEC,STR#DEC      Set directory entry count
         MVC   TCD1MXSC,STRSCMAX    Set max. number of storage classes
         MVC   TCD1MXCC,STRCCMAX    Set max. number of castout classes
         B     IMCF0499             Branch - return

IMCF0499 PR                         Restore environment & return

         DROP  R11,R12              INFTCD1, IMCF0100 base

         IXCQUERY MF=(L,IXCQLST1)    IXCQUERY parm list
IXCQLL1  EQU   *-IXCQLST1

         IXLMG MF=(L,IXLMGLS1)       IXLMG parm list
IXLMGLL1 EQU   *-IXLMGLS1


*********************************************************************
*********************************************************************
*                                                                   *
*        IMCF0500 - Invoke XCF/XES services to obtain coupling      *
*                   facility information.                           *
*                                                                   *
*        Register usage:                                            *
*                                                                   *
*        Input           Output           Internal                  *
*        -----           ------           --------                  *
* R0-11  N/A             Unchanged        Work                      *
* R12    N/A             Unchanged        Base register             *
* R13    Workarea        Unchanged        Workarea                  *
* R14    BALR address    Return address   Work                      *
* R15    N/A             Unchanged        Work                      *
*                                                                   *
*        Environment - Internal IMCFLIST routine.  Invoked by BALR. *
*                                                                   *
*********************************************************************
*********************************************************************

IMCF0500 DS    0H
         BAKR  R14,0                Save caller's environment
         LR    R12,R15              Set up base register
         USING IMCF0500,R12           and addressability
         L     R1,=F'4096'          Get answer area length
IMCF0501 ST    R1,ANSWERL1          Set answer area length
         STORAGE OBTAIN,LENGTH=(R1),BNDRY=PAGE,LOC=ANY
         ST    R1,ANSWERA1          Save answer area address
         LR    R2,R1                Set area pointer in work register
         USING QUAHDR,R2
         MVC   IXCQWRK(IXCQLL2),IXCQLST2  Move IXCQUERY parm list
         IXCQUERY REQINFO=CF_ALLDATA,  Request coupling facility info  X
               ANSAREA=(R2),        Answer area                        X
               ANSLEN=ANSWERL1,     Answer area length                 X
               MF=(E,IXCQWRK)
         LTR   R15,R15              IXCQUERY successful?
         BZ    IMCF0520             Yes - branch, continue
         C     R15,=F'4'            IXCQUERY rc=4?
         BNE   IMCF0510             No - branch, continue
         CLC   QUAHTLEN,ANSWERL1    Answer area large enough?
         BNH   IMCF0513             Branch - internal error
         L     R3,QUAHTLEN          Get required answer area length
         L     R0,ANSWERL1          Get answer area length
         L     R1,ANSWERA1          Get answer area address
         STORAGE RELEASE,ADDR=(R1),LENGTH=(R0)
         LR    R1,R3                Reset required answer area length
         B     IMCF0501             Loop back to issue IXCQUERY again
IMCF0510 C     R15,=F'8'            IXCQUERY rc=8?
         BE    IMCF0513             Yes - branch, continue
         C     R15,=F'12'           IXCQUERY rc=12?
         BNE   IMCF0513             No - branch, continue
         LA    R1,QUAARSNNOCFRMDSN  Get system access to CFRM code
         CR    R0,R1                System able to access CFRM?
         BNE   IMCF0511             Yes - branch, continue
         MVC   RETCODE,=F'24'       Set error return code
         B     IMCF0590             Branch - continue
IMCF0511 LA    R1,QUAARSNNOCFRMPOL  Get active CFRM policy code
         CR    R0,R1                Is there an active CFRM policy?
         BNE   IMCF0512             Yes - branch, continue
         MVC   RETCODE,=F'24'       Set error return code
         B     IMCF0590             Branch - continue
IMCF0512 LA    R1,QUAARSNFAILCFRMREAD  Get CFRM read failure code
         CR    R0,R1                CFRM read fail?
         BNE   IMCF0513             No - branch, continue
         MVC   RETCODE,=F'24'       Set error return code
         B     IMCF0590             Branch - continue
IMCF0513 MVC   RETCODE,=F'16'       Set error return code
         B     IMCF0590             Branch - continue
IMCF0520 ICM   R15,15,QUAH#REC      Get # coupling facility records
         BNZ   IMCF0521             Branch - continue
         MVC   RETCODE,=F'28'       Set error return code
         B     IMCF0590             Branch - continue
IMCF0521 LA    R0,(TCD2SCA-TCD2CFR)  Calculate partial CF record len
         LA    R1,TCD2SCL           Get subchannel record length
         MH    R1,=H'255'           Times maximum number subchannels
         ALR   R0,R1                Add to CF record length
         LA    R1,TCD2STRL          Get structure record length
         MH    R1,=H'255'           Times maximum number structures
         ALR   R0,R1                Add to CF record length
         LR    R3,R0                Save CF record length
         LA    R0,(TCD2CNRA-INFTCD2)  Calculate partial INFTCD2 length
         LA    R15,10               Get maximum number of CFs
         XR    R14,R14              Calculate CF records area length
         MR    R14,R3               *
         ALR   R0,R15               Calculate total INFTCD2 length
         LR    R4,R0                Save INFTCD2 length
         IC    R5,CALLKEY           Get caller's psw key
         STORAGE OBTAIN,LENGTH=(R0),SP=130,KEY=(R5),LOC=ANY
         ST    R1,INFTABP           Save table pointer
         LR    R11,R1               Set table pointer
         LR    R14,R1               Get pointer into work register
         LR    R15,R4               Set move to length
         XR    R1,R1                Set move from length and pad
         MVCL  R14,R0               Clear table
         USING INFTCD2,R11
         ST    R4,TCD2SIZE          Set INFTCD2 size in table
         ST    R3,TCD2CFRL          Set CF record length
         L     R1,PARMPTR           Get input parameter list pointer
         ST    R11,16(,R1)          Set table address for caller
IMCF0530 MVC   TCD2CFR#,QUAH#REC    Set # coupling facility records
         L     R1,QUAHSGOF          Get first CR record offset
         ALR   R2,R1                Point to first CF record
         DROP  R2                   QUAHDR
         USING QUACF,R2
         LA    R10,TCD2CNRA         Point to CF records area
         USING TCD2CFR,R10
IMCF0531 MVC   TCD2CFNM,QUACFNAME   Set CF name
         MVC   TCD2POLN,QUACFPOLNAME  Set policy name
         TM    QUACFSTATE2,QUACFSTFAILED  CF state = failed?
         BZ    IMCF0532             No - branch, continue
         OI    TCD2FLG1,CFFAILED    Set "failed" flag
         B     IMCF0540             Branch - continue
IMCF0532 TM    QUACFSTATE1,QUACFSTDPEND  CF state = pending?
         BZ    IMCF0533             No - branch, continue
         OI    TCD2FLG1,CFPEND      Set "pending" flag
         B     IMCF0540             Branch - continue
IMCF0533 TM    QUACFSTATE2,QUACFSTRECONCILE CF state = reconcile?
         BZ    IMCF0534             No - branch, continue
         OI    TCD2FLG1,CFRECON     Set "reconcile" flag
         B     IMCF0540             Branch - continue
IMCF0534 OI    TCD2FLG1,CFACTV      Set "active" flag
IMCF0540 ICM   R15,15,QUACFSC#      Get # systems connected records
         BZ    IMCF0550             Branch - no connected systems
         MVC   TCD2SYS#,QUACFSC#    Set # connected systems
         LA    R9,TCD2SYSA          Point to connected systems area
         L     R3,QUACFSCO          Get first system record offset
         ALR   R3,R2                Point to first system record
         USING QUACFSC,R3
IMCF0541 MVC   0(8,R9),QUACFSCNAME  Set system name
         TM    QUACFSCTYP,QUATYPCFSC_LAST  Last system record?
         BO    IMCF0550             Yes - branch, continue
         LH    R1,QUACFSCLEN        Get system record length
         ALR   R3,R1                Point to next system record
         LA    R9,8(,R9)            Point to next system entry
         B     IMCF0541             Loop back for next system record
         DROP  R3                   QUACFSC
IMCF0550 ICM   R15,15,QUACFSTR#     Get # structure records
         BZ    IMCF0560             Branch - no structure records
         MVC   TCD2STR#,QUACFSTR#   Set # structures
         LA    R9,TCD2SCA           Point to subchannels area
         LA    R1,TCD2SCL           Get subchannel record length
         MH    R1,=H'255'           Times maximum number subchannels
         ALR   R9,R1                Point to structures area
         USING TCD2STR,R9
IMCF0551 L     R3,QUACFSTRO         Get first structure record offset
         ALR   R3,R2                Point to first structure record
         USING QUACFSTR,R3
IMCF0552 MVC   TCD2STRN,QUACFSTRNAME  Set structure name
         TM    QUACFSTRFLG,QUACFSTRACT  Structure active?
         BZ    IMCF0553             No - branch, continue
         OI    TCD2FLG2,STRACTV     Set "active" flag
         B     IMCF0557             Branch - continue
IMCF0553 TM    QUACFSTRFLG2,QUACFSTRSTRFAIL  Structure failed?
         BZ    IMCF0554             No - branch, continue
         OI    TCD2FLG2,STRFAIL     Set "failed" flag
         B     IMCF0557             Branch - continue
IMCF0554 TM    QUACFSTRFLG,QUACFSTRREBLDOLD  Structure rebuild/old?
         BZ    IMCF0555             No - branch, continue
         OI    TCD2FLG2,STRRBOLD    Set "rebuild/old" flag
         B     IMCF0557             Branch - continue
IMCF0555 TM    QUACFSTRFLG,QUACFSTRREBLDNEW  Structure rebuild/new?
         BZ    IMCF0556             No - branch, continue
         OI    TCD2FLG2,STRRBNEW    Set "rebuild/new" flag
         B     IMCF0557             Branch - continue
IMCF0556 TM    QUACFSTRFLG,QUACFSTRTRAN+QUACFSTRHOLD+QUACFSTRDUMPTBL
         BZ    IMCF0557             No - branch, continue
         OI    TCD2FLG2,STRTRANS    Set "transitional" flag
IMCF0557 TM    QUACFSTRTYP,QUATYPCFSTR_LAST  Last structure record?
         BO    IMCF0560             Yes - branch, continue
         LH    R1,QUACFSTRLEN       Get structure record length
         ALR   R3,R1                Point to next structure record
         LA    R9,TCD2STRL(,R9)     Point to next structure entry
         B     IMCF0552             Loop back for next structure record
         DROP  R3,R9                QUACFSTR, TCD2STR
IMCF0560 L     R1,=F'4096'          Get data area length
IMCF0561 ST    R1,DATAL1            Set data area length
         STORAGE OBTAIN,LENGTH=(R1),BNDRY=PAGE,SP=253,LOC=ANY
         ST    R1,DATAA1            Save data area address
         LR    R4,R1                Set area pointer in work register
         USING IXLYAMDAREA,R4
         MVC   IXLMGWRK(IXLMGLL2),IXLMGLS2  Move IXLMG parm list
         IXLMG CFNAME=QUACFNAME,    Coupling facility name             X
               DATAAREA=(R4),       Data area                          X
               DATALEN=DATAL1,      Data area length                   X
               MF=(E,IXLMGWRK)
         LTR   R15,R15              IXLMG successful?
         BZ    IMCF0563             Yes - branch, continue
         C     R15,=F'4'            IXLMG rc=4?
         BE    IMCF0562             Yes - branch, continue
         MVC   RETCODE,=F'16'       Set error return code
         B     IMCF0569             Branch - return
IMCF0562 L     R3,IXLYAMDAREA_TLEN  Get required data area length
         L     R0,DATAL1            Get data area length
         L     R1,DATAA1            Get data area address
         STORAGE RELEASE,ADDR=(R1),LENGTH=(R0),SP=253
         LR    R1,R3                Reset required data area length
         B     IMCF0561             Loop back to issue IXLMG again
IMCF0563 ICM   R4,15,IXLYAMDAREA_CFENT@  Get CF entry address
         DROP  R4                   IXLYAMDAREA
         USING IXLYAMDCF,R4
         L     R1,IXLYAMDCF_TS      Get total space (4k blocks)
         SLL   R1,2                 Convert space to 1k blocks
         ST    R1,TCD2ASIZ          Set allocated CF size
         L     R1,IXLYAMDCF_FS      Get total free space (4k blocks)
         SLL   R1,2                 Convert space to 1k blocks
         ST    R1,TCD2FSIZ          Set free CF size
         L     R1,IXLYAMDCF_TCS     Get total control space (4k blocks)
         SLL   R1,2                 Convert space to 1k blocks
         ST    R1,TCD2ACSP          Set allocated CF control space
         L     R1,IXLYAMDCF_FCS     Get total free cntl space (4k blks)
         SLL   R1,2                 Convert space to 1k blocks
         ST    R1,TCD2FCSP          Set free CF control space
         L     R1,IXLYAMDCF_TDS     Get total dumping space (4k blks)
         SLL   R1,2                 Convert space to 1k blocks
         ST    R1,TCD2ADMP          Set allocated CF dumping space
         L     R1,IXLYAMDCF_FDS     Get free dumping space (4k blks)
         SLL   R1,2                 Convert space to 1k blocks
         ST    R1,TCD2FDMP          Set free CF dumping space
         ICM   R1,15,IXLYAMDCF_MI@  Get CF measurement entry
         BZ    IMCF0564             Branch - no measurement information
         MVC   TCD2SCAL,IXLYAMDCF_SUBCH_ALLOCATED  Set allocated SCs
         MVC   TCD2SCAV,IXLYAMDCF_SUBCH_INUSE      Set available SCs
         MVC   TCD2SCMX,IXLYAMDCF_SUBCH_MAXLIMIT   Set max number SCs
         MVC   TCD2SCNA,IXLYAMDCF_SUBCH_CONTENTION  Set contention ct.
         MVC   TCD2SCUN,IXLYAMDCF_FAILEDOPTIMECOUNT  Set failed count
IMCF0564 ICM   R3,15,IXLYAMDCF_SC@  Get 1st subchannel entry address
         BZ    IMCF0569             Branch - no subchannel entries
         USING IXLYAMDSC,R3
         LA    R9,TCD2SCA           Point to subchannels area
         USING TCD2SC,R9
IMCF0565 MVC   TCD2SC#,IXLYAMDSC_SCNUMBER  Set subchannel number
         MVC   TCD2SCD#,IXLYAMDSC_SCDEVICE  Set subchannel device #
         MVC   TCD2SCST,IXLYAMDSC_SUBCH_STATUS  Set subchannel status
         MVC   TCD2SCB,IXLYAMDSC_SUBCH_BUSY  Set subchannel busy ct.
         MVC   TCD2SCPB,IXLYAMDSC_ALLPATHS_BUSY  Set all paths busy ct.
         MVC   TCD2SCU,IXLYAMDSC_UTILIZATION  Set utilization count
         LA    R9,TCD2SCL(,R9)      Point to next subchannel entry
         ICM   R3,15,IXLYAMDSC_SCNEXT  Point to next subchannel record
         BNZ   IMCF0565             Loop back for next record
         DROP  R3,R4,R9             IXLYAMDSC, IXLYAMDCF, TCD2SC
IMCF0569 L     R0,DATAL1            Get data area length
         L     R1,DATAA1            Get data area address
         STORAGE RELEASE,ADDR=(R1),LENGTH=(R0),SP=253
         TM    QUACFTYP,QUATYPCF_LAST  Last CF record?
         BO    IMCF0590             Yes - branch, continue
         LH    R1,QUACFLEN          Get CF record length
         ALR   R2,R1                Point to next CF record
         L     R15,TCD2CFRL         Point to next INFTCD2 CF record
         ALR   R10,R15              *
         B     IMCF0531             Loop back for next CF record
         DROP  R2                   QUACF
IMCF0590 L     R0,ANSWERL1          Get answer area length
         L     R1,ANSWERA1          Get answer area address
         STORAGE RELEASE,ADDR=(R1),LENGTH=(R0)

IMCF0699 PR                         Restore environment & return

         DROP  R10,R11              TCD2CFR, INFTCD2
         DROP  R12                  IMCF0500 base

         LTORG

         IXCQUERY MF=(L,IXCQLST2)    IXCQUERY parm list
IXCQLL2  EQU   *-IXCQLST2

         IXLMG MF=(L,IXLMGLS2)       IXLMG parm list
IXLMGLL2 EQU   *-IXLMGLS2


         DROP  R13                   WORKAREA


WORKAREA DSECT
         DS    18F
RETCODE  DS    F                IMCFLIST return code
PARMPTR  DS    A                Input parameter list pointer
WORKFLAG DS    XL1              Flag byte
CALLKEY  DS    XL1              Caller's psw key
         DS    XL2              Reserved
INFTABP  DS    A                Information table pointer
STRNAME  DS    CL16             Input structure name
CFNAME   DS    CL8              Input coupling facility name
STRSTAT  DS    XL4              Structure status flags
STRDECHR DS    XL1              Structure data element characteristic
STRLKCHR DS    XL1              Structure lock entry characteristic
STRDFLAG DS    XL1              Structure list control section flag
STRSTFLG DS    XL1              Structure list status flag
STRESIZE DS    F                Structure list element size
STRCN#   DS    F                Number of connectors
STRCONNR DS    (STRCONNL*32)X   Structure connector data records area
STRASIZE DS    F                Allocated structure size in 4k blocks
STRCSIZE DS    F                Structure control size in 4k blocks
STRDSIZE DS    F                Structure dump table size in 4k blocks
STR#ELU  DS    F                # list/lock elements currently in use
STR#ELA  DS    F                # list/lock elements available
STR#ENTU DS    F                # list entries currently in use
STR#ENTA DS    F                # list entries available
STR#LKTA DS    F                # lock table entries available
STR#LKTU DS    F                # lock table entries used
STR#LKCT DS    F                # total lock contention requests
STR#LKCF DS    F                # false lock contention requests
STR#DEC  DS    F                Cache directory entry count
STR#ELC  DS    F                Cache data element count
STRCFNAM DS    CL8              Structure CF name
STRTYPE  DS    XL1              Structure type flag
*LISTSTR  EQU   X'80'            List structure type
*LOCKSTR  EQU   X'40'            Lock structure type
*CACHESTR EQU   X'20'            Cache structure type
*UNKNWSTR EQU   X'10'            Unknown structure type
STRINHDW DS    XL1              Structure hardware flag
STRSCMAX DS    XL1              Maximum cache storage class value
STRCCMAX DS    XL2              Maximum cache castout class value
         DS    0D
IXCQWRK  DS    (IXCQLL1)X       IXCQUERY parm list workarea
ANSWERA1 DS    A                IXCQUERY answer area address
ANSWERL1 DS    F                IXCQUERY answer area length
         DS    0D
IXLMGWRK DS    (IXLMGLL1)X      IXLMG parm list workarea
DATAA1   DS    A                IXLMG data area address
DATAL1   DS    F                IXLMG data area length
WORKSIZE EQU   *-WORKAREA

STRCONN  DSECT                  Structure connection data record
STRCNFL1 DS    XL1              Connect flag #1
STRCNFL2 DS    XL1              Connect flag #2
         DS    XL2              Reserved
STRCNNAM DS    CL16             Connect name
STRCNSYS DS    CL8              Connect system name
STRCNJOB DS    CL8              Connect jobname
STRCONNL EQU   *-STRCONN        Structure connection data record length

         COPY  IMCFDATA         Transported coupling facility details

         PRINT NOGEN
         CVT   DSECT=YES
         IEFJESCT
         IEFJSCVT
         IHAASCB
         IHAASVT
         IHAASXB
         IHAPSA
         IXCYQUAA
         IXLYAMDA

         END
