*        COPYRIGHT (C) 1989,2006  PRYCROFT SIX PTY LTD
         TITLE 'GRAPHIC ACTIVITY DYNAMIC AREA'
         COPY  IMPCMGG
         TITLE 'GRAPHIC ACTIVITY DISPLAY SUBROUTINE'
IMPXA    CSECT
         USING GRAFSTAT,R11,R10
GRAFSTAT DS    0H
         LA    R10,2048(,R11)    INITIALIZE SECOND
         LA    R10,2048(,R10)                      BASE REGISTER.
         MVI   GSTGSCAL+1,9
         MVI   GSUBHDG1+24,C'1'  STORAGE GRAPH INITIALLY HAS A SCALE
         MVI   GSUBHDG1+29,C'2'  OF TWO MEGABYTES PER SCREEN COLUMN.
         MVI   GSUBHDG1+34,C'3'
         MVI   GSUBHDG1+39,C'4'
         CLI   GDSPTYPE,C'O'     BEEN HERE BEFORE?
         BNE   GDSPTYOK          YES, DEFINITELY, SO SKIP LINE COUNTS.
         L     R1,LINES          GET VDU LINE COUNT.
         LA    R0,8              GET HEADINGS AND SUMMARIES LINE COUNT.
         SR    R1,R0             GET VARIABLE DETAIL LINE COUNT.
         LR    R0,R1             COPY IT.
         SRL   R1,1              HALVE IT.
         STH   R1,GRFJBCNT       SAVE MAXIMUM ADDRESS SPACES TO SHOW.
         ST    R1,GRFJBMAX
         SR    R0,1              GET COUNT OF REMAINING LINES.
         SRL   R1,2              QUARTER THE HALF.
         STH   R1,GRFCHCNT       SAVE MAXIMUM CHPIDS TO SHOW.
         ST    R1,GRFCHMAX
         SR    R0,R1             GET COUNT OF REMAINING LINES.
         STH   R0,GRFDVCNT       SAVE MAXIMUM DEVICES TO SHOW.
         ST    R0,GRFDVMAX
GDSPTYOK L     R5,ASVTADDR       POINT TO THE ASVT.
         USING ASVT,R5
         L     R0,ASVTMAXU       LOAD MAXIMUM ASID NUMBER.
         LR    R3,R0             COPY IT.
         MH    R0,GRFHWSIZ       GET SIZE OF GRFASTBL.
         L     R6,DEVTBL
         L     R6,0(,R6)         GET IOENTLEN TIMES UCB COUNT.
         LA    R7,GRFDVSIZ       GET OPTION "G" DEVICE ENTRY SIZE.
         LA    R15,IOENTLEN      GET OPTION "D" DEVICE ENTRY SIZE.
         MR    R6,R6
         SLR   R6,R6             PREPARE FOR DIVIDE.
         DR    R6,R15            GET SIZE OF GRFDVTBL.
         LR    R6,R0             REMEMBER SIZE OF GRAPHIC ASID TABLE.
         AR    R0,R7             ADD DEVICE STORAGE REQUIREMENTS.
         LA    R1,256*4          GET CHANNEL STORAGE REQUIREMENT.
         AR    R0,R1             TOTAL GETMAIN SIZE.
         ST    R0,GRFFMR0        SAVE IT.
         GETMAIN RU,LV=(0),SP=SUBPOOL,LOC=(31,64)
         ST    R1,GRFFMR1        SAVE ITS ADDRESS.
         AR    R1,R6             POINT TO DEVICE SECTION.
         ST    R1,GRFDEVAD       SAVE ITS ADDRESS.
         AR    R1,R7             POINT TO CHANNEL SECTION.
         ST    R1,GRFCHNAD       SAVE ITS ADDRESS.
         L     R15,PRNTADDR      GET ADDRESSABILITY TO TRANSLATE TABLE.
         USING SCRNPRNT,R15
         XC    GRFXLATE(16),PRTXLATE SUPPLY NEW CHARACTERS FOR GRAPHIC
         XC    PRTXLATE(16),GRFXLATE           SUBSTITUTION.
         XC    GRFXLATE(16),PRTXLATE
         DROP  R15               SCRNPRNT.
         MVI   TGETFLG,TGETFLGN  PERFORM ASIS NOWAIT TGETS.
         MVC   GGEOKBIT,GRAFLAGS COPY GRAPHIC CAPABILITY FLAGS.
         NI    GGEOKBIT,GEOK     JUST KEEP THE GEOK BIT.
         OI    MODESW2,CLNF      FLAG CLEAN-UP REQUIRED UPON EXIT.
         OI    GRFSTART,X'C0'    INVALIDATE SAMPLE START TIME.
         L     R1,CRNTOPTN       POINT TO OPTION "G" IN LOOK-UP TABLE.
         NI    1(R1),X'FE'       SCREEN PRINT NOW NOT SUPPORTED.
         LA    R2,BUFFER         RESET BUFFER ADDRESS.
         MVI   INBUFF+1,0        TREAT CURSOR AS IF NO ZOOM REQUEST.
         MVC   INCHARS(L'INCHARS-1),INCHARS+1
         MVI   INCHARS+L'INCHARS-1,C' '      ADJUST ANY COMMAND INPUT.
         CLI   GCHAR,C' '        SHOWING GRPAH PAPER?
         BNE   CMDSCANG          YES, PROCESS ANY INITIAL REQUEST.
         NI    GRAFLAGS,255-GEOK NO, DISABLE GRAPHIC ESCAPE.
         B     CMDSCANG          PROCESS ANY INITIAL REQUEST.
         SPACE
REDOGRAF L     R5,ASVTADDR       POINT TO THE ASVT.
         L     R3,ASVTMAXU       LOAD MAXUSER.
         LA    R4,ASVTENTY       POINT TO FIRST ASID ENTRY.
         DROP  R5                ASVT.
         L     R5,GRFFMR1        POINT TO ADDRESS SPACE TABLE.
         XC    GRFTOTLS,GRFTOTLS ZERO SYSTEM-WIDE ACCUMULATORS.
         L     R1,RMCTADDR       POINT TO THE RMCT.
         USING RMCT,R1
         TM    RMCTICST,X'7F'    IN WLM GOAL MODE?
         BM    GWLMOKAY          NO.
         DROP  R1                RMCT.
         MVI   GWLMMODE,C'G'     YES, REMEMBER THIS.
         MVC   GSUBHDG1+17(3),=C'CLS'
         USING RCE,R1
GWLMOKAY L     R1,RCEADDR        POINT TO THE RCE.
         L     R7,RCEPAGMV       GET REAL TO REAL PAGE MOVEMENT COUNT.
         A     R7,RCEESREA       ADD EXPANDED TO REAL MOVEMENT COUNT.
         ST    R7,GTOTREAL       SAVE RSM FRAMES TO REAL COUNT.
         MVC   GTOTXPND,RCEESWRT SAVE RSM FRAMES TO EXPANDED COUNT.
         L     R7,RCETOTPI       GET NON-VIO PAGE-IN COUNT.
         AL    R7,RCETOTPO       ADD NON-VIO PAGE-OUT COUNT.
         AL    R7,RCESWPPI       ADD SWAP PAGE-IN COUNT.
         AL    R7,RCESWPPO       ADD SWAP PAGE-OUT COUNT.
         ST    R7,GTOTNVIO       SAVE AUX NON-VIO IN & OUT MOVE COUNT.
         L     R7,RCEVIOPI       GET VIO PAGE-IN COUNT.
         AL    R7,RCEVIOPO       ADD VIO PAGE-OUT COUNT.
         ST    R7,GTOTVIO        SAVE AUX VIO IN AND OUT MOVE COUNT.
         DROP  R1                RCE.
         TIME  BIN               GET CURRENT TIME OF DAY.
         ST    R0,GRFSTART       REMEMBER SAMPLE START TIME.
         USING GRFASTBL,R5
GRFASLP1 XC    GRFASTBL(GRFASSIZ),GRFASTBL ERASE ENTRY.
         BAS   R14,GRFASINT      INITIALIZE ADDRESS SPACE ENTRY.
         LA    R5,GRFASSIZ(,R5)  POINT TO NEXT GRFASTBL ENTRY.
         LA    R4,4(,R4)         POINT TO NEXT ASVT ENTRY.
         BCT   R3,GRFASLP1       PROCESS NEXT ADDRESS SPACE.
         DROP  R5                GRFASTBL.
         BAS   R14,GRFWTIME      GET CURRENT WAIT STATE TIMER VALUES.
         ST    R7,GRFCPUWT       SAVE TOTAL.
         L     R3,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R3
         L     R3,CVTUCBA        POINT TO THE FIRST UNIT CONTROL BLOCK.
         DROP  R3                CVT.
         L     R5,GRFDEVAD       POINT TO THE DEVICE TABLE.
         USING GRFDVTBL,R5
         L     R9,CMCTADDR       POINT TO CHANNEL MEASUREMENT CNTL TBL.
         USING CMCT,R9
         L     R9,CMCTCMBV       POINT TO CHANNEL MEASUREMENT BLOCK.
         DROP  R9                CMCT.
         TM    OSLEVEL,CVTUCBSV  UCB SERVICES AVAILABLE?
         BNO   GRAFUCB1          NO, FIRST TIME THROUGH THE LOOP.
         XC    GSCNWORK,GSCNWORK CLEAR WORK AREA FOR THIS UCB SCAN.
GNXTUCB1 TM    OSLEVEL,CVTUCBSV  UCB SERVICES AVAILABLE?
         BNO   GNXAUCB1          NO, FOLLOW STATIC UCB CHAIN.
         L     R15,CNFGTKAD      YES, POINT TO IOCTOKEN AREA.
         UCBSCAN COPY,           SCAN UCBS, EVEN IF NOT APF'D.         +
               WORKAREA=GSCNWORK,                                      +
               UCBAREA=GSCNUCB,                                        +
               UCBPAREA=GSCNPRFX,                                      +
               DYNAMIC=YES,                                            +
               RANGE=ALL,                                              +
               NONBASE=YES,                                            +
               DEVCLASS=ALL,                                           +
               IOCTOKEN=(R15),                                         +
               LINKAGE=SYSTEM,                                         +
               MF=(E,GSCN,COMPLETE)
         LTR   R15,R15           WAS A UCB RETURNED BY UCBSCAN?
         BNZ   GRFCHAN1          NO, NO MORE UCB ENTRIES.
         LA    R3,GSCNUCB        YES, POINT TO THE RETURNED UCB COPY.
         B     GRAFUCB1          PROCESS IT.
         USING UCBOB,R3
GNXAUCB1 ICM   R3,15,UCBNXUCB    GET NEXT UCB ADDRESS.
         BZ    GRFCHAN1          CHECK FOR END OF UCB CHAIN.
GRAFUCB1 TM    UCBTBYT3,X'70'    COMM, CTC, DASD OR DISPLAY CLASS?
         BZ    GNXTUCB1          NO, TRY NEXT UCB.
         XC    GRFDVTBL(GRFDVSIZ),GRFDVTBL ERASE ENTRY.
         MVC   GRFDVNUM,UCBCHAN  STORE DEVICE NUMBER.
         MVC   GRFDVVOL,UCBVOLI  STORE VOLUME SERIAL NUMBER.
         DROP  R3                UCBOB.
         LA    R15,48            GET UCB PREFIX LENGTH.
*        LA    R1,GSCNPRFX       POINT TO THE UCB PREFIX.
*        TM    OSLEVEL,X'88'     UCB SERVICES PRESENT?
*        BO    GGOTPFX1          YES, REALLY DO HAVE THE PREFIX.
         LR    R1,R3             POINT TO UCB.
         SLR   R1,R15            POINT TO PATH MGMT CONTROL WORD - 16.
         USING UCBPDATA,R1
GGOTPFX1 TM    UCBPMCW1+1,UCBMCMB MEASUREMENTS BEING STORED IN CMB?
         BZ    GDONUCB1          NO, GET NEXT UCB.
         ICM   R15,3,UCBMBI      GET CMB BLOCK INDEX FOR THIS DEVICE.
         SLL   R15,5             GET OFFSET OF ENTRY INTO CMB.
         ALR   R15,R9            POINT TO ENTRY FOR THIS DEVICE.
         TM    MODESW4,ECMB      ECMB RATHER THAN CMB FOR DEVICE?
         BNO   GUSECMB1          NO, DIRECTLY ACCESS THE CMB.
         TM    MODESW2,AUTH      APF AUTHORIZED?
         BNO   GDONUCB1          NO, CANNOT FETCH ECMB DATA.
         L     R15,IOSECMB@      YES, POINT TO IOSCMB ROUTINE.
         LR    R1,R3             POINT TO THE UCB.
         BASR  R14,R15           INVOKE IT.
         LTR   R15,R15           SUCCESS?
         BNZ   GDONUCB1          NO.
         LA    R15,SECWORKA+48   POINT TO CMB DATA.
GUSECMB1 MVC   GRFDVSMP+2(14),2(R15)   SAVE RELEVANT CMB CONTENTS.
GDONUCB1 LA    R5,GRFDVSIZ(,R5)  POINT TO NEXT GRFDVTBL ENTRY.
         B     GNXTUCB1          GET NEXT UCB.
         DROP  R5,R1             GRFDVTBL, UCBPDATA.
GRFCHAN1 L     R5,GRFCHNAD       POINT TO THE CHANNEL SAVE ENTRIES.
         L     R4,CMCTADDR       POINT TO THE CMCT.
         USING CMCT,R4
         L     R6,CMCTCPMT       POINT TO THE CPMT.
         MVC   WORK2+4(4),8(R6)  SAVE CURRENT SAMPLE COUNT.
GNXTCHN1 LA    R6,12(,R6)        POINT TO THE NEXT CPMT ENTRY.
         CL    R6,CMCTHICP       PAST HIGHEST VALID ENTRY?
         BH    GRFSAMPL          YES.
         MVC   0(4,R5),4(R6)     NO, SAVE CHANNEL'S BUSY SAMPLE COUNT.
         LA    R5,4(,R5)         POINT TO NEXT CHANNEL'S SAVE ENTRY.
         B     GNXTCHN1
         DROP  R4                CMCT.
         SPACE
GRFSAMPL DS    0H                INTERNAL SAMPLING WAIT.
         STIMER WAIT,BINTVL==F'50' WAIT HALF A SECOND.
         L     R5,ASVTADDR       POINT TO THE ASVT.
         USING ASVT,R5
         L     R3,ASVTMAXU       LOAD MAXUSER.
         LA    R4,ASVTENTY       POINT TO FIRST ASID ENTRY.
         DROP  R5                ASVT.
         USING GRFASTBL,R5
         L     R5,GRFFMR1        POINT TO ADDRESS SPACE TABLE.
         TIME  BIN               GET CURRENT TIME OF DAY.
GRFASLP2 ICM   R1,15,0(R4)       LOAD ASVTE.
         BM    GRFASMT2          RESET EMPTY ENTRY.
         USING ASCB,R1
         ICM   R6,15,ASCBJBNI    LOAD POINTER TO JOB NAME.
         BNZ   GOTASNM2          GOT IT.
         ICM   R6,15,ASCBJBNS    LOAD POINTR TO START/MOUNT/LOGON NAME.
         BNZ   GOTASNM2          GOT IT.
         LA    R6,STARTING       POINT TO DEFAULT ADDRESS SPACE NAME.
GOTASNM2 ICM   R15,3,GRFASNUM    PREVIOUSLY EMPTY ENTRY?
         BZ    CREATEAS          YES, THIS ASID HAS JUST BEEN CREATED.
         CLC   GRFASNAM,0(R6)    SAME ADDRESS SPACE NAME?
         BE    GRFASOK2          YES.
         B     NEWJBSTP          NO, MUST BE NEW JOB STEP.
CREATEAS MVC   GRFASNUM,ASCBASID COPY THE ASID.
         MVC   GRFASNAM,0(R6)    LOAD THE ADDRESS SPACE NAME.
GRFASOK2 LM    R6,R7,ASCBEJST    LOAD JOB STEP TCB CPU TIME.
         SRDL  R6,12             CONVERT TO MICROSECONDS.
         CL    R7,GRFASTCB       DECREASE IN TCB TIME?
         BL    NEWJBSTP          YES, MUST BE NEW JOB STEP.
         LR    R6,R7             NO, COPY TCB TIME.
         SL    R6,GRFASTCB       GET THE CHANGE IN TCB TIME.
         ST    R7,GRFASTCB       SAVE THE NEW TCB TIME.
         LR    R7,R6
         A     R6,GRFADTCB       ACCUMULATE THE CHANGE IN TCB TIME.
         ST    R6,GRFADTCB       SAVE IT.
         A     R7,GRFCPTCB       ACCUMULATE THE CHANGE IN TCB TIME.
         ST    R7,GRFCPTCB       SAVE IT.
         LM    R6,R7,ASCBSRBT    LOAD JOB STEP SRB CPU TIME.
         SRDL  R6,12             CONVERT TO MICROSECONDS.
         CL    R7,GRFASSRB       DECREASE IN SRB TIME?
         BL    NEWJBSTP          YES, MUST BE NEW JOB STEP.
         LR    R6,R7             NO, COPY SRB TIME.
         SL    R6,GRFASSRB       GET THE CHANGE IN SRB TIME.
         ST    R7,GRFASSRB       SAVE THE NEW SRB TIME.
         LR    R7,R6
         A     R6,GRFADSRB       ACCUMULATE THE CHANGE IN SRB TIME.
         ST    R6,GRFADSRB       SAVE IT.
         A     R7,GRFCPSRB       ACCUMULATE THE CHANGE IN SRB TIME.
         ST    R7,GRFCPSRB       SAVE IT.
         L     R7,ASCBDCTI       LOAD CHANNEL CONNECT TIME.
         LR    R6,R7             COPY IT.
         S     R6,GRFASIOC       GET THE CHANGE IN CONNECT TIME.
         BM    NEWJBSTP          DECREASE MEANS NEW JOB STEP.
         ST    R7,GRFASIOC       SAVE THE NEW CONNECT TIME.
*        ICM   R7,15,ASCBJBNI    BATCH JOB? (ACTIVE INITIATOR?)
*        BNZ   GIOCOKAY          YES, CONTINUE.
*        ICM   R7,15,ASCBCSCB    NO, POINT TO TOP CSCB.
*        BZ    GIOCOKAY          NO CSCB SO NOT AN IDLE INITIATOR.
*        CLI   28(R7),CHINITID   INITIATOR/TERMINATOR?
*        BNE   GIOCOKAY          NO, CONTINUE.
*        SLL   R6,20             YES, CLEAR HIGH ORDER BITS.
*        SRL   R6,20
GIOCOKAY LR    R7,R6
         A     R6,GRFADIOC       ACCUMULATE THE CHANGE IN CONNECT TIME.
         ST    R6,GRFADIOC       SAVE IT.
         A     R7,GRFCPIOC       ACCUMULATE THE CHANGE IN CONNECT TIME.
         ST    R7,GRFCPIOC       SAVE IT.
         L     R6,ASCBRSME       POINT TO THE RAX.
         USING RAX,R6
         MVC   GRFAESTG,RAXESCT  COPY EXPANDED STORAGE FRAME COUNT.
         MVC   GRFAREAL,RAXFMCT  COPY ALLOCATED STORAGE FRAME COUNT.
         DROP  R6                RAX.
         MVI   GRFASFLG,0        CLEAR CLASSIFICATION FLAGS.
         L     R6,ASCBASSB       POINT TO THE ASSB.
         USING ASSB,R6
         ICM   R7,15,ASSBOASB    UNIX USED BY THIS ASID?
         BZ    *+8               NO.
         OI    GRFASFLG,GRFASUSS YES, FLAG UNIX USAGE.
         ICM   R7,15,ASSBTASB    TCP/IP USED BY THIS ASID?
         BNP   *+8               NO.
         OI    GRFASFLG,GRFASTCP YES, FLAG TCP/IP USAGE.
         MVC   GRFAVSLT,ASSBVSC  COPY VIO SLOT COUNT.
         MVC   GRFANSLT,ASSBNVSC COPY NON-VIO SLOT COUNT.
         DROP  R6                ASSB.
         L     R6,ASCBOUCB       POINT TO THE OUCB.
         USING OUCB,R6
         MVC   GRFASPGN,OUCBNPG  LOAD PERFORMANCE GROUP NUMBER.
         MVC   GRFASCLS,OUCBCLS  LOAD TRANSACTION (JOB) CLASS.
         MVC   GRFASNDP,OUCBNDP  LOAD NEW DISPATCHING PRIORITY.
         DROP  R6                OUCB.
         ICM   R7,15,ASCBTSB     TSO USER?
         BZ    *+8               NO.
         OI    GRFASFLG,GRFASTSU YES, FLAG THIS.
         L     R6,ASCBOUXB       POINT TO THE OUXB.
         USING OUXB,R6
         L     R7,OUXBPIN        GET PRIVATE PAGE-IN COUNT.
         A     R7,OUXBVAMI       ADD VIO PAGE-IN COUNT.
         A     R7,OUXBCAPI       ADD COMMON PAGE-IN COUNT.
         DROP  R6                OUXB.
         LR    R6,R7             COPY IT.
         S     R6,GRFASPGF       GET THE CHANGE IN "PAGE FAULT" COUNT.
         BM    SKPPGFCH          DECREASE SO SKIP "PAGE FAULT" UPDATE.
         ST    R7,GRFASPGF       SAVE THE CURRENT "PAGE FAULT" COUNT.
         CR    R6,R7             ADDRESS SPACE ONLY JUST SWAPPED IN?
         BE    SKPPGFCH          YES, SO SKIP "PAGE FAULT" UPDATE.
         A     R6,GRFADPGF       ACCUMULATE PAGE FAULTS.
         ST    R6,GRFADPGF       SAVE IT.
SKPPGFCH L     R7,GRFASTOD       GET THE PREVIOUS ASID EXAMINE TIME.
         LR    R6,R0             GET THE CURRENT TIME.
         SR    R6,R7             GET THE CHANGE IN TIME.
         A     R6,GRFADTOD       ACCUMULATE THE CHANGE IN TIME.
         ST    R6,GRFADTOD       SAVE IT.
         ST    R0,GRFASTOD       STORE THE CURRENT TIME.
         B     GRFNXAS2          HAVE NOW UPDATED ENTRY.
GRFASMT2 XC    GRFASTBL(GRFASSIZ),GRFASTBL ERASE ENTRY.
NEWJBSTP BAS   R14,GRFASINT      RE-INITIALIZE THE ADDRESS SPACE ENTRY.
*        LTR   R1,R1             EMPTY ENTRY?
*        BM    GRFNXAS2          YES, SO ENTRY NOW UPDATED.
*        ICM   R8,15,ASCBJBNI    BATCH JOB?
*        BNZ   GRFASNEW          YES, SO CAN'T BE AN EMPTY INITIATOR.
*        ICM   R8,15,ASCBCSCB    NO, POINT TO THE TOP CSCB.
*        BZ    GRFNXAS2          NO CSCB SO LEAVE IT THERE.
*        TM    28(R8),CHINITID   INITIATOR/TERMINATOR ADDRESS SPACE?
*        BO    GRFNXAS2          YES, SO LEAVE IT THERE.
*RFASNEW LR    R8,R0             GET CURRENT TIME.
*        SR    R8,R15            GET THE CHANGE IN TIME.
*        ST    R8,GRFADTOD       UPDATE ALL ENTRY ACCUMULATORS.
*        L     R6,GRFASTCB
*        ST    R6,GRFADTCB
*        A     R6,GRFCPTCB
*        ST    R6,GRFCPTCB
*        L     R6,GRFASSRB
*        ST    R6,GRFADSRB
*        A     R6,GRFCPSRB
*        ST    R6,GRFCPSRB
*        L     R6,GRFASIOC
*        ST    R6,GRFADIOC
*        A     R6,GRFCPIOC
*        ST    R6,GRFCPIOC
*        MVC   GRFADPGF,GRFASPGF
GRFNXAS2 LA    R5,GRFASSIZ(,R5)  POINT TO NEXT GRFASTBL ENTRY.
         LA    R4,4(,R4)         POINT TO NEXT ASVT ENTRY.
         BCT   R3,GRFASLP2       PROCESS NEXT ADDRESS SPACE.
         DROP  R1                ASCB.
         LR    R9,R0             COPY THE CURRENT TIME.
         S     R9,GRFSTART       GET THE SAMPLE ELAPSED TIME SO FAR.
         BNP   REDOGRAF          CATER FOR GONE PAST MIDNIGHT.
         CLI   GDSPMODE,C'R'     IN DISPLAY MODE "R"?
         BNE   NOGRFGRF          NO, DON'T AUTOMATICALLY UPDATE SCREEN.
         CLI   GPNLMODE,0        FIXED PANEL BEING DISPLAYED?
         BNE   NOGRFGRF          JA, DON'T AUTOMATICALLY UPDATE SCREEN.
         CHI   R9,500            SAMPLED FOR FIVE SECONDS YET?
         BNL   GRFGRAPH          YES, SHOW SOMETHING FOR IT.
NOGRFGRF SLR   R0,R0             NO, DON'T WRITE ANYTHING TO SCREEN.
         B     PUTSCRNG          CALL SCREEN HANDLER FOR ASYNC COMMAND.
GRFGRAPH ST    R9,WORK2          SAVE THE TOTAL SAMPLE INTERVAL.
         TM    MODESW2,AUTH      CAN'T GET TO LCCA?
         BZ    SKIPGWT1          CORRECT.
         BAS   R14,GRFWTIME      GET CURRENT WAIT STATE TIMER VALUES.
         SL    R7,GRFCPUWT       GET THE TOTAL CHANGE.
         L     R15,CVTPTR(,0)    POINT TO THE CVT.
         USING CVT,R15
         L     R15,CVTCSD        POINT TO THE CSD.
         DROP  R15               CVT.
         USING CSD,R15
         LH    R15,CSDCPUOL      LOAD CENTRAL PROCESSOR COUNT.
         DROP  R15               CSD.
         SLR   R6,R6
         DR    R6,R15            GET AVERAGE WAIT MICROSECONDS PER CP.
         L     R15,WORK2         GET ELAPSED CENTISECONDS.
         M     R14,TENGRAND      CONVERT TO MICROSECONDS.
         SR    R15,R7            CONVERT WAIT TIME TO UTILIZATION TIME.
         ST    R15,GRFCPUWT      SAVE AVERAGE CPU UTILIZATION TIME.
SKIPGWT1 L     R1,RCEADDR        POINT TO THE RCE.
         USING RCE,R1
         L     R7,RCEPAGMV       GET REAL TO REAL PAGE MOVEMENT COUNT.
         A     R7,RCEESREA       ADD EXPANDED TO REAL MOVEMENT COUNT.
         SL    R7,GTOTREAL       GET CHANGE IN COUNT DURING SAMPLE.
         ST    R7,GTOTREAL       SAVE RSM FRAMES TO REAL COUNT.
         L     R7,RCEESWRT       GET REAL TO EXPANDED MOVEMENT COUNT.
         SL    R7,GTOTXPND       GET CHANGE IN COUNT DURING SAMPLE.
         A     R7,GTOTREAL       GET TOTAL RSM FRAME MOVEMENTS.
         ST    R7,GTOTXPND       SAVE RSM FRAMES TO EXPANDED COUNT.
         L     R7,RCETOTPI       GET NON-VIO PAGE-IN COUNT.
         AL    R7,RCETOTPO       ADD NON-VIO PAGE-OUT COUNT.
         AL    R7,RCESWPPI       ADD SWAP PAGE-IN COUNT.
         AL    R7,RCESWPPO       ADD SWAP PAGE-OUT COUNT.
         SL    R7,GTOTNVIO       GET CHANGE IN COUNT DURING SAMPLE.
         A     R7,GTOTXPND       ADD TOTAL RSM FRAME MOVEMENTS.
         ST    R7,GTOTNVIO       SAVE TOTAL NON-VIO MOVEMENT COUNT.
         L     R7,RCEVIOPI       GET VIO PAGE-IN COUNT.
         AL    R7,RCEVIOPO       ADD VIO PAGE-OUT COUNT.
         SL    R7,GTOTVIO        GET CHANGE IN COUNT DURING SAMPLE.
         A     R7,GTOTNVIO       ADD TOTAL NON-VIO MOVEMENT COUNT.
         ST    R7,GTOTVIO        SAVE TOTAL PAGE MOVEMENT COUNT.
         DROP  R1                RCE.
         L     R3,ASVTADDR       POINT TO THE ASVT.
         USING ASVT,R3
         L     R3,ASVTMAXU       LOAD MAXUSER.
         DROP  R3                ASVT.
         L     R4,RCTADDR        POINT TO THE RCT.
         LH    R4,70(,R4)        LOAD THE PAGE DELAY TIME.
         MH    R4,ONEGRAND+2     CONVERT MILLISECONDS TO MICROSECONDS.
         L     R5,GRFFMR1        POINT TO ADDRESS SPACE TABLE.
         XC    GRFJENTS,GRFJENTS ZERO JOBS TO BE DISPLAYED LIST.
GRFASLP3 ICM   R1,15,GRFADTOD    LOAD THIS ENTRY'S SAMPLE PERIOD.
         BNP   GRFNXAS3          LEAVE AT 0% IF TIME CHANGE NOT +VE.
         SLR   R6,R6
         L     R7,GRFADTCB       GET CHANGE IN ASID TCB TIME.
         DR    R6,R1             GET TCB/ELAPSED.
         ST    R7,GRFASPC1       SAVE IT.
         SLR   R6,R6
         L     R7,GRFADSRB       GET CHANGE IN ASID SRB TIME.
         A     R7,GRFADTCB       ADD CHANGE IN ASID TCB TIME.
         DR    R6,R1             GET (TCB+SRB)/ELAPSED.
         ST    R7,GRFASPC2       SAVE IT.
         SLR   R6,R6
         L     R7,GRFADIOC       ADD CHANGE IN ASID CHP CONNECT TIME.
         SLDL  R6,R7             CONVERT TO MICROSECONDS.
         A     R7,GRFADSRB       ADD CHANGE IN ASID SRB TIME.
         A     R7,GRFADTCB       ADD CHANGE IN ASID TCB TIME.
         DR    R6,R1             GET (TCB+SRB+IOC)/ELAPSED.
         ST    R7,GRFASPC3       SAVE IT.
         L     R7,GRFADPGF       GET THE "PAGE-FAULT" COUNT.
         MR    R6,R4             CONVERT THIS TO RESOLUTION WAIT TIME.
         LTR   R6,R6             VERY LARGE WAIT TIME?
         BZ    GASPWTOK          NO, SHOULD BE ALRIGHT (NO S0C9).
         SLR   R7,R7             YES, FORGET ABOUT IT.
         B     GASPGWT0          PROCEED AS IF ZERO PAGE WAIT TIME.
GASPWTOK DR    R6,R1             GET PAGE-FAULT-TIME/ELAPSED.
GASPGWT0 A     R7,GRFASPC3       ADD (TCB+SRB+IOC)/ELAPSED.
         ST    R7,GRFASPC4       SAVE IT.
         L     R6,TENGRAND       GET 100 PERCENT.
         S     R6,GRFASPC2       GET 100-(TCB+SRB).
         A     R6,GRFASPC3       GET 100+(IOC).
         CR    R7,R6             IS TCB+SRB+PGWT > 100%?
         BNH   GPAGWTOK          NO, SO LEAVE IT.
         ST    R6,GRFASPC4       YES, LIMIT IT TO 100%.
GPAGWTOK LA    R6,GRFJENTS       NOW SEE IF THIS JOB GETS A GUERNSEY.
GRFJTST1 CLI   0(R6),X'FF'       END OF JOB ENTRIES?
         BE    GRFNXAS3          YES, DON'T SHOW THIS JOB.
         CLC   GRFASPC3+2(2),2(R6)    HIGHER ACTIVE PERCENTAGE?
         BH    GRFJBUBL          YES, PERCOLATE LIST.
         LA    R6,4(,R6)         NO, POINT TO NEXT ENTRY.
         B     GRFJTST1          CHECK IF NEED TO SURPLANT THIS ONE.
GRFJBUBL L     R7,0(,R6)         REMEMBER THIS ENTRY.
         MVC   0(2,R6),GRFASNUM  LOAD ASID INTO ENTRY.
         MVC   2(2,R6),GRFASPC3+2  COMPLETE THE ENTRY.
GRFJTST2 LA    R6,4(,R6)         POINT TO NEXT GRFJENTS ENTRY.
         CLI   0(R6),X'FF'       END OF JOB ENTRIES?
         BE    GRFNXAS3          YES, END OF PERCOLATION/BUBBLE DOWN.
         L     R15,0(,R6)        REMEMBER THIS ENTRY.
         ST    R7,0(,R6)         RESTORE DISPLACED ENTRY.
         LTR   R7,R15            GET NEW DISPLACED ENTRY.
         BZ    GRFNXAS3          UNUSED ENTRY SO END OF BUBBLE DOWN.
         B     GRFJTST2          PROCESS NEXT ENTRY.
GRFNXAS3 LA    R5,GRFASSIZ(,R5)  POINT TO NEXT GRFASTBL ENTRY.
         BCT   R3,GRFASLP3       PROCESS NEXT ADDRESS SPACE.
         DROP  R5                GRFASTBL.
         L     R3,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R3
         L     R3,CVTUCBA        POINT TO THE FIRST UNIT CONTROL BLOCK.
         DROP  R3                CVT.
         L     R5,GRFDEVAD       POINT TO THE DEVICE TABLE.
         USING GRFDVTBL,R5
         L     R9,CMCTADDR       POINT TO CHANNEL MEASUREMENT CNTL TBL.
         USING CMCT,R9
         L     R9,CMCTCMBV       POINT TO CHANNEL MEASUREMENT BLOCK.
         DROP  R9                CMCT.
         XC    GRFDENTS,GRFDENTS ZERO DEVICES TO BE DISPLAYED LIST.
         XC    GRFDENT2,GRFDENT2
         TM    OSLEVEL,CVTUCBSV  UCB SERVICES AVAILABLE?
         BNO   GRAFUCB2          NO, FIRST TIME THROUGH THE LOOP.
         XC    GSCNWORK,GSCNWORK CLEAR WORK AREA FOR THIS UCB SCAN.
GNXTUCB2 TM    OSLEVEL,CVTUCBSV  UCB SERVICES AVAILABLE?
         BNO   GNXAUCB2          NO, FOLLOW STATIC UCB CHAIN.
         L     R15,CNFGTKAD      YES, POINT TO IOCTOKEN AREA.
         UCBSCAN COPY,           SCAN UCBS, EVEN IF NOT APF'D.         +
               WORKAREA=GSCNWORK,                                      +
               UCBAREA=GSCNUCB,                                        +
               UCBPAREA=GSCNPRFX,                                      +
               CMXTAREA=GSCNCMXT,                                      +
               DYNAMIC=YES,                                            +
               RANGE=ALL,                                              +
               NONBASE=YES,                                            +
               DEVCLASS=ALL,                                           +
               IOCTOKEN=(R15),                                         +
               LINKAGE=SYSTEM,                                         +
               MF=(E,GSCN,COMPLETE)
         LTR   R15,R15           WAS A UCB RETURNED BY UCBSCAN?
         BNZ   GRFCHAN2          NO, NO MORE UCB ENTRIES.
         LA    R3,GSCNUCB        YES, POINT TO THE RETURNED UCB COPY.
         B     GRAFUCB2          PROCESS IT.
         USING UCBOB,R3
GNXAUCB2 ICM   R3,15,UCBNXUCB    GET NEXT UCB ADDRESS.
         BZ    GRFCHAN2          CHECK FOR END OF UCB CHAIN.
GRAFUCB2 TM    UCBTBYT3,X'70'    COMM, CTC, DASD OR DISPLAY CLASS?
         BZ    GNXTUCB2          NO, TRY NEXT UCB.
*        TM    UCBSTAT,UCBONLI   IS THE DEVICE ONLINE?
*        BO    GGETPFX2          YES, PROCEED WITH DISPLAY SELECTION.
*        CLI   UCBTBYT3,X'20'    DASD DEVICE CLASS?
*        BNE   GDONUCB2          NO, REJECT NON-DASD OFFLINE DEVICE.
GGETPFX2 LA    R15,48            GET UCB PREFIX LENGTH.
*        LA    R1,GSCNPRFX       POINT TO THE UCB PREFIX.
*        TM    OSLEVEL,CVTUCBSV  UCB SERVICES PRESENT?
*        BO    GGOTPFX2          YES, REALLY DO HAVE THE PREFIX.
         LR    R1,R3             POINT TO UCB.
         SLR   R1,R15            POINT TO PATH MGMT CONTROL WORD.
         USING UCBPDATA,R1
GGOTPFX2 TM    UCBPMCW1+1,UCBMCMB MEASUREMENTS BEING STORED IN CMB?
         BZ    GDONUCB2          NO, GET NEXT UCB.
         ICM   R15,3,UCBMBI      GET CMB BLOCK INDEX FOR THIS DEVICE.
         DROP  R1                UCBPDATA.
         SLL   R15,5             GET OFFSET OF ENTRY INTO CMB.
         ALR   R15,R9            POINT TO ENTRY FOR THIS DEVICE.
         TM    MODESW4,ECMB      ECMB RATHER THAN CMB FOR DEVICE?
         BNO   GUSECMB2          NO, DIRECTLY ACCESS THE CMB.
         TM    MODESW2,AUTH      APF AUTHORIZED?
         BNO   GDONUCB2          NO, CANNOT FETCH ECMB DATA.
         L     R15,IOSECMB@      YES, POINT TO IOSCMB ROUTINE.
         LR    R1,R3             POINT TO THE UCB.
         BASR  R14,R15           INVOKE IT.
         LTR   R15,R15           SUCCESS?
         BNZ   GDONUCB2          NO.
         LA    R15,SECWORKA+48   POINT TO CMB DATA.
GUSECMB2 L     R1,4(,R15)        LOAD NEW DEVICE CONNECT TIME.
         SL    R1,GRFDVCON       GET THE CHANGE.
         ST    R1,GRFDVCON       SAVE IT.
         L     R1,12(,R15)       LOAD NEW SUBCHANNEL DISCONNECT TIME.
         SL    R1,GRFDVDIS       GET THE CHANGE.
         A     R1,GRFDVCON       ADD THE CHANGE TO CONNECT TIME.
         ST    R1,GRFDVDIS       SAVE IT.
         L     R1,8(,R15)        LOAD NEW DEVICE REQUEST PENDING TIME.
         SL    R1,GRFDVPND       GET THE CHANGE.
         A     R1,GRFDVDIS       GET THE CHANGE TO ALL DEVICE TIMES.
         ST    R1,GRFDVPND       SAVE IT.
         BZ    GDONUCB2          SUPPRESS DISPLAY OF 0 ACTIVITY UNIT.
         ICM   R1,12,2(R15)      LOAD DEVICE SAMPLE COUNT.
         SRL   R1,16             SHIFT TO LOW ORDER BITS.
         S     R1,GRFDVSMP       GET SAMPLE COUNT CHANGE.
         BNM   GDVSMPOK          RESULT SEEMS ALRIGHT.
         A     R1,FFFF           NEGATIVE MEANS COUNTER WRAP-AROUND.
         LA    R1,1(,R1)         ADD COUNTER CAPACITY FOR POSITIVE.
GDVSMPOK ST    R1,GRFDVSMP       SAVE THE NON-NEGATIVE COUNT.
         LA    R6,GRFDENTS       NOW SEE IF THIS UNIT GETS A GUERNSEY.
GRFDTST1 CLI   0(R6),X'FF'       END OF DEVICE ENTRIES?
         BE    GDONUCB2          YES, DON'T SHOW THIS DEVICE.
         CLC   GRFDVPND,4(R6)    MORE DEVICE ACTIVITY TIME?
         BH    GRFDDTLS          YES, GET DETAILS BEFORE PERCOLATING.
         LA    R6,8(,R6)         NO, POINT TO NEXT ENTRY.
         B     GRFDTST1          CHECK IF NEED TO SURPLANT THIS ONE.
GRFDDTLS MVC   GRFDVNAM,UCBNAME  LOAD UCB NAME.
         MVC   GRFDVJOB,BLANKS   CLEAR JOB NAME.
         TM    UCBSTAT,UCBONLI   IS THE DEVICE ONLINE?
         BZ    GDONOFFL          NO, NO POINT LOOKING AT ALLOCATION.
         OI    GRFDVFLG,GRFDVONL YES, FLAG THIS.
GDONOFFL CLI   UCBTBYT3,X'20'    DASD DEVICE CLASS?
         BNE   GNOTDASD          NO, PERFORM NON-DASD PROCESSING.
         TM    UCBFL5,UCBNALOC   BEING PROCESSED IN OFFLINE MODE?
         BNO   GDXYZ             NO.
         NOP   GDXYZ
GDXYZ    MVC   WORK(1),UCBSTAB   COPY FLAG BYTE.
         NI    WORK,GRFDVPAG     PRESERVE PAGING FLAG (UCBPGFL).
         OC    GRFDVFLG,WORK     REMEMBER PAGING FLAG (UCBPGFL).
         MVC   WORK(1),UCBTBYT2  COPY FLAG BYTE FROM UCBTYP.
         NI    WORK,GRFDVSHR     PRESERVE SHARED FLAG (UCBRR).
         OC    GRFDVFLG,WORK     REMEMBER SHARED FLAG (UCBRR).
         MVC   GRFDVVOL,28(R3)   LOAD VOLUME SERIAL NUMBER.
GDBSYCHK CLI   UCBFLA,UCBSTRT    SSCH ON FULLY FUNCTIONAL DEVICE?
         BNE   GRFDBUBL          NO, DO NOT LOOK AT UCBIOQ.
         TM    MODESW2,AUTH      APF AUTHORIZED?
         BZ    GIOQLOOK          NO, CAN'T GET INTO KEY ZERO.
         MODESET MF=(E,MDSET0)   GET INTO KEY ZERO FOR IOSB.
GIOQLOOK LA    R7,48             GET THE UCB PREFIX LENGTH.
         LR    R15,R3            POINT TO THE UCB.
         SR    R15,R7            POINT TO THE UCB PREFIX.
*        LA    R15,GSCNPRFX      POINT TO THE UCB PREFIX.
         USING UCBPDATA,R15
         L     R15,44(,R15)      POINT TO THE IOQ.
         DROP  R15               UCBPDATA.
         USING IOQ,R15
         L     R15,IOQIOSB       POINT TO THE IOSB.
         DROP  R15               IOQ.
         USING IOSB,R15
         SLR   R7,R7
         ICM   R7,3,IOSSKCC      LOAD CYLINDER NUMBER OF DYNAMIC SEEK.
         ST    R7,GRFDVCYL       SAVE THE CYLINDER NUMBER.
         OI    GRFDVFLG,GRFDVDYN REMEMBER HAVING CYLINDER NUMBER.
         ICM   R7,3,IOSASID      LOAD ASID TO BE POSTED AT COMPLETION.
         DROP  R15               IOSB.
         TM    MODESW2,AUTH      APF AUTHORIZED?
         BZ    GDSKASID          NO, STAYED IN USER'S KEY.
         MODESET MF=(E,MDSETN0)  REVERT TO USER KEY.
GDSKASID SLL   R7,2              GET INDEX INTO ASVT (MULTIPLY BY 4).
         A     R7,ASVTADDR
*                                GET ASVT ENTRY FOR THIS ASID.
         LA    R7,ASVTENTY-ASVT-4(,R7)
         MVC   GRFDVJOB,ENDED
         ICM   R15,15,0(R7)      IS THIS ADDRESS SPACE ACTIVE?
         BM    GRFDBUBL          NO, THE JOB HAS ENDED.
         USING ASCB,R15
         MVC   GRFDVJOB,STARTING
         ICM   R7,15,ASCBJBNI    LOAD PTR TO JOBNAME.
         BNZ   GDSKUSER
         ICM   R7,15,ASCBJBNS    LOAD PTR TO JOBNAME.
         BZ    GRFDBUBL          JOB HAS NO NAME.
         DROP  R15               ASCB.
GDSKUSER MVC   GRFDVJOB,0(R7)    OTHERWISE, MOVE IN JOBNAME.
         B     GRFDBUBL          READY TO PERCOLATE.
GNOTDASD MVC   GRFDVVOL,=CL6'<CTCA>'
         CLI   UCBTBYT3,X'41'    REALLY A CHANNEL-TO-CHANNEL ADAPTER?
         BE    GGOTCLAS          YES.
         MVC   GRFDVVOL,=CL6'<COMM>'
         CLI   UCBTBYT3,X'40'    REALLY A COMMUNICATIONS CONTROLLER?
         BE    GGOTCLAS          YES.
         MVC   GRFDVVOL,=CL6'<DISP>'
         CLI   UCBTBYT3,X'10'    REALLY A DISPLAY?
         BE    GGOTCLAS          YES.
         MVC   GRFDVVOL,BLANKS
GGOTCLAS MVC   GRFDVJOB,=CL8'CONSOLE '
         TM    UCBSTAT,UCBSYSR   REALLY A SYSTEM CONSOLE?
         BO    GRFDBUBL          YES.
         MVC   GRFDVJOB,=CL8'*OFFLINE'
         TM    GRFDVFLG,GRFDVONL IS THE DEVICE ONLINE?
         BZ    GRFDBUBL          NO, CAN'T GET ALLOCATING JOB.
         MVC   LL-76(5,R2),=CL5'<OFF>'
         MVC   GRFDVJOB,=CL8'*¬-ALLOC'
         TM    UCBSTAT,UCBALOC   REALLY UNALLOCATED?
         BZ    GRFDBUBL          YES.
         MVC   GRFDVJOB,UNKNOWN
         SLR   R7,R7
         ICM   R7,7,UCBEXTP      POINT TO COMMON UCB EXTENSION.
         TM    OSLEVEL,CVTUCBSV  UCB SERVICES AVAILABLE?
         BNO   GGOTCMXT          NO, PROCEED.
         LA    R7,GSCNCMXT       YES, POINT TO UCBSCAN COPY.
         USING UCBCMEXT,R7
GGOTCMXT SLR   R15,R15
         ICM   R15,3,UCBASID     GET ASID OF LAST ALLOCATING JOB.
         BZ    GRFDBUBL          JUST IN CASE.
         DROP  R7                UCBCMEXT.
         SLL   R15,2             GET INDEX INTO ASVT (MULTIPLY BY 4).
         AL    R15,ASVTADDR
*                                GET ASVT ENTRY FOR THIS ASID.
         LA    R7,ASVTENTY-ASVT-4(,R15)
         MVC   GRFDVJOB,ENDED
         ICM   R15,15,0(R7)      IS THIS ADDRESS SPACE ACTIVE?
         BM    GRFDBUBL          NO, THE JOB HAS ENDED.
         USING ASCB,R15
         MVC   GRFDVJOB,STARTING
         ICM   R7,15,ASCBJBNI
         BNZ   GDEVUSER          ADDRESS SPACE IS A BATCH JOB.
         ICM   R7,15,ASCBJBNS
         BZ    GRFDBUBL          ADDRESS SPACE HAS NO NAME (YET).
         DROP  R15               ASCB.
GDEVUSER MVC   GRFDVJOB,0(R7)    LOAD NAME OF ALLOCATED ADDRESS SPACE.
GRFDBUBL LM    R14,R15,0(R6)     REMEMBER THIS ENTRY.
         ST    R5,0(,R6)         SUPPLY THE DEVICE ENTRY ADDRESS.
         MVC   4(4,R6),GRFDVPND  LOAD TOTAL ACTIVITY TIME FOR DEVICE.
GRFDTST2 LA    R6,8(,R6)         POINT TO NEXT GRFDENTS ENTRY.
         CLI   0(R6),X'FF'       END OF DEVICE ENTRIES?
         BE    GDONUCB2          YES, END OF PERCOLATION/BUBBLE DOWN.
         LM    R7,R8,0(R6)       REMEMBER THIS ENTRY.
         STM   R14,R15,0(R6)     RESTORE DISPLACED ENTRY.
         LTR   R14,R7            GET NEW DISPLACED ENTRY.
         BZ    GDONUCB2          UNUSED ENTRY SO END OF BUBBLE DOWN.
         LR    R15,R8
         B     GRFDTST2          PROCESS NEXT ENTRY.
GDONUCB2 LA    R5,GRFDVSIZ(,R5)  POINT TO NEXT GRFDVTBL ENTRY.
         B     GNXTUCB2          GET NEXT UCB.
         DROP  R5,R3             GRFDVTBL, UCBOB.
GRFCHAN2 XC    GRFCENTS,GRFCENTS ZERO CHANNELS TO BE DISPLAYED LIST.
         SLR   R3,R3             RESET THE CHANNEL PATH NUMBER.
         L     R5,GRFCHNAD       POINT TO THE CHANNEL SAVE ENTRIES.
         L     R4,CMCTADDR       POINT TO THE CMCT.
         USING CMCT,R4
         L     R7,CMCTCPMT       POINT TO THE CPMT.
         L     R1,8(,R7)         LOAD CURRENT SAMPLE COUNT.
         SL    R1,WORK2+4        GET THE SAMPLE COUNT CHANGE.
         ST    R1,WORK2+4        SAVE IT FOR LATER.
GNXTCHN2 LA    R7,12(,R7)        POINT TO THE NEXT CPMT ENTRY.
         CL    R7,CMCTHICP       PAST HIGHEST VALID ENTRY?
         BH    GRFOUTPT          YES.
         L     R1,4(,R7)         NO, GET CURRENT BUSY SAMPLE COUNT.
         SL    R1,0(,R5)         GET THE CHANGE IN THIS COUNT.
         ST    R1,0(,R5)         SAVE IT.
         LA    R5,4(,R5)         POINT TO NEXT CHANNEL'S SAVE ENTRY.
         STC   R3,WORK
         LA    R3,1(,R3)         INCREMENT THE CHANNEL PATH NUMBER.
         LTR   R1,R1             ANY ACTIVITY?
         BZ    GNXTCHN2          NO, SUPPRESS DISPLAY OF THIS CHANNEL.
         DROP  R4                CMCT.
         LA    R6,GRFCENTS       NOW SEE IF THIS CHPID GETS A GUERNSEY.
         ICM   R1,8,WORK         LOAD CHPID.
GRFCTST1 CLI   0(R6),X'FF'       END OF CHANNEL ENTRIES?
         BE    GNXTCHN2          YES, DON'T SHOW THIS CHANNEL PATH.
         CLM   R1,7,1(R6)        HIGH CHANNEL UTILIZATION?
         BH    GRFCBUBL          YES, PERCOLATE LIST.
         LA    R6,4(,R6)         NO, POINT TO NEXT ENTRY.
         B     GRFCTST1          CHECK IF NEED TO SURPLANT THIS ONE.
GRFCBUBL L     R8,0(,R6)         REMEMBER THIS ENTRY.
         ST    R1,0(,R6)         SUPPLY THE NEW CHPID DETAILS.
GRFCTST2 LA    R6,4(,R6)         POINT TO NEXT GRFCENTS ENTRY.
         CLI   0(R6),X'FF'       END OF CHANNEL ENTRIES?
         BE    GNXTCHN2          YES, END OF PERCOLATION/BUBBLE DOWN.
         L     R1,0(,R6)         REMEMBER THIS ENTRY.
         ST    R8,0(,R6)         RESTORE DISPLACED ENTRY.
         LTR   R8,R1             GET NEW DISPLACED ENTRY.
         BZ    GNXTCHN2          UNUSED ENTRY SO END OF BUBBLE DOWN.
         B     GRFCTST2          PROCESS NEXT ENTRY.
         SPACE
         USING GRFASTBL,R5
GRFOUTPT OI    GRFSTART,X'80'    INVALIDATE SAMPLE START TIME.
         LA    R2,BUFFER         RESET BUFFER ADDRESS.
         ICM   R3,15,GRFJBMAX    GET MAX. ADDRESS SPACE DETAIL LINES.
         BZ    GRFJBDON          OMIT WHOLE CATEGORY IF ZERO.
         MVC   0(LL-79,R2),MEDX
         MVC   LL-79(79,R2),GRFKEYAS
         LA    R2,LL(,R2)        ADJUST BUFFER ADDRESS.
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),GSUBHDG1
         TR    LL-79(79,R2),XLATETBL
         LA    R2,LL(,R2)        ADJUST BUFFER ADDRESS.
         LA    R8,GRFJENTS       POINT TO ADDRESS SPACE DISPLAY LIST.
GRFASLP4 SLR   R5,R5
         ICM   R5,3,0(R8)        LOAD ASID OF JOB TO BE PLOTTED.
         BZ    GRFCPTOT          ZERO SO PREMATURE END OF JOB LIST.
         BCTR  R5,0              DECREMENT FOR INDEX.
         MH    R5,GRFHWSIZ       MULTIPLY BY ENTRY SIZE.
         A     R5,GRFFMR1        POINT TO ADDRESS SPACE TABLE ENTRY.
         ICM   R7,15,GRFASPC4    ANY ACTIVITY IN THIS ASID?
         BNP   GRFCPTOT          NO, SO PREMATURE END OF JOB LIST.
         MVC   0(LL-79,R2),LOWX
         MVC   LL-79(8,R2),GRFASNAM
         MVI   LL-71(R2),C' '
         UNPK  LL-70(5,R2),GRFASNUM(3)
         TR    LL-70(5,R2),HEX-C'0'
         MVI   LL-66(R2),C' '
         UNPK  LL-65(3,R2),GRFASNDP(2)
         TR    LL-65(2,R2),HEX-C'0'
         TR    LL-79(79,R2),XLATETBL  HANDLE BAD ADDRESS SPACE NAME.
         MVC   LL-63(4,R2),BLANKS
         MVC   LL-61(1,R2),GRFASCLS
         ICM   R15,12,GRFASFLG
         BZ    GCHKMODE
         LA    R1,GCLSLBLS       POINT TO CLASSIFICATION LABELS.
GCLSLOOP LTR   R15,R15           SIGN BIT ON?
         BM    GLOADCLS          YES, FOUND SET FLAG.
         LA    R1,3(,R1)         NO, POINT TO NEXT LABEL.
         SLL   R15,1             PROMOTE NEXT BIT.
         B     GCLSLOOP          GO CHECK NEXT BIT.
GLOADCLS MVC   LL-62(3,R2),0(R1) LOAD CLASSIFICATION LABEL.
GCHKMODE CLI   GWLMMODE,C'G'     IS WLM IN GOAL MODE?
         BE    GPGNOKAY          YES, DO NOT SHOW PGN.
         LH    R15,GRFASPGN      LOAD PERFORMANCE GROUP NUMBER.
         CVD   R15,WORK
         MVC   LL-63(4,R2),ED3
         ED    LL-63(4,R2),WORK+6
GPGNOKAY MVI   LL-59(R2),X'3B'
         MVC   LL-58(1,R2),GCHAR
         MVC   LL-57(57,R2),LL-58(R2)
         MVI   LL-33(R2),X'3B'
         MVC   LL-8(1,R2),GCHAR100
         LA    R15,X'0A'         LOAD GRAPH CODE FOR PAGE DELAY.
         BAS   R14,GRAFPLOT      PLOT IT.
         L     R7,GRFASPC3
         LA    R15,X'05'         LOAD GRAPH CODE FOR CHANNEL CONNECT.
         BAS   R14,GRAFPLOT      PLOT IT.
         L     R7,GRFASPC2
         LA    R15,X'06'         LOAD GRAPH CODE FOR SRB TIME.
         BAS   R14,GRAFPLOT      PLOT IT.
         L     R7,GRFASPC1
         LA    R15,X'04'         LOAD GRAPH CODE FOR TCB TIME.
         BAS   R14,GRAFPLOT      PLOT IT.
         L     R6,GRFAREAL       LOAD REAL FRAME COUNT.
         A     R6,GRFAESTG       ADD EXTENDED FRAME COUNT.
         A     R6,GRFANSLT       ADD NON-VIO SLOT COUNT.
         A     R6,GRFAVSLT       ADD VIO SLOT COUNT.
         LA    R7,128(,R6)       ROUND UPWARDS.
         SRA   R7,8              CONVERT PAGE COUNT TO MEGABYTES.
         CLI   GSTGSCAL+1,9      ALREADY EXCEEDED "LOW" SCALING FACTOR?
         BH    GSTGRFOK          YES, DON'T CHECK IT AGAIN.
         CHI   R7,42             NO, MORE THAN 42 MEG FOR THIS ASID?
         BNH   GSTGRFOK          NO, STAY WITH "LOW" SCALING FACTOR.
GSCLREDO MVI   GSTGSCAL+1,10     YES, SET "HIGH" SCALING FACTOR.
         MVI   GSUBHDG1+24,C'2'  STORAGE GRAPH NOW HAS A SCALE OF
         MVI   GSUBHDG1+29,C'4'  FOUR MEGABYTES PER SCREEN COLUMN.
         MVI   GSUBHDG1+34,C'6'
         MVI   GSUBHDG1+39,C'8'
         B     GRFOUTPT          REDRIVE GRAPH GENERATION.
GSTGRFOK CVD   R7,WORK           GET TOTAL MEGABYTES IN DECIMAL.
         LR    R7,R6             RESTORE UNROUNDED VALUE.
         LA    R15,X'07'         LOAD GRAPH CODE FOR VIO SLOTS.
         BAS   R14,GRAFSTOR      PLOT IT.
         S     R6,GRFAVSLT
         LR    R7,R6
         LA    R15,X'03'         LOAD GRAPH CODE FOR NON-VIO SLOTS.
         BAS   R14,GRAFSTOR      PLOT IT.
         S     R6,GRFANSLT
         LR    R7,R6
         LA    R15,X'06'         LOAD GRAPH CODE FOR EXTENDED FRAMES.
         BAS   R14,GRAFSTOR      PLOT IT.
         L     R7,GRFAREAL
         LA    R15,X'04'         LOAD GRAPH CODE FOR REAL PAGE FRAMES.
         BAS   R14,GRAFSTOR      PLOT IT.
         BAS   R14,GNUMSTOR      SHOW NUMERIC VALUE IF POSSIBLE.
         LA    R2,LL(,R2)        ADJUST BUFFER ADDRESS.
         LA    R8,4(,R8)         POINT TO NEXT GRFJENTS ENTRY.
         BCT   R3,GRFASLP4       PROCESS NEXT ADDRESS SPACE.
         DROP  R5                GRFASTBL.
GRFCPTOT DS    0H
         L     R15,CVTPTR(,0)    POINT TO THE CVT.
         L     R15,CVTCSD-CVT(,R15) PT TO THE CSD.
         LH    R15,10(,R15)      LOAD CENTRAL PROCESSOR COUNT.
         L     R1,WORK2          LOAD SAMPLE ELAPSED TIME.
         SLR   R6,R6
         L     R7,GRFCPTCB       GET CHANGE IN TOTAL TCB TIME.
         DR    R6,R1             GET TCB/ELAPSED.
         SLR   R6,R6
         DR    R6,R15            GET AVERAGE PER CPU.
         ST    R7,GRFCPTCB       SAVE IT.
         SLR   R6,R6
         L     R7,GRFCPSRB       GET CHANGE IN TOTAL SRB TIME.
         DR    R6,R1             GET SRB/ELAPSED.
         SLR   R6,R6
         DR    R6,R15            GET AVERAGE PER CPU.
         ST    R7,GRFCPSRB       SAVE IT.
         SLR   R6,R6
         L     R7,GRFCPIOC       ADD CHANGE IN TOTAL CHP CONNECT TIME.
         SLDL  R6,7              CONVERT TO MICROSECONDS.
         DR    R6,R1             GET IOC/ELAPSED.
         SLR   R6,R6
         DR    R6,R15            GET AVERAGE PER CPU.
         ST    R7,GRFCPIOC       SAVE IT.
         SLR   R6,R6
         L     R7,GRFCPUWT       GET AVERAGE CHANGE IN CPU BUSY TIME.
         DR    R6,R1             GET BUSY/ELAPSED.
         ST    R7,GRFCPUWT       SAVE IT.
         MVC   0(LL-79,R2),=X'2841001BF8402842F7'
         MVI   LL-79(R2),C' '    BLANK A LINE.
         MVC   LL-78(78,R2),LL-79(R2)
         STC   15,LL-79(,R2)     GET CP COUNT.
         MVC   LL-78(13,R2),=C'-CPU  SAMPLE-' <== PAD CHARACTER.
         CVD   R1,WORK           SHOW SAMPLE ELAPSED TIME HERE.
         MVC   LL-65(6,R2),G1PNTMSK+1
         ED    LL-66(7,R2),WORK+5
         MVI   LL-60(R2),C'S'-C' '  DENOTE SECONDS.
         CLI   LL-79(R2),1       UNIPROCESSOR?
         BE    GRAFCPOK          YES.
         MVI   LL-75(R2),C'S'    NO, MAKE PLURAL FOR MULTIPROCESSOR.
GRAFCPOK TR    LL-79(1,R2),HEX   SHOW CP COUNT.
         TR    LL-79(20,R2),XLATETBL  PERHAPS FOLD TO UPPER CASE.
         MVI   LL-59(R2),X'3B'
         MVC   LL-58(1,R2),GCHAR
         MVC   LL-57(57,R2),LL-58(2)
         MVI   LL-33(R2),X'3B'
         MVC   LL-8(1,R2),GCHAR100
*        L     R7,GRFCPIOC
*        A     R7,GRFCPUWT
*        TM    MODESW2,AUTH      ACCESSED LCCA?
*        BO    GCPUWTOK          YES.
*        A     R7,GRFCPSRB
*        A     R7,GRFCPTCB
*CPUWTOK LA    R15,X'05'         LOAD GRAPH CODE FOR CHANNEL CONNECT.
*        BAS   R14,GRAFPLOT      PLOT IT.
         TM    MODESW2,AUTH      ACCESSED LCCA?
         BZ    GNOCPUOH          NO, CAN'T SHOW CPU OVERHEAD.
         L     R7,GRFCPUWT
         CVD   R7,WORK
         IC    R15,LL-8(,R2)     SAVE DISPLAY BYTE.
         MVC   LL-8(8,R2),G1PNTMSK
         ED    LL-8(7,R2),WORK+5
         STC   R15,LL-8(,R2)     RESTORE DISPLAY BYTE.
         LA    R15,X'02'         LOAD GRAPH CODE FOR CPU OVERHEAD.
         BAS   R14,GRAFPLOT      PLOT IT.
GNOCPUOH L     R7,GRFCPSRB
         A     R7,GRFCPTCB
         LA    R15,X'06'         LOAD GRAPH CODE FOR SRB TIME.
         BAS   R14,GRAFPLOT      PLOT IT.
         L     R7,GRFCPTCB
         LA    R15,X'04'         LOAD GRAPH CODE FOR TCB TIME.
         BAS   R14,GRAFPLOT      PLOT IT.
         L     R7,GTOTVIO        GET TOTAL 4K PAGES MOVED ANYWHERE.
         M     R6,AHUNDRED       TIMES ONE HUNDRED FOR CENTISCONDS.
         DR    R6,R1             GET PAGES PER SECOND.
         LR    R6,R7             SAVE THE ANSWER.
         LA    R7,128(,R7)       ROUND UPWARDS.
         SRA   R7,8              CONVERT PAGE COUNT TO MEGABYTES.
         CLI   GSTGSCAL+1,9      ALREADY EXCEEDED "LOW" SCALING FACTOR?
         BH    GTOTALOK          YES, DON'T CHECK IT AGAIN.
         CHI   R7,42             NO, MORE THAN 42 MEGABYTES PER SECOND?
         BH    GSCLREDO          YES, SET "HIGH" SCALING FACTOR.
GTOTALOK CVD   R7,WORK           GET TOTAL MEGABYTES IN DECIMAL.
         LR    R7,R6             RESTORE UNROUNDED VALUE.
         LA    R15,X'07'         LOAD GRAPH CODE FOR VIO SLOTS.
         BAS   R14,GRAFSTOR      PLOT IT.
         L     R7,GTOTNVIO
         M     R6,AHUNDRED       TIMES ONE HUNDRED FOR CENTISCONDS.
         DR    R6,R1             GET PAGES PER SECOND.
         LA    R15,X'03'         LOAD GRAPH CODE FOR NON-VIO SLOTS.
         BAS   R14,GRAFSTOR      PLOT IT.
         L     R7,GTOTXPND
         M     R6,AHUNDRED       TIMES ONE HUNDRED FOR CENTISCONDS.
         DR    R6,R1             GET PAGES PER SECOND.
         LA    R15,X'06'         LOAD GRAPH CODE FOR EXTENDED FRAMES.
         BAS   R14,GRAFSTOR      PLOT IT.
         L     R7,GTOTREAL
         M     R6,AHUNDRED       TIMES ONE HUNDRED FOR CENTISCONDS.
         DR    R6,R1             GET PAGES PER SECOND.
         LA    R15,X'04'         LOAD GRAPH CODE FOR REAL PAGE FRAMES.
         BAS   R14,GRAFSTOR      PLOT IT.
         BAS   R14,GNUMSTOR      SHOW NUMERIC VALUE IF POSSIBLE.
         LA    R2,LL(,R2)        ADJUST BUFFER ADDRESS.
GRFJBDON CLI   GDSPTYPE,C'A'     IS IT DISPLAY TYPE WITHOUT I/O H/W?
         BE    GRFSUMRY          YES, GO STRAIGHT TO THE SUMMARY.
         MVC   0(LL-79,R2),MEDX
         MVC   LL-79(79,R2),GRFKEYIO
         LA    R2,LL(,R2)        ADJUST BUFFER ADDRESS.
         MVC   0(LL-79,R2),HIGHX
         MVC   LL-79(79,R2),GSUBHDG2
         TR    LL-79(79,R2),XLATETBL
         LA    R2,LL(,R2)        ADJUST BUFFER ADDRESS.
         ICM   R3,15,GRFDVMAX    GET MAXIMUM I/O DEVICE DETAIL LINES.
         BZ    GRFDVDON          SKIP WHOLE CATEGORY IF ZERO.
         LA    R8,GRFDENTS       POINT TO I/O DEVICE DISPLAY LIST.
         USING GRFDVTBL,R5
GRFDEVLP ICM   R5,15,0(R8)       POINT TO DEVICE ENTRY TO DISPLAY.
         BZ    GRFDVDON          ZERO ENTRY OR END OF DEVICE LIST.
         MVC   0(LL-79,R2),LOWX
         MVI   LL-79(R2),C' '    BLANK A LINE.
         MVC   LL-78(78,R2),LL-79(R2)
         MVC   LL-69(3,R2),GRFDVNAM    PUT UCB NAME INTO DISPLAY LINE.
         CLI   GRFDVNAM,C'U'           4-DIGIT DEVICE NUMBER?
         BNE   GDEVNAME                NO, CONTINUE.
         UNPK  LL-70(5,R2),GRFDVNUM(3) YES, SHOW FOUR DIGITS.
         TR    LL-70(4,R2),HEX-C'0'
         MVI   LL-66(R2),C' '
GDEVNAME MVC   LL-77(6,R2),GRFDVVOL    SHOW VOLUME SERIAL NUMBER.
         MVC   LL-65(8,R2),GRFDVJOB    MOVE IN JOBNAME.
         TM    GRFDVFLG,GRFDVONL IS THE DEVICE ONLINE?
         BO    GDEVONLN          YES, CONTINUE.
         MVC   LL-76(5,R2),=CL5'<OFF>'
         B     GNOTSHRD          NO, THIS LINE HAS NOW BEEN LABELLED.
GDEVONLN TM    GRFDVFLG,GRFDVPAG IS THIS A PAGING VOLUME?
         BZ    GNOTPAGE          NO.
         MVI   LL-79(2),C'P'     YES.
GNOTPAGE TM    GRFDVFLG,GRFDVSHR IS THIS A SHARED VOLUME?
         BZ    GNOTSHRD          NO.
         MVI   LL-78(R2),C'*'    YES.
GNOTSHRD TM    GRFDVFLG,GRFDVDYN DYNAMIC I/O DATA PRESENT?
         BZ    GDEVLBLD          NO.
         L     R7,GRFDVCYL       LOAD CYLINDER NUMBER OF DYNAMIC SEEK.
         CVD   R7,WORK
         MVC   90(6,R2),ED5
         ED    90(6,R2),WORK+5
         MVC   LL-56(4,R2),92(R2) DISPLAY CYLINDER NUMBER.
GDEVLBLD TR    LL-79(79,R2),XLATETBL
         MVI   LL-52(R2),X'3B'
         MVC   LL-51(1,R2),GCHAR
         MVC   LL-50(50,R2),LL-51(R2)
         MVI   LL-33(R2),X'3B'
         MVC   LL-8(1,R2),GCHAR100
         ICM   R14,15,GRFDVSMP   LOAD THE DEVICE SAMPLE COUNT CHANGE.
         BZ    GDONRESP          AVOID S0C9 ABEND FROM DIVIDE BY ZERO.
         SLR   R6,R6
         L     R7,GRFDVPND       GET TOTAL DEVICE BUSY TIME.
         SLDL  R6,7              CONVERT TO MICROSECONDS.
         CR    R6,R14            WILL RESULT FIT IN A FULLWORD?
         BNL   GDONRESP          NO, AVOID S0C9 ABEND.
         DR    R6,R14            GET BUSY TIME PER I/O.
         SLR   R6,R6
*        LA    R7,500(,R7)       ADD FOR ROUNDING.
         D     R6,ONEGRAND       CONVERT TO MILLISECONDS PER I/O.
         CVD   R7,WORK           SAVE MILLISECONDS IN DECIMAL.
         LA    R15,X'03'         LOAD GRAPH CODE FOR RESPONSE TIME.
         BAS   R14,GRAFRESP      PLOT IT.
         LR    R7,R15            RESTORE UNROUNDED VALUE.
         OC    WORK(6),WORK      RESPONSE TIME LESS THAN ONE SECOND?
         BNZ   GDEVSLOW          NO, THIS SEEMS TO BE A SLOW DEVICE.
         CLI   WORK+6,5          RESPONSE TIME LESS THAN 50MS?
         BNL   GDEVSLOW          NO, THIS SEEMS TO BE A SLOW DEVICE.
         MVC   LL-36(3,R2),ED3+1 SHOW RESPONSE TIME IN NUMERICS.
         ED    LL-37(4,R2),WORK+6
         LA    R15,LL-34(R2)     POINT TO LAST NUMERIC DIGIT.
         B     GDSPRSCR          GO CONVERT NUMERICS TO SUPERSCRIPTS.
GDEVSLOW MVI   LL-33(R2),C'|'    AVOID GRAPH OVERRUN TO NEXT GRAPH.
         MVC   0(LL-79,R2),HIGHX HIGHLIGHT SUCH A SLOW DEVICE.
         MVC   LL-50(7,R2),ED7+1 SHOW RESPONSE TIME IN NUMERICS.
         ED    LL-51(8,R2),WORK+4
         LA    R15,LL-44(,R2)    POINT TO LAST NUMERIC DIGIT.
GDSPRSCR BAS   R14,GSPRSCRP      CONVERT NUMERICS TO SUPERSCRIPTS.
GDONRESP SLR   R6,R6
         L     R7,GRFDVPND
         SLDL  R6,7              CONVERT TO MICROSECONDS.
         D     R6,WORK2          DIVIDE ACTIVITY TIME BY ELAPSED TIME.
         C     R7,TENGRAND       OVER 100%?
         BH    GDEVPCOK          YES, DON'T DISPLAY ACTUAL PERCENTAGE.
         CVD   R7,WORK
         IC    R15,LL-8(,R2)     SAVE DISPLAY BYTE.
         MVC   LL-8(8,R2),G1PNTMSK
         ED    LL-8(7,R2),WORK+5
         STC   R15,LL-8(,R2)     RESTORE DISPLAY BYTE.
         CHI   R7,500            LESS THAN 5%?
         BNL   GDEVPCOK          NO.
         MVC   0(LL-79,R2),LOWX  YES, FORCE LOW INTENSITY AND TURQUOISE
*                                SINCE LARGE RESPONSE TIME NOT A WORRY.
GDEVPCOK LA    R15,X'02'         LOAD GRAPH CODE FOR REQUEST PENDING.
         BAS   R14,GRAFPLOT      PLOT IT.
         SLR   R6,R6
         L     R7,GRFDVDIS
         SLDL  R6,7              CONVERT TO MICROSECONDS.
         D     R6,WORK2          DIVIDE ACTIVITY TIME BY ELAPSED TIME.
         LA    R15,X'06'         LOAD GRAPH CODE FOR DISCONNECT.
         BAS   R14,GRAFPLOT      PLOT IT.
         SLR   R6,R6
         L     R7,GRFDVCON
         LR    R14,R7
         SLL   R14,1             DOUBLE THE DEVICE CONNECT TIME.
         C     R14,GRFDVPND      CONNECT LESS THAN HALF OF ACTIVITY?
         BL    GDCONNOK          YES, PROCEED.
         MVC   0(LL-79,R2),LOWX  NO, FORCE LOW INTENSITY AND TURQUOISE
*                                SINCE LARGE RESPONSE TIME IS EXPECTED.
GDCONNOK SLDL  R6,7              CONVERT TO MICROSECONDS.
         D     R6,WORK2          DIVIDE ACTIVITY TIME BY ELAPSED TIME.
         LA    R15,X'05'         LOAD GRAPH CODE FOR CONNECT.
         BAS   R14,GRAFPLOT      PLOT IT.
         LA    R2,LL(,R2)        ADJUST BUFFER ADDRESS.
         LA    R8,8(,R8)         POINT TO NEXT GRFDENTS ENTRY.
         BCT   R3,GRFDEVLP       PROCESS NEXT ADDRESS SPACE.
         DROP  R5                GRFDVTBL.
GRFDVDON ICM   R1,15,WORK2+4     LOAD CHANNEL SAMPLE COUNT.
         BZ    GRFSUMRY          AVOID S0C9 ABEND IF ZERO.
         ICM   R3,15,GRFCHMAX    GET MAXIMUM CHANNEL PATH DETAIL LINES.
         BZ    GRFSUMRY          SKIP WHOLE CATEGORY IF ZERO.
         LA    R8,GRFCENTS       POINT TO CHANNEL PATH DISPLAY LIST.
GRFCHNLP ICM   R7,15,0(R8)       POINT TO CHANNEL ENTRY TO DISPLAY.
         BZ    GRFSUMRY          ZERO ENTRY OR END OF DEVICE LIST.
         MVC   0(LL-79,R2),LOWX
         MVI   LL-79(R2),C' '    BLANK A LINE.
         MVC   LL-78(78,R2),LL-79(R2)
         MVC   LL-77(5,R2),=CL5'CHPID'
         SRL   R7,24             GET CHANNEL PATH NUMBER.
         STC   R7,WORK
         SLL   R7,2              GET INDEX INTO TABLE.
         AL    R7,GRFCHNAD       POINT TO CHANNEL BUSY COUNT.
         L     R7,0(,R7)         LOAD THE CHANNEL BUSY COUNT.
         M     R6,TENGRAND       PREPARE FOR PERCENTAGE.
         DR    R6,R1             DIVIDE BY CHANNEL SAMPLE COUNT.
         UNPK  LL-71(3,R2),WORK(2)
         TR    LL-71(2,R2),HEX-C'0'
         MVI   LL-69(R2),C' '    LOAD CHPID NUMBER INTO DISPLAY LINE.
         MVI   LL-33(R2),X'3B'
         MVC   LL-32(1,R2),GCHAR
         MVC   LL-31(31,R2),LL-32(R2)
         MVC   LL-8(1,R2),GCHAR100
         C     R7,TENGRAND       OVER 100%?
         BH    GDEVPCOK          YES, DON'T DISPLAY ACTUAL PERCENTAGE.
         CVD   R7,WORK
         IC    R6,LL-8(,R2)      SAVE DISPLAY BYTE.
         MVC   LL-8(8,R2),G1PNTMSK
         ED    LL-8(7,R2),WORK+5
         STC   R6,LL-8(,R2)      RESTORE DISPLAY BYTE.
         LA    R15,X'05'         LOAD GRAPH CODE FOR CONNECT.
         BAS   R14,GRAFPLOT      PLOT IT.
         LA    R2,LL(,R2)        ADJUST BUFFER ADDRESS.
         LA    R8,4(,R8)         POINT TO NEXT GRFCENTS ENTRY.
         BCT   R3,GRFCHNLP       PROCESS NEXT CHANNEL PATH.
GRFSUMRY MVC   0(LL-79,R2),=X'2841001BF0402842F1'
         MVC   LL-79(79,R2),GMEMSMRY
         L     R1,RCEADDR        POINT TO THE RCE.
         USING RCE,R1
         ICM   R7,15,RCEESINU    GET USED EXPANDED STORAGE FRAME COUNT.
         BZ    GNOESTOR          NO EXPANDED STORAGE IS IN USE.
         M     R6,AHUNDRED       PREPARE FOR PERCENTAGE.
         D     R6,RCEESPL        DIVIDE BY EXPANDED STOR. FRAME COUNT.
         CVD   R7,WORK
         MVC   LL-67(4,R2),ED3   DISPLAY EXPANDED STORAGE UTILIZATION.
         ED    LL-67(4,R2),WORK+6
         MVI   LL-63(R2),C'%'    INDICATE PERCENTAGE.
         DROP  R1                RCE.
GNOESTOR L     R1,RMCTADDR       POINT TO THE RMCT.
         USING RMCT,R1
         L     R1,RMCTMCT        POINT TO THE MCT.
         DROP  R1                RMCT.
         USING MCT,R1
*                                ANY SQA SHORTAGE?
         TM    MCTSFLGS,MCTSQA1+MCTSQA2
         BZ    GSQADONE          NO.
         MVC   0(LL-79,R2),=X'2841F21BF8402842F2'  RED AND REVERSE.
         MVC   LL-35(4,R2),=C'LVL1'
         TM    MCTSFLGS,MCTSQA2  LEVEL 2 SQA SHORTAGE?
         BZ    GSQADONE          NO.
         MVI   LL-32(R2),C'2'    YES.
GSQADONE L     R15,CVTPTR(,0)    POINT TO THE CVT.
         USING CVT,R15
         L     R15,CVTGDA        POINT TO THE GDA.
         DROP  R15               CVT.
         USING GDA,R15
*                                ANY CSA SHORTAGE?
         TM    GDAFLGS,GDALOW1+GDALOW2
         BZ    GCSADONE          NO.
         MVC   0(LL-79,R2),=X'2841F21BF8402842F2'  RED AND REVERSE.
         MVC   LL-25(4,R2),=C'LVL1'
         TM    GDAFLGS,GDALOW2   LEVEL 2 CSA SHORTAGE?
         BZ    GCSADONE          NO.
         MVI   LL-22(R2),C'2'    YES.
         DROP  R15               GDA.
*                                ANY AUXILIARY STORAGE SHORTAGE?
GCSADONE TM    MCTOFLGS,MCTASM1+MCTASM2
         BZ    GAUXDONE          NO.
         MVC   0(LL-79,R2),=X'2841F21BF8402842F2'  RED AND REVERSE.
         MVC   LL-15(4,R2),=C'LVL1'
         TM    MCTOFLGS,MCTASM2  LEVEL 2 AUX SHORTAGE?
         BZ    GAUXDONE          NO.
         MVI   LL-12(R2),C'2'    YES.
*                                ANY REAL PAGEABLE STORAGE SHORTAGE?
GAUXDONE TM    MCTCFLGS,MCTRLSHT+MCTB16SH
         BZ    GMEMDONE          NO.
         MVC   0(LL-79,R2),=X'2841F21BF8402842F2'  RED AND REVERSE.
         MVC   LL-4(4,R2),=C'<16M'
         TM    MCTCFLGS,MCTRLSHT REAL STORAGE SHORTAGE ABOVE 16M LINE?
         BZ    GMEMDONE          NO, SHORTAGE IS ONLY BELOW THE LINE.
         MVC   LL-4(4,R2),=C'YES!'
         DROP  R1                MCT.
GMEMDONE TR    LL-79(79,R2),XLATETBL
         LA    R2,LL(,R2)        ADJUST BUFFER ADDRESS.
         BAS   R1,SYSUMMRY       PRODUCE & SHOW SYSTEM SUMMARY LINE.
         C     R2,PAGEND         IS THE SCREEN NOW FILLED?
         BNL   GRFILLED          YES.
         MVC   0(4,R2),BLNKREST  ERASE REST OF SCREEN.
         LA    R2,4(,R2)         ADJUST BUFFER POINTER.
GRFILLED TIME  DEC               GET TIME OF DAY FOR DISPLAY TIMESTAMP.
         SLL   R1,8              SHIFT OUT HIGH-ORDER ZEROS.
         SRDL  R0,8              RE-ALIGN THE CONTENTS.
         STM   R0,R1,WORK        SUPPLY DATE TIMESTAMP IN THE HEADING.
         L     R1,SMCAADDR       POINT TO THE SMCA.
         MVC   HEADINGG+36(4),16(R1) SHOW THE SYSTEM IDENTIFIER.
         MVC   HEADING,HEADINGG  LOAD GRAPHIC ACTIVITY DISPLAY HEADING.
         TR    HEADING,XLATETBL  HANDLE BAD SYSTEM IDENTIFIER.
         MVC   HEADING+46(22),GRAFMASK
         ED    HEADING+46(22),WORK+1
         MVC   HEADING+69(1),GDSPMODE
         L     R1,CRNTOPTN       POINT TO OPTION "G" IN LOOK-UP TABLE.
         OI    1(R1),X'01'       SCREEN PRINT NOW SUPPORTED.
         L     R9,CCTADDR        GET CCT ADDRESS.
         LH    R9,UTILP(,R9)     LOAD CCVUTILP (CPU BUSY %).
         CVD   R9,WORK           CONVERT IT TO DECIMAL.
         MVC   BUSY,ED3          MOVE IN THE EDIT MASK.
         ED    BUSY,WORK+6       EDIT THE OUTPUT FIELD.
GREFRESH LA    R1,HOME           POINT TO START OF SCREEN BUFFER.
         LR    R0,R2             POINT TO END OF SCREEN BUFFER.
         SR    R0,R1             GET SCREEN BUFFER LENGTH.
         MVC   GDWNCNT,DOWNCNTR  REMEMBER IF AUTO UPDATE OUTPUT.
PUTSCRNG BAS   R14,SCREENIO      CALL SCREEN I/O HANDLER.
         CLI   DOWNCNTR,C' '     ARE WE IN AUTO REFRESH MODE?
         BH    GRFENTER          YES.
         CLI   GDWNCNT,C' '      WERE WE IN AUTO REFRESH MODE?
         BH    GRFENTER          YES.
         TM    MODESW2,XFLG      NO, SUBROUTINE EXIT REQUIRED?
         BZ    NOTEXITG          NO, PROCESS SUBCOMMAND.
         MVI   TGETFLG,TGETFLGA  RESTORE TGET TYPE FOR OTHER ROUTINES.
         OC    GRAFLAGS,GGEOKBIT RESTORE GE SETTING FOR OTHER ROUTINES.
         L     R15,PRNTADDR      GET ADDRESSABILITY TO TRANSLATE TABLE.
         USING SCRNPRNT,R15
         XC    GRFXLATE(16),PRTXLATE RESTORE OLD CHARACTERS FOR GRAPHIC
         XC    PRTXLATE(16),GRFXLATE             SUBSTITUTION.
         XC    GRFXLATE(16),PRTXLATE
         DROP  R15               SCRNPRNT.
         LM    R0,R1,GRFFMRS     LOAD FREEMAIN REGISTERS.
         FREEMAIN RU,LV=(0),A=(1),SP=SUBPOOL
         BR    R9                RETURN TO MAINLINE VIA SCREENIO.
NOTEXITG CHI   R15,4             ANY INPUT RECEIVED FROM TERMINAL YET?
         BNE   GRFPARSE          YES, PROCESS IT.
         ICM   R0,3,GLOSSPG#     CURRENTLY SHOWING A GLOSSARY PANEL?
         BZ    GRAFCONT          NO, CONTINUE AS USUAL.
         MVI   GPNLMODE,C'1'     YES, SO REMEMBER PANEL IS ON SHOW.
GRAFCONT TM    GRFSTART,X'80'    VALID SAMPLE START TIME?
         BZ    GRFSAMPL          YES, CONTINUE SAMPLING.
         B     REDOGRAF          NO, COMMENCE A NEW SAMPLE CYCLE.
GRFPARSE CLI   INBUFF,1          PF1/13?
         BE    GIVEHLPG          YES, HELP.
         CLI   INBUFF,5          PF5/17?
         BE    GRPHZOOM          YES, TOGGLE "GRAPH PAPER" BACKGROUND.
         CLI   INBUFF,10         PF10/22?
         BE    GRAFRLSE          YES, RELEASE FOR DYNAMIC UPDATE.
         CLI   INBUFF,11         PF11/23?
         BE    GRAFHOLD          YES, HOLD DYNAMIC UPDATING.
CMDSCANG CLI   INCHARS,C'F'      FREEZE DISPLAY REQUESTED?
         BE    GRAFHOLD          YES.
         CLI   INCHARS,C'R'      RELEASE DISPLAY REQUESTED?
         BE    GRAFRLSE          YES.
         CLI   INCHARS,C' '      CONTINUE OR ZOOM REQUESTED?
         BE    GRPHZOOM          YES, PROCESS IT.
         CLI   INCHARS,C'A'      DISPLAY ADDRESS SPACES ONLY?
         BE    GRFTYPEA          YES, PROCESS IT.
         CLI   INCHARS,C'C'      DISPLAY CHANNEL PATHS ONLY?
         BE    GRFTYPEC          YES, PROCESS IT.
         CLI   INCHARS,C'D'      DISPLAY DEVICES ONLY?
         BE    GRFTYPED          YES, PROCESS IT.
         CLI   INCHARS,C'I'      DISPLAY I/O HARDWARE ONLY?
         BE    GRFTYPEI          YES, PROCESS IT.
         CLI   INCHARS,C'O'      DISPLAY "OVERVIEW"?
         BE    GRFTYPEO          YES, PROCESS IT.
         CLI   INCHARS,C'G'      "GRAPH PAPER" TOGGLE?
         BNE   GIVEHLPG          NO, DISPLAY HELP PANEL.
GRPHPAPR XI    GCHAR,C' '+X'09'  YES, ALTER BACKGROUND CHARACTERS.
         XI    GCHAR100,X'67'    = C'¦' XOR X'0D'.
         XI    GRAFLAGS,GEOK     TOGGLE GRAPHIC ESCAPE ACTIVATION.
GRFENTER MVI   GPNLMODE,0        TURN FIXED PANEL DISPLAY FLAG OFF.
         TM    GRFSTART,X'C0'    INITIAL SELECTION OF OPTION "G"?
         BO    GRFSUMRY          YES, UPDATE SCREEN TO SHOW ACCEPTANCE.
*        CLI   GDSPMODE,C'F'     MANUAL TRIGGER TO UPDATE DISPLAY?
*        BE    GRAFSYNC          YES, GO SYNCHRONIZE SCREEN WITH INPUT.
*        LA    R0,GCONTLEN       NO, RESET SCREEN PRIMARY INPUT AREA.
*        LA    R1,GRESETIN
*        B     PUTSCRNG
         B     GRAFSYNC          GO SYNCHRONIZE SCREEN WITH INPUT.
GRPHZOOM CLI   INBUFF+2,0        CURSOR IN LEFT-MOST COLUMN?
         BE    GZOOMOFF          YES, NO NOT PERFORM ANY ZOOM.
         SLR   R7,R7             CLEAR FOR INSERT.
         ICM   R7,1,INBUFF+1     GET RELATIVE LINE NUMBER OF CURSOR.
         BZ    GZOOMOFF          IF HEADING LINE THEN CALL OFF ZOOM.
         LA    R4,BUFFER-LL      POINT TO BEFORE FIRST DETAIL LINE.
GZSCANLP LA    R4,LL(,R4)        POINT TO NEXT DETAIL LINE.
         CLI   0(R4),X'3C'       PAST DISPLAYED DETAIL LINES?
         BE    GZOOMOFF          YES, CALL OFF THE ZOOM.
         BCT   R7,GZSCANLP       NO, POINT TO NEXT LINE IF APPLICABLE.
         CLI   LL-52(R4),X'3B'   I/O DEVICE ZOOM REQUEST?
         BE    GDEVZOOM          YES, GO CHECK FOR DEVICE NUMBER.
         CLI   LL-59(R4),X'3B'   ADDRESS SPACE ZOOM REQUEST?
         BNE   GZOOMOFF          NO, CALL OFF THE ZOOM.
         L     R15,=A(STATSJOB)  POINT TO OPTION "J" JOB NAME AREA.
         MVC   4(4,R15),LL-70(R4) LOAD ASID IN SECOND HALF OF JOB NAME.
         MVC   0(4,R15),STARS    LOAD ASTERISKS IN FIRST HALF OF NAME.
         MVC   INBUFF(L'INBUFF+L'INCHARS),BLANKS  CLEAR INPUT BUFFER.
         MVI   INBUFF,X'7C'      SIMULATE PFK 12.
         MVI   INCHARS,C'J'      SIMULATE OPTION "J" REQUEST.
         LNR   R0,R11            MAKE REGISTER 0 NEGATIVE FOR PARSE.
         B     PUTSCRNG          PERFORM INTER-OPTION JUMP.
GDEVZOOM L     R15,=A(THEUCBAD)  POINT TO OPTION "U" UCB NAME AREA.
         MVI   0(R15),X'DD'      INDICATE INTER-OPTION ZOOM TRANSFER.
         MVC   THEUNIT-THEUCBAD(4,R15),LL-70(R4)     SUPPLY UCB NAME.
         MVC   INBUFF(L'INBUFF+L'INCHARS),BLANKS   CLEAR INPUT BUFFER.
         MVI   INBUFF,X'7C'      SIMULATE PFK 12.
         MVI   INCHARS,C'U'      SIMULATE OPTION "U" REQUEST.
         LNR   R0,R11            MAKE REGISTER 0 NEGATIVE FOR PARSE.
         CLI   LL-70(R4),C' '    FOUR-DIGIT DEVICE NUMBER?
         BH    PUTSCRNG          YES, PERFORM INTER-OPTION JUMP.
         MVI   THEUNIT-THEUCBAD(R15),C'0'
         B     PUTSCRNG          PERFORM INTER-OPTION JUMP.
GZOOMOFF CLI   INBUFF,5          PF5/17?
         BE    GRPHPAPR          YES, GRAPH PAPER TOGGLE REQUEST.
         CLI   INCHARS,C' '      CONTINUE REQUESTED?
         BE    GRFENTER          YES, PROCESS IT.
         B     CMDSCANG          NO, SCAN FOR LOCAL SUBCOMMAND.
GRFTYPEA MVI   GDSPTYPE,C'A'     DISPLAY ONLY ADDRESS SPACES.
         L     R1,LINES          GET THE NUMBER OF SCREEN LINES.
         AHI   R1,-6             GET NUMBER OF DETAIL DISPLAY LINES.
         ST    R1,GRFJBMAX       SET THE NEW MAXIMUMS.
         MVI   GRFDVMAX+3,0
         MVI   GRFCHMAX+3,0
         B     GRFENTER
GRFTYPEC MVI   GDSPTYPE,C'C'     DISPLAY ONLY CHANNEL PATHS.
         L     R1,LINES          GET THE NUMBER OF SCREEN LINES.
         AHI   R1,-5             GET NUMBER OF DETAIL DISPLAY LINES.
         ST    R1,GRFCHMAX       SET THE NEW MAXIMUMS.
         MVI   GRFJBMAX+3,0
         MVI   GRFDVMAX+3,0
         B     GRFENTER
GRFTYPED MVI   GDSPTYPE,C'D'     DISPLAY ONLY DEVICES.
         L     R1,LINES          GET THE NUMBER OF SCREEN LINES.
         AHI   R1,-5             GET NUMBER OF DETAIL DISPLAY LINES.
         ST    R1,GRFDVMAX       SET THE NEW MAXIMUMS.
         MVI   GRFJBMAX+3,0
         MVI   GRFCHMAX+3,0
         B     GRFENTER
GRFTYPEI MVI   GDSPTYPE,C'I'     DISPLAY ONLY DEVICES & CHANNEL PATHS.
         L     R1,LINES          GET THE NUMBER OF SCREEN LINES.
         AHI   R1,-11            GET NUMBER OF DETAIL DISPLAY LINES.
         ST    R1,GRFDVMAX       SET THE NEW MAXIMUMS.
         MVI   GRFJBMAX+3,0
         MVI   GRFCHMAX+3,6
         B     GRFENTER
GRFTYPEO MVI   GDSPTYPE,C'O'     DISPLAY AN ALL TYPES "OVERVIEW".
         MVC   GRFJBMAX+2(2),GRFJBCNT
         MVC   GRFDVMAX+2(2),GRFDVCNT
         MVC   GRFCHMAX+2(2),GRFCHCNT
         B     GRFENTER
GRAFSYNC TM    GRFSTART,X'80'    VALID SAMPLE START TIME?
         BO    REDOGRAF          NO, COMMENCE A NEW SAMPLE CYCLE.
         B     GRFGRAPH          YES, UPDATE SCREEN WITH LATEST DATA.
GRAFHOLD MVI   GDSPMODE,C'F'     MANUAL INPUT NEEDED FOR NEW SCREEN.
         L     R1,CRNTOPTN       POINT TO OPTION "G" IN LOOK-UP TABLE.
         OI    1(R1),X'04'       NUMERIC COMMAND NOW SUPPORTED.
         TM    GRFSTART,X'C0'    INITIAL SELECTION OF OPTION "G"?
         BO    GRFSUMRY          YES, UPDATE SCREEN TO SHOW ACCEPTANCE.
         B     GRFRESET          NO, RESET SCREEN PRIMARY INPUT AREA.
GRAFRLSE MVI   GDSPMODE,C'R'     NEW SCREEN AUTOMATICALLY SHOWN.
         L     R1,CRNTOPTN       POINT TO OPTION "G" IN LOOK-UP TABLE.
         NI    1(R1),X'FB'       NUMERIC COMMAND NOW NOT SUPPORTED.
         TM    GRFSTART,X'C0'    INITIAL SELECTION OF OPTION "G"?
         BO    GRFSUMRY          YES, UPDATE SCREEN TO SHOW ACCEPTANCE.
GRFRESET ICM   R0,8,GPNLMODE     REMEMBER OLD FIXED PANEL DISPLAY FLAG.
         MVI   GPNLMODE,0        TURN FIXED PANEL DISPLAY FLAG OFF.
         MVC   HEADING+69(1),GDSPMODE   ENSURE HEADING IS UP-TO-DATE.
         BM    GREFRESH          AVOID PARTIAL UPDATE TO PANEL.
         MVC   GRESETMD,GDSPMODE
         LA    R0,GRESETLN       RESET SCREEN PRIMARY INPUT AREA
         LA    R1,GRESETIN         AND UPDATE DISPLAY MODE FLAG.
         B     PUTSCRNG
GIVEHLPG MVC   INBUFF(8),SBLST   REQUEST SUBCOMMAND LIST FROM TUTORIAL.
         MVI   TGETLEN+1,8       SUPPLY LENGTH OF INPUT TO PARSE.
         LNR   R0,R11            MAKE REGISTER 0 NEGATIVE FOR PARSE.
         B     PUTSCRNG          GO DISPLAY HELP PANEL.
         SPACE
         USING GRFASTBL,R5
GRFASINT L     R15,GRFASTOD      GET LAST ENTRY UPDATE TIME.
         ST    R0,GRFASTOD       STORE THE TIME OF ALL THIS.
         ICM   R1,15,0(R4)       LOAD ASVTE.
         BMR   R14               EXIT IF ENTRY WITH NO ADDRESS SPACE.
         USING ASCB,R1
         MVC   GRFASNUM,ASCBASID COPY THE ASID.
         ICM   R6,15,ASCBJBNI    LOAD POINTER TO JOB NAME.
         BNZ   GOTASNMI          GOT IT.
         ICM   R6,15,ASCBJBNS    LOAD POINTR TO START/MOUNT/LOGON NAME.
         BNZ   GOTASNMI          GOT IT.
         LA    R6,STARTING       POINT TO DEFAULT ADDRESS SPACE NAME.
GOTASNMI MVC   GRFASNAM,0(R6)    SUPPLY AN ADDRESS SPACE NAME.
         LM    R6,R7,ASCBEJST    LOAD JOB STEP TCB CPU TIME.
         SRDL  R6,12             CONVERT TO MICROSECONDS.
         ST    R7,GRFASTCB       SAVE IT.
         LM    R6,R7,ASCBSRBT    LOAD JOB STEP SRB CPU TIME.
         SRDL  R6,12             CONVERT TO MICROSECONDS.
         ST    R7,GRFASSRB       SAVE IT.
         MVC   GRFASIOC,ASCBDCTI SAVE CHANNEL CONNECT TIME.
         L     R6,ASCBRSME       POINT TO THE RAX.
         USING RAX,R6
         MVC   GRFAESTG,RAXESCT  COPY EXPANDED STORAGE FRAME COUNT.
         MVC   GRFAREAL,RAXFMCT  COPY ALLOCATED STORAGE FRAME COUNT.
         DROP  R6                RAX.
         MVI   GRFASFLG,0        CLEAR CLASSIFICATION FLAGS.
         L     R6,336(,R1)       POINT TO THE ASSB.
         USING ASSB,R6
         ICM   R7,15,ASSBOASB    UNIX USED BY THIS ASID?
         BZ    *+8               NO.
         OI    GRFASFLG,GRFASUSS YES, FLAG UNIX USAGE.
         ICM   R7,15,ASSBTASB    TCP/IP USED BY THIS ASID?
         BNP   *+8               NO.
         OI    GRFASFLG,GRFASTCP YES, FLAG TCP/IP USAGE.
         MVC   GRFAVSLT,ASSBVSC  COPY VIO SLOT COUNT.
         MVC   GRFANSLT,ASSBNVSC COPY NON-VIO SLOT COUNT.
         DROP  R6                ASSB.
         L     R6,ASCBOUCB       POINT TO THE OUCB.
         USING OUCB,R6
         MVC   GRFASPGN,OUCBNPG  LOAD PERFORMANCE GROUP NUMBER.
         MVC   GRFASCLS,OUCBCLS  LOAD TRANSACTION (JOB) CLASS.
         MVC   GRFASNDP,OUCBNDP  LOAD NEW DISPATCHING PRIORITY.
         DROP  R6                OUCB.
         ICM   R7,15,ASCBTSB     TSO USER?
         BZ    *+8               NO.
         OI    GRFASFLG,GRFASTSU YES, FLAG THIS.
         L     R6,ASCBOUXB       POINT TO THE OUXB.
         USING OUXB,R6
         L     R7,OUXBPIN        GET PRIVATE PAGE-IN COUNT.
         A     R7,OUXBVAMI       ADD VIO PAGE-IN COUNT.
         A     R7,OUXBCAPI       ADD COMMON PAGE-IN COUNT.
         ST    R7,GRFASPGF       SAVE "PAGE FAULT" COUNT.
         DROP  R6                OUXB.
         BR    R14               RETURN TO CALLER.
         DROP  R5                GRFASTBL.
         SPACE
GRAFPLOT SLR   R6,R6             PREPARE FOR DIVIDE.
         D     R6,AHUNDRED       GET INTEGRAL PERCENT VALUE.
         LA    R7,2(,R7)         ROUND UPWARDS.
         SRA   R7,2              QUARTER IT.
         BZR   R14               DON'T PLOT ANYTHING FOR ZERO PERCENT.
         STC   R15,LL-32(,R2)    SUPPLY GRAPHIC CODE.
         BCTR  R7,0              DECREMENT FOR BYTE ALREADY SUPPLIED.
         BCTR  R7,0              DECREMENT FOR EXECUTE.
         LTR   R7,R7             MORE THAN ONE SCREEN BYTE REQUIRED?
         BMR   R14               NO, THIS PLOT NOW COMPLETE.
         EX    R7,GRFPLTMV       YES, SUPPLY THE REST.
         BR    R14               NOW THIS PLOT IS COMPLETE.
GRFPLTMV MVC   LL-31(0,2),LL-32(2)              <<< EXECUTED >>>
         SPACE
GRAFSTOR LA    R7,256(,R7)       ROUND UPWARDS.
         CLI   GSTGSCAL,10       ROUNDED UPWARDS SUFFICIENTLY?
         BL    GSTORRND          YES.
         LA    R7,256(,R7)       NO, ROUND UPWARDS A BIT MORE.
GSTORRND LH    R4,GSTGSCAL       GET SHIFTING SCALE FOR THIS GRAPH.
         SRA   R7,0(R4)          CONVERT PAGE COUNT TO 2-/4-MEGABYTES.
         BZR   R14               DON'T PLOT ANYTHING FOR ZERO MEG.
         STC   R15,LL-58(,R2)    SUPPLY GRAPHIC CODE.
         BCTR  R7,0              DECREMENT FOR BYTE ALREADY SUPPLIED.
         BCTR  R7,0              DECREMENT FOR EXECUTE.
         LTR   R7,R7             MORE THAN ONE SCREEN BYTE REQUIRED?
         BMR   R14               NO, THIS PLOT NOW COMPLETE.
         CHI   R7,23             OVER 100MB?
         BNH   GRFSTGOK          NO, PLOT WILL BE OKAY.
         LA    R7,23             YES, LIMIT PLOT TO 100MB.
GRFSTGOK EX    R7,GRFSTGMV       YES, SUPPLY THE REST.
         BR    R14               NOW THIS PLOT IS COMPLETE.
GRFSTGMV MVC   LL-57(0,R2),LL-58(R2)            <<< EXECUTED >>>
         SPACE
GNUMSTOR OC    WORK(6),WORK      TOTAL LESS THAN 100 MEGABYTES?
         BNZ   GGIGSTOR          NO, CATER FOR GIGABYTES.
         CLC   LL-37(1,R2),LL-34(R2)
         BNER  R14               UNSTABLE AREA SO LEAVE PLOT AS IS.
         MVC   LL-36(3,R2),ED3+1 SHOW VIRTUAL MEGABYTES IN NUMERICS.
         ED    LL-37(4,R2),WORK+6
         B     GSTGSPSC          NOW GO MAKE THE DIGITS SUPERSCRIPTS.
GGIGSTOR MVC   LL-38(5,R2),ED5+1 SO BIG THAT IT MUST BE SHOWN,
         ED    LL-39(6,R2),WORK+5  EVEN IF IT MUCKS UP THE PLOT A BIT.
GSTGSPSC LA    R15,LL-34(,R2)    POINT TO LAST NUMERIC DIGIT.
GSPRSCRP TM    0(R15),X'F0'      NUMERIC CHARACTER?
         BNOR  R14               NO, ALL DIGITS ARE SUPERSCRIPTS.
         NI    0(R15),X'3F'      YES, MAP TO INTERNAL SUPERSCRIPT CODE.
         BCTR  R15,0             POINT TO NEXT HIGHER-ORDER DIGIT.
         B     GSPRSCRP          GO CONVERT IT IF NECESSARY.
         SPACE
GRAFRESP LA    R7,2(,R7)         ROUND UPWARDS.
         SRA   R7,2              CONVERT TO 4MS PER I/O.
         BZR   R14               DON'T PLOT ANYTHING FOR ZERO MS.
         STC   R15,LL-51(,R2)    SUPPLY GRAPHIC CODE.
         BCTR  R7,0              DECREMENT FOR BYTE ALREADY SUPPLIED.
         BCTR  R7,0              DECREMENT FOR EXECUTE.
         LTR   R7,R7             MORE THAN ONE SCREEN BYTE REQUIRED?
         BMR   R14               NO, THIS PLOT NOW COMPLETE.
         CHI   R7,16             OVER 72MS/IO?
         BNH   GRFRSPOK          NO, PLOT WILL BE OKAY.
         LA    R7,16             YES, LIMIT PLOT TO 72MS.
GRFRSPOK EX    R7,GRFRSPMV       YES, SUPPLY THE REST.
         BR    R14               NOW THIS PLOT IS COMPLETE.
GRFRSPMV MVC   LL-50(0,R2),LL-51(R2)            <<< EXECUTED >>>
         SPACE
GRFWTIME SLR   R7,R7             ZERO ACCUMULATOR.
         TM    MODESW2,AUTH      APF AUTHORIZED?
         BZR   R14               NO, CAN'T ACCESS THE LCCA.
         ST    R14,WORK          YES, SAVE THE RETURN ADDRESS.
         MODESET MF=(E,MDSTSUP0) GET INTO KEY ZERO FOR LCCA.
         L     R1,CVTPTR(,0)     POINT TO THE CVT.
         USING CVT,R1
         L     R1,CVTLCCAT       POINT TO THE LCCA VECTOR TABLE.
         DROP  R1                CVT.
         LA    R0,16             GET MAXIMUM CPU COUNT.
LCCALOOP ICM   R15,15,0(R1)      POINT TO LCCA OF THIS LCCAVT ENTRY.
         BZ    LCCANEXT          ZERO POINTER SO CHECK OUT NEXT CPU.
         USING LCCA,R15
         LM    R4,R5,LCCAWTIM    LOAD ACCUMULATED CPU WAIT TIME.
         DROP  R15               LCCA.
         SRDL  R4,12             CONVERT TO MICROSECONDS.
         ALR   R7,R5             ADD IT TO ACCUMULATOR.
LCCANEXT LA    R1,4(,R1)         POINT TO NEXT LCCA POINTER.
         BCT   R0,LCCALOOP
         MODESET MF=(E,MDSTPROB) GET BACK INTO USER KEY FOR LCCA.
         L     R14,WORK          RESTORE RETURN ADDRESS.
         BR    R14               RETURN TO CALLER.
         SPACE
         DROP  R11,R10           GRAFSTAT.
         TITLE 'GRAPHIC ACTIVITY DISPLAY - VARIABLES AND CONSTANTS'
GRFSTART DC    F'0'              SAMPLE START TIME.
GRFFMRS  EQU   *,8               GRAPHIC SAMPLE TABLE FREEMAIN VALUES.
GRFFMR0  DC    F'0'              GRAPHIC SAMPLE TABLE SIZE.
GRFFMR1  DC    A(0)              GRAPHIC SAMPLE TABLE ADDRESS.
GRFDEVAD DC    A(0)              GRAPHIC DEVICE SECTION ADDRESS.
GRFCHNAD DC    A(0)              GRAPHIC CHANNEL SECTION ADDRESS.
GRFHWSIZ DC    AL2(GRFASSIZ)     ADDRESS SPACE TABLE ENTRY SIZE.
GRFJBCNT DC    H'0'              ADDRESS SPACES FOR "OVERVIEW" DISPLAY.
GRFTOTLS EQU   *,16              TOTALS FOR EACH DISPLAY.
GRFCPUWT DC    F'0'              TOTAL WAIT STATE TIME.
GRFCPTCB DC    F'0'              TOTAL TCB TIME.
GRFCPSRB DC    F'0'              TOTAL SRB TIME.
GRFCPIOC DC    F'0'              TOTAL CHANNEL CONNECT TIME.
GTOTREAL DC    F'0'              RSM FRAME MOVES TO REAL STORAGE.
GTOTXPND DC    F'0'              RSM FRAME MOVES TO EXPANDED STORAGE.
GTOTNVIO DC    F'0'              ASM NON-VIO PAGE MOVES TO/FROM AUX.
GTOTVIO  DC    F'0'              ASM VIO PAGE MOVES TO AND FROM AUX.
GRFJBMAX DC    F'0'              MAXIMUM ADDRESS SPACES TO DISPLAY.
GRFDVMAX DC    F'0'              MAXIMUM DEVICES TO DISPLAY.
GRFCHMAX DC    F'0'              MAXIMUM CHANNEL PATHS TO DISPLAY.
GRFJENTS DC    XL152'00'         UP TO 38 ADDRESS SPACE LINES.
         DC    F'-1'
GRFDENTS DC    XL152'00'         UP TO 38 I/O DEVICE LINES.
GRFDENT2 DC    XL152'00'
         DC    F'-1'
GRFCENTS DC    XL152'00'         UP TO 38 CHANNEL PATH LINES.
         DC    F'-1'
GRFDVCNT DC    H'0'              DEVICES FOR "OVERVIEW" DISPLAY.
GRFCHCNT DC    H'0'              CHANNEL PATHS FOR "OVERVIEW" DISPLAY.
GSCNWORK DC    XL100'00'         UCBSCAN WORKAREA.
GSCNPRFX DC    XL48'00'          UCBSCAN UCB PREFIX AREA.
GSCNUCB  DC    XL48'00'          UCBSCAN UCB BASE AREA.
GSCNCMXT DC    XL64'00'          UCBSCAN UCB COMMON EXTENSION AREA.
GRFXLATE DC    XL16'40615F964E4A6DA54B404B4B4B6A4B4B'
GSTGSCAL DC    H'10'             BITS TO SHIFT FOR STORAGE GRAPH.
G1PNTMSK DC    XL8'402021204B20206C'
GRAFMASK DC    XL22'4021207A20207A20204B202040D6D540202061202020'
GGEOKBIT DC    X'00'             GEOK SETTING SAVE AREA.
GCHAR    DC    C' '              "GRAPH PAPER" BACKGROUND.
GCHAR100 DC    C'¦'              "GRAPH PAPER" BACKGROUND AT 100% MARK.
GDSPMODE DC    C'R'              OPTION "G" DISPLAY MODE.
GDSPTYPE DC    C'O'              OPTION "G" DISPLAY TYPE.
GWLMMODE DC    C'C'              SYSTEM WORKLOAD MANAGER MODE.
GPNLMODE DC    X'00'             FIXED PANEL DISPLAY FLAG.
GDWNCNT  DC    C' '              PREVIOUS DOWNCNTR VALUE ECHO.
GCLSLBLS DC    C'UNXTCPTSU'
HEADINGG DC    CL71'GRAPHIC ACTIVITY DISPLAY FOR SYSTEM ???? AS AT HH:M+
               M:SS.SS ON YY/DDD<?>'
GRFKEYAS EQU   *,79
         DC    C'STOR:',X'04',C'=REAL ',X'06',C'=XPND ',X'03'
         DC    C'=AUX ',X'07',C'=VIO-AUX  TIMES:',X'04'
         DC    C'=TCB ',X'06',C'=SRB ',X'05',C'=CHAN ',X'0A'
         DC    C'=PGWT ',X'02',C'=CPU-OVRHD'
GRFKEYIO EQU   *,79
         DC    C'DEV/CHPID TIMES: '
         DC    X'03',C'=RESPONSE ',X'05',C'=CONNECT ',X'06'
         DC    C'=SUBCHANNEL-DISCONNECT ',X'02',C'=REQUEST-PENDING'
GSUBHDG1 DC    CL79' JOBNAME ASID DP PGN ---2+0--4+0--6+0--8+0--MB ---2+
               +0--4+0--6+0--8+0--100--120%'
GSUBHDG2 DS    0CL79
         DC    C' I/O-HARDWARE DEV-USER  CYL ---2+0--4+0--6+0'
         DC    X'94A2'
         DC    C' ---2+0--4+0--6+0--8+0--100--120%'
GMEMSMRY DC    CL79' ESTOR-UTIL: ZERO  STORAGE SHORTAGES->  SQA:NONE  C+
               SA:NONE  AUX:NONE  REAL:NONE'
GRESETIN DC    X'C11140401D40132841F40000'
GCONTLEN EQU   *-GRESETIN
         DC    X'1DF82842F711C1C8',C'<'
GRESETMD DC    C'?'
         DC    C'>'
GRESETLN EQU   *-GRESETIN
         SPACE
         UCBSCAN MF=(L,GSCN)     UCBSCAN PARAMETER LIST.
         SPACE
         LTORG
         SPACE
         DS    0H
